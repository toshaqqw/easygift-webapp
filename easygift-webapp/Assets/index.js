var JP = Object.defineProperty;
var eM = (e, t, n) =>
  t in e
    ? JP(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n })
    : (e[t] = n);
var Pc = (e, t, n) => eM(e, typeof t != "symbol" ? t + "" : t, n);
(function () {
  const t = document.createElement("link").relList;
  if (t && t.supports && t.supports("modulepreload")) return;
  for (const i of document.querySelectorAll('link[rel="modulepreload"]')) r(i);
  new MutationObserver((i) => {
    for (const s of i)
      if (s.type === "childList")
        for (const o of s.addedNodes)
          o.tagName === "LINK" && o.rel === "modulepreload" && r(o);
  }).observe(document, { childList: !0, subtree: !0 });
  function n(i) {
    const s = {};
    return (
      i.integrity && (s.integrity = i.integrity),
      i.referrerPolicy && (s.referrerPolicy = i.referrerPolicy),
      i.crossOrigin === "use-credentials"
        ? (s.credentials = "include")
        : i.crossOrigin === "anonymous"
        ? (s.credentials = "omit")
        : (s.credentials = "same-origin"),
      s
    );
  }
  function r(i) {
    if (i.ep) return;
    i.ep = !0;
    const s = n(i);
    fetch(i.href, s);
  }
})();
var W11 =
  typeof globalThis < "u"
    ? globalThis
    : typeof window < "u"
    ? window
    : typeof global < "u"
    ? global
    : typeof self < "u"
    ? self
    : {};
function qs(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default")
    ? e.default
    : e;
}
function nC(e) {
  if (Object.prototype.hasOwnProperty.call(e, "__esModule")) return e;
  var t = e.default;
  if (typeof t == "function") {
    var n = function r() {
      return this instanceof r
        ? Reflect.construct(t, arguments, this.constructor)
        : t.apply(this, arguments);
    };
    n.prototype = t.prototype;
  } else n = {};
  return (
    Object.defineProperty(n, "__esModule", { value: !0 }),
    Object.keys(e).forEach(function (r) {
      var i = Object.getOwnPropertyDescriptor(e, r);
      Object.defineProperty(
        n,
        r,
        i.get
          ? i
          : {
              enumerable: !0,
              get: function () {
                return e[r];
              },
            }
      );
    }),
    n
  );
}
var Wh = { exports: {} },
  h0 = {},
  zh = { exports: {} },
  _t = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var i8;
function tM() {
  if (i8) return _t;
  i8 = 1;
  var e = Symbol.for("react.element"),
    t = Symbol.for("react.portal"),
    n = Symbol.for("react.fragment"),
    r = Symbol.for("react.strict_mode"),
    i = Symbol.for("react.profiler"),
    s = Symbol.for("react.provider"),
    o = Symbol.for("react.context"),
    l = Symbol.for("react.forward_ref"),
    c = Symbol.for("react.suspense"),
    f = Symbol.for("react.memo"),
    d = Symbol.for("react.lazy"),
    p = Symbol.iterator;
  function m(o1) {
    return o1 === null || typeof o1 != "object"
      ? null
      : ((o1 = (p && o1[p]) || o1["@@iterator"]),
        typeof o1 == "function" ? o1 : null);
  }
  var g = {
      isMounted: function () {
        return !1;
      },
      enqueueForceUpdate: function () {},
      enqueueReplaceState: function () {},
      enqueueSetState: function () {},
    },
    w = Object.assign,
    b = {};
  function x(o1, k1, Y1) {
    (this.props = o1),
      (this.context = k1),
      (this.refs = b),
      (this.updater = Y1 || g);
  }
  (x.prototype.isReactComponent = {}),
    (x.prototype.setState = function (o1, k1) {
      if (typeof o1 != "object" && typeof o1 != "function" && o1 != null)
        throw Error(
          "setState(...): takes an object of state variables to update or a function which returns an object of state variables."
        );
      this.updater.enqueueSetState(this, o1, k1, "setState");
    }),
    (x.prototype.forceUpdate = function (o1) {
      this.updater.enqueueForceUpdate(this, o1, "forceUpdate");
    });
  function E() {}
  E.prototype = x.prototype;
  function P(o1, k1, Y1) {
    (this.props = o1),
      (this.context = k1),
      (this.refs = b),
      (this.updater = Y1 || g);
  }
  var _ = (P.prototype = new E());
  (_.constructor = P), w(_, x.prototype), (_.isPureReactComponent = !0);
  var T = Array.isArray,
    M = Object.prototype.hasOwnProperty,
    L = { current: null },
    O = { key: !0, ref: !0, __self: !0, __source: !0 };
  function U(o1, k1, Y1) {
    var G1,
      M1 = {},
      Q1 = null,
      re = null;
    if (k1 != null)
      for (G1 in (k1.ref !== void 0 && (re = k1.ref),
      k1.key !== void 0 && (Q1 = "" + k1.key),
      k1))
        M.call(k1, G1) && !O.hasOwnProperty(G1) && (M1[G1] = k1[G1]);
    var d1 = arguments.length - 2;
    if (d1 === 1) M1.children = Y1;
    else if (1 < d1) {
      for (var h1 = Array(d1), y1 = 0; y1 < d1; y1++)
        h1[y1] = arguments[y1 + 2];
      M1.children = h1;
    }
    if (o1 && o1.defaultProps)
      for (G1 in ((d1 = o1.defaultProps), d1))
        M1[G1] === void 0 && (M1[G1] = d1[G1]);
    return {
      $$typeof: e,
      type: o1,
      key: Q1,
      ref: re,
      props: M1,
      _owner: L.current,
    };
  }
  function D(o1, k1) {
    return {
      $$typeof: e,
      type: o1.type,
      key: k1,
      ref: o1.ref,
      props: o1.props,
      _owner: o1._owner,
    };
  }
  function H(o1) {
    return typeof o1 == "object" && o1 !== null && o1.$$typeof === e;
  }
  function $(o1) {
    var k1 = { "=": "=0", ":": "=2" };
    return (
      "$" +
      o1.replace(/[=:]/g, function (Y1) {
        return k1[Y1];
      })
    );
  }
  var F = /\/+/g;
  function B(o1, k1) {
    return typeof o1 == "object" && o1 !== null && o1.key != null
      ? $("" + o1.key)
      : k1.toString(36);
  }
  function j(o1, k1, Y1, G1, M1) {
    var Q1 = typeof o1;
    (Q1 === "undefined" || Q1 === "boolean") && (o1 = null);
    var re = !1;
    if (o1 === null) re = !0;
    else
      switch (Q1) {
        case "string":
        case "number":
          re = !0;
          break;
        case "object":
          switch (o1.$$typeof) {
            case e:
            case t:
              re = !0;
          }
      }
    if (re)
      return (
        (re = o1),
        (M1 = M1(re)),
        (o1 = G1 === "" ? "." + B(re, 0) : G1),
        T(M1)
          ? ((Y1 = ""),
            o1 != null && (Y1 = o1.replace(F, "$&/") + "/"),
            j(M1, k1, Y1, "", function (y1) {
              return y1;
            }))
          : M1 != null &&
            (H(M1) &&
              (M1 = D(
                M1,
                Y1 +
                  (!M1.key || (re && re.key === M1.key)
                    ? ""
                    : ("" + M1.key).replace(F, "$&/") + "/") +
                  o1
              )),
            k1.push(M1)),
        1
      );
    if (((re = 0), (G1 = G1 === "" ? "." : G1 + ":"), T(o1)))
      for (var d1 = 0; d1 < o1.length; d1++) {
        Q1 = o1[d1];
        var h1 = G1 + B(Q1, d1);
        re += j(Q1, k1, Y1, h1, M1);
      }
    else if (((h1 = m(o1)), typeof h1 == "function"))
      for (o1 = h1.call(o1), d1 = 0; !(Q1 = o1.next()).done; )
        (Q1 = Q1.value), (h1 = G1 + B(Q1, d1++)), (re += j(Q1, k1, Y1, h1, M1));
    else if (Q1 === "object")
      throw (
        ((k1 = String(o1)),
        Error(
          "Objects are not valid as a React child (found: " +
            (k1 === "[object Object]"
              ? "object with keys {" + Object.keys(o1).join(", ") + "}"
              : k1) +
            "). If you meant to render a collection of children, use an array instead."
        ))
      );
    return re;
  }
  function G(o1, k1, Y1) {
    if (o1 == null) return o1;
    var G1 = [],
      M1 = 0;
    return (
      j(o1, G1, "", "", function (Q1) {
        return k1.call(Y1, Q1, M1++);
      }),
      G1
    );
  }
  function u1(o1) {
    if (o1._status === -1) {
      var k1 = o1._result;
      (k1 = k1()),
        k1.then(
          function (Y1) {
            (o1._status === 0 || o1._status === -1) &&
              ((o1._status = 1), (o1._result = Y1));
          },
          function (Y1) {
            (o1._status === 0 || o1._status === -1) &&
              ((o1._status = 2), (o1._result = Y1));
          }
        ),
        o1._status === -1 && ((o1._status = 0), (o1._result = k1));
    }
    if (o1._status === 1) return o1._result.default;
    throw o1._result;
  }
  var e1 = { current: null },
    i1 = { transition: null },
    Z = {
      ReactCurrentDispatcher: e1,
      ReactCurrentBatchConfig: i1,
      ReactCurrentOwner: L,
    };
  function b1() {
    throw Error("act(...) is not supported in production builds of React.");
  }
  return (
    (_t.Children = {
      map: G,
      forEach: function (o1, k1, Y1) {
        G(
          o1,
          function () {
            k1.apply(this, arguments);
          },
          Y1
        );
      },
      count: function (o1) {
        var k1 = 0;
        return (
          G(o1, function () {
            k1++;
          }),
          k1
        );
      },
      toArray: function (o1) {
        return (
          G(o1, function (k1) {
            return k1;
          }) || []
        );
      },
      only: function (o1) {
        if (!H(o1))
          throw Error(
            "React.Children.only expected to receive a single React element child."
          );
        return o1;
      },
    }),
    (_t.Component = x),
    (_t.Fragment = n),
    (_t.Profiler = i),
    (_t.PureComponent = P),
    (_t.StrictMode = r),
    (_t.Suspense = c),
    (_t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Z),
    (_t.act = b1),
    (_t.cloneElement = function (o1, k1, Y1) {
      if (o1 == null)
        throw Error(
          "React.cloneElement(...): The argument must be a React element, but you passed " +
            o1 +
            "."
        );
      var G1 = w({}, o1.props),
        M1 = o1.key,
        Q1 = o1.ref,
        re = o1._owner;
      if (k1 != null) {
        if (
          (k1.ref !== void 0 && ((Q1 = k1.ref), (re = L.current)),
          k1.key !== void 0 && (M1 = "" + k1.key),
          o1.type && o1.type.defaultProps)
        )
          var d1 = o1.type.defaultProps;
        for (h1 in k1)
          M.call(k1, h1) &&
            !O.hasOwnProperty(h1) &&
            (G1[h1] = k1[h1] === void 0 && d1 !== void 0 ? d1[h1] : k1[h1]);
      }
      var h1 = arguments.length - 2;
      if (h1 === 1) G1.children = Y1;
      else if (1 < h1) {
        d1 = Array(h1);
        for (var y1 = 0; y1 < h1; y1++) d1[y1] = arguments[y1 + 2];
        G1.children = d1;
      }
      return {
        $$typeof: e,
        type: o1.type,
        key: M1,
        ref: Q1,
        props: G1,
        _owner: re,
      };
    }),
    (_t.createContext = function (o1) {
      return (
        (o1 = {
          $$typeof: o,
          _currentValue: o1,
          _currentValue2: o1,
          _threadCount: 0,
          Provider: null,
          Consumer: null,
          _defaultValue: null,
          _globalName: null,
        }),
        (o1.Provider = { $$typeof: s, _context: o1 }),
        (o1.Consumer = o1)
      );
    }),
    (_t.createElement = U),
    (_t.createFactory = function (o1) {
      var k1 = U.bind(null, o1);
      return (k1.type = o1), k1;
    }),
    (_t.createRef = function () {
      return { current: null };
    }),
    (_t.forwardRef = function (o1) {
      return { $$typeof: l, render: o1 };
    }),
    (_t.isValidElement = H),
    (_t.lazy = function (o1) {
      return { $$typeof: d, _payload: { _status: -1, _result: o1 }, _init: u1 };
    }),
    (_t.memo = function (o1, k1) {
      return { $$typeof: f, type: o1, compare: k1 === void 0 ? null : k1 };
    }),
    (_t.startTransition = function (o1) {
      var k1 = i1.transition;
      i1.transition = {};
      try {
        o1();
      } finally {
        i1.transition = k1;
      }
    }),
    (_t.unstable_act = b1),
    (_t.useCallback = function (o1, k1) {
      return e1.current.useCallback(o1, k1);
    }),
    (_t.useContext = function (o1) {
      return e1.current.useContext(o1);
    }),
    (_t.useDebugValue = function () {}),
    (_t.useDeferredValue = function (o1) {
      return e1.current.useDeferredValue(o1);
    }),
    (_t.useEffect = function (o1, k1) {
      return e1.current.useEffect(o1, k1);
    }),
    (_t.useId = function () {
      return e1.current.useId();
    }),
    (_t.useImperativeHandle = function (o1, k1, Y1) {
      return e1.current.useImperativeHandle(o1, k1, Y1);
    }),
    (_t.useInsertionEffect = function (o1, k1) {
      return e1.current.useInsertionEffect(o1, k1);
    }),
    (_t.useLayoutEffect = function (o1, k1) {
      return e1.current.useLayoutEffect(o1, k1);
    }),
    (_t.useMemo = function (o1, k1) {
      return e1.current.useMemo(o1, k1);
    }),
    (_t.useReducer = function (o1, k1, Y1) {
      return e1.current.useReducer(o1, k1, Y1);
    }),
    (_t.useRef = function (o1) {
      return e1.current.useRef(o1);
    }),
    (_t.useState = function (o1) {
      return e1.current.useState(o1);
    }),
    (_t.useSyncExternalStore = function (o1, k1, Y1) {
      return e1.current.useSyncExternalStore(o1, k1, Y1);
    }),
    (_t.useTransition = function () {
      return e1.current.useTransition();
    }),
    (_t.version = "18.3.1"),
    _t
  );
}
var s8;
function E3() {
  return s8 || ((s8 = 1), (zh.exports = tM())), zh.exports;
}
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var o8;
function nM() {
  if (o8) return h0;
  o8 = 1;
  var e = E3(),
    t = Symbol.for("react.element"),
    n = Symbol.for("react.fragment"),
    r = Object.prototype.hasOwnProperty,
    i = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
    s = { key: !0, ref: !0, __self: !0, __source: !0 };
  function o(l, c, f) {
    var d,
      p = {},
      m = null,
      g = null;
    f !== void 0 && (m = "" + f),
      c.key !== void 0 && (m = "" + c.key),
      c.ref !== void 0 && (g = c.ref);
    for (d in c) r.call(c, d) && !s.hasOwnProperty(d) && (p[d] = c[d]);
    if (l && l.defaultProps)
      for (d in ((c = l.defaultProps), c)) p[d] === void 0 && (p[d] = c[d]);
    return {
      $$typeof: t,
      type: l,
      key: m,
      ref: g,
      props: p,
      _owner: i.current,
    };
  }
  return (h0.Fragment = n), (h0.jsx = o), (h0.jsxs = o), h0;
}
var a8;
function rM() {
  return a8 || ((a8 = 1), (Wh.exports = nM())), Wh.exports;
}
var v = rM();
(function () {
  if (typeof document > "u" || "adoptedStyleSheets" in document) return;
  var e = "ShadyCSS" in window && !ShadyCSS.nativeShadow,
    t = document.implementation.createHTMLDocument(""),
    n = new WeakMap(),
    r = typeof DOMException == "object" ? Error : DOMException,
    i = Object.defineProperty,
    s = Array.prototype.forEach,
    o = /@import.+?;?$/gm;
  function l(d1) {
    var h1 = d1.replace(o, "");
    return (
      h1 !== d1 &&
        console.warn(
          "@import rules are not allowed here. See https://github.com/WICG/construct-stylesheets/issues/119#issuecomment-588352418"
        ),
      h1.trim()
    );
  }
  function c(d1) {
    return "isConnected" in d1 ? d1.isConnected : document.contains(d1);
  }
  function f(d1) {
    return d1.filter(function (h1, y1) {
      return d1.indexOf(h1) === y1;
    });
  }
  function d(d1, h1) {
    return d1.filter(function (y1) {
      return h1.indexOf(y1) === -1;
    });
  }
  function p(d1) {
    d1.parentNode.removeChild(d1);
  }
  function m(d1) {
    return d1.shadowRoot || n.get(d1);
  }
  var g = ["addRule", "deleteRule", "insertRule", "removeRule"],
    w = CSSStyleSheet,
    b = w.prototype;
  (b.replace = function () {
    return Promise.reject(
      new r("Can't call replace on non-constructed CSSStyleSheets.")
    );
  }),
    (b.replaceSync = function () {
      throw new r(
        "Failed to execute 'replaceSync' on 'CSSStyleSheet': Can't call replaceSync on non-constructed CSSStyleSheets."
      );
    });
  function x(d1) {
    return typeof d1 == "object"
      ? F.isPrototypeOf(d1) || b.isPrototypeOf(d1)
      : !1;
  }
  function E(d1) {
    return typeof d1 == "object" ? b.isPrototypeOf(d1) : !1;
  }
  var P = new WeakMap(),
    _ = new WeakMap(),
    T = new WeakMap(),
    M = new WeakMap();
  function L(d1, h1) {
    var y1 = document.createElement("style");
    return T.get(d1).set(h1, y1), _.get(d1).push(h1), y1;
  }
  function O(d1, h1) {
    return T.get(d1).get(h1);
  }
  function U(d1, h1) {
    T.get(d1).delete(h1),
      _.set(
        d1,
        _.get(d1).filter(function (y1) {
          return y1 !== h1;
        })
      );
  }
  function D(d1, h1) {
    requestAnimationFrame(function () {
      (h1.textContent = P.get(d1).textContent),
        M.get(d1).forEach(function (y1) {
          return h1.sheet[y1.method].apply(h1.sheet, y1.args);
        });
    });
  }
  function H(d1) {
    if (!P.has(d1)) throw new TypeError("Illegal invocation");
  }
  function $() {
    var d1 = this,
      h1 = document.createElement("style");
    t.body.appendChild(h1),
      P.set(d1, h1),
      _.set(d1, []),
      T.set(d1, new WeakMap()),
      M.set(d1, []);
  }
  var F = $.prototype;
  (F.replace = function (h1) {
    try {
      return this.replaceSync(h1), Promise.resolve(this);
    } catch (y1) {
      return Promise.reject(y1);
    }
  }),
    (F.replaceSync = function (h1) {
      if ((H(this), typeof h1 == "string")) {
        var y1 = this;
        (P.get(y1).textContent = l(h1)),
          M.set(y1, []),
          _.get(y1).forEach(function (A1) {
            A1.isConnected() && D(y1, O(y1, A1));
          });
      }
    }),
    i(F, "cssRules", {
      configurable: !0,
      enumerable: !0,
      get: function () {
        return H(this), P.get(this).sheet.cssRules;
      },
    }),
    i(F, "media", {
      configurable: !0,
      enumerable: !0,
      get: function () {
        return H(this), P.get(this).sheet.media;
      },
    }),
    g.forEach(function (d1) {
      F[d1] = function () {
        var h1 = this;
        H(h1);
        var y1 = arguments;
        M.get(h1).push({ method: d1, args: y1 }),
          _.get(h1).forEach(function (L1) {
            if (L1.isConnected()) {
              var V1 = O(h1, L1).sheet;
              V1[d1].apply(V1, y1);
            }
          });
        var A1 = P.get(h1).sheet;
        return A1[d1].apply(A1, y1);
      };
    }),
    i($, Symbol.hasInstance, { configurable: !0, value: x });
  var B = { childList: !0, subtree: !0 },
    j = new WeakMap();
  function G(d1) {
    var h1 = j.get(d1);
    return h1 || ((h1 = new G1(d1)), j.set(d1, h1)), h1;
  }
  function u1(d1) {
    i(d1.prototype, "adoptedStyleSheets", {
      configurable: !0,
      enumerable: !0,
      get: function () {
        return G(this).sheets;
      },
      set: function (h1) {
        G(this).update(h1);
      },
    });
  }
  function e1(d1, h1) {
    for (
      var y1 = document.createNodeIterator(
          d1,
          NodeFilter.SHOW_ELEMENT,
          function (L1) {
            return m(L1) ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_REJECT;
          },
          null,
          !1
        ),
        A1 = void 0;
      (A1 = y1.nextNode());

    )
      h1(m(A1));
  }
  var i1 = new WeakMap(),
    Z = new WeakMap(),
    b1 = new WeakMap();
  function o1(d1, h1) {
    return (
      h1 instanceof HTMLStyleElement &&
      Z.get(d1).some(function (y1) {
        return O(y1, d1);
      })
    );
  }
  function k1(d1) {
    var h1 = i1.get(d1);
    return h1 instanceof Document ? h1.body : h1;
  }
  function Y1(d1) {
    var h1 = document.createDocumentFragment(),
      y1 = Z.get(d1),
      A1 = b1.get(d1),
      L1 = k1(d1);
    A1.disconnect(),
      y1.forEach(function (V1) {
        h1.appendChild(O(V1, d1) || L(V1, d1));
      }),
      L1.insertBefore(h1, null),
      A1.observe(L1, B),
      y1.forEach(function (V1) {
        D(V1, O(V1, d1));
      });
  }
  function G1(d1) {
    var h1 = this;
    (h1.sheets = []),
      i1.set(h1, d1),
      Z.set(h1, []),
      b1.set(
        h1,
        new MutationObserver(function (y1, A1) {
          if (!document) {
            A1.disconnect();
            return;
          }
          y1.forEach(function (L1) {
            e ||
              s.call(L1.addedNodes, function (V1) {
                V1 instanceof Element &&
                  e1(V1, function (ie) {
                    G(ie).connect();
                  });
              }),
              s.call(L1.removedNodes, function (V1) {
                V1 instanceof Element &&
                  (o1(h1, V1) && Y1(h1),
                  e ||
                    e1(V1, function (ie) {
                      G(ie).disconnect();
                    }));
              });
          });
        })
      );
  }
  if (
    ((G1.prototype = {
      isConnected: function () {
        var d1 = i1.get(this);
        return d1 instanceof Document
          ? d1.readyState !== "loading"
          : c(d1.host);
      },
      connect: function () {
        var d1 = k1(this);
        b1.get(this).observe(d1, B),
          Z.get(this).length > 0 && Y1(this),
          e1(d1, function (h1) {
            G(h1).connect();
          });
      },
      disconnect: function () {
        b1.get(this).disconnect();
      },
      update: function (d1) {
        var h1 = this,
          y1 = i1.get(h1) === document ? "Document" : "ShadowRoot";
        if (!Array.isArray(d1))
          throw new TypeError(
            "Failed to set the 'adoptedStyleSheets' property on " +
              y1 +
              ": Iterator getter is not callable."
          );
        if (!d1.every(x))
          throw new TypeError(
            "Failed to set the 'adoptedStyleSheets' property on " +
              y1 +
              ": Failed to convert value to 'CSSStyleSheet'"
          );
        if (d1.some(E))
          throw new TypeError(
            "Failed to set the 'adoptedStyleSheets' property on " +
              y1 +
              ": Can't adopt non-constructed stylesheets"
          );
        h1.sheets = d1;
        var A1 = Z.get(h1),
          L1 = f(d1),
          V1 = d(A1, L1);
        V1.forEach(function (ie) {
          p(O(ie, h1)), U(ie, h1);
        }),
          Z.set(h1, L1),
          h1.isConnected() && L1.length > 0 && Y1(h1);
      },
    }),
    (window.CSSStyleSheet = $),
    u1(Document),
    "ShadowRoot" in window)
  ) {
    u1(ShadowRoot);
    var M1 = Element.prototype,
      Q1 = M1.attachShadow;
    M1.attachShadow = function (h1) {
      var y1 = Q1.call(this, h1);
      return h1.mode === "closed" && n.set(this, y1), y1;
    };
  }
  var re = G(document);
  re.isConnected()
    ? re.connect()
    : document.addEventListener("DOMContentLoaded", re.connect.bind(re));
})();
Object.hasOwn ||
  (Object.hasOwn = (e, t) => Object.prototype.hasOwnProperty.call(e, t));
const pt = (e) => typeof e == "string",
  p0 = () => {
    let e, t;
    const n = new Promise((r, i) => {
      (e = r), (t = i);
    });
    return (n.resolve = e), (n.reject = t), n;
  },
  l8 = (e) => (e == null ? "" : "" + e),
  iM = (e, t, n) => {
    e.forEach((r) => {
      t[r] && (n[r] = t[r]);
    });
  },
  sM = /###/g,
  u8 = (e) => (e && e.indexOf("###") > -1 ? e.replace(sM, ".") : e),
  c8 = (e) => !e || pt(e),
  cl = (e, t, n) => {
    const r = pt(t) ? t.split(".") : t;
    let i = 0;
    for (; i < r.length - 1; ) {
      if (c8(e)) return {};
      const s = u8(r[i]);
      !e[s] && n && (e[s] = new n()),
        Object.prototype.hasOwnProperty.call(e, s) ? (e = e[s]) : (e = {}),
        ++i;
    }
    return c8(e) ? {} : { obj: e, k: u8(r[i]) };
  },
  d8 = (e, t, n) => {
    const { obj: r, k: i } = cl(e, t, Object);
    if (r !== void 0 || t.length === 1) {
      r[i] = n;
      return;
    }
    let s = t[t.length - 1],
      o = t.slice(0, t.length - 1),
      l = cl(e, o, Object);
    for (; l.obj === void 0 && o.length; )
      (s = `${o[o.length - 1]}.${s}`),
        (o = o.slice(0, o.length - 1)),
        (l = cl(e, o, Object)),
        l != null &&
          l.obj &&
          typeof l.obj[`${l.k}.${s}`] < "u" &&
          (l.obj = void 0);
    l.obj[`${l.k}.${s}`] = n;
  },
  oM = (e, t, n, r) => {
    const { obj: i, k: s } = cl(e, t, Object);
    (i[s] = i[s] || []), i[s].push(n);
  },
  kd = (e, t) => {
    const { obj: n, k: r } = cl(e, t);
    if (n && Object.prototype.hasOwnProperty.call(n, r)) return n[r];
  },
  aM = (e, t, n) => {
    const r = kd(e, n);
    return r !== void 0 ? r : kd(t, n);
  },
  rC = (e, t, n) => {
    for (const r in t)
      r !== "__proto__" &&
        r !== "constructor" &&
        (r in e
          ? pt(e[r]) ||
            e[r] instanceof String ||
            pt(t[r]) ||
            t[r] instanceof String
            ? n && (e[r] = t[r])
            : rC(e[r], t[r], n)
          : (e[r] = t[r]));
    return e;
  },
  Da = (e) => e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
var lM = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;",
  "/": "&#x2F;",
};
const uM = (e) => (pt(e) ? e.replace(/[&<>"'\/]/g, (t) => lM[t]) : e);
class cM {
  constructor(t) {
    (this.capacity = t), (this.regExpMap = new Map()), (this.regExpQueue = []);
  }
  getRegExp(t) {
    const n = this.regExpMap.get(t);
    if (n !== void 0) return n;
    const r = new RegExp(t);
    return (
      this.regExpQueue.length === this.capacity &&
        this.regExpMap.delete(this.regExpQueue.shift()),
      this.regExpMap.set(t, r),
      this.regExpQueue.push(t),
      r
    );
  }
}
const dM = [" ", ",", "?", "!", ";"],
  fM = new cM(20),
  hM = (e, t, n) => {
    (t = t || ""), (n = n || "");
    const r = dM.filter((o) => t.indexOf(o) < 0 && n.indexOf(o) < 0);
    if (r.length === 0) return !0;
    const i = fM.getRegExp(
      `(${r.map((o) => (o === "?" ? "\\?" : o)).join("|")})`
    );
    let s = !i.test(e);
    if (!s) {
      const o = e.indexOf(n);
      o > 0 && !i.test(e.substring(0, o)) && (s = !0);
    }
    return s;
  },
  S5 = function (e, t) {
    let n =
      arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : ".";
    if (!e) return;
    if (e[t]) return Object.prototype.hasOwnProperty.call(e, t) ? e[t] : void 0;
    const r = t.split(n);
    let i = e;
    for (let s = 0; s < r.length; ) {
      if (!i || typeof i != "object") return;
      let o,
        l = "";
      for (let c = s; c < r.length; ++c)
        if ((c !== s && (l += n), (l += r[c]), (o = i[l]), o !== void 0)) {
          if (
            ["string", "number", "boolean"].indexOf(typeof o) > -1 &&
            c < r.length - 1
          )
            continue;
          s += c - s + 1;
          break;
        }
      i = o;
    }
    return i;
  },
  _d = (e) => (e == null ? void 0 : e.replace("_", "-")),
  pM = {
    type: "logger",
    log(e) {
      this.output("log", e);
    },
    warn(e) {
      this.output("warn", e);
    },
    error(e) {
      this.output("error", e);
    },
    output(e, t) {
      var n, r;
      (r =
        (n = console == null ? void 0 : console[e]) == null
          ? void 0
          : n.apply) == null || r.call(n, console, t);
    },
  };
class Ad {
  constructor(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    this.init(t, n);
  }
  init(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    (this.prefix = n.prefix || "i18next:"),
      (this.logger = t || pM),
      (this.options = n),
      (this.debug = n.debug);
  }
  log() {
    for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++)
      n[r] = arguments[r];
    return this.forward(n, "log", "", !0);
  }
  warn() {
    for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++)
      n[r] = arguments[r];
    return this.forward(n, "warn", "", !0);
  }
  error() {
    for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++)
      n[r] = arguments[r];
    return this.forward(n, "error", "");
  }
  deprecate() {
    for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++)
      n[r] = arguments[r];
    return this.forward(n, "warn", "WARNING DEPRECATED: ", !0);
  }
  forward(t, n, r, i) {
    return i && !this.debug
      ? null
      : (pt(t[0]) && (t[0] = `${r}${this.prefix} ${t[0]}`), this.logger[n](t));
  }
  create(t) {
    return new Ad(this.logger, {
      prefix: `${this.prefix}:${t}:`,
      ...this.options,
    });
  }
  clone(t) {
    return (
      (t = t || this.options),
      (t.prefix = t.prefix || this.prefix),
      new Ad(this.logger, t)
    );
  }
}
var n2 = new Ad();
class v4 {
  constructor() {
    this.observers = {};
  }
  on(t, n) {
    return (
      t.split(" ").forEach((r) => {
        this.observers[r] || (this.observers[r] = new Map());
        const i = this.observers[r].get(n) || 0;
        this.observers[r].set(n, i + 1);
      }),
      this
    );
  }
  off(t, n) {
    if (this.observers[t]) {
      if (!n) {
        delete this.observers[t];
        return;
      }
      this.observers[t].delete(n);
    }
  }
  emit(t) {
    for (
      var n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), i = 1;
      i < n;
      i++
    )
      r[i - 1] = arguments[i];
    this.observers[t] &&
      Array.from(this.observers[t].entries()).forEach((o) => {
        let [l, c] = o;
        for (let f = 0; f < c; f++) l(...r);
      }),
      this.observers["*"] &&
        Array.from(this.observers["*"].entries()).forEach((o) => {
          let [l, c] = o;
          for (let f = 0; f < c; f++) l.apply(l, [t, ...r]);
        });
  }
}
class f8 extends v4 {
  constructor(t) {
    let n =
      arguments.length > 1 && arguments[1] !== void 0
        ? arguments[1]
        : { ns: ["translation"], defaultNS: "translation" };
    super(),
      (this.data = t || {}),
      (this.options = n),
      this.options.keySeparator === void 0 && (this.options.keySeparator = "."),
      this.options.ignoreJSONStructure === void 0 &&
        (this.options.ignoreJSONStructure = !0);
  }
  addNamespaces(t) {
    this.options.ns.indexOf(t) < 0 && this.options.ns.push(t);
  }
  removeNamespaces(t) {
    const n = this.options.ns.indexOf(t);
    n > -1 && this.options.ns.splice(n, 1);
  }
  getResource(t, n, r) {
    var f, d;
    let i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    const s =
        i.keySeparator !== void 0 ? i.keySeparator : this.options.keySeparator,
      o =
        i.ignoreJSONStructure !== void 0
          ? i.ignoreJSONStructure
          : this.options.ignoreJSONStructure;
    let l;
    t.indexOf(".") > -1
      ? (l = t.split("."))
      : ((l = [t, n]),
        r &&
          (Array.isArray(r)
            ? l.push(...r)
            : pt(r) && s
            ? l.push(...r.split(s))
            : l.push(r)));
    const c = kd(this.data, l);
    return (
      !c &&
        !n &&
        !r &&
        t.indexOf(".") > -1 &&
        ((t = l[0]), (n = l[1]), (r = l.slice(2).join("."))),
      c || !o || !pt(r)
        ? c
        : S5(
            (d = (f = this.data) == null ? void 0 : f[t]) == null
              ? void 0
              : d[n],
            r,
            s
          )
    );
  }
  addResource(t, n, r, i) {
    let s =
      arguments.length > 4 && arguments[4] !== void 0
        ? arguments[4]
        : { silent: !1 };
    const o =
      s.keySeparator !== void 0 ? s.keySeparator : this.options.keySeparator;
    let l = [t, n];
    r && (l = l.concat(o ? r.split(o) : r)),
      t.indexOf(".") > -1 && ((l = t.split(".")), (i = n), (n = l[1])),
      this.addNamespaces(n),
      d8(this.data, l, i),
      s.silent || this.emit("added", t, n, r, i);
  }
  addResources(t, n, r) {
    let i =
      arguments.length > 3 && arguments[3] !== void 0
        ? arguments[3]
        : { silent: !1 };
    for (const s in r)
      (pt(r[s]) || Array.isArray(r[s])) &&
        this.addResource(t, n, s, r[s], { silent: !0 });
    i.silent || this.emit("added", t, n, r);
  }
  addResourceBundle(t, n, r, i, s) {
    let o =
        arguments.length > 5 && arguments[5] !== void 0
          ? arguments[5]
          : { silent: !1, skipCopy: !1 },
      l = [t, n];
    t.indexOf(".") > -1 && ((l = t.split(".")), (i = r), (r = n), (n = l[1])),
      this.addNamespaces(n);
    let c = kd(this.data, l) || {};
    o.skipCopy || (r = JSON.parse(JSON.stringify(r))),
      i ? rC(c, r, s) : (c = { ...c, ...r }),
      d8(this.data, l, c),
      o.silent || this.emit("added", t, n, r);
  }
  removeResourceBundle(t, n) {
    this.hasResourceBundle(t, n) && delete this.data[t][n],
      this.removeNamespaces(n),
      this.emit("removed", t, n);
  }
  hasResourceBundle(t, n) {
    return this.getResource(t, n) !== void 0;
  }
  getResourceBundle(t, n) {
    return n || (n = this.options.defaultNS), this.getResource(t, n);
  }
  getDataByLanguage(t) {
    return this.data[t];
  }
  hasLanguageSomeTranslations(t) {
    const n = this.getDataByLanguage(t);
    return !!((n && Object.keys(n)) || []).find(
      (i) => n[i] && Object.keys(n[i]).length > 0
    );
  }
  toJSON() {
    return this.data;
  }
}
var iC = {
  processors: {},
  addPostProcessor(e) {
    this.processors[e.name] = e;
  },
  handle(e, t, n, r, i) {
    return (
      e.forEach((s) => {
        var o;
        t =
          ((o = this.processors[s]) == null ? void 0 : o.process(t, n, r, i)) ??
          t;
      }),
      t
    );
  },
};
const h8 = {};
class Td extends v4 {
  constructor(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    super(),
      iM(
        [
          "resourceStore",
          "languageUtils",
          "pluralResolver",
          "interpolator",
          "backendConnector",
          "i18nFormat",
          "utils",
        ],
        t,
        this
      ),
      (this.options = n),
      this.options.keySeparator === void 0 && (this.options.keySeparator = "."),
      (this.logger = n2.create("translator"));
  }
  changeLanguage(t) {
    t && (this.language = t);
  }
  exists(t) {
    let n =
      arguments.length > 1 && arguments[1] !== void 0
        ? arguments[1]
        : { interpolation: {} };
    if (t == null) return !1;
    const r = this.resolve(t, n);
    return (r == null ? void 0 : r.res) !== void 0;
  }
  extractFromKey(t, n) {
    let r = n.nsSeparator !== void 0 ? n.nsSeparator : this.options.nsSeparator;
    r === void 0 && (r = ":");
    const i =
      n.keySeparator !== void 0 ? n.keySeparator : this.options.keySeparator;
    let s = n.ns || this.options.defaultNS || [];
    const o = r && t.indexOf(r) > -1,
      l =
        !this.options.userDefinedKeySeparator &&
        !n.keySeparator &&
        !this.options.userDefinedNsSeparator &&
        !n.nsSeparator &&
        !hM(t, r, i);
    if (o && !l) {
      const c = t.match(this.interpolator.nestingRegexp);
      if (c && c.length > 0) return { key: t, namespaces: pt(s) ? [s] : s };
      const f = t.split(r);
      (r !== i || (r === i && this.options.ns.indexOf(f[0]) > -1)) &&
        (s = f.shift()),
        (t = f.join(i));
    }
    return { key: t, namespaces: pt(s) ? [s] : s };
  }
  translate(t, n, r) {
    if (
      (typeof n != "object" &&
        this.options.overloadTranslationOptionHandler &&
        (n = this.options.overloadTranslationOptionHandler(arguments)),
      typeof n == "object" && (n = { ...n }),
      n || (n = {}),
      t == null)
    )
      return "";
    Array.isArray(t) || (t = [String(t)]);
    const i =
        n.returnDetails !== void 0
          ? n.returnDetails
          : this.options.returnDetails,
      s =
        n.keySeparator !== void 0 ? n.keySeparator : this.options.keySeparator,
      { key: o, namespaces: l } = this.extractFromKey(t[t.length - 1], n),
      c = l[l.length - 1],
      f = n.lng || this.language,
      d = n.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;
    if ((f == null ? void 0 : f.toLowerCase()) === "cimode") {
      if (d) {
        const T = n.nsSeparator || this.options.nsSeparator;
        return i
          ? {
              res: `${c}${T}${o}`,
              usedKey: o,
              exactUsedKey: o,
              usedLng: f,
              usedNS: c,
              usedParams: this.getUsedParamsDetails(n),
            }
          : `${c}${T}${o}`;
      }
      return i
        ? {
            res: o,
            usedKey: o,
            exactUsedKey: o,
            usedLng: f,
            usedNS: c,
            usedParams: this.getUsedParamsDetails(n),
          }
        : o;
    }
    const p = this.resolve(t, n);
    let m = p == null ? void 0 : p.res;
    const g = (p == null ? void 0 : p.usedKey) || o,
      w = (p == null ? void 0 : p.exactUsedKey) || o,
      b = Object.prototype.toString.apply(m),
      x = ["[object Number]", "[object Function]", "[object RegExp]"],
      E = n.joinArrays !== void 0 ? n.joinArrays : this.options.joinArrays,
      P = !this.i18nFormat || this.i18nFormat.handleAsObject,
      _ = !pt(m) && typeof m != "boolean" && typeof m != "number";
    if (P && m && _ && x.indexOf(b) < 0 && !(pt(E) && Array.isArray(m))) {
      if (!n.returnObjects && !this.options.returnObjects) {
        this.options.returnedObjectHandler ||
          this.logger.warn(
            "accessing an object - but returnObjects options is not enabled!"
          );
        const T = this.options.returnedObjectHandler
          ? this.options.returnedObjectHandler(g, m, { ...n, ns: l })
          : `key '${o} (${this.language})' returned an object instead of string.`;
        return i
          ? ((p.res = T), (p.usedParams = this.getUsedParamsDetails(n)), p)
          : T;
      }
      if (s) {
        const T = Array.isArray(m),
          M = T ? [] : {},
          L = T ? w : g;
        for (const O in m)
          if (Object.prototype.hasOwnProperty.call(m, O)) {
            const U = `${L}${s}${O}`;
            (M[O] = this.translate(U, { ...n, joinArrays: !1, ns: l })),
              M[O] === U && (M[O] = m[O]);
          }
        m = M;
      }
    } else if (P && pt(E) && Array.isArray(m))
      (m = m.join(E)), m && (m = this.extendTranslation(m, t, n, r));
    else {
      let T = !1,
        M = !1;
      const L = n.count !== void 0 && !pt(n.count),
        O = Td.hasDefaultValue(n),
        U = L ? this.pluralResolver.getSuffix(f, n.count, n) : "",
        D =
          n.ordinal && L
            ? this.pluralResolver.getSuffix(f, n.count, { ordinal: !1 })
            : "",
        H = L && !n.ordinal && n.count === 0,
        $ =
          (H && n[`defaultValue${this.options.pluralSeparator}zero`]) ||
          n[`defaultValue${U}`] ||
          n[`defaultValue${D}`] ||
          n.defaultValue;
      !this.isValidLookup(m) && O && ((T = !0), (m = $)),
        this.isValidLookup(m) || ((M = !0), (m = o));
      const B =
          (n.missingKeyNoValueFallbackToKey ||
            this.options.missingKeyNoValueFallbackToKey) &&
          M
            ? void 0
            : m,
        j = O && $ !== m && this.options.updateMissing;
      if (M || T || j) {
        if (
          (this.logger.log(j ? "updateKey" : "missingKey", f, c, o, j ? $ : m),
          s)
        ) {
          const i1 = this.resolve(o, { ...n, keySeparator: !1 });
          i1 &&
            i1.res &&
            this.logger.warn(
              "Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format."
            );
        }
        let G = [];
        const u1 = this.languageUtils.getFallbackCodes(
          this.options.fallbackLng,
          n.lng || this.language
        );
        if (this.options.saveMissingTo === "fallback" && u1 && u1[0])
          for (let i1 = 0; i1 < u1.length; i1++) G.push(u1[i1]);
        else
          this.options.saveMissingTo === "all"
            ? (G = this.languageUtils.toResolveHierarchy(
                n.lng || this.language
              ))
            : G.push(n.lng || this.language);
        const e1 = (i1, Z, b1) => {
          var k1;
          const o1 = O && b1 !== m ? b1 : B;
          this.options.missingKeyHandler
            ? this.options.missingKeyHandler(i1, c, Z, o1, j, n)
            : (k1 = this.backendConnector) != null &&
              k1.saveMissing &&
              this.backendConnector.saveMissing(i1, c, Z, o1, j, n),
            this.emit("missingKey", i1, c, Z, m);
        };
        this.options.saveMissing &&
          (this.options.saveMissingPlurals && L
            ? G.forEach((i1) => {
                const Z = this.pluralResolver.getSuffixes(i1, n);
                H &&
                  n[`defaultValue${this.options.pluralSeparator}zero`] &&
                  Z.indexOf(`${this.options.pluralSeparator}zero`) < 0 &&
                  Z.push(`${this.options.pluralSeparator}zero`),
                  Z.forEach((b1) => {
                    e1([i1], o + b1, n[`defaultValue${b1}`] || $);
                  });
              })
            : e1(G, o, $));
      }
      (m = this.extendTranslation(m, t, n, p, r)),
        M &&
          m === o &&
          this.options.appendNamespaceToMissingKey &&
          (m = `${c}:${o}`),
        (M || T) &&
          this.options.parseMissingKeyHandler &&
          (m = this.options.parseMissingKeyHandler(
            this.options.appendNamespaceToMissingKey ? `${c}:${o}` : o,
            T ? m : void 0
          ));
    }
    return i
      ? ((p.res = m), (p.usedParams = this.getUsedParamsDetails(n)), p)
      : m;
  }
  extendTranslation(t, n, r, i, s) {
    var f, d;
    var o = this;
    if ((f = this.i18nFormat) != null && f.parse)
      t = this.i18nFormat.parse(
        t,
        { ...this.options.interpolation.defaultVariables, ...r },
        r.lng || this.language || i.usedLng,
        i.usedNS,
        i.usedKey,
        { resolved: i }
      );
    else if (!r.skipInterpolation) {
      r.interpolation &&
        this.interpolator.init({
          ...r,
          interpolation: { ...this.options.interpolation, ...r.interpolation },
        });
      const p =
        pt(t) &&
        (((d = r == null ? void 0 : r.interpolation) == null
          ? void 0
          : d.skipOnVariables) !== void 0
          ? r.interpolation.skipOnVariables
          : this.options.interpolation.skipOnVariables);
      let m;
      if (p) {
        const w = t.match(this.interpolator.nestingRegexp);
        m = w && w.length;
      }
      let g = r.replace && !pt(r.replace) ? r.replace : r;
      if (
        (this.options.interpolation.defaultVariables &&
          (g = { ...this.options.interpolation.defaultVariables, ...g }),
        (t = this.interpolator.interpolate(
          t,
          g,
          r.lng || this.language || i.usedLng,
          r
        )),
        p)
      ) {
        const w = t.match(this.interpolator.nestingRegexp),
          b = w && w.length;
        m < b && (r.nest = !1);
      }
      !r.lng && i && i.res && (r.lng = this.language || i.usedLng),
        r.nest !== !1 &&
          (t = this.interpolator.nest(
            t,
            function () {
              for (
                var w = arguments.length, b = new Array(w), x = 0;
                x < w;
                x++
              )
                b[x] = arguments[x];
              return (s == null ? void 0 : s[0]) === b[0] && !r.context
                ? (o.logger.warn(
                    `It seems you are nesting recursively key: ${b[0]} in key: ${n[0]}`
                  ),
                  null)
                : o.translate(...b, n);
            },
            r
          )),
        r.interpolation && this.interpolator.reset();
    }
    const l = r.postProcess || this.options.postProcess,
      c = pt(l) ? [l] : l;
    return (
      t != null &&
        c != null &&
        c.length &&
        r.applyPostProcessor !== !1 &&
        (t = iC.handle(
          c,
          t,
          n,
          this.options && this.options.postProcessPassResolved
            ? {
                i18nResolved: {
                  ...i,
                  usedParams: this.getUsedParamsDetails(r),
                },
                ...r,
              }
            : r,
          this
        )),
      t
    );
  }
  resolve(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
      r,
      i,
      s,
      o,
      l;
    return (
      pt(t) && (t = [t]),
      t.forEach((c) => {
        if (this.isValidLookup(r)) return;
        const f = this.extractFromKey(c, n),
          d = f.key;
        i = d;
        let p = f.namespaces;
        this.options.fallbackNS && (p = p.concat(this.options.fallbackNS));
        const m = n.count !== void 0 && !pt(n.count),
          g = m && !n.ordinal && n.count === 0,
          w =
            n.context !== void 0 &&
            (pt(n.context) || typeof n.context == "number") &&
            n.context !== "",
          b = n.lngs
            ? n.lngs
            : this.languageUtils.toResolveHierarchy(
                n.lng || this.language,
                n.fallbackLng
              );
        p.forEach((x) => {
          var E, P;
          this.isValidLookup(r) ||
            ((l = x),
            !h8[`${b[0]}-${x}`] &&
              (E = this.utils) != null &&
              E.hasLoadedNamespace &&
              !((P = this.utils) != null && P.hasLoadedNamespace(l)) &&
              ((h8[`${b[0]}-${x}`] = !0),
              this.logger.warn(
                `key "${i}" for languages "${b.join(
                  ", "
                )}" won't get resolved as namespace "${l}" was not yet loaded`,
                "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!"
              )),
            b.forEach((_) => {
              var L;
              if (this.isValidLookup(r)) return;
              o = _;
              const T = [d];
              if ((L = this.i18nFormat) != null && L.addLookupKeys)
                this.i18nFormat.addLookupKeys(T, d, _, x, n);
              else {
                let O;
                m && (O = this.pluralResolver.getSuffix(_, n.count, n));
                const U = `${this.options.pluralSeparator}zero`,
                  D = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;
                if (
                  (m &&
                    (T.push(d + O),
                    n.ordinal &&
                      O.indexOf(D) === 0 &&
                      T.push(d + O.replace(D, this.options.pluralSeparator)),
                    g && T.push(d + U)),
                  w)
                ) {
                  const H = `${d}${this.options.contextSeparator}${n.context}`;
                  T.push(H),
                    m &&
                      (T.push(H + O),
                      n.ordinal &&
                        O.indexOf(D) === 0 &&
                        T.push(H + O.replace(D, this.options.pluralSeparator)),
                      g && T.push(H + U));
                }
              }
              let M;
              for (; (M = T.pop()); )
                this.isValidLookup(r) ||
                  ((s = M), (r = this.getResource(_, x, M, n)));
            }));
        });
      }),
      { res: r, usedKey: i, exactUsedKey: s, usedLng: o, usedNS: l }
    );
  }
  isValidLookup(t) {
    return (
      t !== void 0 &&
      !(!this.options.returnNull && t === null) &&
      !(!this.options.returnEmptyString && t === "")
    );
  }
  getResource(t, n, r) {
    var s;
    let i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    return (s = this.i18nFormat) != null && s.getResource
      ? this.i18nFormat.getResource(t, n, r, i)
      : this.resourceStore.getResource(t, n, r, i);
  }
  getUsedParamsDetails() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    const n = [
        "defaultValue",
        "ordinal",
        "context",
        "replace",
        "lng",
        "lngs",
        "fallbackLng",
        "ns",
        "keySeparator",
        "nsSeparator",
        "returnObjects",
        "returnDetails",
        "joinArrays",
        "postProcess",
        "interpolation",
      ],
      r = t.replace && !pt(t.replace);
    let i = r ? t.replace : t;
    if (
      (r && typeof t.count < "u" && (i.count = t.count),
      this.options.interpolation.defaultVariables &&
        (i = { ...this.options.interpolation.defaultVariables, ...i }),
      !r)
    ) {
      i = { ...i };
      for (const s of n) delete i[s];
    }
    return i;
  }
  static hasDefaultValue(t) {
    const n = "defaultValue";
    for (const r in t)
      if (
        Object.prototype.hasOwnProperty.call(t, r) &&
        n === r.substring(0, n.length) &&
        t[r] !== void 0
      )
        return !0;
    return !1;
  }
}
class p8 {
  constructor(t) {
    (this.options = t),
      (this.supportedLngs = this.options.supportedLngs || !1),
      (this.logger = n2.create("languageUtils"));
  }
  getScriptPartFromCode(t) {
    if (((t = _d(t)), !t || t.indexOf("-") < 0)) return null;
    const n = t.split("-");
    return n.length === 2 || (n.pop(), n[n.length - 1].toLowerCase() === "x")
      ? null
      : this.formatLanguageCode(n.join("-"));
  }
  getLanguagePartFromCode(t) {
    if (((t = _d(t)), !t || t.indexOf("-") < 0)) return t;
    const n = t.split("-");
    return this.formatLanguageCode(n[0]);
  }
  formatLanguageCode(t) {
    if (pt(t) && t.indexOf("-") > -1) {
      let n;
      try {
        n = Intl.getCanonicalLocales(t)[0];
      } catch {}
      return (
        n && this.options.lowerCaseLng && (n = n.toLowerCase()),
        n || (this.options.lowerCaseLng ? t.toLowerCase() : t)
      );
    }
    return this.options.cleanCode || this.options.lowerCaseLng
      ? t.toLowerCase()
      : t;
  }
  isSupportedCode(t) {
    return (
      (this.options.load === "languageOnly" ||
        this.options.nonExplicitSupportedLngs) &&
        (t = this.getLanguagePartFromCode(t)),
      !this.supportedLngs ||
        !this.supportedLngs.length ||
        this.supportedLngs.indexOf(t) > -1
    );
  }
  getBestMatchFromCodes(t) {
    if (!t) return null;
    let n;
    return (
      t.forEach((r) => {
        if (n) return;
        const i = this.formatLanguageCode(r);
        (!this.options.supportedLngs || this.isSupportedCode(i)) && (n = i);
      }),
      !n &&
        this.options.supportedLngs &&
        t.forEach((r) => {
          if (n) return;
          const i = this.getLanguagePartFromCode(r);
          if (this.isSupportedCode(i)) return (n = i);
          n = this.options.supportedLngs.find((s) => {
            if (s === i) return s;
            if (
              !(s.indexOf("-") < 0 && i.indexOf("-") < 0) &&
              ((s.indexOf("-") > 0 &&
                i.indexOf("-") < 0 &&
                s.substring(0, s.indexOf("-")) === i) ||
                (s.indexOf(i) === 0 && i.length > 1))
            )
              return s;
          });
        }),
      n || (n = this.getFallbackCodes(this.options.fallbackLng)[0]),
      n
    );
  }
  getFallbackCodes(t, n) {
    if (!t) return [];
    if (
      (typeof t == "function" && (t = t(n)),
      pt(t) && (t = [t]),
      Array.isArray(t))
    )
      return t;
    if (!n) return t.default || [];
    let r = t[n];
    return (
      r || (r = t[this.getScriptPartFromCode(n)]),
      r || (r = t[this.formatLanguageCode(n)]),
      r || (r = t[this.getLanguagePartFromCode(n)]),
      r || (r = t.default),
      r || []
    );
  }
  toResolveHierarchy(t, n) {
    const r = this.getFallbackCodes(n || this.options.fallbackLng || [], t),
      i = [],
      s = (o) => {
        o &&
          (this.isSupportedCode(o)
            ? i.push(o)
            : this.logger.warn(
                `rejecting language code not found in supportedLngs: ${o}`
              ));
      };
    return (
      pt(t) && (t.indexOf("-") > -1 || t.indexOf("_") > -1)
        ? (this.options.load !== "languageOnly" &&
            s(this.formatLanguageCode(t)),
          this.options.load !== "languageOnly" &&
            this.options.load !== "currentOnly" &&
            s(this.getScriptPartFromCode(t)),
          this.options.load !== "currentOnly" &&
            s(this.getLanguagePartFromCode(t)))
        : pt(t) && s(this.formatLanguageCode(t)),
      r.forEach((o) => {
        i.indexOf(o) < 0 && s(this.formatLanguageCode(o));
      }),
      i
    );
  }
}
const m8 = { zero: 0, one: 1, two: 2, few: 3, many: 4, other: 5 },
  g8 = {
    select: (e) => (e === 1 ? "one" : "other"),
    resolvedOptions: () => ({ pluralCategories: ["one", "other"] }),
  };
class mM {
  constructor(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    (this.languageUtils = t),
      (this.options = n),
      (this.logger = n2.create("pluralResolver")),
      (this.pluralRulesCache = {});
  }
  addRule(t, n) {
    this.rules[t] = n;
  }
  clearCache() {
    this.pluralRulesCache = {};
  }
  getRule(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const r = _d(t === "dev" ? "en" : t),
      i = n.ordinal ? "ordinal" : "cardinal",
      s = JSON.stringify({ cleanedCode: r, type: i });
    if (s in this.pluralRulesCache) return this.pluralRulesCache[s];
    let o;
    try {
      o = new Intl.PluralRules(r, { type: i });
    } catch {
      if (!Intl)
        return (
          this.logger.error("No Intl support, please use an Intl polyfill!"), g8
        );
      if (!t.match(/-|_/)) return g8;
      const c = this.languageUtils.getLanguagePartFromCode(t);
      o = this.getRule(c, n);
    }
    return (this.pluralRulesCache[s] = o), o;
  }
  needsPlural(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
      r = this.getRule(t, n);
    return (
      r || (r = this.getRule("dev", n)),
      (r == null ? void 0 : r.resolvedOptions().pluralCategories.length) > 1
    );
  }
  getPluralFormsOfKey(t, n) {
    let r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    return this.getSuffixes(t, r).map((i) => `${n}${i}`);
  }
  getSuffixes(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
      r = this.getRule(t, n);
    return (
      r || (r = this.getRule("dev", n)),
      r
        ? r
            .resolvedOptions()
            .pluralCategories.sort((i, s) => m8[i] - m8[s])
            .map(
              (i) =>
                `${this.options.prepend}${
                  n.ordinal ? `ordinal${this.options.prepend}` : ""
                }${i}`
            )
        : []
    );
  }
  getSuffix(t, n) {
    let r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    const i = this.getRule(t, r);
    return i
      ? `${this.options.prepend}${
          r.ordinal ? `ordinal${this.options.prepend}` : ""
        }${i.select(n)}`
      : (this.logger.warn(`no plural rule found for: ${t}`),
        this.getSuffix("dev", n, r));
  }
}
const y8 = function (e, t, n) {
    let r =
        arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : ".",
      i = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : !0,
      s = aM(e, t, n);
    return (
      !s &&
        i &&
        pt(n) &&
        ((s = S5(e, n, r)), s === void 0 && (s = S5(t, n, r))),
      s
    );
  },
  Hh = (e) => e.replace(/\$/g, "$$$$");
class gM {
  constructor() {
    var n;
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    (this.logger = n2.create("interpolator")),
      (this.options = t),
      (this.format =
        ((n = t == null ? void 0 : t.interpolation) == null
          ? void 0
          : n.format) || ((r) => r)),
      this.init(t);
  }
  init() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    t.interpolation || (t.interpolation = { escapeValue: !0 });
    const {
      escape: n,
      escapeValue: r,
      useRawValueToEscape: i,
      prefix: s,
      prefixEscaped: o,
      suffix: l,
      suffixEscaped: c,
      formatSeparator: f,
      unescapeSuffix: d,
      unescapePrefix: p,
      nestingPrefix: m,
      nestingPrefixEscaped: g,
      nestingSuffix: w,
      nestingSuffixEscaped: b,
      nestingOptionsSeparator: x,
      maxReplaces: E,
      alwaysFormat: P,
    } = t.interpolation;
    (this.escape = n !== void 0 ? n : uM),
      (this.escapeValue = r !== void 0 ? r : !0),
      (this.useRawValueToEscape = i !== void 0 ? i : !1),
      (this.prefix = s ? Da(s) : o || "{{"),
      (this.suffix = l ? Da(l) : c || "}}"),
      (this.formatSeparator = f || ","),
      (this.unescapePrefix = d ? "" : p || "-"),
      (this.unescapeSuffix = this.unescapePrefix ? "" : d || ""),
      (this.nestingPrefix = m ? Da(m) : g || Da("$t(")),
      (this.nestingSuffix = w ? Da(w) : b || Da(")")),
      (this.nestingOptionsSeparator = x || ","),
      (this.maxReplaces = E || 1e3),
      (this.alwaysFormat = P !== void 0 ? P : !1),
      this.resetRegExp();
  }
  reset() {
    this.options && this.init(this.options);
  }
  resetRegExp() {
    const t = (n, r) =>
      (n == null ? void 0 : n.source) === r
        ? ((n.lastIndex = 0), n)
        : new RegExp(r, "g");
    (this.regexp = t(this.regexp, `${this.prefix}(.+?)${this.suffix}`)),
      (this.regexpUnescape = t(
        this.regexpUnescape,
        `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`
      )),
      (this.nestingRegexp = t(
        this.nestingRegexp,
        `${this.nestingPrefix}(.+?)${this.nestingSuffix}`
      ));
  }
  interpolate(t, n, r, i) {
    var g;
    let s, o, l;
    const c =
        (this.options &&
          this.options.interpolation &&
          this.options.interpolation.defaultVariables) ||
        {},
      f = (w) => {
        if (w.indexOf(this.formatSeparator) < 0) {
          const P = y8(
            n,
            c,
            w,
            this.options.keySeparator,
            this.options.ignoreJSONStructure
          );
          return this.alwaysFormat
            ? this.format(P, void 0, r, { ...i, ...n, interpolationkey: w })
            : P;
        }
        const b = w.split(this.formatSeparator),
          x = b.shift().trim(),
          E = b.join(this.formatSeparator).trim();
        return this.format(
          y8(
            n,
            c,
            x,
            this.options.keySeparator,
            this.options.ignoreJSONStructure
          ),
          E,
          r,
          { ...i, ...n, interpolationkey: x }
        );
      };
    this.resetRegExp();
    const d =
        (i == null ? void 0 : i.missingInterpolationHandler) ||
        this.options.missingInterpolationHandler,
      p =
        ((g = i == null ? void 0 : i.interpolation) == null
          ? void 0
          : g.skipOnVariables) !== void 0
          ? i.interpolation.skipOnVariables
          : this.options.interpolation.skipOnVariables;
    return (
      [
        { regex: this.regexpUnescape, safeValue: (w) => Hh(w) },
        {
          regex: this.regexp,
          safeValue: (w) => (this.escapeValue ? Hh(this.escape(w)) : Hh(w)),
        },
      ].forEach((w) => {
        for (l = 0; (s = w.regex.exec(t)); ) {
          const b = s[1].trim();
          if (((o = f(b)), o === void 0))
            if (typeof d == "function") {
              const E = d(t, s, i);
              o = pt(E) ? E : "";
            } else if (i && Object.prototype.hasOwnProperty.call(i, b)) o = "";
            else if (p) {
              o = s[0];
              continue;
            } else
              this.logger.warn(
                `missed to pass in variable ${b} for interpolating ${t}`
              ),
                (o = "");
          else !pt(o) && !this.useRawValueToEscape && (o = l8(o));
          const x = w.safeValue(o);
          if (
            ((t = t.replace(s[0], x)),
            p
              ? ((w.regex.lastIndex += o.length),
                (w.regex.lastIndex -= s[0].length))
              : (w.regex.lastIndex = 0),
            l++,
            l >= this.maxReplaces)
          )
            break;
        }
      }),
      t
    );
  }
  nest(t, n) {
    let r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {},
      i,
      s,
      o;
    const l = (c, f) => {
      const d = this.nestingOptionsSeparator;
      if (c.indexOf(d) < 0) return c;
      const p = c.split(new RegExp(`${d}[ ]*{`));
      let m = `{${p[1]}`;
      (c = p[0]), (m = this.interpolate(m, o));
      const g = m.match(/'/g),
        w = m.match(/"/g);
      ((((g == null ? void 0 : g.length) ?? 0) % 2 === 0 && !w) ||
        w.length % 2 !== 0) &&
        (m = m.replace(/'/g, '"'));
      try {
        (o = JSON.parse(m)), f && (o = { ...f, ...o });
      } catch (b) {
        return (
          this.logger.warn(
            `failed parsing options string in nesting for key ${c}`,
            b
          ),
          `${c}${d}${m}`
        );
      }
      return (
        o.defaultValue &&
          o.defaultValue.indexOf(this.prefix) > -1 &&
          delete o.defaultValue,
        c
      );
    };
    for (; (i = this.nestingRegexp.exec(t)); ) {
      let c = [];
      (o = { ...r }),
        (o = o.replace && !pt(o.replace) ? o.replace : o),
        (o.applyPostProcessor = !1),
        delete o.defaultValue;
      let f = !1;
      if (i[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(i[1])) {
        const d = i[1].split(this.formatSeparator).map((p) => p.trim());
        (i[1] = d.shift()), (c = d), (f = !0);
      }
      if (((s = n(l.call(this, i[1].trim(), o), o)), s && i[0] === t && !pt(s)))
        return s;
      pt(s) || (s = l8(s)),
        s ||
          (this.logger.warn(`missed to resolve ${i[1]} for nesting ${t}`),
          (s = "")),
        f &&
          (s = c.reduce(
            (d, p) =>
              this.format(d, p, r.lng, { ...r, interpolationkey: i[1].trim() }),
            s.trim()
          )),
        (t = t.replace(i[0], s)),
        (this.regexp.lastIndex = 0);
    }
    return t;
  }
}
const yM = (e) => {
    let t = e.toLowerCase().trim();
    const n = {};
    if (e.indexOf("(") > -1) {
      const r = e.split("(");
      t = r[0].toLowerCase().trim();
      const i = r[1].substring(0, r[1].length - 1);
      t === "currency" && i.indexOf(":") < 0
        ? n.currency || (n.currency = i.trim())
        : t === "relativetime" && i.indexOf(":") < 0
        ? n.range || (n.range = i.trim())
        : i.split(";").forEach((o) => {
            if (o) {
              const [l, ...c] = o.split(":"),
                f = c
                  .join(":")
                  .trim()
                  .replace(/^'+|'+$/g, ""),
                d = l.trim();
              n[d] || (n[d] = f),
                f === "false" && (n[d] = !1),
                f === "true" && (n[d] = !0),
                isNaN(f) || (n[d] = parseInt(f, 10));
            }
          });
    }
    return { formatName: t, formatOptions: n };
  },
  Fa = (e) => {
    const t = {};
    return (n, r, i) => {
      let s = i;
      i &&
        i.interpolationkey &&
        i.formatParams &&
        i.formatParams[i.interpolationkey] &&
        i[i.interpolationkey] &&
        (s = { ...s, [i.interpolationkey]: void 0 });
      const o = r + JSON.stringify(s);
      let l = t[o];
      return l || ((l = e(_d(r), i)), (t[o] = l)), l(n);
    };
  };
class vM {
  constructor() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    (this.logger = n2.create("formatter")),
      (this.options = t),
      (this.formats = {
        number: Fa((n, r) => {
          const i = new Intl.NumberFormat(n, { ...r });
          return (s) => i.format(s);
        }),
        currency: Fa((n, r) => {
          const i = new Intl.NumberFormat(n, { ...r, style: "currency" });
          return (s) => i.format(s);
        }),
        datetime: Fa((n, r) => {
          const i = new Intl.DateTimeFormat(n, { ...r });
          return (s) => i.format(s);
        }),
        relativetime: Fa((n, r) => {
          const i = new Intl.RelativeTimeFormat(n, { ...r });
          return (s) => i.format(s, r.range || "day");
        }),
        list: Fa((n, r) => {
          const i = new Intl.ListFormat(n, { ...r });
          return (s) => i.format(s);
        }),
      }),
      this.init(t);
  }
  init(t) {
    let n =
      arguments.length > 1 && arguments[1] !== void 0
        ? arguments[1]
        : { interpolation: {} };
    this.formatSeparator = n.interpolation.formatSeparator || ",";
  }
  add(t, n) {
    this.formats[t.toLowerCase().trim()] = n;
  }
  addCached(t, n) {
    this.formats[t.toLowerCase().trim()] = Fa(n);
  }
  format(t, n, r) {
    let i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    const s = n.split(this.formatSeparator);
    if (
      s.length > 1 &&
      s[0].indexOf("(") > 1 &&
      s[0].indexOf(")") < 0 &&
      s.find((l) => l.indexOf(")") > -1)
    ) {
      const l = s.findIndex((c) => c.indexOf(")") > -1);
      s[0] = [s[0], ...s.splice(1, l)].join(this.formatSeparator);
    }
    return s.reduce((l, c) => {
      var p;
      const { formatName: f, formatOptions: d } = yM(c);
      if (this.formats[f]) {
        let m = l;
        try {
          const g =
              ((p = i == null ? void 0 : i.formatParams) == null
                ? void 0
                : p[i.interpolationkey]) || {},
            w = g.locale || g.lng || i.locale || i.lng || r;
          m = this.formats[f](l, w, { ...d, ...i, ...g });
        } catch (g) {
          this.logger.warn(g);
        }
        return m;
      } else this.logger.warn(`there was no format function for ${f}`);
      return l;
    }, t);
  }
}
const wM = (e, t) => {
  e.pending[t] !== void 0 && (delete e.pending[t], e.pendingCount--);
};
class bM extends v4 {
  constructor(t, n, r) {
    var s, o;
    let i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    super(),
      (this.backend = t),
      (this.store = n),
      (this.services = r),
      (this.languageUtils = r.languageUtils),
      (this.options = i),
      (this.logger = n2.create("backendConnector")),
      (this.waitingReads = []),
      (this.maxParallelReads = i.maxParallelReads || 10),
      (this.readingCalls = 0),
      (this.maxRetries = i.maxRetries >= 0 ? i.maxRetries : 5),
      (this.retryTimeout = i.retryTimeout >= 1 ? i.retryTimeout : 350),
      (this.state = {}),
      (this.queue = []),
      (o = (s = this.backend) == null ? void 0 : s.init) == null ||
        o.call(s, r, i.backend, i);
  }
  queueLoad(t, n, r, i) {
    const s = {},
      o = {},
      l = {},
      c = {};
    return (
      t.forEach((f) => {
        let d = !0;
        n.forEach((p) => {
          const m = `${f}|${p}`;
          !r.reload && this.store.hasResourceBundle(f, p)
            ? (this.state[m] = 2)
            : this.state[m] < 0 ||
              (this.state[m] === 1
                ? o[m] === void 0 && (o[m] = !0)
                : ((this.state[m] = 1),
                  (d = !1),
                  o[m] === void 0 && (o[m] = !0),
                  s[m] === void 0 && (s[m] = !0),
                  c[p] === void 0 && (c[p] = !0)));
        }),
          d || (l[f] = !0);
      }),
      (Object.keys(s).length || Object.keys(o).length) &&
        this.queue.push({
          pending: o,
          pendingCount: Object.keys(o).length,
          loaded: {},
          errors: [],
          callback: i,
        }),
      {
        toLoad: Object.keys(s),
        pending: Object.keys(o),
        toLoadLanguages: Object.keys(l),
        toLoadNamespaces: Object.keys(c),
      }
    );
  }
  loaded(t, n, r) {
    const i = t.split("|"),
      s = i[0],
      o = i[1];
    n && this.emit("failedLoading", s, o, n),
      !n &&
        r &&
        this.store.addResourceBundle(s, o, r, void 0, void 0, { skipCopy: !0 }),
      (this.state[t] = n ? -1 : 2),
      n && r && (this.state[t] = 0);
    const l = {};
    this.queue.forEach((c) => {
      oM(c.loaded, [s], o),
        wM(c, t),
        n && c.errors.push(n),
        c.pendingCount === 0 &&
          !c.done &&
          (Object.keys(c.loaded).forEach((f) => {
            l[f] || (l[f] = {});
            const d = c.loaded[f];
            d.length &&
              d.forEach((p) => {
                l[f][p] === void 0 && (l[f][p] = !0);
              });
          }),
          (c.done = !0),
          c.errors.length ? c.callback(c.errors) : c.callback());
    }),
      this.emit("loaded", l),
      (this.queue = this.queue.filter((c) => !c.done));
  }
  read(t, n, r) {
    let i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0,
      s =
        arguments.length > 4 && arguments[4] !== void 0
          ? arguments[4]
          : this.retryTimeout,
      o = arguments.length > 5 ? arguments[5] : void 0;
    if (!t.length) return o(null, {});
    if (this.readingCalls >= this.maxParallelReads) {
      this.waitingReads.push({
        lng: t,
        ns: n,
        fcName: r,
        tried: i,
        wait: s,
        callback: o,
      });
      return;
    }
    this.readingCalls++;
    const l = (f, d) => {
        if ((this.readingCalls--, this.waitingReads.length > 0)) {
          const p = this.waitingReads.shift();
          this.read(p.lng, p.ns, p.fcName, p.tried, p.wait, p.callback);
        }
        if (f && d && i < this.maxRetries) {
          setTimeout(() => {
            this.read.call(this, t, n, r, i + 1, s * 2, o);
          }, s);
          return;
        }
        o(f, d);
      },
      c = this.backend[r].bind(this.backend);
    if (c.length === 2) {
      try {
        const f = c(t, n);
        f && typeof f.then == "function"
          ? f.then((d) => l(null, d)).catch(l)
          : l(null, f);
      } catch (f) {
        l(f);
      }
      return;
    }
    return c(t, n, l);
  }
  prepareLoading(t, n) {
    let r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {},
      i = arguments.length > 3 ? arguments[3] : void 0;
    if (!this.backend)
      return (
        this.logger.warn(
          "No backend was added via i18next.use. Will not load resources."
        ),
        i && i()
      );
    pt(t) && (t = this.languageUtils.toResolveHierarchy(t)), pt(n) && (n = [n]);
    const s = this.queueLoad(t, n, r, i);
    if (!s.toLoad.length) return s.pending.length || i(), null;
    s.toLoad.forEach((o) => {
      this.loadOne(o);
    });
  }
  load(t, n, r) {
    this.prepareLoading(t, n, {}, r);
  }
  reload(t, n, r) {
    this.prepareLoading(t, n, { reload: !0 }, r);
  }
  loadOne(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
    const r = t.split("|"),
      i = r[0],
      s = r[1];
    this.read(i, s, "read", void 0, void 0, (o, l) => {
      o &&
        this.logger.warn(
          `${n}loading namespace ${s} for language ${i} failed`,
          o
        ),
        !o &&
          l &&
          this.logger.log(`${n}loaded namespace ${s} for language ${i}`, l),
        this.loaded(t, o, l);
    });
  }
  saveMissing(t, n, r, i, s) {
    var c, f, d, p, m;
    let o = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {},
      l =
        arguments.length > 6 && arguments[6] !== void 0
          ? arguments[6]
          : () => {};
    if (
      (f = (c = this.services) == null ? void 0 : c.utils) != null &&
      f.hasLoadedNamespace &&
      !(
        (p = (d = this.services) == null ? void 0 : d.utils) != null &&
        p.hasLoadedNamespace(n)
      )
    ) {
      this.logger.warn(
        `did not save key "${r}" as the namespace "${n}" was not yet loaded`,
        "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!"
      );
      return;
    }
    if (!(r == null || r === "")) {
      if ((m = this.backend) != null && m.create) {
        const g = { ...o, isUpdate: s },
          w = this.backend.create.bind(this.backend);
        if (w.length < 6)
          try {
            let b;
            w.length === 5 ? (b = w(t, n, r, i, g)) : (b = w(t, n, r, i)),
              b && typeof b.then == "function"
                ? b.then((x) => l(null, x)).catch(l)
                : l(null, b);
          } catch (b) {
            l(b);
          }
        else w(t, n, r, i, l, g);
      }
      !t || !t[0] || this.store.addResource(t[0], n, r, i);
    }
  }
}
const v8 = () => ({
    debug: !1,
    initAsync: !0,
    ns: ["translation"],
    defaultNS: ["translation"],
    fallbackLng: ["dev"],
    fallbackNS: !1,
    supportedLngs: !1,
    nonExplicitSupportedLngs: !1,
    load: "all",
    preload: !1,
    simplifyPluralSuffix: !0,
    keySeparator: ".",
    nsSeparator: ":",
    pluralSeparator: "_",
    contextSeparator: "_",
    partialBundledLanguages: !1,
    saveMissing: !1,
    updateMissing: !1,
    saveMissingTo: "fallback",
    saveMissingPlurals: !0,
    missingKeyHandler: !1,
    missingInterpolationHandler: !1,
    postProcess: !1,
    postProcessPassResolved: !1,
    returnNull: !1,
    returnEmptyString: !0,
    returnObjects: !1,
    joinArrays: !1,
    returnedObjectHandler: !1,
    parseMissingKeyHandler: !1,
    appendNamespaceToMissingKey: !1,
    appendNamespaceToCIMode: !1,
    overloadTranslationOptionHandler: (e) => {
      let t = {};
      if (
        (typeof e[1] == "object" && (t = e[1]),
        pt(e[1]) && (t.defaultValue = e[1]),
        pt(e[2]) && (t.tDescription = e[2]),
        typeof e[2] == "object" || typeof e[3] == "object")
      ) {
        const n = e[3] || e[2];
        Object.keys(n).forEach((r) => {
          t[r] = n[r];
        });
      }
      return t;
    },
    interpolation: {
      escapeValue: !0,
      format: (e) => e,
      prefix: "{{",
      suffix: "}}",
      formatSeparator: ",",
      unescapePrefix: "-",
      nestingPrefix: "$t(",
      nestingSuffix: ")",
      nestingOptionsSeparator: ",",
      maxReplaces: 1e3,
      skipOnVariables: !0,
    },
  }),
  w8 = (e) => {
    var t, n;
    return (
      pt(e.ns) && (e.ns = [e.ns]),
      pt(e.fallbackLng) && (e.fallbackLng = [e.fallbackLng]),
      pt(e.fallbackNS) && (e.fallbackNS = [e.fallbackNS]),
      ((n = (t = e.supportedLngs) == null ? void 0 : t.indexOf) == null
        ? void 0
        : n.call(t, "cimode")) < 0 &&
        (e.supportedLngs = e.supportedLngs.concat(["cimode"])),
      typeof e.initImmediate == "boolean" && (e.initAsync = e.initImmediate),
      e
    );
  },
  Mc = () => {},
  xM = (e) => {
    Object.getOwnPropertyNames(Object.getPrototypeOf(e)).forEach((n) => {
      typeof e[n] == "function" && (e[n] = e[n].bind(e));
    });
  };
class Al extends v4 {
  constructor() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
      n = arguments.length > 1 ? arguments[1] : void 0;
    if (
      (super(),
      (this.options = w8(t)),
      (this.services = {}),
      (this.logger = n2),
      (this.modules = { external: [] }),
      xM(this),
      n && !this.isInitialized && !t.isClone)
    ) {
      if (!this.options.initAsync) return this.init(t, n), this;
      setTimeout(() => {
        this.init(t, n);
      }, 0);
    }
  }
  init() {
    var t = this;
    let n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
      r = arguments.length > 1 ? arguments[1] : void 0;
    (this.isInitializing = !0),
      typeof n == "function" && ((r = n), (n = {})),
      !n.defaultNS &&
        n.defaultNS !== !1 &&
        n.ns &&
        (pt(n.ns)
          ? (n.defaultNS = n.ns)
          : n.ns.indexOf("translation") < 0 && (n.defaultNS = n.ns[0]));
    const i = v8();
    (this.options = { ...i, ...this.options, ...w8(n) }),
      (this.options.interpolation = {
        ...i.interpolation,
        ...this.options.interpolation,
      }),
      n.keySeparator !== void 0 &&
        (this.options.userDefinedKeySeparator = n.keySeparator),
      n.nsSeparator !== void 0 &&
        (this.options.userDefinedNsSeparator = n.nsSeparator);
    const s = (d) => (d ? (typeof d == "function" ? new d() : d) : null);
    if (!this.options.isClone) {
      this.modules.logger
        ? n2.init(s(this.modules.logger), this.options)
        : n2.init(null, this.options);
      let d;
      this.modules.formatter ? (d = this.modules.formatter) : (d = vM);
      const p = new p8(this.options);
      this.store = new f8(this.options.resources, this.options);
      const m = this.services;
      (m.logger = n2),
        (m.resourceStore = this.store),
        (m.languageUtils = p),
        (m.pluralResolver = new mM(p, {
          prepend: this.options.pluralSeparator,
          simplifyPluralSuffix: this.options.simplifyPluralSuffix,
        })),
        d &&
          (!this.options.interpolation.format ||
            this.options.interpolation.format === i.interpolation.format) &&
          ((m.formatter = s(d)),
          m.formatter.init(m, this.options),
          (this.options.interpolation.format = m.formatter.format.bind(
            m.formatter
          ))),
        (m.interpolator = new gM(this.options)),
        (m.utils = { hasLoadedNamespace: this.hasLoadedNamespace.bind(this) }),
        (m.backendConnector = new bM(
          s(this.modules.backend),
          m.resourceStore,
          m,
          this.options
        )),
        m.backendConnector.on("*", function (g) {
          for (
            var w = arguments.length, b = new Array(w > 1 ? w - 1 : 0), x = 1;
            x < w;
            x++
          )
            b[x - 1] = arguments[x];
          t.emit(g, ...b);
        }),
        this.modules.languageDetector &&
          ((m.languageDetector = s(this.modules.languageDetector)),
          m.languageDetector.init &&
            m.languageDetector.init(m, this.options.detection, this.options)),
        this.modules.i18nFormat &&
          ((m.i18nFormat = s(this.modules.i18nFormat)),
          m.i18nFormat.init && m.i18nFormat.init(this)),
        (this.translator = new Td(this.services, this.options)),
        this.translator.on("*", function (g) {
          for (
            var w = arguments.length, b = new Array(w > 1 ? w - 1 : 0), x = 1;
            x < w;
            x++
          )
            b[x - 1] = arguments[x];
          t.emit(g, ...b);
        }),
        this.modules.external.forEach((g) => {
          g.init && g.init(this);
        });
    }
    if (
      ((this.format = this.options.interpolation.format),
      r || (r = Mc),
      this.options.fallbackLng &&
        !this.services.languageDetector &&
        !this.options.lng)
    ) {
      const d = this.services.languageUtils.getFallbackCodes(
        this.options.fallbackLng
      );
      d.length > 0 && d[0] !== "dev" && (this.options.lng = d[0]);
    }
    !this.services.languageDetector &&
      !this.options.lng &&
      this.logger.warn(
        "init: no languageDetector is used and no lng is defined"
      ),
      [
        "getResource",
        "hasResourceBundle",
        "getResourceBundle",
        "getDataByLanguage",
      ].forEach((d) => {
        this[d] = function () {
          return t.store[d](...arguments);
        };
      }),
      [
        "addResource",
        "addResources",
        "addResourceBundle",
        "removeResourceBundle",
      ].forEach((d) => {
        this[d] = function () {
          return t.store[d](...arguments), t;
        };
      });
    const c = p0(),
      f = () => {
        const d = (p, m) => {
          (this.isInitializing = !1),
            this.isInitialized &&
              !this.initializedStoreOnce &&
              this.logger.warn(
                "init: i18next is already initialized. You should call init just once!"
              ),
            (this.isInitialized = !0),
            this.options.isClone ||
              this.logger.log("initialized", this.options),
            this.emit("initialized", this.options),
            c.resolve(m),
            r(p, m);
        };
        if (this.languages && !this.isInitialized)
          return d(null, this.t.bind(this));
        this.changeLanguage(this.options.lng, d);
      };
    return (
      this.options.resources || !this.options.initAsync
        ? f()
        : setTimeout(f, 0),
      c
    );
  }
  loadResources(t) {
    var s, o;
    let r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Mc;
    const i = pt(t) ? t : this.language;
    if (
      (typeof t == "function" && (r = t),
      !this.options.resources || this.options.partialBundledLanguages)
    ) {
      if (
        (i == null ? void 0 : i.toLowerCase()) === "cimode" &&
        (!this.options.preload || this.options.preload.length === 0)
      )
        return r();
      const l = [],
        c = (f) => {
          if (!f || f === "cimode") return;
          this.services.languageUtils.toResolveHierarchy(f).forEach((p) => {
            p !== "cimode" && l.indexOf(p) < 0 && l.push(p);
          });
        };
      i
        ? c(i)
        : this.services.languageUtils
            .getFallbackCodes(this.options.fallbackLng)
            .forEach((d) => c(d)),
        (o = (s = this.options.preload) == null ? void 0 : s.forEach) == null ||
          o.call(s, (f) => c(f)),
        this.services.backendConnector.load(l, this.options.ns, (f) => {
          !f &&
            !this.resolvedLanguage &&
            this.language &&
            this.setResolvedLanguage(this.language),
            r(f);
        });
    } else r(null);
  }
  reloadResources(t, n, r) {
    const i = p0();
    return (
      typeof t == "function" && ((r = t), (t = void 0)),
      typeof n == "function" && ((r = n), (n = void 0)),
      t || (t = this.languages),
      n || (n = this.options.ns),
      r || (r = Mc),
      this.services.backendConnector.reload(t, n, (s) => {
        i.resolve(), r(s);
      }),
      i
    );
  }
  use(t) {
    if (!t)
      throw new Error(
        "You are passing an undefined module! Please check the object you are passing to i18next.use()"
      );
    if (!t.type)
      throw new Error(
        "You are passing a wrong module! Please check the object you are passing to i18next.use()"
      );
    return (
      t.type === "backend" && (this.modules.backend = t),
      (t.type === "logger" || (t.log && t.warn && t.error)) &&
        (this.modules.logger = t),
      t.type === "languageDetector" && (this.modules.languageDetector = t),
      t.type === "i18nFormat" && (this.modules.i18nFormat = t),
      t.type === "postProcessor" && iC.addPostProcessor(t),
      t.type === "formatter" && (this.modules.formatter = t),
      t.type === "3rdParty" && this.modules.external.push(t),
      this
    );
  }
  setResolvedLanguage(t) {
    if (!(!t || !this.languages) && !(["cimode", "dev"].indexOf(t) > -1))
      for (let n = 0; n < this.languages.length; n++) {
        const r = this.languages[n];
        if (
          !(["cimode", "dev"].indexOf(r) > -1) &&
          this.store.hasLanguageSomeTranslations(r)
        ) {
          this.resolvedLanguage = r;
          break;
        }
      }
  }
  changeLanguage(t, n) {
    var r = this;
    this.isLanguageChangingTo = t;
    const i = p0();
    this.emit("languageChanging", t);
    const s = (c) => {
        (this.language = c),
          (this.languages = this.services.languageUtils.toResolveHierarchy(c)),
          (this.resolvedLanguage = void 0),
          this.setResolvedLanguage(c);
      },
      o = (c, f) => {
        f
          ? (s(f),
            this.translator.changeLanguage(f),
            (this.isLanguageChangingTo = void 0),
            this.emit("languageChanged", f),
            this.logger.log("languageChanged", f))
          : (this.isLanguageChangingTo = void 0),
          i.resolve(function () {
            return r.t(...arguments);
          }),
          n &&
            n(c, function () {
              return r.t(...arguments);
            });
      },
      l = (c) => {
        var d, p;
        !t && !c && this.services.languageDetector && (c = []);
        const f = pt(c)
          ? c
          : this.services.languageUtils.getBestMatchFromCodes(c);
        f &&
          (this.language || s(f),
          this.translator.language || this.translator.changeLanguage(f),
          (p =
            (d = this.services.languageDetector) == null
              ? void 0
              : d.cacheUserLanguage) == null || p.call(d, f)),
          this.loadResources(f, (m) => {
            o(m, f);
          });
      };
    return (
      !t &&
      this.services.languageDetector &&
      !this.services.languageDetector.async
        ? l(this.services.languageDetector.detect())
        : !t &&
          this.services.languageDetector &&
          this.services.languageDetector.async
        ? this.services.languageDetector.detect.length === 0
          ? this.services.languageDetector.detect().then(l)
          : this.services.languageDetector.detect(l)
        : l(t),
      i
    );
  }
  getFixedT(t, n, r) {
    var i = this;
    const s = function (o, l) {
      let c;
      if (typeof l != "object") {
        for (
          var f = arguments.length, d = new Array(f > 2 ? f - 2 : 0), p = 2;
          p < f;
          p++
        )
          d[p - 2] = arguments[p];
        c = i.options.overloadTranslationOptionHandler([o, l].concat(d));
      } else c = { ...l };
      (c.lng = c.lng || s.lng),
        (c.lngs = c.lngs || s.lngs),
        (c.ns = c.ns || s.ns),
        c.keyPrefix !== "" && (c.keyPrefix = c.keyPrefix || r || s.keyPrefix);
      const m = i.options.keySeparator || ".";
      let g;
      return (
        c.keyPrefix && Array.isArray(o)
          ? (g = o.map((w) => `${c.keyPrefix}${m}${w}`))
          : (g = c.keyPrefix ? `${c.keyPrefix}${m}${o}` : o),
        i.t(g, c)
      );
    };
    return pt(t) ? (s.lng = t) : (s.lngs = t), (s.ns = n), (s.keyPrefix = r), s;
  }
  t() {
    var i;
    for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++)
      n[r] = arguments[r];
    return (i = this.translator) == null ? void 0 : i.translate(...n);
  }
  exists() {
    var i;
    for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++)
      n[r] = arguments[r];
    return (i = this.translator) == null ? void 0 : i.exists(...n);
  }
  setDefaultNamespace(t) {
    this.options.defaultNS = t;
  }
  hasLoadedNamespace(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (!this.isInitialized)
      return (
        this.logger.warn(
          "hasLoadedNamespace: i18next was not initialized",
          this.languages
        ),
        !1
      );
    if (!this.languages || !this.languages.length)
      return (
        this.logger.warn(
          "hasLoadedNamespace: i18n.languages were undefined or empty",
          this.languages
        ),
        !1
      );
    const r = n.lng || this.resolvedLanguage || this.languages[0],
      i = this.options ? this.options.fallbackLng : !1,
      s = this.languages[this.languages.length - 1];
    if (r.toLowerCase() === "cimode") return !0;
    const o = (l, c) => {
      const f = this.services.backendConnector.state[`${l}|${c}`];
      return f === -1 || f === 0 || f === 2;
    };
    if (n.precheck) {
      const l = n.precheck(this, o);
      if (l !== void 0) return l;
    }
    return !!(
      this.hasResourceBundle(r, t) ||
      !this.services.backendConnector.backend ||
      (this.options.resources && !this.options.partialBundledLanguages) ||
      (o(r, t) && (!i || o(s, t)))
    );
  }
  loadNamespaces(t, n) {
    const r = p0();
    return this.options.ns
      ? (pt(t) && (t = [t]),
        t.forEach((i) => {
          this.options.ns.indexOf(i) < 0 && this.options.ns.push(i);
        }),
        this.loadResources((i) => {
          r.resolve(), n && n(i);
        }),
        r)
      : (n && n(), Promise.resolve());
  }
  loadLanguages(t, n) {
    const r = p0();
    pt(t) && (t = [t]);
    const i = this.options.preload || [],
      s = t.filter(
        (o) =>
          i.indexOf(o) < 0 && this.services.languageUtils.isSupportedCode(o)
      );
    return s.length
      ? ((this.options.preload = i.concat(s)),
        this.loadResources((o) => {
          r.resolve(), n && n(o);
        }),
        r)
      : (n && n(), Promise.resolve());
  }
  dir(t) {
    var i, s;
    if (
      (t ||
        (t =
          this.resolvedLanguage ||
          (((i = this.languages) == null ? void 0 : i.length) > 0
            ? this.languages[0]
            : this.language)),
      !t)
    )
      return "rtl";
    const n = [
        "ar",
        "shu",
        "sqr",
        "ssh",
        "xaa",
        "yhd",
        "yud",
        "aao",
        "abh",
        "abv",
        "acm",
        "acq",
        "acw",
        "acx",
        "acy",
        "adf",
        "ads",
        "aeb",
        "aec",
        "afb",
        "ajp",
        "apc",
        "apd",
        "arb",
        "arq",
        "ars",
        "ary",
        "arz",
        "auz",
        "avl",
        "ayh",
        "ayl",
        "ayn",
        "ayp",
        "bbz",
        "pga",
        "he",
        "iw",
        "ps",
        "pbt",
        "pbu",
        "pst",
        "prp",
        "prd",
        "ug",
        "ur",
        "ydd",
        "yds",
        "yih",
        "ji",
        "yi",
        "hbo",
        "men",
        "xmn",
        "fa",
        "jpr",
        "peo",
        "pes",
        "prs",
        "dv",
        "sam",
        "ckb",
      ],
      r =
        ((s = this.services) == null ? void 0 : s.languageUtils) ||
        new p8(v8());
    return n.indexOf(r.getLanguagePartFromCode(t)) > -1 ||
      t.toLowerCase().indexOf("-arab") > 1
      ? "rtl"
      : "ltr";
  }
  static createInstance() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
      n = arguments.length > 1 ? arguments[1] : void 0;
    return new Al(t, n);
  }
  cloneInstance() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
      n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Mc;
    const r = t.forkResourceStore;
    r && delete t.forkResourceStore;
    const i = { ...this.options, ...t, isClone: !0 },
      s = new Al(i);
    if (
      ((t.debug !== void 0 || t.prefix !== void 0) &&
        (s.logger = s.logger.clone(t)),
      ["store", "services", "language"].forEach((l) => {
        s[l] = this[l];
      }),
      (s.services = { ...this.services }),
      (s.services.utils = { hasLoadedNamespace: s.hasLoadedNamespace.bind(s) }),
      r)
    ) {
      const l = Object.keys(this.store.data).reduce(
        (c, f) => (
          (c[f] = { ...this.store.data[f] }),
          Object.keys(c[f]).reduce((d, p) => ((d[p] = { ...c[f][p] }), d), {})
        ),
        {}
      );
      (s.store = new f8(l, i)), (s.services.resourceStore = s.store);
    }
    return (
      (s.translator = new Td(s.services, i)),
      s.translator.on("*", function (l) {
        for (
          var c = arguments.length, f = new Array(c > 1 ? c - 1 : 0), d = 1;
          d < c;
          d++
        )
          f[d - 1] = arguments[d];
        s.emit(l, ...f);
      }),
      s.init(i, n),
      (s.translator.options = i),
      (s.translator.backendConnector.services.utils = {
        hasLoadedNamespace: s.hasLoadedNamespace.bind(s),
      }),
      s
    );
  }
  toJSON() {
    return {
      options: this.options,
      store: this.store,
      language: this.language,
      languages: this.languages,
      resolvedLanguage: this.resolvedLanguage,
    };
  }
}
const br = Al.createInstance();
br.createInstance = Al.createInstance;
br.createInstance;
br.dir;
br.init;
br.loadResources;
br.reloadResources;
br.use;
br.changeLanguage;
br.getFixedT;
const sC = br.t;
br.exists;
br.setDefaultNamespace;
br.hasLoadedNamespace;
br.loadNamespaces;
br.loadLanguages;
function E5(e) {
  "@babel/helpers - typeof";
  return (
    (E5 =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (t) {
            return typeof t;
          }
        : function (t) {
            return t &&
              typeof Symbol == "function" &&
              t.constructor === Symbol &&
              t !== Symbol.prototype
              ? "symbol"
              : typeof t;
          }),
    E5(e)
  );
}
function oC() {
  return (
    typeof XMLHttpRequest == "function" ||
    (typeof XMLHttpRequest > "u" ? "undefined" : E5(XMLHttpRequest)) ===
      "object"
  );
}
function CM(e) {
  return !!e && typeof e.then == "function";
}
function SM(e) {
  return CM(e) ? e : Promise.resolve(e);
}
const EM = "modulepreload",
  kM = function (e) {
    return "/" + e;
  },
  b8 = {},
  _M = function (t, n, r) {
    let i = Promise.resolve();
    if (n && n.length > 0) {
      document.getElementsByTagName("link");
      const o = document.querySelector("meta[property=csp-nonce]"),
        l =
          (o == null ? void 0 : o.nonce) ||
          (o == null ? void 0 : o.getAttribute("nonce"));
      i = Promise.allSettled(
        n.map((c) => {
          if (((c = kM(c)), c in b8)) return;
          b8[c] = !0;
          const f = c.endsWith(".css"),
            d = f ? '[rel="stylesheet"]' : "";
          if (document.querySelector(`link[href="${c}"]${d}`)) return;
          const p = document.createElement("link");
          if (
            ((p.rel = f ? "stylesheet" : EM),
            f || (p.as = "script"),
            (p.crossOrigin = ""),
            (p.href = c),
            l && p.setAttribute("nonce", l),
            document.head.appendChild(p),
            f)
          )
            return new Promise((m, g) => {
              p.addEventListener("load", m),
                p.addEventListener("error", () =>
                  g(new Error(`Unable to preload CSS for ${c}`))
                );
            });
        })
      );
    }
    function s(o) {
      const l = new Event("vite:preloadError", { cancelable: !0 });
      if (((l.payload = o), window.dispatchEvent(l), !l.defaultPrevented))
        throw o;
    }
    return i.then((o) => {
      for (const l of o || []) l.status === "rejected" && s(l.reason);
      return t().catch(s);
    });
  };
function x8(e, t) {
  var n = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(e);
    t &&
      (r = r.filter(function (i) {
        return Object.getOwnPropertyDescriptor(e, i).enumerable;
      })),
      n.push.apply(n, r);
  }
  return n;
}
function C8(e) {
  for (var t = 1; t < arguments.length; t++) {
    var n = arguments[t] != null ? arguments[t] : {};
    t % 2
      ? x8(Object(n), !0).forEach(function (r) {
          AM(e, r, n[r]);
        })
      : Object.getOwnPropertyDescriptors
      ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
      : x8(Object(n)).forEach(function (r) {
          Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(n, r));
        });
  }
  return e;
}
function AM(e, t, n) {
  return (
    (t = TM(t)) in e
      ? Object.defineProperty(e, t, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (e[t] = n),
    e
  );
}
function TM(e) {
  var t = PM(e, "string");
  return Zo(t) == "symbol" ? t : t + "";
}
function PM(e, t) {
  if (Zo(e) != "object" || !e) return e;
  var n = e[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(e, t);
    if (Zo(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (t === "string" ? String : Number)(e);
}
function Zo(e) {
  "@babel/helpers - typeof";
  return (
    (Zo =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (t) {
            return typeof t;
          }
        : function (t) {
            return t &&
              typeof Symbol == "function" &&
              t.constructor === Symbol &&
              t !== Symbol.prototype
              ? "symbol"
              : typeof t;
          }),
    Zo(e)
  );
}
var q2;
typeof fetch == "function" &&
  (typeof global < "u" && global.fetch
    ? (q2 = global.fetch)
    : typeof window < "u" && window.fetch
    ? (q2 = window.fetch)
    : (q2 = fetch));
var Tl;
oC() &&
  (typeof global < "u" && global.XMLHttpRequest
    ? (Tl = global.XMLHttpRequest)
    : typeof window < "u" &&
      window.XMLHttpRequest &&
      (Tl = window.XMLHttpRequest));
var Pd;
typeof ActiveXObject == "function" &&
  (typeof global < "u" && global.ActiveXObject
    ? (Pd = global.ActiveXObject)
    : typeof window < "u" &&
      window.ActiveXObject &&
      (Pd = window.ActiveXObject));
typeof q2 != "function" && (q2 = void 0);
if (!q2 && !Tl && !Pd)
  try {
    _M(() => import("./browser-ponyfill-DYLM3YGh.js").then((e) => e.b), [])
      .then(function (e) {
        q2 = e.default;
      })
      .catch(function () {});
  } catch {}
var k5 = function (t, n) {
    if (n && Zo(n) === "object") {
      var r = "";
      for (var i in n)
        r += "&" + encodeURIComponent(i) + "=" + encodeURIComponent(n[i]);
      if (!r) return t;
      t = t + (t.indexOf("?") !== -1 ? "&" : "?") + r.slice(1);
    }
    return t;
  },
  S8 = function (t, n, r, i) {
    var s = function (c) {
      if (!c.ok) return r(c.statusText || "Error", { status: c.status });
      c.text()
        .then(function (f) {
          r(null, { status: c.status, data: f });
        })
        .catch(r);
    };
    if (i) {
      var o = i(t, n);
      if (o instanceof Promise) {
        o.then(s).catch(r);
        return;
      }
    }
    typeof fetch == "function"
      ? fetch(t, n).then(s).catch(r)
      : q2(t, n).then(s).catch(r);
  },
  E8 = !1,
  MM = function (t, n, r, i) {
    t.queryStringParams && (n = k5(n, t.queryStringParams));
    var s = C8(
      {},
      typeof t.customHeaders == "function" ? t.customHeaders() : t.customHeaders
    );
    typeof window > "u" &&
      typeof global < "u" &&
      typeof global.process < "u" &&
      global.process.versions &&
      global.process.versions.node &&
      (s["User-Agent"] = "i18next-http-backend (node/"
        .concat(global.process.version, "; ")
        .concat(global.process.platform, " ")
        .concat(global.process.arch, ")")),
      r && (s["Content-Type"] = "application/json");
    var o =
        typeof t.requestOptions == "function"
          ? t.requestOptions(r)
          : t.requestOptions,
      l = C8(
        {
          method: r ? "POST" : "GET",
          body: r ? t.stringify(r) : void 0,
          headers: s,
        },
        E8 ? {} : o
      ),
      c =
        typeof t.alternateFetch == "function" && t.alternateFetch.length >= 1
          ? t.alternateFetch
          : void 0;
    try {
      S8(n, l, i, c);
    } catch (f) {
      if (
        !o ||
        Object.keys(o).length === 0 ||
        !f.message ||
        f.message.indexOf("not implemented") < 0
      )
        return i(f);
      try {
        Object.keys(o).forEach(function (d) {
          delete l[d];
        }),
          S8(n, l, i, c),
          (E8 = !0);
      } catch (d) {
        i(d);
      }
    }
  },
  RM = function (t, n, r, i) {
    r && Zo(r) === "object" && (r = k5("", r).slice(1)),
      t.queryStringParams && (n = k5(n, t.queryStringParams));
    try {
      var s = Tl ? new Tl() : new Pd("MSXML2.XMLHTTP.3.0");
      s.open(r ? "POST" : "GET", n, 1),
        t.crossDomain ||
          s.setRequestHeader("X-Requested-With", "XMLHttpRequest"),
        (s.withCredentials = !!t.withCredentials),
        r &&
          s.setRequestHeader(
            "Content-Type",
            "application/x-www-form-urlencoded"
          ),
        s.overrideMimeType && s.overrideMimeType("application/json");
      var o = t.customHeaders;
      if (((o = typeof o == "function" ? o() : o), o))
        for (var l in o) s.setRequestHeader(l, o[l]);
      (s.onreadystatechange = function () {
        s.readyState > 3 &&
          i(s.status >= 400 ? s.statusText : null, {
            status: s.status,
            data: s.responseText,
          });
      }),
        s.send(r);
    } catch (c) {
      console && console.log(c);
    }
  },
  LM = function (t, n, r, i) {
    if (
      (typeof r == "function" && ((i = r), (r = void 0)),
      (i = i || function () {}),
      q2 && n.indexOf("file:") !== 0)
    )
      return MM(t, n, r, i);
    if (oC() || typeof ActiveXObject == "function") return RM(t, n, r, i);
    i(new Error("No fetch and no xhr implementation found!"));
  };
function p3(e) {
  "@babel/helpers - typeof";
  return (
    (p3 =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (t) {
            return typeof t;
          }
        : function (t) {
            return t &&
              typeof Symbol == "function" &&
              t.constructor === Symbol &&
              t !== Symbol.prototype
              ? "symbol"
              : typeof t;
          }),
    p3(e)
  );
}
function k8(e, t) {
  var n = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(e);
    t &&
      (r = r.filter(function (i) {
        return Object.getOwnPropertyDescriptor(e, i).enumerable;
      })),
      n.push.apply(n, r);
  }
  return n;
}
function qh(e) {
  for (var t = 1; t < arguments.length; t++) {
    var n = arguments[t] != null ? arguments[t] : {};
    t % 2
      ? k8(Object(n), !0).forEach(function (r) {
          aC(e, r, n[r]);
        })
      : Object.getOwnPropertyDescriptors
      ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
      : k8(Object(n)).forEach(function (r) {
          Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(n, r));
        });
  }
  return e;
}
function IM(e, t) {
  if (!(e instanceof t))
    throw new TypeError("Cannot call a class as a function");
}
function jM(e, t) {
  for (var n = 0; n < t.length; n++) {
    var r = t[n];
    (r.enumerable = r.enumerable || !1),
      (r.configurable = !0),
      "value" in r && (r.writable = !0),
      Object.defineProperty(e, lC(r.key), r);
  }
}
function NM(e, t, n) {
  return (
    t && jM(e.prototype, t),
    Object.defineProperty(e, "prototype", { writable: !1 }),
    e
  );
}
function aC(e, t, n) {
  return (
    (t = lC(t)) in e
      ? Object.defineProperty(e, t, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (e[t] = n),
    e
  );
}
function lC(e) {
  var t = OM(e, "string");
  return p3(t) == "symbol" ? t : t + "";
}
function OM(e, t) {
  if (p3(e) != "object" || !e) return e;
  var n = e[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(e, t);
    if (p3(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return String(e);
}
var BM = function () {
    return {
      loadPath: "/locales/{{lng}}/{{ns}}.json",
      addPath: "/locales/add/{{lng}}/{{ns}}",
      parse: function (n) {
        return JSON.parse(n);
      },
      stringify: JSON.stringify,
      parsePayload: function (n, r, i) {
        return aC({}, r, i || "");
      },
      parseLoadPayload: function (n, r) {},
      request: LM,
      reloadInterval: typeof window < "u" ? !1 : 60 * 60 * 1e3,
      customHeaders: {},
      queryStringParams: {},
      crossDomain: !1,
      withCredentials: !1,
      overrideMimeType: !1,
      requestOptions: {
        mode: "cors",
        credentials: "same-origin",
        cache: "default",
      },
    };
  },
  uC = (function () {
    function e(t) {
      var n =
          arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
        r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      IM(this, e),
        (this.services = t),
        (this.options = n),
        (this.allOptions = r),
        (this.type = "backend"),
        this.init(t, n, r);
    }
    return NM(e, [
      {
        key: "init",
        value: function (n) {
          var r = this,
            i =
              arguments.length > 1 && arguments[1] !== void 0
                ? arguments[1]
                : {},
            s =
              arguments.length > 2 && arguments[2] !== void 0
                ? arguments[2]
                : {};
          if (
            ((this.services = n),
            (this.options = qh(qh(qh({}, BM()), this.options || {}), i)),
            (this.allOptions = s),
            this.services && this.options.reloadInterval)
          ) {
            var o = setInterval(function () {
              return r.reload();
            }, this.options.reloadInterval);
            p3(o) === "object" && typeof o.unref == "function" && o.unref();
          }
        },
      },
      {
        key: "readMulti",
        value: function (n, r, i) {
          this._readAny(n, n, r, r, i);
        },
      },
      {
        key: "read",
        value: function (n, r, i) {
          this._readAny([n], n, [r], r, i);
        },
      },
      {
        key: "_readAny",
        value: function (n, r, i, s, o) {
          var l = this,
            c = this.options.loadPath;
          typeof this.options.loadPath == "function" &&
            (c = this.options.loadPath(n, i)),
            (c = SM(c)),
            c.then(function (f) {
              if (!f) return o(null, {});
              var d = l.services.interpolator.interpolate(f, {
                lng: n.join("+"),
                ns: i.join("+"),
              });
              l.loadUrl(d, o, r, s);
            });
        },
      },
      {
        key: "loadUrl",
        value: function (n, r, i, s) {
          var o = this,
            l = typeof i == "string" ? [i] : i,
            c = typeof s == "string" ? [s] : s,
            f = this.options.parseLoadPayload(l, c);
          this.options.request(this.options, n, f, function (d, p) {
            if (p && ((p.status >= 500 && p.status < 600) || !p.status))
              return r(
                "failed loading " + n + "; status code: " + p.status,
                !0
              );
            if (p && p.status >= 400 && p.status < 500)
              return r(
                "failed loading " + n + "; status code: " + p.status,
                !1
              );
            if (!p && d && d.message) {
              var m = d.message.toLowerCase(),
                g = ["failed", "fetch", "network", "load"].find(function (x) {
                  return m.indexOf(x) > -1;
                });
              if (g) return r("failed loading " + n + ": " + d.message, !0);
            }
            if (d) return r(d, !1);
            var w, b;
            try {
              typeof p.data == "string"
                ? (w = o.options.parse(p.data, i, s))
                : (w = p.data);
            } catch {
              b = "failed parsing " + n + " to json";
            }
            if (b) return r(b, !1);
            r(null, w);
          });
        },
      },
      {
        key: "create",
        value: function (n, r, i, s, o) {
          var l = this;
          if (this.options.addPath) {
            typeof n == "string" && (n = [n]);
            var c = this.options.parsePayload(r, i, s),
              f = 0,
              d = [],
              p = [];
            n.forEach(function (m) {
              var g = l.options.addPath;
              typeof l.options.addPath == "function" &&
                (g = l.options.addPath(m, r));
              var w = l.services.interpolator.interpolate(g, { lng: m, ns: r });
              l.options.request(l.options, w, c, function (b, x) {
                (f += 1),
                  d.push(b),
                  p.push(x),
                  f === n.length && typeof o == "function" && o(d, p);
              });
            });
          }
        },
      },
      {
        key: "reload",
        value: function () {
          var n = this,
            r = this.services,
            i = r.backendConnector,
            s = r.languageUtils,
            o = r.logger,
            l = i.language;
          if (!(l && l.toLowerCase() === "cimode")) {
            var c = [],
              f = function (p) {
                var m = s.toResolveHierarchy(p);
                m.forEach(function (g) {
                  c.indexOf(g) < 0 && c.push(g);
                });
              };
            f(l),
              this.allOptions.preload &&
                this.allOptions.preload.forEach(function (d) {
                  return f(d);
                }),
              c.forEach(function (d) {
                n.allOptions.ns.forEach(function (p) {
                  i.read(d, p, "read", null, null, function (m, g) {
                    m &&
                      o.warn(
                        "loading namespace "
                          .concat(p, " for language ")
                          .concat(d, " failed"),
                        m
                      ),
                      !m &&
                        g &&
                        o.log(
                          "loaded namespace "
                            .concat(p, " for language ")
                            .concat(d),
                          g
                        ),
                      i.loaded("".concat(d, "|").concat(p), m, g);
                  });
                });
              });
          }
        },
      },
    ]);
  })();
uC.type = "backend";
var N = E3();
const st = qs(N);
var Kh, _8;
function DM() {
  return (
    _8 ||
      ((_8 = 1),
      (Kh = {
        area: !0,
        base: !0,
        br: !0,
        col: !0,
        embed: !0,
        hr: !0,
        img: !0,
        input: !0,
        link: !0,
        meta: !0,
        param: !0,
        source: !0,
        track: !0,
        wbr: !0,
      })),
    Kh
  );
}
var FM = DM();
const UM = qs(FM);
var $M = /\s([^'"/\s><]+?)[\s/>]|([^\s=]+)=\s?(".*?"|'.*?')/g;
function A8(e) {
  var t = { type: "tag", name: "", voidElement: !1, attrs: {}, children: [] },
    n = e.match(/<\/?([^\s]+?)[/\s>]/);
  if (
    n &&
    ((t.name = n[1]),
    (UM[n[1]] || e.charAt(e.length - 2) === "/") && (t.voidElement = !0),
    t.name.startsWith("!--"))
  ) {
    var r = e.indexOf("-->");
    return { type: "comment", comment: r !== -1 ? e.slice(4, r) : "" };
  }
  for (var i = new RegExp($M), s = null; (s = i.exec(e)) !== null; )
    if (s[0].trim())
      if (s[1]) {
        var o = s[1].trim(),
          l = [o, ""];
        o.indexOf("=") > -1 && (l = o.split("=")),
          (t.attrs[l[0]] = l[1]),
          i.lastIndex--;
      } else
        s[2] && (t.attrs[s[2]] = s[3].trim().substring(1, s[3].length - 1));
  return t;
}
var VM = /<[a-zA-Z0-9\-\!\/](?:"[^"]*"|'[^']*'|[^'">])*>/g,
  WM = /^\s*$/,
  zM = Object.create(null);
function cC(e, t) {
  switch (t.type) {
    case "text":
      return e + t.content;
    case "tag":
      return (
        (e +=
          "<" +
          t.name +
          (t.attrs
            ? (function (n) {
                var r = [];
                for (var i in n) r.push(i + '="' + n[i] + '"');
                return r.length ? " " + r.join(" ") : "";
              })(t.attrs)
            : "") +
          (t.voidElement ? "/>" : ">")),
        t.voidElement ? e : e + t.children.reduce(cC, "") + "</" + t.name + ">"
      );
    case "comment":
      return e + "<!--" + t.comment + "-->";
  }
}
var HM = {
  parse: function (e, t) {
    t || (t = {}), t.components || (t.components = zM);
    var n,
      r = [],
      i = [],
      s = -1,
      o = !1;
    if (e.indexOf("<") !== 0) {
      var l = e.indexOf("<");
      r.push({ type: "text", content: l === -1 ? e : e.substring(0, l) });
    }
    return (
      e.replace(VM, function (c, f) {
        if (o) {
          if (c !== "</" + n.name + ">") return;
          o = !1;
        }
        var d,
          p = c.charAt(1) !== "/",
          m = c.startsWith("<!--"),
          g = f + c.length,
          w = e.charAt(g);
        if (m) {
          var b = A8(c);
          return s < 0 ? (r.push(b), r) : ((d = i[s]).children.push(b), r);
        }
        if (
          (p &&
            (s++,
            (n = A8(c)).type === "tag" &&
              t.components[n.name] &&
              ((n.type = "component"), (o = !0)),
            n.voidElement ||
              o ||
              !w ||
              w === "<" ||
              n.children.push({
                type: "text",
                content: e.slice(g, e.indexOf("<", g)),
              }),
            s === 0 && r.push(n),
            (d = i[s - 1]) && d.children.push(n),
            (i[s] = n)),
          (!p || n.voidElement) &&
            (s > -1 &&
              (n.voidElement || n.name === c.slice(2, -1)) &&
              (s--, (n = s === -1 ? r : i[s])),
            !o && w !== "<" && w))
        ) {
          d = s === -1 ? r : i[s].children;
          var x = e.indexOf("<", g),
            E = e.slice(g, x === -1 ? void 0 : x);
          WM.test(E) && (E = " "),
            ((x > -1 && s + d.length >= 0) || E !== " ") &&
              d.push({ type: "text", content: E });
        }
      }),
      r
    );
  },
  stringify: function (e) {
    return e.reduce(function (t, n) {
      return t + cC("", n);
    }, "");
  },
};
const od = (...e) => {
    console != null &&
      console.warn &&
      (vi(e[0]) && (e[0] = `react-i18next:: ${e[0]}`), console.warn(...e));
  },
  T8 = {},
  Pl = (...e) => {
    (vi(e[0]) && T8[e[0]]) || (vi(e[0]) && (T8[e[0]] = new Date()), od(...e));
  },
  dC = (e, t) => () => {
    if (e.isInitialized) t();
    else {
      const n = () => {
        setTimeout(() => {
          e.off("initialized", n);
        }, 0),
          t();
      };
      e.on("initialized", n);
    }
  },
  _5 = (e, t, n) => {
    e.loadNamespaces(t, dC(e, n));
  },
  P8 = (e, t, n, r) => {
    if (
      (vi(n) && (n = [n]),
      e.options.preload && e.options.preload.indexOf(t) > -1)
    )
      return _5(e, n, r);
    n.forEach((i) => {
      e.options.ns.indexOf(i) < 0 && e.options.ns.push(i);
    }),
      e.loadLanguages(t, dC(e, r));
  },
  qM = (e, t, n = {}) =>
    !t.languages || !t.languages.length
      ? (Pl("i18n.languages were undefined or empty", t.languages), !0)
      : t.hasLoadedNamespace(e, {
          lng: n.lng,
          precheck: (r, i) => {
            var s;
            if (
              ((s = n.bindI18n) == null
                ? void 0
                : s.indexOf("languageChanging")) > -1 &&
              r.services.backendConnector.backend &&
              r.isLanguageChangingTo &&
              !i(r.isLanguageChangingTo, e)
            )
              return !1;
          },
        }),
  vi = (e) => typeof e == "string",
  Fo = (e) => typeof e == "object" && e !== null,
  KM =
    /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34|nbsp|#160|copy|#169|reg|#174|hellip|#8230|#x2F|#47);/g,
  GM = {
    "&amp;": "&",
    "&#38;": "&",
    "&lt;": "<",
    "&#60;": "<",
    "&gt;": ">",
    "&#62;": ">",
    "&apos;": "'",
    "&#39;": "'",
    "&quot;": '"',
    "&#34;": '"',
    "&nbsp;": " ",
    "&#160;": " ",
    "&copy;": "©",
    "&#169;": "©",
    "&reg;": "®",
    "&#174;": "®",
    "&hellip;": "…",
    "&#8230;": "…",
    "&#x2F;": "/",
    "&#47;": "/",
  },
  YM = (e) => GM[e],
  QM = (e) => e.replace(KM, YM);
let A5 = {
  bindI18n: "languageChanged",
  bindI18nStore: "",
  transEmptyNodeValue: "",
  transSupportBasicHtmlNodes: !0,
  transWrapTextNodes: "",
  transKeepBasicHtmlNodesFor: ["br", "strong", "i", "p"],
  useSuspense: !0,
  unescape: QM,
};
const ZM = (e = {}) => {
    A5 = { ...A5, ...e };
  },
  fC = () => A5;
let hC;
const XM = (e) => {
    hC = e;
  },
  W6 = () => hC,
  Gh = (e, t) => {
    var r;
    if (!e) return !1;
    const n = ((r = e.props) == null ? void 0 : r.children) ?? e.children;
    return t ? n.length > 0 : !!n;
  },
  Yh = (e) => {
    var n, r;
    if (!e) return [];
    const t = ((n = e.props) == null ? void 0 : n.children) ?? e.children;
    return (r = e.props) != null && r.i18nIsDynamicList ? Za(t) : t;
  },
  JM = (e) => Array.isArray(e) && e.every(N.isValidElement),
  Za = (e) => (Array.isArray(e) ? e : [e]),
  eR = (e, t) => {
    const n = { ...t };
    return (n.props = Object.assign(e.props, t.props)), n;
  },
  pC = (e, t) => {
    if (!e) return "";
    let n = "";
    const r = Za(e),
      i =
        t != null && t.transSupportBasicHtmlNodes
          ? t.transKeepBasicHtmlNodesFor ?? []
          : [];
    return (
      r.forEach((s, o) => {
        if (vi(s)) n += `${s}`;
        else if (N.isValidElement(s)) {
          const { props: l, type: c } = s,
            f = Object.keys(l).length,
            d = i.indexOf(c) > -1,
            p = l.children;
          if (!p && d && !f) n += `<${c}/>`;
          else if ((!p && (!d || f)) || l.i18nIsDynamicList)
            n += `<${o}></${o}>`;
          else if (d && f === 1 && vi(p)) n += `<${c}>${p}</${c}>`;
          else {
            const m = pC(p, t);
            n += `<${o}>${m}</${o}>`;
          }
        } else if (s === null)
          od(
            "Trans: the passed in value is invalid - seems you passed in a null child."
          );
        else if (Fo(s)) {
          const { format: l, ...c } = s,
            f = Object.keys(c);
          if (f.length === 1) {
            const d = l ? `${f[0]}, ${l}` : f[0];
            n += `{{${d}}}`;
          } else
            od(
              "react-i18next: the passed in object contained more than one variable - the object should look like {{ value, format }} where format is optional.",
              s
            );
        } else
          od(
            "Trans: the passed in value is invalid - seems you passed in a variable like {number} - please pass in variables for interpolation as full objects like {{number}}.",
            s
          );
      }),
      n
    );
  },
  tR = (e, t, n, r, i, s) => {
    if (t === "") return [];
    const o = r.transKeepBasicHtmlNodesFor || [],
      l = t && new RegExp(o.map((x) => `<${x}`).join("|")).test(t);
    if (!e && !l && !s) return [t];
    const c = {},
      f = (x) => {
        Za(x).forEach((P) => {
          vi(P) ||
            (Gh(P)
              ? f(Yh(P))
              : Fo(P) && !N.isValidElement(P) && Object.assign(c, P));
        });
      };
    f(e);
    const d = HM.parse(`<0>${t}</0>`),
      p = { ...c, ...i },
      m = (x, E, P) => {
        var M;
        const _ = Yh(x),
          T = w(_, E.children, P);
        return (JM(_) && T.length === 0) ||
          ((M = x.props) != null && M.i18nIsDynamicList)
          ? _
          : T;
      },
      g = (x, E, P, _, T) => {
        x.dummy
          ? ((x.children = E),
            P.push(N.cloneElement(x, { key: _ }, T ? void 0 : E)))
          : P.push(
              ...N.Children.map([x], (M) => {
                const L = { ...M.props };
                return (
                  delete L.i18nIsDynamicList,
                  N.createElement(
                    M.type,
                    { ...L, key: _, ref: M.ref },
                    T ? null : E
                  )
                );
              })
            );
      },
      w = (x, E, P) => {
        const _ = Za(x);
        return Za(E).reduce((M, L, O) => {
          var D, H;
          const U =
            ((H = (D = L.children) == null ? void 0 : D[0]) == null
              ? void 0
              : H.content) &&
            n.services.interpolator.interpolate(
              L.children[0].content,
              p,
              n.language
            );
          if (L.type === "tag") {
            let $ = _[parseInt(L.name, 10)];
            P.length === 1 && !$ && ($ = P[0][L.name]), $ || ($ = {});
            const F =
                Object.keys(L.attrs).length !== 0
                  ? eR({ props: L.attrs }, $)
                  : $,
              B = N.isValidElement(F),
              j = B && Gh(L, !0) && !L.voidElement,
              G = l && Fo(F) && F.dummy && !B,
              u1 = Fo(e) && Object.hasOwnProperty.call(e, L.name);
            if (vi(F)) {
              const e1 = n.services.interpolator.interpolate(F, p, n.language);
              M.push(e1);
            } else if (Gh(F) || j) {
              const e1 = m(F, L, P);
              g(F, e1, M, O);
            } else if (G) {
              const e1 = w(_, L.children, P);
              g(F, e1, M, O);
            } else if (Number.isNaN(parseFloat(L.name)))
              if (u1) {
                const e1 = m(F, L, P);
                g(F, e1, M, O, L.voidElement);
              } else if (r.transSupportBasicHtmlNodes && o.indexOf(L.name) > -1)
                if (L.voidElement)
                  M.push(N.createElement(L.name, { key: `${L.name}-${O}` }));
                else {
                  const e1 = w(_, L.children, P);
                  M.push(
                    N.createElement(L.name, { key: `${L.name}-${O}` }, e1)
                  );
                }
              else if (L.voidElement) M.push(`<${L.name} />`);
              else {
                const e1 = w(_, L.children, P);
                M.push(`<${L.name}>${e1}</${L.name}>`);
              }
            else if (Fo(F) && !B) {
              const e1 = L.children[0] ? U : null;
              e1 && M.push(e1);
            } else g(F, U, M, O, L.children.length !== 1 || !U);
          } else if (L.type === "text") {
            const $ = r.transWrapTextNodes,
              F = s
                ? r.unescape(
                    n.services.interpolator.interpolate(
                      L.content,
                      p,
                      n.language
                    )
                  )
                : n.services.interpolator.interpolate(L.content, p, n.language);
            $
              ? M.push(N.createElement($, { key: `${L.name}-${O}` }, F))
              : M.push(F);
          }
          return M;
        }, []);
      },
      b = w([{ dummy: !0, children: e || [] }], d, Za(e || []));
    return Yh(b[0]);
  },
  mC = (e, t, n) => {
    const r = e.key || t,
      i = N.cloneElement(e, { key: r });
    if (
      !i.props ||
      !i.props.children ||
      (n.indexOf(`${t}/>`) < 0 && n.indexOf(`${t} />`) < 0)
    )
      return i;
    function s() {
      return N.createElement(N.Fragment, null, i);
    }
    return N.createElement(s);
  },
  nR = (e, t) => e.map((n, r) => mC(n, r, t)),
  rR = (e, t) => {
    const n = {};
    return (
      Object.keys(e).forEach((r) => {
        Object.assign(n, { [r]: mC(e[r], r, t) });
      }),
      n
    );
  },
  iR = (e, t) =>
    e
      ? Array.isArray(e)
        ? nR(e, t)
        : Fo(e)
        ? rR(e, t)
        : (Pl("<Trans /> component prop expects an object or an array"), null)
      : null;
function sR({
  children: e,
  count: t,
  parent: n,
  i18nKey: r,
  context: i,
  tOptions: s = {},
  values: o,
  defaults: l,
  components: c,
  ns: f,
  i18n: d,
  t: p,
  shouldUnescape: m,
  ...g
}) {
  var F, B, j, G, u1, e1;
  const w = d || W6();
  if (!w)
    return (
      Pl(
        "You will need to pass in an i18next instance by using i18nextReactModule"
      ),
      e
    );
  const b = p || w.t.bind(w) || ((i1) => i1),
    x = { ...fC(), ...((F = w.options) == null ? void 0 : F.react) };
  let E = f || b.ns || ((B = w.options) == null ? void 0 : B.defaultNS);
  E = vi(E) ? [E] : E || ["translation"];
  const P = pC(e, x),
    _ = l || P || x.transEmptyNodeValue || r,
    { hashTransKey: T } = x,
    M = r || (T ? T(P || _) : P || _);
  (G = (j = w.options) == null ? void 0 : j.interpolation) != null &&
    G.defaultVariables &&
    (o =
      o && Object.keys(o).length > 0
        ? { ...o, ...w.options.interpolation.defaultVariables }
        : { ...w.options.interpolation.defaultVariables });
  const L =
      o ||
      (t !== void 0 &&
        !(
          (e1 = (u1 = w.options) == null ? void 0 : u1.interpolation) != null &&
          e1.alwaysFormat
        )) ||
      !e
        ? s.interpolation
        : {
            interpolation: { ...s.interpolation, prefix: "#$?", suffix: "?$#" },
          },
    O = {
      ...s,
      context: i || s.context,
      count: t,
      ...o,
      ...L,
      defaultValue: _,
      ns: E,
    },
    U = M ? b(M, O) : _,
    D = iR(c, U),
    H = tR(D || e, U, w, x, O, m),
    $ = n ?? x.defaultTransParent;
  return $ ? N.createElement($, g, H) : H;
}
const oR = {
    type: "3rdParty",
    init(e) {
      ZM(e.options.react), XM(e);
    },
  },
  gC = N.createContext();
class aR {
  constructor() {
    this.usedNamespaces = {};
  }
  addUsedNamespaces(t) {
    t.forEach((n) => {
      this.usedNamespaces[n] || (this.usedNamespaces[n] = !0);
    });
  }
  getUsedNamespaces() {
    return Object.keys(this.usedNamespaces);
  }
}
function Ks({
  children: e,
  count: t,
  parent: n,
  i18nKey: r,
  context: i,
  tOptions: s = {},
  values: o,
  defaults: l,
  components: c,
  ns: f,
  i18n: d,
  t: p,
  shouldUnescape: m,
  ...g
}) {
  var P;
  const { i18n: w, defaultNS: b } = N.useContext(gC) || {},
    x = d || w || W6(),
    E = p || (x == null ? void 0 : x.t.bind(x));
  return sR({
    children: e,
    count: t,
    parent: n,
    i18nKey: r,
    context: i,
    tOptions: s,
    values: o,
    defaults: l,
    components: c,
    ns:
      f ||
      (E == null ? void 0 : E.ns) ||
      b ||
      ((P = x == null ? void 0 : x.options) == null ? void 0 : P.defaultNS),
    i18n: x,
    t: p,
    shouldUnescape: m,
    ...g,
  });
}
const lR = (e, t) => {
    const n = N.useRef();
    return (
      N.useEffect(() => {
        n.current = e;
      }, [e, t]),
      n.current
    );
  },
  yC = (e, t, n, r) => e.getFixedT(t, n, r),
  uR = (e, t, n, r) => N.useCallback(yC(e, t, n, r), [e, t, n, r]),
  Ze = (e, t = {}) => {
    var T, M, L, O;
    const { i18n: n } = t,
      { i18n: r, defaultNS: i } = N.useContext(gC) || {},
      s = n || r || W6();
    if ((s && !s.reportNamespaces && (s.reportNamespaces = new aR()), !s)) {
      Pl(
        "You will need to pass in an i18next instance by using initReactI18next"
      );
      const U = (H, $) =>
          vi($)
            ? $
            : Fo($) && vi($.defaultValue)
            ? $.defaultValue
            : Array.isArray(H)
            ? H[H.length - 1]
            : H,
        D = [U, {}, !1];
      return (D.t = U), (D.i18n = {}), (D.ready = !1), D;
    }
    (T = s.options.react) != null &&
      T.wait &&
      Pl(
        "It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour."
      );
    const o = { ...fC(), ...s.options.react, ...t },
      { useSuspense: l, keyPrefix: c } = o;
    let f = i || ((M = s.options) == null ? void 0 : M.defaultNS);
    (f = vi(f) ? [f] : f || ["translation"]),
      (O = (L = s.reportNamespaces).addUsedNamespaces) == null || O.call(L, f);
    const d =
        (s.isInitialized || s.initializedStoreOnce) &&
        f.every((U) => qM(U, s, o)),
      p = uR(s, t.lng || null, o.nsMode === "fallback" ? f : f[0], c),
      m = () => p,
      g = () => yC(s, t.lng || null, o.nsMode === "fallback" ? f : f[0], c),
      [w, b] = N.useState(m);
    let x = f.join();
    t.lng && (x = `${t.lng}${x}`);
    const E = lR(x),
      P = N.useRef(!0);
    N.useEffect(() => {
      const { bindI18n: U, bindI18nStore: D } = o;
      (P.current = !0),
        !d &&
          !l &&
          (t.lng
            ? P8(s, t.lng, f, () => {
                P.current && b(g);
              })
            : _5(s, f, () => {
                P.current && b(g);
              })),
        d && E && E !== x && P.current && b(g);
      const H = () => {
        P.current && b(g);
      };
      return (
        U && (s == null || s.on(U, H)),
        D && (s == null || s.store.on(D, H)),
        () => {
          (P.current = !1),
            s && (U == null || U.split(" ").forEach(($) => s.off($, H))),
            D && s && D.split(" ").forEach(($) => s.store.off($, H));
        }
      );
    }, [s, x]),
      N.useEffect(() => {
        P.current && d && b(m);
      }, [s, c, d]);
    const _ = [w, s, d];
    if (((_.t = w), (_.i18n = s), (_.ready = d), d || (!d && !l))) return _;
    throw new Promise((U) => {
      t.lng ? P8(s, t.lng, f, () => U()) : _5(s, f, () => U());
    });
  },
  cR = "https://api.primegifts.org",
  dR = "https://static.primegifts.org/tonconnect-manifest-2.json",
  fR = "wss://api.primegifts.org/ws",
  hR = "https://t.me/PrimeGiftsCase",
  se = {
    PAGES: {
      MAIN: "/",
      TRADE: {
        MAIN: "trade",
        WITHDRAW: "withdraw",
        FULL_ROUTE_TRADE: "/trade",
      },
      DEPOSIT: {
        MAIN: "deposit",
        TON: "ton",
        FULL_ROUTE_MAIN: "/deposit",
        GIFTS: {
          MAIN: "gifts",
          COLLECTION: ":collectionId",
          FULL_ROUTE_GIFTS: "/deposit/gifts",
          TO_FULL_ROUTE_COLLECTION: (e) => `/deposit/gifts/${e}`,
        },
      },
      CASES: {
        MAIN: "cases",
        CASE: "case/:caseId",
        TO_CASE: (e) => `case/${e}`,
        FULL_ROUTE_CASE: "cases/case/:caseId",
        TO_FULL_ROUTE_CASE: (e) => `/cases/case/${e}`,
      },
      GIVEAWAYS: {
        MAIN: "giveaways",
        ACTIVE: "active",
        HISTORY: "history",
        GIVEAWAY: "giveaway/:giveawayId",
        FULL_ROUTE_GIVEAWAY: "giveaways/giveaway/:giveawayId",
        TO_GIVEAWAY: (e) => `giveaway/${e}`,
        TO_FULL_ROUTE_GIVEAWAY: (e) => `/giveaways/giveaway/${e}`,
      },
      CREATE_GIVEAWAY: {
        MAIN: "create_giveaway",
        CLASSIC: "classic",
        PRIME: "prime",
      },
      PROFILE: {
        MAIN: "profile",
        HISTORY: "history",
        INVENTORY: "inventory",
        REFERRALS: "referrals",
        TO_FULL_ROUTE_INVENTORY: "/profile/inventory",
      },
    },
    EXTERNAL: {
      TG_BOT: "https://t.me/primegiftsbot",
      TG_ITEMS_BOT: hR,
      TG_BOT_REFERRAL_LINK: "https://t.me/primegiftsbot/gift?startapp=ref_",
      GET_TG_BOT_SHARE_GIVEAWAY_LINK: (e, t) =>
        `https://t.me/primegiftsbot/gift?startapp=ref_${e}_giveaway_${t}`,
      TG_SHARE: "https://t.me/share/url",
    },
  },
  pR = { RAFFLE: "raffle", CASES: "cases", BALANCE: "balance" },
  M8 = { NEW_DROP: "new-drop", ONLINE: "online" },
  mR = 1750106695921;
br.use(uC)
  .use(oR)
  .init({
    backend: {
      loadPath: "/static/locales/{{lng}}.json",
      reloadInterval: !1,
      queryStringParams: { v: mR },
    },
    lng: "en",
    fallbackLng: "en",
    pluralSeparator: "_",
    keySeparator: ".",
    interpolation: { escapeValue: !1, skipOnVariables: !1 },
  });
var Rc = {},
  Qh = { exports: {} },
  Fr = {},
  Zh = { exports: {} },
  Xh = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var R8;
function gR() {
  return (
    R8 ||
      ((R8 = 1),
      (function (e) {
        function t(i1, Z) {
          var b1 = i1.length;
          i1.push(Z);
          e: for (; 0 < b1; ) {
            var o1 = (b1 - 1) >>> 1,
              k1 = i1[o1];
            if (0 < i(k1, Z)) (i1[o1] = Z), (i1[b1] = k1), (b1 = o1);
            else break e;
          }
        }
        function n(i1) {
          return i1.length === 0 ? null : i1[0];
        }
        function r(i1) {
          if (i1.length === 0) return null;
          var Z = i1[0],
            b1 = i1.pop();
          if (b1 !== Z) {
            i1[0] = b1;
            e: for (var o1 = 0, k1 = i1.length, Y1 = k1 >>> 1; o1 < Y1; ) {
              var G1 = 2 * (o1 + 1) - 1,
                M1 = i1[G1],
                Q1 = G1 + 1,
                re = i1[Q1];
              if (0 > i(M1, b1))
                Q1 < k1 && 0 > i(re, M1)
                  ? ((i1[o1] = re), (i1[Q1] = b1), (o1 = Q1))
                  : ((i1[o1] = M1), (i1[G1] = b1), (o1 = G1));
              else if (Q1 < k1 && 0 > i(re, b1))
                (i1[o1] = re), (i1[Q1] = b1), (o1 = Q1);
              else break e;
            }
          }
          return Z;
        }
        function i(i1, Z) {
          var b1 = i1.sortIndex - Z.sortIndex;
          return b1 !== 0 ? b1 : i1.id - Z.id;
        }
        if (
          typeof performance == "object" &&
          typeof performance.now == "function"
        ) {
          var s = performance;
          e.unstable_now = function () {
            return s.now();
          };
        } else {
          var o = Date,
            l = o.now();
          e.unstable_now = function () {
            return o.now() - l;
          };
        }
        var c = [],
          f = [],
          d = 1,
          p = null,
          m = 3,
          g = !1,
          w = !1,
          b = !1,
          x = typeof setTimeout == "function" ? setTimeout : null,
          E = typeof clearTimeout == "function" ? clearTimeout : null,
          P = typeof setImmediate < "u" ? setImmediate : null;
        typeof navigator < "u" &&
          navigator.scheduling !== void 0 &&
          navigator.scheduling.isInputPending !== void 0 &&
          navigator.scheduling.isInputPending.bind(navigator.scheduling);
        function _(i1) {
          for (var Z = n(f); Z !== null; ) {
            if (Z.callback === null) r(f);
            else if (Z.startTime <= i1)
              r(f), (Z.sortIndex = Z.expirationTime), t(c, Z);
            else break;
            Z = n(f);
          }
        }
        function T(i1) {
          if (((b = !1), _(i1), !w))
            if (n(c) !== null) (w = !0), u1(M);
            else {
              var Z = n(f);
              Z !== null && e1(T, Z.startTime - i1);
            }
        }
        function M(i1, Z) {
          (w = !1), b && ((b = !1), E(U), (U = -1)), (g = !0);
          var b1 = m;
          try {
            for (
              _(Z), p = n(c);
              p !== null && (!(p.expirationTime > Z) || (i1 && !$()));

            ) {
              var o1 = p.callback;
              if (typeof o1 == "function") {
                (p.callback = null), (m = p.priorityLevel);
                var k1 = o1(p.expirationTime <= Z);
                (Z = e.unstable_now()),
                  typeof k1 == "function"
                    ? (p.callback = k1)
                    : p === n(c) && r(c),
                  _(Z);
              } else r(c);
              p = n(c);
            }
            if (p !== null) var Y1 = !0;
            else {
              var G1 = n(f);
              G1 !== null && e1(T, G1.startTime - Z), (Y1 = !1);
            }
            return Y1;
          } finally {
            (p = null), (m = b1), (g = !1);
          }
        }
        var L = !1,
          O = null,
          U = -1,
          D = 5,
          H = -1;
        function $() {
          return !(e.unstable_now() - H < D);
        }
        function F() {
          if (O !== null) {
            var i1 = e.unstable_now();
            H = i1;
            var Z = !0;
            try {
              Z = O(!0, i1);
            } finally {
              Z ? B() : ((L = !1), (O = null));
            }
          } else L = !1;
        }
        var B;
        if (typeof P == "function")
          B = function () {
            P(F);
          };
        else if (typeof MessageChannel < "u") {
          var j = new MessageChannel(),
            G = j.port2;
          (j.port1.onmessage = F),
            (B = function () {
              G.postMessage(null);
            });
        } else
          B = function () {
            x(F, 0);
          };
        function u1(i1) {
          (O = i1), L || ((L = !0), B());
        }
        function e1(i1, Z) {
          U = x(function () {
            i1(e.unstable_now());
          }, Z);
        }
        (e.unstable_IdlePriority = 5),
          (e.unstable_ImmediatePriority = 1),
          (e.unstable_LowPriority = 4),
          (e.unstable_NormalPriority = 3),
          (e.unstable_Profiling = null),
          (e.unstable_UserBlockingPriority = 2),
          (e.unstable_cancelCallback = function (i1) {
            i1.callback = null;
          }),
          (e.unstable_continueExecution = function () {
            w || g || ((w = !0), u1(M));
          }),
          (e.unstable_forceFrameRate = function (i1) {
            0 > i1 || 125 < i1
              ? console.error(
                  "forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"
                )
              : (D = 0 < i1 ? Math.floor(1e3 / i1) : 5);
          }),
          (e.unstable_getCurrentPriorityLevel = function () {
            return m;
          }),
          (e.unstable_getFirstCallbackNode = function () {
            return n(c);
          }),
          (e.unstable_next = function (i1) {
            switch (m) {
              case 1:
              case 2:
              case 3:
                var Z = 3;
                break;
              default:
                Z = m;
            }
            var b1 = m;
            m = Z;
            try {
              return i1();
            } finally {
              m = b1;
            }
          }),
          (e.unstable_pauseExecution = function () {}),
          (e.unstable_requestPaint = function () {}),
          (e.unstable_runWithPriority = function (i1, Z) {
            switch (i1) {
              case 1:
              case 2:
              case 3:
              case 4:
              case 5:
                break;
              default:
                i1 = 3;
            }
            var b1 = m;
            m = i1;
            try {
              return Z();
            } finally {
              m = b1;
            }
          }),
          (e.unstable_scheduleCallback = function (i1, Z, b1) {
            var o1 = e.unstable_now();
            switch (
              (typeof b1 == "object" && b1 !== null
                ? ((b1 = b1.delay),
                  (b1 = typeof b1 == "number" && 0 < b1 ? o1 + b1 : o1))
                : (b1 = o1),
              i1)
            ) {
              case 1:
                var k1 = -1;
                break;
              case 2:
                k1 = 250;
                break;
              case 5:
                k1 = 1073741823;
                break;
              case 4:
                k1 = 1e4;
                break;
              default:
                k1 = 5e3;
            }
            return (
              (k1 = b1 + k1),
              (i1 = {
                id: d++,
                callback: Z,
                priorityLevel: i1,
                startTime: b1,
                expirationTime: k1,
                sortIndex: -1,
              }),
              b1 > o1
                ? ((i1.sortIndex = b1),
                  t(f, i1),
                  n(c) === null &&
                    i1 === n(f) &&
                    (b ? (E(U), (U = -1)) : (b = !0), e1(T, b1 - o1)))
                : ((i1.sortIndex = k1), t(c, i1), w || g || ((w = !0), u1(M))),
              i1
            );
          }),
          (e.unstable_shouldYield = $),
          (e.unstable_wrapCallback = function (i1) {
            var Z = m;
            return function () {
              var b1 = m;
              m = Z;
              try {
                return i1.apply(this, arguments);
              } finally {
                m = b1;
              }
            };
          });
      })(Xh)),
    Xh
  );
}
var L8;
function yR() {
  return L8 || ((L8 = 1), (Zh.exports = gR())), Zh.exports;
}
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var I8;
function vR() {
  if (I8) return Fr;
  I8 = 1;
  var e = E3(),
    t = yR();
  function n(a) {
    for (
      var u = "https://reactjs.org/docs/error-decoder.html?invariant=" + a,
        h = 1;
      h < arguments.length;
      h++
    )
      u += "&args[]=" + encodeURIComponent(arguments[h]);
    return (
      "Minified React error #" +
      a +
      "; visit " +
      u +
      " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
    );
  }
  var r = new Set(),
    i = {};
  function s(a, u) {
    o(a, u), o(a + "Capture", u);
  }
  function o(a, u) {
    for (i[a] = u, a = 0; a < u.length; a++) r.add(u[a]);
  }
  var l = !(
      typeof window > "u" ||
      typeof window.document > "u" ||
      typeof window.document.createElement > "u"
    ),
    c = Object.prototype.hasOwnProperty,
    f =
      /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
    d = {},
    p = {};
  function m(a) {
    return c.call(p, a)
      ? !0
      : c.call(d, a)
      ? !1
      : f.test(a)
      ? (p[a] = !0)
      : ((d[a] = !0), !1);
  }
  function g(a, u, h, y) {
    if (h !== null && h.type === 0) return !1;
    switch (typeof u) {
      case "function":
      case "symbol":
        return !0;
      case "boolean":
        return y
          ? !1
          : h !== null
          ? !h.acceptsBooleans
          : ((a = a.toLowerCase().slice(0, 5)), a !== "data-" && a !== "aria-");
      default:
        return !1;
    }
  }
  function w(a, u, h, y) {
    if (u === null || typeof u > "u" || g(a, u, h, y)) return !0;
    if (y) return !1;
    if (h !== null)
      switch (h.type) {
        case 3:
          return !u;
        case 4:
          return u === !1;
        case 5:
          return isNaN(u);
        case 6:
          return isNaN(u) || 1 > u;
      }
    return !1;
  }
  function b(a, u, h, y, S, I, Y) {
    (this.acceptsBooleans = u === 2 || u === 3 || u === 4),
      (this.attributeName = y),
      (this.attributeNamespace = S),
      (this.mustUseProperty = h),
      (this.propertyName = a),
      (this.type = u),
      (this.sanitizeURL = I),
      (this.removeEmptyString = Y);
  }
  var x = {};
  "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style"
    .split(" ")
    .forEach(function (a) {
      x[a] = new b(a, 0, !1, a, null, !1, !1);
    }),
    [
      ["acceptCharset", "accept-charset"],
      ["className", "class"],
      ["htmlFor", "for"],
      ["httpEquiv", "http-equiv"],
    ].forEach(function (a) {
      var u = a[0];
      x[u] = new b(u, 1, !1, a[1], null, !1, !1);
    }),
    ["contentEditable", "draggable", "spellCheck", "value"].forEach(function (
      a
    ) {
      x[a] = new b(a, 2, !1, a.toLowerCase(), null, !1, !1);
    }),
    [
      "autoReverse",
      "externalResourcesRequired",
      "focusable",
      "preserveAlpha",
    ].forEach(function (a) {
      x[a] = new b(a, 2, !1, a, null, !1, !1);
    }),
    "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope"
      .split(" ")
      .forEach(function (a) {
        x[a] = new b(a, 3, !1, a.toLowerCase(), null, !1, !1);
      }),
    ["checked", "multiple", "muted", "selected"].forEach(function (a) {
      x[a] = new b(a, 3, !0, a, null, !1, !1);
    }),
    ["capture", "download"].forEach(function (a) {
      x[a] = new b(a, 4, !1, a, null, !1, !1);
    }),
    ["cols", "rows", "size", "span"].forEach(function (a) {
      x[a] = new b(a, 6, !1, a, null, !1, !1);
    }),
    ["rowSpan", "start"].forEach(function (a) {
      x[a] = new b(a, 5, !1, a.toLowerCase(), null, !1, !1);
    });
  var E = /[\-:]([a-z])/g;
  function P(a) {
    return a[1].toUpperCase();
  }
  "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height"
    .split(" ")
    .forEach(function (a) {
      var u = a.replace(E, P);
      x[u] = new b(u, 1, !1, a, null, !1, !1);
    }),
    "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type"
      .split(" ")
      .forEach(function (a) {
        var u = a.replace(E, P);
        x[u] = new b(u, 1, !1, a, "http://www.w3.org/1999/xlink", !1, !1);
      }),
    ["xml:base", "xml:lang", "xml:space"].forEach(function (a) {
      var u = a.replace(E, P);
      x[u] = new b(u, 1, !1, a, "http://www.w3.org/XML/1998/namespace", !1, !1);
    }),
    ["tabIndex", "crossOrigin"].forEach(function (a) {
      x[a] = new b(a, 1, !1, a.toLowerCase(), null, !1, !1);
    }),
    (x.xlinkHref = new b(
      "xlinkHref",
      1,
      !1,
      "xlink:href",
      "http://www.w3.org/1999/xlink",
      !0,
      !1
    )),
    ["src", "href", "action", "formAction"].forEach(function (a) {
      x[a] = new b(a, 1, !1, a.toLowerCase(), null, !0, !0);
    });
  function _(a, u, h, y) {
    var S = x.hasOwnProperty(u) ? x[u] : null;
    (S !== null
      ? S.type !== 0
      : y ||
        !(2 < u.length) ||
        (u[0] !== "o" && u[0] !== "O") ||
        (u[1] !== "n" && u[1] !== "N")) &&
      (w(u, h, S, y) && (h = null),
      y || S === null
        ? m(u) &&
          (h === null ? a.removeAttribute(u) : a.setAttribute(u, "" + h))
        : S.mustUseProperty
        ? (a[S.propertyName] = h === null ? (S.type === 3 ? !1 : "") : h)
        : ((u = S.attributeName),
          (y = S.attributeNamespace),
          h === null
            ? a.removeAttribute(u)
            : ((S = S.type),
              (h = S === 3 || (S === 4 && h === !0) ? "" : "" + h),
              y ? a.setAttributeNS(y, u, h) : a.setAttribute(u, h))));
  }
  var T = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
    M = Symbol.for("react.element"),
    L = Symbol.for("react.portal"),
    O = Symbol.for("react.fragment"),
    U = Symbol.for("react.strict_mode"),
    D = Symbol.for("react.profiler"),
    H = Symbol.for("react.provider"),
    $ = Symbol.for("react.context"),
    F = Symbol.for("react.forward_ref"),
    B = Symbol.for("react.suspense"),
    j = Symbol.for("react.suspense_list"),
    G = Symbol.for("react.memo"),
    u1 = Symbol.for("react.lazy"),
    e1 = Symbol.for("react.offscreen"),
    i1 = Symbol.iterator;
  function Z(a) {
    return a === null || typeof a != "object"
      ? null
      : ((a = (i1 && a[i1]) || a["@@iterator"]),
        typeof a == "function" ? a : null);
  }
  var b1 = Object.assign,
    o1;
  function k1(a) {
    if (o1 === void 0)
      try {
        throw Error();
      } catch (h) {
        var u = h.stack.trim().match(/\n( *(at )?)/);
        o1 = (u && u[1]) || "";
      }
    return (
      `
` +
      o1 +
      a
    );
  }
  var Y1 = !1;
  function G1(a, u) {
    if (!a || Y1) return "";
    Y1 = !0;
    var h = Error.prepareStackTrace;
    Error.prepareStackTrace = void 0;
    try {
      if (u)
        if (
          ((u = function () {
            throw Error();
          }),
          Object.defineProperty(u.prototype, "props", {
            set: function () {
              throw Error();
            },
          }),
          typeof Reflect == "object" && Reflect.construct)
        ) {
          try {
            Reflect.construct(u, []);
          } catch (O1) {
            var y = O1;
          }
          Reflect.construct(a, [], u);
        } else {
          try {
            u.call();
          } catch (O1) {
            y = O1;
          }
          a.call(u.prototype);
        }
      else {
        try {
          throw Error();
        } catch (O1) {
          y = O1;
        }
        a();
      }
    } catch (O1) {
      if (O1 && y && typeof O1.stack == "string") {
        for (
          var S = O1.stack.split(`
`),
            I = y.stack.split(`
`),
            Y = S.length - 1,
            f1 = I.length - 1;
          1 <= Y && 0 <= f1 && S[Y] !== I[f1];

        )
          f1--;
        for (; 1 <= Y && 0 <= f1; Y--, f1--)
          if (S[Y] !== I[f1]) {
            if (Y !== 1 || f1 !== 1)
              do
                if ((Y--, f1--, 0 > f1 || S[Y] !== I[f1])) {
                  var x1 =
                    `
` + S[Y].replace(" at new ", " at ");
                  return (
                    a.displayName &&
                      x1.includes("<anonymous>") &&
                      (x1 = x1.replace("<anonymous>", a.displayName)),
                    x1
                  );
                }
              while (1 <= Y && 0 <= f1);
            break;
          }
      }
    } finally {
      (Y1 = !1), (Error.prepareStackTrace = h);
    }
    return (a = a ? a.displayName || a.name : "") ? k1(a) : "";
  }
  function M1(a) {
    switch (a.tag) {
      case 5:
        return k1(a.type);
      case 16:
        return k1("Lazy");
      case 13:
        return k1("Suspense");
      case 19:
        return k1("SuspenseList");
      case 0:
      case 2:
      case 15:
        return (a = G1(a.type, !1)), a;
      case 11:
        return (a = G1(a.type.render, !1)), a;
      case 1:
        return (a = G1(a.type, !0)), a;
      default:
        return "";
    }
  }
  function Q1(a) {
    if (a == null) return null;
    if (typeof a == "function") return a.displayName || a.name || null;
    if (typeof a == "string") return a;
    switch (a) {
      case O:
        return "Fragment";
      case L:
        return "Portal";
      case D:
        return "Profiler";
      case U:
        return "StrictMode";
      case B:
        return "Suspense";
      case j:
        return "SuspenseList";
    }
    if (typeof a == "object")
      switch (a.$$typeof) {
        case $:
          return (a.displayName || "Context") + ".Consumer";
        case H:
          return (a._context.displayName || "Context") + ".Provider";
        case F:
          var u = a.render;
          return (
            (a = a.displayName),
            a ||
              ((a = u.displayName || u.name || ""),
              (a = a !== "" ? "ForwardRef(" + a + ")" : "ForwardRef")),
            a
          );
        case G:
          return (
            (u = a.displayName || null), u !== null ? u : Q1(a.type) || "Memo"
          );
        case u1:
          (u = a._payload), (a = a._init);
          try {
            return Q1(a(u));
          } catch {}
      }
    return null;
  }
  function re(a) {
    var u = a.type;
    switch (a.tag) {
      case 24:
        return "Cache";
      case 9:
        return (u.displayName || "Context") + ".Consumer";
      case 10:
        return (u._context.displayName || "Context") + ".Provider";
      case 18:
        return "DehydratedFragment";
      case 11:
        return (
          (a = u.render),
          (a = a.displayName || a.name || ""),
          u.displayName || (a !== "" ? "ForwardRef(" + a + ")" : "ForwardRef")
        );
      case 7:
        return "Fragment";
      case 5:
        return u;
      case 4:
        return "Portal";
      case 3:
        return "Root";
      case 6:
        return "Text";
      case 16:
        return Q1(u);
      case 8:
        return u === U ? "StrictMode" : "Mode";
      case 22:
        return "Offscreen";
      case 12:
        return "Profiler";
      case 21:
        return "Scope";
      case 13:
        return "Suspense";
      case 19:
        return "SuspenseList";
      case 25:
        return "TracingMarker";
      case 1:
      case 0:
      case 17:
      case 2:
      case 14:
      case 15:
        if (typeof u == "function") return u.displayName || u.name || null;
        if (typeof u == "string") return u;
    }
    return null;
  }
  function d1(a) {
    switch (typeof a) {
      case "boolean":
      case "number":
      case "string":
      case "undefined":
        return a;
      case "object":
        return a;
      default:
        return "";
    }
  }
  function h1(a) {
    var u = a.type;
    return (
      (a = a.nodeName) &&
      a.toLowerCase() === "input" &&
      (u === "checkbox" || u === "radio")
    );
  }
  function y1(a) {
    var u = h1(a) ? "checked" : "value",
      h = Object.getOwnPropertyDescriptor(a.constructor.prototype, u),
      y = "" + a[u];
    if (
      !a.hasOwnProperty(u) &&
      typeof h < "u" &&
      typeof h.get == "function" &&
      typeof h.set == "function"
    ) {
      var S = h.get,
        I = h.set;
      return (
        Object.defineProperty(a, u, {
          configurable: !0,
          get: function () {
            return S.call(this);
          },
          set: function (Y) {
            (y = "" + Y), I.call(this, Y);
          },
        }),
        Object.defineProperty(a, u, { enumerable: h.enumerable }),
        {
          getValue: function () {
            return y;
          },
          setValue: function (Y) {
            y = "" + Y;
          },
          stopTracking: function () {
            (a._valueTracker = null), delete a[u];
          },
        }
      );
    }
  }
  function A1(a) {
    a._valueTracker || (a._valueTracker = y1(a));
  }
  function L1(a) {
    if (!a) return !1;
    var u = a._valueTracker;
    if (!u) return !0;
    var h = u.getValue(),
      y = "";
    return (
      a && (y = h1(a) ? (a.checked ? "true" : "false") : a.value),
      (a = y),
      a !== h ? (u.setValue(a), !0) : !1
    );
  }
  function V1(a) {
    if (
      ((a = a || (typeof document < "u" ? document : void 0)), typeof a > "u")
    )
      return null;
    try {
      return a.activeElement || a.body;
    } catch {
      return a.body;
    }
  }
  function ie(a, u) {
    var h = u.checked;
    return b1({}, u, {
      defaultChecked: void 0,
      defaultValue: void 0,
      value: void 0,
      checked: h ?? a._wrapperState.initialChecked,
    });
  }
  function ae(a, u) {
    var h = u.defaultValue == null ? "" : u.defaultValue,
      y = u.checked != null ? u.checked : u.defaultChecked;
    (h = d1(u.value != null ? u.value : h)),
      (a._wrapperState = {
        initialChecked: y,
        initialValue: h,
        controlled:
          u.type === "checkbox" || u.type === "radio"
            ? u.checked != null
            : u.value != null,
      });
  }
  function Be(a, u) {
    (u = u.checked), u != null && _(a, "checked", u, !1);
  }
  function Ve(a, u) {
    Be(a, u);
    var h = d1(u.value),
      y = u.type;
    if (h != null)
      y === "number"
        ? ((h === 0 && a.value === "") || a.value != h) && (a.value = "" + h)
        : a.value !== "" + h && (a.value = "" + h);
    else if (y === "submit" || y === "reset") {
      a.removeAttribute("value");
      return;
    }
    u.hasOwnProperty("value")
      ? gt(a, u.type, h)
      : u.hasOwnProperty("defaultValue") && gt(a, u.type, d1(u.defaultValue)),
      u.checked == null &&
        u.defaultChecked != null &&
        (a.defaultChecked = !!u.defaultChecked);
  }
  function ce(a, u, h) {
    if (u.hasOwnProperty("value") || u.hasOwnProperty("defaultValue")) {
      var y = u.type;
      if (
        !(
          (y !== "submit" && y !== "reset") ||
          (u.value !== void 0 && u.value !== null)
        )
      )
        return;
      (u = "" + a._wrapperState.initialValue),
        h || u === a.value || (a.value = u),
        (a.defaultValue = u);
    }
    (h = a.name),
      h !== "" && (a.name = ""),
      (a.defaultChecked = !!a._wrapperState.initialChecked),
      h !== "" && (a.name = h);
  }
  function gt(a, u, h) {
    (u !== "number" || V1(a.ownerDocument) !== a) &&
      (h == null
        ? (a.defaultValue = "" + a._wrapperState.initialValue)
        : a.defaultValue !== "" + h && (a.defaultValue = "" + h));
  }
  var qe = Array.isArray;
  function je(a, u, h, y) {
    if (((a = a.options), u)) {
      u = {};
      for (var S = 0; S < h.length; S++) u["$" + h[S]] = !0;
      for (h = 0; h < a.length; h++)
        (S = u.hasOwnProperty("$" + a[h].value)),
          a[h].selected !== S && (a[h].selected = S),
          S && y && (a[h].defaultSelected = !0);
    } else {
      for (h = "" + d1(h), u = null, S = 0; S < a.length; S++) {
        if (a[S].value === h) {
          (a[S].selected = !0), y && (a[S].defaultSelected = !0);
          return;
        }
        u !== null || a[S].disabled || (u = a[S]);
      }
      u !== null && (u.selected = !0);
    }
  }
  function g1(a, u) {
    if (u.dangerouslySetInnerHTML != null) throw Error(n(91));
    return b1({}, u, {
      value: void 0,
      defaultValue: void 0,
      children: "" + a._wrapperState.initialValue,
    });
  }
  function E1(a, u) {
    var h = u.value;
    if (h == null) {
      if (((h = u.children), (u = u.defaultValue), h != null)) {
        if (u != null) throw Error(n(92));
        if (qe(h)) {
          if (1 < h.length) throw Error(n(93));
          h = h[0];
        }
        u = h;
      }
      u == null && (u = ""), (h = u);
    }
    a._wrapperState = { initialValue: d1(h) };
  }
  function j1(a, u) {
    var h = d1(u.value),
      y = d1(u.defaultValue);
    h != null &&
      ((h = "" + h),
      h !== a.value && (a.value = h),
      u.defaultValue == null && a.defaultValue !== h && (a.defaultValue = h)),
      y != null && (a.defaultValue = "" + y);
  }
  function a1(a) {
    var u = a.textContent;
    u === a._wrapperState.initialValue &&
      u !== "" &&
      u !== null &&
      (a.value = u);
  }
  function K(a) {
    switch (a) {
      case "svg":
        return "http://www.w3.org/2000/svg";
      case "math":
        return "http://www.w3.org/1998/Math/MathML";
      default:
        return "http://www.w3.org/1999/xhtml";
    }
  }
  function t1(a, u) {
    return a == null || a === "http://www.w3.org/1999/xhtml"
      ? K(u)
      : a === "http://www.w3.org/2000/svg" && u === "foreignObject"
      ? "http://www.w3.org/1999/xhtml"
      : a;
  }
  var r1,
    m1 = (function (a) {
      return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction
        ? function (u, h, y, S) {
            MSApp.execUnsafeLocalFunction(function () {
              return a(u, h, y, S);
            });
          }
        : a;
    })(function (a, u) {
      if (a.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in a)
        a.innerHTML = u;
      else {
        for (
          r1 = r1 || document.createElement("div"),
            r1.innerHTML = "<svg>" + u.valueOf().toString() + "</svg>",
            u = r1.firstChild;
          a.firstChild;

        )
          a.removeChild(a.firstChild);
        for (; u.firstChild; ) a.appendChild(u.firstChild);
      }
    });
  function R(a, u) {
    if (u) {
      var h = a.firstChild;
      if (h && h === a.lastChild && h.nodeType === 3) {
        h.nodeValue = u;
        return;
      }
    }
    a.textContent = u;
  }
  var C = {
      animationIterationCount: !0,
      aspectRatio: !0,
      borderImageOutset: !0,
      borderImageSlice: !0,
      borderImageWidth: !0,
      boxFlex: !0,
      boxFlexGroup: !0,
      boxOrdinalGroup: !0,
      columnCount: !0,
      columns: !0,
      flex: !0,
      flexGrow: !0,
      flexPositive: !0,
      flexShrink: !0,
      flexNegative: !0,
      flexOrder: !0,
      gridArea: !0,
      gridRow: !0,
      gridRowEnd: !0,
      gridRowSpan: !0,
      gridRowStart: !0,
      gridColumn: !0,
      gridColumnEnd: !0,
      gridColumnSpan: !0,
      gridColumnStart: !0,
      fontWeight: !0,
      lineClamp: !0,
      lineHeight: !0,
      opacity: !0,
      order: !0,
      orphans: !0,
      tabSize: !0,
      widows: !0,
      zIndex: !0,
      zoom: !0,
      fillOpacity: !0,
      floodOpacity: !0,
      stopOpacity: !0,
      strokeDasharray: !0,
      strokeDashoffset: !0,
      strokeMiterlimit: !0,
      strokeOpacity: !0,
      strokeWidth: !0,
    },
    k = ["Webkit", "ms", "Moz", "O"];
  Object.keys(C).forEach(function (a) {
    k.forEach(function (u) {
      (u = u + a.charAt(0).toUpperCase() + a.substring(1)), (C[u] = C[a]);
    });
  });
  function q(a, u, h) {
    return u == null || typeof u == "boolean" || u === ""
      ? ""
      : h || typeof u != "number" || u === 0 || (C.hasOwnProperty(a) && C[a])
      ? ("" + u).trim()
      : u + "px";
  }
  function s1(a, u) {
    a = a.style;
    for (var h in u)
      if (u.hasOwnProperty(h)) {
        var y = h.indexOf("--") === 0,
          S = q(h, u[h], y);
        h === "float" && (h = "cssFloat"), y ? a.setProperty(h, S) : (a[h] = S);
      }
  }
  var v1 = b1(
    { menuitem: !0 },
    {
      area: !0,
      base: !0,
      br: !0,
      col: !0,
      embed: !0,
      hr: !0,
      img: !0,
      input: !0,
      keygen: !0,
      link: !0,
      meta: !0,
      param: !0,
      source: !0,
      track: !0,
      wbr: !0,
    }
  );
  function w1(a, u) {
    if (u) {
      if (v1[a] && (u.children != null || u.dangerouslySetInnerHTML != null))
        throw Error(n(137, a));
      if (u.dangerouslySetInnerHTML != null) {
        if (u.children != null) throw Error(n(60));
        if (
          typeof u.dangerouslySetInnerHTML != "object" ||
          !("__html" in u.dangerouslySetInnerHTML)
        )
          throw Error(n(61));
      }
      if (u.style != null && typeof u.style != "object") throw Error(n(62));
    }
  }
  function $1(a, u) {
    if (a.indexOf("-") === -1) return typeof u.is == "string";
    switch (a) {
      case "annotation-xml":
      case "color-profile":
      case "font-face":
      case "font-face-src":
      case "font-face-uri":
      case "font-face-format":
      case "font-face-name":
      case "missing-glyph":
        return !1;
      default:
        return !0;
    }
  }
  var he = null;
  function U1(a) {
    return (
      (a = a.target || a.srcElement || window),
      a.correspondingUseElement && (a = a.correspondingUseElement),
      a.nodeType === 3 ? a.parentNode : a
    );
  }
  var Le = null,
    pe = null,
    bt = null;
  function It(a) {
    if ((a = X3(a))) {
      if (typeof Le != "function") throw Error(n(280));
      var u = a.stateNode;
      u && ((u = zu(u)), Le(a.stateNode, a.type, u));
    }
  }
  function en(a) {
    pe ? (bt ? bt.push(a) : (bt = [a])) : (pe = a);
  }
  function At() {
    if (pe) {
      var a = pe,
        u = bt;
      if (((bt = pe = null), It(a), u)) for (a = 0; a < u.length; a++) It(u[a]);
    }
  }
  function hn(a, u) {
    return a(u);
  }
  function si() {}
  var Ht = !1;
  function Lr(a, u, h) {
    if (Ht) return a(u, h);
    Ht = !0;
    try {
      return hn(a, u, h);
    } finally {
      (Ht = !1), (pe !== null || bt !== null) && (si(), At());
    }
  }
  function xr(a, u) {
    var h = a.stateNode;
    if (h === null) return null;
    var y = zu(h);
    if (y === null) return null;
    h = y[u];
    e: switch (u) {
      case "onClick":
      case "onClickCapture":
      case "onDoubleClick":
      case "onDoubleClickCapture":
      case "onMouseDown":
      case "onMouseDownCapture":
      case "onMouseMove":
      case "onMouseMoveCapture":
      case "onMouseUp":
      case "onMouseUpCapture":
      case "onMouseEnter":
        (y = !y.disabled) ||
          ((a = a.type),
          (y = !(
            a === "button" ||
            a === "input" ||
            a === "select" ||
            a === "textarea"
          ))),
          (a = !y);
        break e;
      default:
        a = !1;
    }
    if (a) return null;
    if (h && typeof h != "function") throw Error(n(231, u, typeof h));
    return h;
  }
  var on = !1;
  if (l)
    try {
      var oi = {};
      Object.defineProperty(oi, "passive", {
        get: function () {
          on = !0;
        },
      }),
        window.addEventListener("test", oi, oi),
        window.removeEventListener("test", oi, oi);
    } catch {
      on = !1;
    }
  function V(a, u, h, y, S, I, Y, f1, x1) {
    var O1 = Array.prototype.slice.call(arguments, 3);
    try {
      u.apply(h, O1);
    } catch (ee) {
      this.onError(ee);
    }
  }
  var X = !1,
    Q = null,
    A = !1,
    n1 = null,
    _1 = {
      onError: function (a) {
        (X = !0), (Q = a);
      },
    };
  function T1(a, u, h, y, S, I, Y, f1, x1) {
    (X = !1), (Q = null), V.apply(_1, arguments);
  }
  function W1(a, u, h, y, S, I, Y, f1, x1) {
    if ((T1.apply(this, arguments), X)) {
      if (X) {
        var O1 = Q;
        (X = !1), (Q = null);
      } else throw Error(n(198));
      A || ((A = !0), (n1 = O1));
    }
  }
  function X1(a) {
    var u = a,
      h = a;
    if (a.alternate) for (; u.return; ) u = u.return;
    else {
      a = u;
      do (u = a), (u.flags & 4098) !== 0 && (h = u.return), (a = u.return);
      while (a);
    }
    return u.tag === 3 ? h : null;
  }
  function Me(a) {
    if (a.tag === 13) {
      var u = a.memoizedState;
      if (
        (u === null && ((a = a.alternate), a !== null && (u = a.memoizedState)),
        u !== null)
      )
        return u.dehydrated;
    }
    return null;
  }
  function de(a) {
    if (X1(a) !== a) throw Error(n(188));
  }
  function St(a) {
    var u = a.alternate;
    if (!u) {
      if (((u = X1(a)), u === null)) throw Error(n(188));
      return u !== a ? null : a;
    }
    for (var h = a, y = u; ; ) {
      var S = h.return;
      if (S === null) break;
      var I = S.alternate;
      if (I === null) {
        if (((y = S.return), y !== null)) {
          h = y;
          continue;
        }
        break;
      }
      if (S.child === I.child) {
        for (I = S.child; I; ) {
          if (I === h) return de(S), a;
          if (I === y) return de(S), u;
          I = I.sibling;
        }
        throw Error(n(188));
      }
      if (h.return !== y.return) (h = S), (y = I);
      else {
        for (var Y = !1, f1 = S.child; f1; ) {
          if (f1 === h) {
            (Y = !0), (h = S), (y = I);
            break;
          }
          if (f1 === y) {
            (Y = !0), (y = S), (h = I);
            break;
          }
          f1 = f1.sibling;
        }
        if (!Y) {
          for (f1 = I.child; f1; ) {
            if (f1 === h) {
              (Y = !0), (h = I), (y = S);
              break;
            }
            if (f1 === y) {
              (Y = !0), (y = I), (h = S);
              break;
            }
            f1 = f1.sibling;
          }
          if (!Y) throw Error(n(189));
        }
      }
      if (h.alternate !== y) throw Error(n(190));
    }
    if (h.tag !== 3) throw Error(n(188));
    return h.stateNode.current === h ? a : u;
  }
  function ye(a) {
    return (a = St(a)), a !== null ? Ge(a) : null;
  }
  function Ge(a) {
    if (a.tag === 5 || a.tag === 6) return a;
    for (a = a.child; a !== null; ) {
      var u = Ge(a);
      if (u !== null) return u;
      a = a.sibling;
    }
    return null;
  }
  var Xe = t.unstable_scheduleCallback,
    at = t.unstable_cancelCallback,
    ut = t.unstable_shouldYield,
    tt = t.unstable_requestPaint,
    Ce = t.unstable_now,
    nt = t.unstable_getCurrentPriorityLevel,
    ve = t.unstable_ImmediatePriority,
    Ne = t.unstable_UserBlockingPriority,
    fe = t.unstable_NormalPriority,
    we = t.unstable_LowPriority,
    Te = t.unstable_IdlePriority,
    le = null,
    I1 = null;
  function N1(a) {
    if (I1 && typeof I1.onCommitFiberRoot == "function")
      try {
        I1.onCommitFiberRoot(le, a, void 0, (a.current.flags & 128) === 128);
      } catch {}
  }
  var H1 = Math.clz32 ? Math.clz32 : J1,
    z1 = Math.log,
    q1 = Math.LN2;
  function J1(a) {
    return (a >>>= 0), a === 0 ? 32 : (31 - ((z1(a) / q1) | 0)) | 0;
  }
  var De = 64,
    Je = 4194304;
  function ot(a) {
    switch (a & -a) {
      case 1:
        return 1;
      case 2:
        return 2;
      case 4:
        return 4;
      case 8:
        return 8;
      case 16:
        return 16;
      case 32:
        return 32;
      case 64:
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return a & 4194240;
      case 4194304:
      case 8388608:
      case 16777216:
      case 33554432:
      case 67108864:
        return a & 130023424;
      case 134217728:
        return 134217728;
      case 268435456:
        return 268435456;
      case 536870912:
        return 536870912;
      case 1073741824:
        return 1073741824;
      default:
        return a;
    }
  }
  function rt(a, u) {
    var h = a.pendingLanes;
    if (h === 0) return 0;
    var y = 0,
      S = a.suspendedLanes,
      I = a.pingedLanes,
      Y = h & 268435455;
    if (Y !== 0) {
      var f1 = Y & ~S;
      f1 !== 0 ? (y = ot(f1)) : ((I &= Y), I !== 0 && (y = ot(I)));
    } else (Y = h & ~S), Y !== 0 ? (y = ot(Y)) : I !== 0 && (y = ot(I));
    if (y === 0) return 0;
    if (
      u !== 0 &&
      u !== y &&
      (u & S) === 0 &&
      ((S = y & -y), (I = u & -u), S >= I || (S === 16 && (I & 4194240) !== 0))
    )
      return u;
    if (((y & 4) !== 0 && (y |= h & 16), (u = a.entangledLanes), u !== 0))
      for (a = a.entanglements, u &= y; 0 < u; )
        (h = 31 - H1(u)), (S = 1 << h), (y |= a[h]), (u &= ~S);
    return y;
  }
  function p1(a, u) {
    switch (a) {
      case 1:
      case 2:
      case 4:
        return u + 250;
      case 8:
      case 16:
      case 32:
      case 64:
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return u + 5e3;
      case 4194304:
      case 8388608:
      case 16777216:
      case 33554432:
      case 67108864:
        return -1;
      case 134217728:
      case 268435456:
      case 536870912:
      case 1073741824:
        return -1;
      default:
        return -1;
    }
  }
  function ft(a, u) {
    for (
      var h = a.suspendedLanes,
        y = a.pingedLanes,
        S = a.expirationTimes,
        I = a.pendingLanes;
      0 < I;

    ) {
      var Y = 31 - H1(I),
        f1 = 1 << Y,
        x1 = S[Y];
      x1 === -1
        ? ((f1 & h) === 0 || (f1 & y) !== 0) && (S[Y] = p1(f1, u))
        : x1 <= u && (a.expiredLanes |= f1),
        (I &= ~f1);
    }
  }
  function Et(a) {
    return (
      (a = a.pendingLanes & -1073741825),
      a !== 0 ? a : a & 1073741824 ? 1073741824 : 0
    );
  }
  function $e() {
    var a = De;
    return (De <<= 1), (De & 4194240) === 0 && (De = 64), a;
  }
  function lt(a) {
    for (var u = [], h = 0; 31 > h; h++) u.push(a);
    return u;
  }
  function mt(a, u, h) {
    (a.pendingLanes |= u),
      u !== 536870912 && ((a.suspendedLanes = 0), (a.pingedLanes = 0)),
      (a = a.eventTimes),
      (u = 31 - H1(u)),
      (a[u] = h);
  }
  function ht(a, u) {
    var h = a.pendingLanes & ~u;
    (a.pendingLanes = u),
      (a.suspendedLanes = 0),
      (a.pingedLanes = 0),
      (a.expiredLanes &= u),
      (a.mutableReadLanes &= u),
      (a.entangledLanes &= u),
      (u = a.entanglements);
    var y = a.eventTimes;
    for (a = a.expirationTimes; 0 < h; ) {
      var S = 31 - H1(h),
        I = 1 << S;
      (u[S] = 0), (y[S] = -1), (a[S] = -1), (h &= ~I);
    }
  }
  function qt(a, u) {
    var h = (a.entangledLanes |= u);
    for (a = a.entanglements; h; ) {
      var y = 31 - H1(h),
        S = 1 << y;
      (S & u) | (a[y] & u) && (a[y] |= u), (h &= ~S);
    }
  }
  var be = 0;
  function Pt(a) {
    return (
      (a &= -a),
      1 < a ? (4 < a ? ((a & 268435455) !== 0 ? 16 : 536870912) : 4) : 1
    );
  }
  var Mt,
    Kt,
    an,
    En,
    kn,
    bn = !1,
    ga = [],
    zi = null,
    Hi = null,
    qi = null,
    Ki = new Map(),
    ls = new Map(),
    W = [],
    z =
      "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(
        " "
      );
  function l1(a, u) {
    switch (a) {
      case "focusin":
      case "focusout":
        zi = null;
        break;
      case "dragenter":
      case "dragleave":
        Hi = null;
        break;
      case "mouseover":
      case "mouseout":
        qi = null;
        break;
      case "pointerover":
      case "pointerout":
        Ki.delete(u.pointerId);
        break;
      case "gotpointercapture":
      case "lostpointercapture":
        ls.delete(u.pointerId);
    }
  }
  function c1(a, u, h, y, S, I) {
    return a === null || a.nativeEvent !== I
      ? ((a = {
          blockedOn: u,
          domEventName: h,
          eventSystemFlags: y,
          nativeEvent: I,
          targetContainers: [S],
        }),
        u !== null && ((u = X3(u)), u !== null && Kt(u)),
        a)
      : ((a.eventSystemFlags |= y),
        (u = a.targetContainers),
        S !== null && u.indexOf(S) === -1 && u.push(S),
        a);
  }
  function S1(a, u, h, y, S) {
    switch (u) {
      case "focusin":
        return (zi = c1(zi, a, u, h, y, S)), !0;
      case "dragenter":
        return (Hi = c1(Hi, a, u, h, y, S)), !0;
      case "mouseover":
        return (qi = c1(qi, a, u, h, y, S)), !0;
      case "pointerover":
        var I = S.pointerId;
        return Ki.set(I, c1(Ki.get(I) || null, a, u, h, y, S)), !0;
      case "gotpointercapture":
        return (
          (I = S.pointerId), ls.set(I, c1(ls.get(I) || null, a, u, h, y, S)), !0
        );
    }
    return !1;
  }
  function B1(a) {
    var u = to(a.target);
    if (u !== null) {
      var h = X1(u);
      if (h !== null) {
        if (((u = h.tag), u === 13)) {
          if (((u = Me(h)), u !== null)) {
            (a.blockedOn = u),
              kn(a.priority, function () {
                an(h);
              });
            return;
          }
        } else if (u === 3 && h.stateNode.current.memoizedState.isDehydrated) {
          a.blockedOn = h.tag === 3 ? h.stateNode.containerInfo : null;
          return;
        }
      }
    }
    a.blockedOn = null;
  }
  function te(a) {
    if (a.blockedOn !== null) return !1;
    for (var u = a.targetContainers; 0 < u.length; ) {
      var h = C2(a.domEventName, a.eventSystemFlags, u[0], a.nativeEvent);
      if (h === null) {
        h = a.nativeEvent;
        var y = new h.constructor(h.type, h);
        (he = y), h.target.dispatchEvent(y), (he = null);
      } else return (u = X3(h)), u !== null && Kt(u), (a.blockedOn = h), !1;
      u.shift();
    }
    return !0;
  }
  function K1(a, u, h) {
    te(a) && h.delete(u);
  }
  function Pe() {
    (bn = !1),
      zi !== null && te(zi) && (zi = null),
      Hi !== null && te(Hi) && (Hi = null),
      qi !== null && te(qi) && (qi = null),
      Ki.forEach(K1),
      ls.forEach(K1);
  }
  function _e(a, u) {
    a.blockedOn === u &&
      ((a.blockedOn = null),
      bn ||
        ((bn = !0),
        t.unstable_scheduleCallback(t.unstable_NormalPriority, Pe)));
  }
  function Ue(a) {
    function u(S) {
      return _e(S, a);
    }
    if (0 < ga.length) {
      _e(ga[0], a);
      for (var h = 1; h < ga.length; h++) {
        var y = ga[h];
        y.blockedOn === a && (y.blockedOn = null);
      }
    }
    for (
      zi !== null && _e(zi, a),
        Hi !== null && _e(Hi, a),
        qi !== null && _e(qi, a),
        Ki.forEach(u),
        ls.forEach(u),
        h = 0;
      h < W.length;
      h++
    )
      (y = W[h]), y.blockedOn === a && (y.blockedOn = null);
    for (; 0 < W.length && ((h = W[0]), h.blockedOn === null); )
      B1(h), h.blockedOn === null && W.shift();
  }
  var kt = T.ReactCurrentBatchConfig,
    Ot = !0;
  function Cr(a, u, h, y) {
    var S = be,
      I = kt.transition;
    kt.transition = null;
    try {
      (be = 1), ln(a, u, h, y);
    } finally {
      (be = S), (kt.transition = I);
    }
  }
  function pn(a, u, h, y) {
    var S = be,
      I = kt.transition;
    kt.transition = null;
    try {
      (be = 4), ln(a, u, h, y);
    } finally {
      (be = S), (kt.transition = I);
    }
  }
  function ln(a, u, h, y) {
    if (Ot) {
      var S = C2(a, u, h, y);
      if (S === null) If(a, u, y, ar, h), l1(a, y);
      else if (S1(S, a, u, h, y)) y.stopPropagation();
      else if ((l1(a, y), u & 4 && -1 < z.indexOf(a))) {
        for (; S !== null; ) {
          var I = X3(S);
          if (
            (I !== null && Mt(I),
            (I = C2(a, u, h, y)),
            I === null && If(a, u, y, ar, h),
            I === S)
          )
            break;
          S = I;
        }
        S !== null && y.stopPropagation();
      } else If(a, u, y, null, h);
    }
  }
  var ar = null;
  function C2(a, u, h, y) {
    if (((ar = null), (a = U1(y)), (a = to(a)), a !== null))
      if (((u = X1(a)), u === null)) a = null;
      else if (((h = u.tag), h === 13)) {
        if (((a = Me(u)), a !== null)) return a;
        a = null;
      } else if (h === 3) {
        if (u.stateNode.current.memoizedState.isDehydrated)
          return u.tag === 3 ? u.stateNode.containerInfo : null;
        a = null;
      } else u !== a && (a = null);
    return (ar = a), null;
  }
  function lr(a) {
    switch (a) {
      case "cancel":
      case "click":
      case "close":
      case "contextmenu":
      case "copy":
      case "cut":
      case "auxclick":
      case "dblclick":
      case "dragend":
      case "dragstart":
      case "drop":
      case "focusin":
      case "focusout":
      case "input":
      case "invalid":
      case "keydown":
      case "keypress":
      case "keyup":
      case "mousedown":
      case "mouseup":
      case "paste":
      case "pause":
      case "play":
      case "pointercancel":
      case "pointerdown":
      case "pointerup":
      case "ratechange":
      case "reset":
      case "resize":
      case "seeked":
      case "submit":
      case "touchcancel":
      case "touchend":
      case "touchstart":
      case "volumechange":
      case "change":
      case "selectionchange":
      case "textInput":
      case "compositionstart":
      case "compositionend":
      case "compositionupdate":
      case "beforeblur":
      case "afterblur":
      case "beforeinput":
      case "blur":
      case "fullscreenchange":
      case "focus":
      case "hashchange":
      case "popstate":
      case "select":
      case "selectstart":
        return 1;
      case "drag":
      case "dragenter":
      case "dragexit":
      case "dragleave":
      case "dragover":
      case "mousemove":
      case "mouseout":
      case "mouseover":
      case "pointermove":
      case "pointerout":
      case "pointerover":
      case "scroll":
      case "toggle":
      case "touchmove":
      case "wheel":
      case "mouseenter":
      case "mouseleave":
      case "pointerenter":
      case "pointerleave":
        return 4;
      case "message":
        switch (nt()) {
          case ve:
            return 1;
          case Ne:
            return 4;
          case fe:
          case we:
            return 16;
          case Te:
            return 536870912;
          default:
            return 16;
        }
      default:
        return 16;
    }
  }
  var Ir = null,
    Js = null,
    eo = null;
  function Hm() {
    if (eo) return eo;
    var a,
      u = Js,
      h = u.length,
      y,
      S = "value" in Ir ? Ir.value : Ir.textContent,
      I = S.length;
    for (a = 0; a < h && u[a] === S[a]; a++);
    var Y = h - a;
    for (y = 1; y <= Y && u[h - y] === S[I - y]; y++);
    return (eo = S.slice(a, 1 < y ? 1 - y : void 0));
  }
  function ju(a) {
    var u = a.keyCode;
    return (
      "charCode" in a
        ? ((a = a.charCode), a === 0 && u === 13 && (a = 13))
        : (a = u),
      a === 10 && (a = 13),
      32 <= a || a === 13 ? a : 0
    );
  }
  function Nu() {
    return !0;
  }
  function qm() {
    return !1;
  }
  function Kr(a) {
    function u(h, y, S, I, Y) {
      (this._reactName = h),
        (this._targetInst = S),
        (this.type = y),
        (this.nativeEvent = I),
        (this.target = Y),
        (this.currentTarget = null);
      for (var f1 in a)
        a.hasOwnProperty(f1) && ((h = a[f1]), (this[f1] = h ? h(I) : I[f1]));
      return (
        (this.isDefaultPrevented = (
          I.defaultPrevented != null ? I.defaultPrevented : I.returnValue === !1
        )
          ? Nu
          : qm),
        (this.isPropagationStopped = qm),
        this
      );
    }
    return (
      b1(u.prototype, {
        preventDefault: function () {
          this.defaultPrevented = !0;
          var h = this.nativeEvent;
          h &&
            (h.preventDefault
              ? h.preventDefault()
              : typeof h.returnValue != "unknown" && (h.returnValue = !1),
            (this.isDefaultPrevented = Nu));
        },
        stopPropagation: function () {
          var h = this.nativeEvent;
          h &&
            (h.stopPropagation
              ? h.stopPropagation()
              : typeof h.cancelBubble != "unknown" && (h.cancelBubble = !0),
            (this.isPropagationStopped = Nu));
        },
        persist: function () {},
        isPersistent: Nu,
      }),
      u
    );
  }
  var ya = {
      eventPhase: 0,
      bubbles: 0,
      cancelable: 0,
      timeStamp: function (a) {
        return a.timeStamp || Date.now();
      },
      defaultPrevented: 0,
      isTrusted: 0,
    },
    vf = Kr(ya),
    $3 = b1({}, ya, { view: 0, detail: 0 }),
    _T = Kr($3),
    wf,
    bf,
    V3,
    Ou = b1({}, $3, {
      screenX: 0,
      screenY: 0,
      clientX: 0,
      clientY: 0,
      pageX: 0,
      pageY: 0,
      ctrlKey: 0,
      shiftKey: 0,
      altKey: 0,
      metaKey: 0,
      getModifierState: Cf,
      button: 0,
      buttons: 0,
      relatedTarget: function (a) {
        return a.relatedTarget === void 0
          ? a.fromElement === a.srcElement
            ? a.toElement
            : a.fromElement
          : a.relatedTarget;
      },
      movementX: function (a) {
        return "movementX" in a
          ? a.movementX
          : (a !== V3 &&
              (V3 && a.type === "mousemove"
                ? ((wf = a.screenX - V3.screenX), (bf = a.screenY - V3.screenY))
                : (bf = wf = 0),
              (V3 = a)),
            wf);
      },
      movementY: function (a) {
        return "movementY" in a ? a.movementY : bf;
      },
    }),
    Km = Kr(Ou),
    AT = b1({}, Ou, { dataTransfer: 0 }),
    TT = Kr(AT),
    PT = b1({}, $3, { relatedTarget: 0 }),
    xf = Kr(PT),
    MT = b1({}, ya, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }),
    RT = Kr(MT),
    LT = b1({}, ya, {
      clipboardData: function (a) {
        return "clipboardData" in a ? a.clipboardData : window.clipboardData;
      },
    }),
    IT = Kr(LT),
    jT = b1({}, ya, { data: 0 }),
    Gm = Kr(jT),
    NT = {
      Esc: "Escape",
      Spacebar: " ",
      Left: "ArrowLeft",
      Up: "ArrowUp",
      Right: "ArrowRight",
      Down: "ArrowDown",
      Del: "Delete",
      Win: "OS",
      Menu: "ContextMenu",
      Apps: "ContextMenu",
      Scroll: "ScrollLock",
      MozPrintableKey: "Unidentified",
    },
    OT = {
      8: "Backspace",
      9: "Tab",
      12: "Clear",
      13: "Enter",
      16: "Shift",
      17: "Control",
      18: "Alt",
      19: "Pause",
      20: "CapsLock",
      27: "Escape",
      32: " ",
      33: "PageUp",
      34: "PageDown",
      35: "End",
      36: "Home",
      37: "ArrowLeft",
      38: "ArrowUp",
      39: "ArrowRight",
      40: "ArrowDown",
      45: "Insert",
      46: "Delete",
      112: "F1",
      113: "F2",
      114: "F3",
      115: "F4",
      116: "F5",
      117: "F6",
      118: "F7",
      119: "F8",
      120: "F9",
      121: "F10",
      122: "F11",
      123: "F12",
      144: "NumLock",
      145: "ScrollLock",
      224: "Meta",
    },
    BT = {
      Alt: "altKey",
      Control: "ctrlKey",
      Meta: "metaKey",
      Shift: "shiftKey",
    };
  function DT(a) {
    var u = this.nativeEvent;
    return u.getModifierState
      ? u.getModifierState(a)
      : (a = BT[a])
      ? !!u[a]
      : !1;
  }
  function Cf() {
    return DT;
  }
  var FT = b1({}, $3, {
      key: function (a) {
        if (a.key) {
          var u = NT[a.key] || a.key;
          if (u !== "Unidentified") return u;
        }
        return a.type === "keypress"
          ? ((a = ju(a)), a === 13 ? "Enter" : String.fromCharCode(a))
          : a.type === "keydown" || a.type === "keyup"
          ? OT[a.keyCode] || "Unidentified"
          : "";
      },
      code: 0,
      location: 0,
      ctrlKey: 0,
      shiftKey: 0,
      altKey: 0,
      metaKey: 0,
      repeat: 0,
      locale: 0,
      getModifierState: Cf,
      charCode: function (a) {
        return a.type === "keypress" ? ju(a) : 0;
      },
      keyCode: function (a) {
        return a.type === "keydown" || a.type === "keyup" ? a.keyCode : 0;
      },
      which: function (a) {
        return a.type === "keypress"
          ? ju(a)
          : a.type === "keydown" || a.type === "keyup"
          ? a.keyCode
          : 0;
      },
    }),
    UT = Kr(FT),
    $T = b1({}, Ou, {
      pointerId: 0,
      width: 0,
      height: 0,
      pressure: 0,
      tangentialPressure: 0,
      tiltX: 0,
      tiltY: 0,
      twist: 0,
      pointerType: 0,
      isPrimary: 0,
    }),
    Ym = Kr($T),
    VT = b1({}, $3, {
      touches: 0,
      targetTouches: 0,
      changedTouches: 0,
      altKey: 0,
      metaKey: 0,
      ctrlKey: 0,
      shiftKey: 0,
      getModifierState: Cf,
    }),
    WT = Kr(VT),
    zT = b1({}, ya, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }),
    HT = Kr(zT),
    qT = b1({}, Ou, {
      deltaX: function (a) {
        return "deltaX" in a
          ? a.deltaX
          : "wheelDeltaX" in a
          ? -a.wheelDeltaX
          : 0;
      },
      deltaY: function (a) {
        return "deltaY" in a
          ? a.deltaY
          : "wheelDeltaY" in a
          ? -a.wheelDeltaY
          : "wheelDelta" in a
          ? -a.wheelDelta
          : 0;
      },
      deltaZ: 0,
      deltaMode: 0,
    }),
    KT = Kr(qT),
    GT = [9, 13, 27, 32],
    Sf = l && "CompositionEvent" in window,
    W3 = null;
  l && "documentMode" in document && (W3 = document.documentMode);
  var YT = l && "TextEvent" in window && !W3,
    Qm = l && (!Sf || (W3 && 8 < W3 && 11 >= W3)),
    Zm = " ",
    Xm = !1;
  function Jm(a, u) {
    switch (a) {
      case "keyup":
        return GT.indexOf(u.keyCode) !== -1;
      case "keydown":
        return u.keyCode !== 229;
      case "keypress":
      case "mousedown":
      case "focusout":
        return !0;
      default:
        return !1;
    }
  }
  function eg(a) {
    return (a = a.detail), typeof a == "object" && "data" in a ? a.data : null;
  }
  var va = !1;
  function QT(a, u) {
    switch (a) {
      case "compositionend":
        return eg(u);
      case "keypress":
        return u.which !== 32 ? null : ((Xm = !0), Zm);
      case "textInput":
        return (a = u.data), a === Zm && Xm ? null : a;
      default:
        return null;
    }
  }
  function ZT(a, u) {
    if (va)
      return a === "compositionend" || (!Sf && Jm(a, u))
        ? ((a = Hm()), (eo = Js = Ir = null), (va = !1), a)
        : null;
    switch (a) {
      case "paste":
        return null;
      case "keypress":
        if (!(u.ctrlKey || u.altKey || u.metaKey) || (u.ctrlKey && u.altKey)) {
          if (u.char && 1 < u.char.length) return u.char;
          if (u.which) return String.fromCharCode(u.which);
        }
        return null;
      case "compositionend":
        return Qm && u.locale !== "ko" ? null : u.data;
      default:
        return null;
    }
  }
  var XT = {
    color: !0,
    date: !0,
    datetime: !0,
    "datetime-local": !0,
    email: !0,
    month: !0,
    number: !0,
    password: !0,
    range: !0,
    search: !0,
    tel: !0,
    text: !0,
    time: !0,
    url: !0,
    week: !0,
  };
  function tg(a) {
    var u = a && a.nodeName && a.nodeName.toLowerCase();
    return u === "input" ? !!XT[a.type] : u === "textarea";
  }
  function ng(a, u, h, y) {
    en(y),
      (u = $u(u, "onChange")),
      0 < u.length &&
        ((h = new vf("onChange", "change", null, h, y)),
        a.push({ event: h, listeners: u }));
  }
  var z3 = null,
    H3 = null;
  function JT(a) {
    bg(a, 0);
  }
  function Bu(a) {
    var u = Sa(a);
    if (L1(u)) return a;
  }
  function eP(a, u) {
    if (a === "change") return u;
  }
  var rg = !1;
  if (l) {
    var Ef;
    if (l) {
      var kf = "oninput" in document;
      if (!kf) {
        var ig = document.createElement("div");
        ig.setAttribute("oninput", "return;"),
          (kf = typeof ig.oninput == "function");
      }
      Ef = kf;
    } else Ef = !1;
    rg = Ef && (!document.documentMode || 9 < document.documentMode);
  }
  function sg() {
    z3 && (z3.detachEvent("onpropertychange", og), (H3 = z3 = null));
  }
  function og(a) {
    if (a.propertyName === "value" && Bu(H3)) {
      var u = [];
      ng(u, H3, a, U1(a)), Lr(JT, u);
    }
  }
  function tP(a, u, h) {
    a === "focusin"
      ? (sg(), (z3 = u), (H3 = h), z3.attachEvent("onpropertychange", og))
      : a === "focusout" && sg();
  }
  function nP(a) {
    if (a === "selectionchange" || a === "keyup" || a === "keydown")
      return Bu(H3);
  }
  function rP(a, u) {
    if (a === "click") return Bu(u);
  }
  function iP(a, u) {
    if (a === "input" || a === "change") return Bu(u);
  }
  function sP(a, u) {
    return (a === u && (a !== 0 || 1 / a === 1 / u)) || (a !== a && u !== u);
  }
  var Ci = typeof Object.is == "function" ? Object.is : sP;
  function q3(a, u) {
    if (Ci(a, u)) return !0;
    if (
      typeof a != "object" ||
      a === null ||
      typeof u != "object" ||
      u === null
    )
      return !1;
    var h = Object.keys(a),
      y = Object.keys(u);
    if (h.length !== y.length) return !1;
    for (y = 0; y < h.length; y++) {
      var S = h[y];
      if (!c.call(u, S) || !Ci(a[S], u[S])) return !1;
    }
    return !0;
  }
  function ag(a) {
    for (; a && a.firstChild; ) a = a.firstChild;
    return a;
  }
  function lg(a, u) {
    var h = ag(a);
    a = 0;
    for (var y; h; ) {
      if (h.nodeType === 3) {
        if (((y = a + h.textContent.length), a <= u && y >= u))
          return { node: h, offset: u - a };
        a = y;
      }
      e: {
        for (; h; ) {
          if (h.nextSibling) {
            h = h.nextSibling;
            break e;
          }
          h = h.parentNode;
        }
        h = void 0;
      }
      h = ag(h);
    }
  }
  function ug(a, u) {
    return a && u
      ? a === u
        ? !0
        : a && a.nodeType === 3
        ? !1
        : u && u.nodeType === 3
        ? ug(a, u.parentNode)
        : "contains" in a
        ? a.contains(u)
        : a.compareDocumentPosition
        ? !!(a.compareDocumentPosition(u) & 16)
        : !1
      : !1;
  }
  function cg() {
    for (var a = window, u = V1(); u instanceof a.HTMLIFrameElement; ) {
      try {
        var h = typeof u.contentWindow.location.href == "string";
      } catch {
        h = !1;
      }
      if (h) a = u.contentWindow;
      else break;
      u = V1(a.document);
    }
    return u;
  }
  function _f(a) {
    var u = a && a.nodeName && a.nodeName.toLowerCase();
    return (
      u &&
      ((u === "input" &&
        (a.type === "text" ||
          a.type === "search" ||
          a.type === "tel" ||
          a.type === "url" ||
          a.type === "password")) ||
        u === "textarea" ||
        a.contentEditable === "true")
    );
  }
  function oP(a) {
    var u = cg(),
      h = a.focusedElem,
      y = a.selectionRange;
    if (
      u !== h &&
      h &&
      h.ownerDocument &&
      ug(h.ownerDocument.documentElement, h)
    ) {
      if (y !== null && _f(h)) {
        if (
          ((u = y.start),
          (a = y.end),
          a === void 0 && (a = u),
          "selectionStart" in h)
        )
          (h.selectionStart = u),
            (h.selectionEnd = Math.min(a, h.value.length));
        else if (
          ((a = ((u = h.ownerDocument || document) && u.defaultView) || window),
          a.getSelection)
        ) {
          a = a.getSelection();
          var S = h.textContent.length,
            I = Math.min(y.start, S);
          (y = y.end === void 0 ? I : Math.min(y.end, S)),
            !a.extend && I > y && ((S = y), (y = I), (I = S)),
            (S = lg(h, I));
          var Y = lg(h, y);
          S &&
            Y &&
            (a.rangeCount !== 1 ||
              a.anchorNode !== S.node ||
              a.anchorOffset !== S.offset ||
              a.focusNode !== Y.node ||
              a.focusOffset !== Y.offset) &&
            ((u = u.createRange()),
            u.setStart(S.node, S.offset),
            a.removeAllRanges(),
            I > y
              ? (a.addRange(u), a.extend(Y.node, Y.offset))
              : (u.setEnd(Y.node, Y.offset), a.addRange(u)));
        }
      }
      for (u = [], a = h; (a = a.parentNode); )
        a.nodeType === 1 &&
          u.push({ element: a, left: a.scrollLeft, top: a.scrollTop });
      for (typeof h.focus == "function" && h.focus(), h = 0; h < u.length; h++)
        (a = u[h]),
          (a.element.scrollLeft = a.left),
          (a.element.scrollTop = a.top);
    }
  }
  var aP = l && "documentMode" in document && 11 >= document.documentMode,
    wa = null,
    Af = null,
    K3 = null,
    Tf = !1;
  function dg(a, u, h) {
    var y =
      h.window === h ? h.document : h.nodeType === 9 ? h : h.ownerDocument;
    Tf ||
      wa == null ||
      wa !== V1(y) ||
      ((y = wa),
      "selectionStart" in y && _f(y)
        ? (y = { start: y.selectionStart, end: y.selectionEnd })
        : ((y = (
            (y.ownerDocument && y.ownerDocument.defaultView) ||
            window
          ).getSelection()),
          (y = {
            anchorNode: y.anchorNode,
            anchorOffset: y.anchorOffset,
            focusNode: y.focusNode,
            focusOffset: y.focusOffset,
          })),
      (K3 && q3(K3, y)) ||
        ((K3 = y),
        (y = $u(Af, "onSelect")),
        0 < y.length &&
          ((u = new vf("onSelect", "select", null, u, h)),
          a.push({ event: u, listeners: y }),
          (u.target = wa))));
  }
  function Du(a, u) {
    var h = {};
    return (
      (h[a.toLowerCase()] = u.toLowerCase()),
      (h["Webkit" + a] = "webkit" + u),
      (h["Moz" + a] = "moz" + u),
      h
    );
  }
  var ba = {
      animationend: Du("Animation", "AnimationEnd"),
      animationiteration: Du("Animation", "AnimationIteration"),
      animationstart: Du("Animation", "AnimationStart"),
      transitionend: Du("Transition", "TransitionEnd"),
    },
    Pf = {},
    fg = {};
  l &&
    ((fg = document.createElement("div").style),
    "AnimationEvent" in window ||
      (delete ba.animationend.animation,
      delete ba.animationiteration.animation,
      delete ba.animationstart.animation),
    "TransitionEvent" in window || delete ba.transitionend.transition);
  function Fu(a) {
    if (Pf[a]) return Pf[a];
    if (!ba[a]) return a;
    var u = ba[a],
      h;
    for (h in u) if (u.hasOwnProperty(h) && h in fg) return (Pf[a] = u[h]);
    return a;
  }
  var hg = Fu("animationend"),
    pg = Fu("animationiteration"),
    mg = Fu("animationstart"),
    gg = Fu("transitionend"),
    yg = new Map(),
    vg =
      "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(
        " "
      );
  function us(a, u) {
    yg.set(a, u), s(u, [a]);
  }
  for (var Mf = 0; Mf < vg.length; Mf++) {
    var Rf = vg[Mf],
      lP = Rf.toLowerCase(),
      uP = Rf[0].toUpperCase() + Rf.slice(1);
    us(lP, "on" + uP);
  }
  us(hg, "onAnimationEnd"),
    us(pg, "onAnimationIteration"),
    us(mg, "onAnimationStart"),
    us("dblclick", "onDoubleClick"),
    us("focusin", "onFocus"),
    us("focusout", "onBlur"),
    us(gg, "onTransitionEnd"),
    o("onMouseEnter", ["mouseout", "mouseover"]),
    o("onMouseLeave", ["mouseout", "mouseover"]),
    o("onPointerEnter", ["pointerout", "pointerover"]),
    o("onPointerLeave", ["pointerout", "pointerover"]),
    s(
      "onChange",
      "change click focusin focusout input keydown keyup selectionchange".split(
        " "
      )
    ),
    s(
      "onSelect",
      "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(
        " "
      )
    ),
    s("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]),
    s(
      "onCompositionEnd",
      "compositionend focusout keydown keypress keyup mousedown".split(" ")
    ),
    s(
      "onCompositionStart",
      "compositionstart focusout keydown keypress keyup mousedown".split(" ")
    ),
    s(
      "onCompositionUpdate",
      "compositionupdate focusout keydown keypress keyup mousedown".split(" ")
    );
  var G3 =
      "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(
        " "
      ),
    cP = new Set(
      "cancel close invalid load scroll toggle".split(" ").concat(G3)
    );
  function wg(a, u, h) {
    var y = a.type || "unknown-event";
    (a.currentTarget = h), W1(y, u, void 0, a), (a.currentTarget = null);
  }
  function bg(a, u) {
    u = (u & 4) !== 0;
    for (var h = 0; h < a.length; h++) {
      var y = a[h],
        S = y.event;
      y = y.listeners;
      e: {
        var I = void 0;
        if (u)
          for (var Y = y.length - 1; 0 <= Y; Y--) {
            var f1 = y[Y],
              x1 = f1.instance,
              O1 = f1.currentTarget;
            if (((f1 = f1.listener), x1 !== I && S.isPropagationStopped()))
              break e;
            wg(S, f1, O1), (I = x1);
          }
        else
          for (Y = 0; Y < y.length; Y++) {
            if (
              ((f1 = y[Y]),
              (x1 = f1.instance),
              (O1 = f1.currentTarget),
              (f1 = f1.listener),
              x1 !== I && S.isPropagationStopped())
            )
              break e;
            wg(S, f1, O1), (I = x1);
          }
      }
    }
    if (A) throw ((a = n1), (A = !1), (n1 = null), a);
  }
  function tn(a, u) {
    var h = u[Ff];
    h === void 0 && (h = u[Ff] = new Set());
    var y = a + "__bubble";
    h.has(y) || (xg(u, a, 2, !1), h.add(y));
  }
  function Lf(a, u, h) {
    var y = 0;
    u && (y |= 4), xg(h, a, y, u);
  }
  var Uu = "_reactListening" + Math.random().toString(36).slice(2);
  function Y3(a) {
    if (!a[Uu]) {
      (a[Uu] = !0),
        r.forEach(function (h) {
          h !== "selectionchange" && (cP.has(h) || Lf(h, !1, a), Lf(h, !0, a));
        });
      var u = a.nodeType === 9 ? a : a.ownerDocument;
      u === null || u[Uu] || ((u[Uu] = !0), Lf("selectionchange", !1, u));
    }
  }
  function xg(a, u, h, y) {
    switch (lr(u)) {
      case 1:
        var S = Cr;
        break;
      case 4:
        S = pn;
        break;
      default:
        S = ln;
    }
    (h = S.bind(null, u, h, a)),
      (S = void 0),
      !on ||
        (u !== "touchstart" && u !== "touchmove" && u !== "wheel") ||
        (S = !0),
      y
        ? S !== void 0
          ? a.addEventListener(u, h, { capture: !0, passive: S })
          : a.addEventListener(u, h, !0)
        : S !== void 0
        ? a.addEventListener(u, h, { passive: S })
        : a.addEventListener(u, h, !1);
  }
  function If(a, u, h, y, S) {
    var I = y;
    if ((u & 1) === 0 && (u & 2) === 0 && y !== null)
      e: for (;;) {
        if (y === null) return;
        var Y = y.tag;
        if (Y === 3 || Y === 4) {
          var f1 = y.stateNode.containerInfo;
          if (f1 === S || (f1.nodeType === 8 && f1.parentNode === S)) break;
          if (Y === 4)
            for (Y = y.return; Y !== null; ) {
              var x1 = Y.tag;
              if (
                (x1 === 3 || x1 === 4) &&
                ((x1 = Y.stateNode.containerInfo),
                x1 === S || (x1.nodeType === 8 && x1.parentNode === S))
              )
                return;
              Y = Y.return;
            }
          for (; f1 !== null; ) {
            if (((Y = to(f1)), Y === null)) return;
            if (((x1 = Y.tag), x1 === 5 || x1 === 6)) {
              y = I = Y;
              continue e;
            }
            f1 = f1.parentNode;
          }
        }
        y = y.return;
      }
    Lr(function () {
      var O1 = I,
        ee = U1(h),
        ne = [];
      e: {
        var Z1 = yg.get(a);
        if (Z1 !== void 0) {
          var xe = vf,
            Ie = a;
          switch (a) {
            case "keypress":
              if (ju(h) === 0) break e;
            case "keydown":
            case "keyup":
              xe = UT;
              break;
            case "focusin":
              (Ie = "focus"), (xe = xf);
              break;
            case "focusout":
              (Ie = "blur"), (xe = xf);
              break;
            case "beforeblur":
            case "afterblur":
              xe = xf;
              break;
            case "click":
              if (h.button === 2) break e;
            case "auxclick":
            case "dblclick":
            case "mousedown":
            case "mousemove":
            case "mouseup":
            case "mouseout":
            case "mouseover":
            case "contextmenu":
              xe = Km;
              break;
            case "drag":
            case "dragend":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "dragstart":
            case "drop":
              xe = TT;
              break;
            case "touchcancel":
            case "touchend":
            case "touchmove":
            case "touchstart":
              xe = WT;
              break;
            case hg:
            case pg:
            case mg:
              xe = RT;
              break;
            case gg:
              xe = HT;
              break;
            case "scroll":
              xe = _T;
              break;
            case "wheel":
              xe = KT;
              break;
            case "copy":
            case "cut":
            case "paste":
              xe = IT;
              break;
            case "gotpointercapture":
            case "lostpointercapture":
            case "pointercancel":
            case "pointerdown":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "pointerup":
              xe = Ym;
          }
          var Oe = (u & 4) !== 0,
            _n = !Oe && a === "scroll",
            P1 = Oe ? (Z1 !== null ? Z1 + "Capture" : null) : Z1;
          Oe = [];
          for (var C1 = O1, R1; C1 !== null; ) {
            R1 = C1;
            var oe = R1.stateNode;
            if (
              (R1.tag === 5 &&
                oe !== null &&
                ((R1 = oe),
                P1 !== null &&
                  ((oe = xr(C1, P1)), oe != null && Oe.push(Q3(C1, oe, R1)))),
              _n)
            )
              break;
            C1 = C1.return;
          }
          0 < Oe.length &&
            ((Z1 = new xe(Z1, Ie, null, h, ee)),
            ne.push({ event: Z1, listeners: Oe }));
        }
      }
      if ((u & 7) === 0) {
        e: {
          if (
            ((Z1 = a === "mouseover" || a === "pointerover"),
            (xe = a === "mouseout" || a === "pointerout"),
            Z1 &&
              h !== he &&
              (Ie = h.relatedTarget || h.fromElement) &&
              (to(Ie) || Ie[S2]))
          )
            break e;
          if (
            (xe || Z1) &&
            ((Z1 =
              ee.window === ee
                ? ee
                : (Z1 = ee.ownerDocument)
                ? Z1.defaultView || Z1.parentWindow
                : window),
            xe
              ? ((Ie = h.relatedTarget || h.toElement),
                (xe = O1),
                (Ie = Ie ? to(Ie) : null),
                Ie !== null &&
                  ((_n = X1(Ie)),
                  Ie !== _n || (Ie.tag !== 5 && Ie.tag !== 6)) &&
                  (Ie = null))
              : ((xe = null), (Ie = O1)),
            xe !== Ie)
          ) {
            if (
              ((Oe = Km),
              (oe = "onMouseLeave"),
              (P1 = "onMouseEnter"),
              (C1 = "mouse"),
              (a === "pointerout" || a === "pointerover") &&
                ((Oe = Ym),
                (oe = "onPointerLeave"),
                (P1 = "onPointerEnter"),
                (C1 = "pointer")),
              (_n = xe == null ? Z1 : Sa(xe)),
              (R1 = Ie == null ? Z1 : Sa(Ie)),
              (Z1 = new Oe(oe, C1 + "leave", xe, h, ee)),
              (Z1.target = _n),
              (Z1.relatedTarget = R1),
              (oe = null),
              to(ee) === O1 &&
                ((Oe = new Oe(P1, C1 + "enter", Ie, h, ee)),
                (Oe.target = R1),
                (Oe.relatedTarget = _n),
                (oe = Oe)),
              (_n = oe),
              xe && Ie)
            )
              t: {
                for (Oe = xe, P1 = Ie, C1 = 0, R1 = Oe; R1; R1 = xa(R1)) C1++;
                for (R1 = 0, oe = P1; oe; oe = xa(oe)) R1++;
                for (; 0 < C1 - R1; ) (Oe = xa(Oe)), C1--;
                for (; 0 < R1 - C1; ) (P1 = xa(P1)), R1--;
                for (; C1--; ) {
                  if (Oe === P1 || (P1 !== null && Oe === P1.alternate))
                    break t;
                  (Oe = xa(Oe)), (P1 = xa(P1));
                }
                Oe = null;
              }
            else Oe = null;
            xe !== null && Cg(ne, Z1, xe, Oe, !1),
              Ie !== null && _n !== null && Cg(ne, _n, Ie, Oe, !0);
          }
        }
        e: {
          if (
            ((Z1 = O1 ? Sa(O1) : window),
            (xe = Z1.nodeName && Z1.nodeName.toLowerCase()),
            xe === "select" || (xe === "input" && Z1.type === "file"))
          )
            var Fe = eP;
          else if (tg(Z1))
            if (rg) Fe = iP;
            else {
              Fe = nP;
              var Ye = tP;
            }
          else
            (xe = Z1.nodeName) &&
              xe.toLowerCase() === "input" &&
              (Z1.type === "checkbox" || Z1.type === "radio") &&
              (Fe = rP);
          if (Fe && (Fe = Fe(a, O1))) {
            ng(ne, Fe, h, ee);
            break e;
          }
          Ye && Ye(a, Z1, O1),
            a === "focusout" &&
              (Ye = Z1._wrapperState) &&
              Ye.controlled &&
              Z1.type === "number" &&
              gt(Z1, "number", Z1.value);
        }
        switch (((Ye = O1 ? Sa(O1) : window), a)) {
          case "focusin":
            (tg(Ye) || Ye.contentEditable === "true") &&
              ((wa = Ye), (Af = O1), (K3 = null));
            break;
          case "focusout":
            K3 = Af = wa = null;
            break;
          case "mousedown":
            Tf = !0;
            break;
          case "contextmenu":
          case "mouseup":
          case "dragend":
            (Tf = !1), dg(ne, h, ee);
            break;
          case "selectionchange":
            if (aP) break;
          case "keydown":
          case "keyup":
            dg(ne, h, ee);
        }
        var Qe;
        if (Sf)
          e: {
            switch (a) {
              case "compositionstart":
                var ct = "onCompositionStart";
                break e;
              case "compositionend":
                ct = "onCompositionEnd";
                break e;
              case "compositionupdate":
                ct = "onCompositionUpdate";
                break e;
            }
            ct = void 0;
          }
        else
          va
            ? Jm(a, h) && (ct = "onCompositionEnd")
            : a === "keydown" &&
              h.keyCode === 229 &&
              (ct = "onCompositionStart");
        ct &&
          (Qm &&
            h.locale !== "ko" &&
            (va || ct !== "onCompositionStart"
              ? ct === "onCompositionEnd" && va && (Qe = Hm())
              : ((Ir = ee),
                (Js = "value" in Ir ? Ir.value : Ir.textContent),
                (va = !0))),
          (Ye = $u(O1, ct)),
          0 < Ye.length &&
            ((ct = new Gm(ct, a, null, h, ee)),
            ne.push({ event: ct, listeners: Ye }),
            Qe
              ? (ct.data = Qe)
              : ((Qe = eg(h)), Qe !== null && (ct.data = Qe)))),
          (Qe = YT ? QT(a, h) : ZT(a, h)) &&
            ((O1 = $u(O1, "onBeforeInput")),
            0 < O1.length &&
              ((ee = new Gm("onBeforeInput", "beforeinput", null, h, ee)),
              ne.push({ event: ee, listeners: O1 }),
              (ee.data = Qe)));
      }
      bg(ne, u);
    });
  }
  function Q3(a, u, h) {
    return { instance: a, listener: u, currentTarget: h };
  }
  function $u(a, u) {
    for (var h = u + "Capture", y = []; a !== null; ) {
      var S = a,
        I = S.stateNode;
      S.tag === 5 &&
        I !== null &&
        ((S = I),
        (I = xr(a, h)),
        I != null && y.unshift(Q3(a, I, S)),
        (I = xr(a, u)),
        I != null && y.push(Q3(a, I, S))),
        (a = a.return);
    }
    return y;
  }
  function xa(a) {
    if (a === null) return null;
    do a = a.return;
    while (a && a.tag !== 5);
    return a || null;
  }
  function Cg(a, u, h, y, S) {
    for (var I = u._reactName, Y = []; h !== null && h !== y; ) {
      var f1 = h,
        x1 = f1.alternate,
        O1 = f1.stateNode;
      if (x1 !== null && x1 === y) break;
      f1.tag === 5 &&
        O1 !== null &&
        ((f1 = O1),
        S
          ? ((x1 = xr(h, I)), x1 != null && Y.unshift(Q3(h, x1, f1)))
          : S || ((x1 = xr(h, I)), x1 != null && Y.push(Q3(h, x1, f1)))),
        (h = h.return);
    }
    Y.length !== 0 && a.push({ event: u, listeners: Y });
  }
  var dP = /\r\n?/g,
    fP = /\u0000|\uFFFD/g;
  function Sg(a) {
    return (typeof a == "string" ? a : "" + a)
      .replace(
        dP,
        `
`
      )
      .replace(fP, "");
  }
  function Vu(a, u, h) {
    if (((u = Sg(u)), Sg(a) !== u && h)) throw Error(n(425));
  }
  function Wu() {}
  var jf = null,
    Nf = null;
  function Of(a, u) {
    return (
      a === "textarea" ||
      a === "noscript" ||
      typeof u.children == "string" ||
      typeof u.children == "number" ||
      (typeof u.dangerouslySetInnerHTML == "object" &&
        u.dangerouslySetInnerHTML !== null &&
        u.dangerouslySetInnerHTML.__html != null)
    );
  }
  var Bf = typeof setTimeout == "function" ? setTimeout : void 0,
    hP = typeof clearTimeout == "function" ? clearTimeout : void 0,
    Eg = typeof Promise == "function" ? Promise : void 0,
    pP =
      typeof queueMicrotask == "function"
        ? queueMicrotask
        : typeof Eg < "u"
        ? function (a) {
            return Eg.resolve(null).then(a).catch(mP);
          }
        : Bf;
  function mP(a) {
    setTimeout(function () {
      throw a;
    });
  }
  function Df(a, u) {
    var h = u,
      y = 0;
    do {
      var S = h.nextSibling;
      if ((a.removeChild(h), S && S.nodeType === 8))
        if (((h = S.data), h === "/$")) {
          if (y === 0) {
            a.removeChild(S), Ue(u);
            return;
          }
          y--;
        } else (h !== "$" && h !== "$?" && h !== "$!") || y++;
      h = S;
    } while (h);
    Ue(u);
  }
  function cs(a) {
    for (; a != null; a = a.nextSibling) {
      var u = a.nodeType;
      if (u === 1 || u === 3) break;
      if (u === 8) {
        if (((u = a.data), u === "$" || u === "$!" || u === "$?")) break;
        if (u === "/$") return null;
      }
    }
    return a;
  }
  function kg(a) {
    a = a.previousSibling;
    for (var u = 0; a; ) {
      if (a.nodeType === 8) {
        var h = a.data;
        if (h === "$" || h === "$!" || h === "$?") {
          if (u === 0) return a;
          u--;
        } else h === "/$" && u++;
      }
      a = a.previousSibling;
    }
    return null;
  }
  var Ca = Math.random().toString(36).slice(2),
    Gi = "__reactFiber$" + Ca,
    Z3 = "__reactProps$" + Ca,
    S2 = "__reactContainer$" + Ca,
    Ff = "__reactEvents$" + Ca,
    gP = "__reactListeners$" + Ca,
    yP = "__reactHandles$" + Ca;
  function to(a) {
    var u = a[Gi];
    if (u) return u;
    for (var h = a.parentNode; h; ) {
      if ((u = h[S2] || h[Gi])) {
        if (
          ((h = u.alternate),
          u.child !== null || (h !== null && h.child !== null))
        )
          for (a = kg(a); a !== null; ) {
            if ((h = a[Gi])) return h;
            a = kg(a);
          }
        return u;
      }
      (a = h), (h = a.parentNode);
    }
    return null;
  }
  function X3(a) {
    return (
      (a = a[Gi] || a[S2]),
      !a || (a.tag !== 5 && a.tag !== 6 && a.tag !== 13 && a.tag !== 3)
        ? null
        : a
    );
  }
  function Sa(a) {
    if (a.tag === 5 || a.tag === 6) return a.stateNode;
    throw Error(n(33));
  }
  function zu(a) {
    return a[Z3] || null;
  }
  var Uf = [],
    Ea = -1;
  function ds(a) {
    return { current: a };
  }
  function nn(a) {
    0 > Ea || ((a.current = Uf[Ea]), (Uf[Ea] = null), Ea--);
  }
  function Zt(a, u) {
    Ea++, (Uf[Ea] = a.current), (a.current = u);
  }
  var fs = {},
    ur = ds(fs),
    jr = ds(!1),
    no = fs;
  function ka(a, u) {
    var h = a.type.contextTypes;
    if (!h) return fs;
    var y = a.stateNode;
    if (y && y.__reactInternalMemoizedUnmaskedChildContext === u)
      return y.__reactInternalMemoizedMaskedChildContext;
    var S = {},
      I;
    for (I in h) S[I] = u[I];
    return (
      y &&
        ((a = a.stateNode),
        (a.__reactInternalMemoizedUnmaskedChildContext = u),
        (a.__reactInternalMemoizedMaskedChildContext = S)),
      S
    );
  }
  function Nr(a) {
    return (a = a.childContextTypes), a != null;
  }
  function Hu() {
    nn(jr), nn(ur);
  }
  function _g(a, u, h) {
    if (ur.current !== fs) throw Error(n(168));
    Zt(ur, u), Zt(jr, h);
  }
  function Ag(a, u, h) {
    var y = a.stateNode;
    if (((u = u.childContextTypes), typeof y.getChildContext != "function"))
      return h;
    y = y.getChildContext();
    for (var S in y) if (!(S in u)) throw Error(n(108, re(a) || "Unknown", S));
    return b1({}, h, y);
  }
  function qu(a) {
    return (
      (a =
        ((a = a.stateNode) && a.__reactInternalMemoizedMergedChildContext) ||
        fs),
      (no = ur.current),
      Zt(ur, a),
      Zt(jr, jr.current),
      !0
    );
  }
  function Tg(a, u, h) {
    var y = a.stateNode;
    if (!y) throw Error(n(169));
    h
      ? ((a = Ag(a, u, no)),
        (y.__reactInternalMemoizedMergedChildContext = a),
        nn(jr),
        nn(ur),
        Zt(ur, a))
      : nn(jr),
      Zt(jr, h);
  }
  var E2 = null,
    Ku = !1,
    $f = !1;
  function Pg(a) {
    E2 === null ? (E2 = [a]) : E2.push(a);
  }
  function vP(a) {
    (Ku = !0), Pg(a);
  }
  function hs() {
    if (!$f && E2 !== null) {
      $f = !0;
      var a = 0,
        u = be;
      try {
        var h = E2;
        for (be = 1; a < h.length; a++) {
          var y = h[a];
          do y = y(!0);
          while (y !== null);
        }
        (E2 = null), (Ku = !1);
      } catch (S) {
        throw (E2 !== null && (E2 = E2.slice(a + 1)), Xe(ve, hs), S);
      } finally {
        (be = u), ($f = !1);
      }
    }
    return null;
  }
  var _a = [],
    Aa = 0,
    Gu = null,
    Yu = 0,
    ai = [],
    li = 0,
    ro = null,
    k2 = 1,
    _2 = "";
  function io(a, u) {
    (_a[Aa++] = Yu), (_a[Aa++] = Gu), (Gu = a), (Yu = u);
  }
  function Mg(a, u, h) {
    (ai[li++] = k2), (ai[li++] = _2), (ai[li++] = ro), (ro = a);
    var y = k2;
    a = _2;
    var S = 32 - H1(y) - 1;
    (y &= ~(1 << S)), (h += 1);
    var I = 32 - H1(u) + S;
    if (30 < I) {
      var Y = S - (S % 5);
      (I = (y & ((1 << Y) - 1)).toString(32)),
        (y >>= Y),
        (S -= Y),
        (k2 = (1 << (32 - H1(u) + S)) | (h << S) | y),
        (_2 = I + a);
    } else (k2 = (1 << I) | (h << S) | y), (_2 = a);
  }
  function Vf(a) {
    a.return !== null && (io(a, 1), Mg(a, 1, 0));
  }
  function Wf(a) {
    for (; a === Gu; )
      (Gu = _a[--Aa]), (_a[Aa] = null), (Yu = _a[--Aa]), (_a[Aa] = null);
    for (; a === ro; )
      (ro = ai[--li]),
        (ai[li] = null),
        (_2 = ai[--li]),
        (ai[li] = null),
        (k2 = ai[--li]),
        (ai[li] = null);
  }
  var Gr = null,
    Yr = null,
    un = !1,
    Si = null;
  function Rg(a, u) {
    var h = fi(5, null, null, 0);
    (h.elementType = "DELETED"),
      (h.stateNode = u),
      (h.return = a),
      (u = a.deletions),
      u === null ? ((a.deletions = [h]), (a.flags |= 16)) : u.push(h);
  }
  function Lg(a, u) {
    switch (a.tag) {
      case 5:
        var h = a.type;
        return (
          (u =
            u.nodeType !== 1 || h.toLowerCase() !== u.nodeName.toLowerCase()
              ? null
              : u),
          u !== null
            ? ((a.stateNode = u), (Gr = a), (Yr = cs(u.firstChild)), !0)
            : !1
        );
      case 6:
        return (
          (u = a.pendingProps === "" || u.nodeType !== 3 ? null : u),
          u !== null ? ((a.stateNode = u), (Gr = a), (Yr = null), !0) : !1
        );
      case 13:
        return (
          (u = u.nodeType !== 8 ? null : u),
          u !== null
            ? ((h = ro !== null ? { id: k2, overflow: _2 } : null),
              (a.memoizedState = {
                dehydrated: u,
                treeContext: h,
                retryLane: 1073741824,
              }),
              (h = fi(18, null, null, 0)),
              (h.stateNode = u),
              (h.return = a),
              (a.child = h),
              (Gr = a),
              (Yr = null),
              !0)
            : !1
        );
      default:
        return !1;
    }
  }
  function zf(a) {
    return (a.mode & 1) !== 0 && (a.flags & 128) === 0;
  }
  function Hf(a) {
    if (un) {
      var u = Yr;
      if (u) {
        var h = u;
        if (!Lg(a, u)) {
          if (zf(a)) throw Error(n(418));
          u = cs(h.nextSibling);
          var y = Gr;
          u && Lg(a, u)
            ? Rg(y, h)
            : ((a.flags = (a.flags & -4097) | 2), (un = !1), (Gr = a));
        }
      } else {
        if (zf(a)) throw Error(n(418));
        (a.flags = (a.flags & -4097) | 2), (un = !1), (Gr = a);
      }
    }
  }
  function Ig(a) {
    for (
      a = a.return;
      a !== null && a.tag !== 5 && a.tag !== 3 && a.tag !== 13;

    )
      a = a.return;
    Gr = a;
  }
  function Qu(a) {
    if (a !== Gr) return !1;
    if (!un) return Ig(a), (un = !0), !1;
    var u;
    if (
      ((u = a.tag !== 3) &&
        !(u = a.tag !== 5) &&
        ((u = a.type),
        (u = u !== "head" && u !== "body" && !Of(a.type, a.memoizedProps))),
      u && (u = Yr))
    ) {
      if (zf(a)) throw (jg(), Error(n(418)));
      for (; u; ) Rg(a, u), (u = cs(u.nextSibling));
    }
    if ((Ig(a), a.tag === 13)) {
      if (((a = a.memoizedState), (a = a !== null ? a.dehydrated : null), !a))
        throw Error(n(317));
      e: {
        for (a = a.nextSibling, u = 0; a; ) {
          if (a.nodeType === 8) {
            var h = a.data;
            if (h === "/$") {
              if (u === 0) {
                Yr = cs(a.nextSibling);
                break e;
              }
              u--;
            } else (h !== "$" && h !== "$!" && h !== "$?") || u++;
          }
          a = a.nextSibling;
        }
        Yr = null;
      }
    } else Yr = Gr ? cs(a.stateNode.nextSibling) : null;
    return !0;
  }
  function jg() {
    for (var a = Yr; a; ) a = cs(a.nextSibling);
  }
  function Ta() {
    (Yr = Gr = null), (un = !1);
  }
  function qf(a) {
    Si === null ? (Si = [a]) : Si.push(a);
  }
  var wP = T.ReactCurrentBatchConfig;
  function J3(a, u, h) {
    if (
      ((a = h.ref),
      a !== null && typeof a != "function" && typeof a != "object")
    ) {
      if (h._owner) {
        if (((h = h._owner), h)) {
          if (h.tag !== 1) throw Error(n(309));
          var y = h.stateNode;
        }
        if (!y) throw Error(n(147, a));
        var S = y,
          I = "" + a;
        return u !== null &&
          u.ref !== null &&
          typeof u.ref == "function" &&
          u.ref._stringRef === I
          ? u.ref
          : ((u = function (Y) {
              var f1 = S.refs;
              Y === null ? delete f1[I] : (f1[I] = Y);
            }),
            (u._stringRef = I),
            u);
      }
      if (typeof a != "string") throw Error(n(284));
      if (!h._owner) throw Error(n(290, a));
    }
    return a;
  }
  function Zu(a, u) {
    throw (
      ((a = Object.prototype.toString.call(u)),
      Error(
        n(
          31,
          a === "[object Object]"
            ? "object with keys {" + Object.keys(u).join(", ") + "}"
            : a
        )
      ))
    );
  }
  function Ng(a) {
    var u = a._init;
    return u(a._payload);
  }
  function Og(a) {
    function u(P1, C1) {
      if (a) {
        var R1 = P1.deletions;
        R1 === null ? ((P1.deletions = [C1]), (P1.flags |= 16)) : R1.push(C1);
      }
    }
    function h(P1, C1) {
      if (!a) return null;
      for (; C1 !== null; ) u(P1, C1), (C1 = C1.sibling);
      return null;
    }
    function y(P1, C1) {
      for (P1 = new Map(); C1 !== null; )
        C1.key !== null ? P1.set(C1.key, C1) : P1.set(C1.index, C1),
          (C1 = C1.sibling);
      return P1;
    }
    function S(P1, C1) {
      return (P1 = xs(P1, C1)), (P1.index = 0), (P1.sibling = null), P1;
    }
    function I(P1, C1, R1) {
      return (
        (P1.index = R1),
        a
          ? ((R1 = P1.alternate),
            R1 !== null
              ? ((R1 = R1.index), R1 < C1 ? ((P1.flags |= 2), C1) : R1)
              : ((P1.flags |= 2), C1))
          : ((P1.flags |= 1048576), C1)
      );
    }
    function Y(P1) {
      return a && P1.alternate === null && (P1.flags |= 2), P1;
    }
    function f1(P1, C1, R1, oe) {
      return C1 === null || C1.tag !== 6
        ? ((C1 = Bh(R1, P1.mode, oe)), (C1.return = P1), C1)
        : ((C1 = S(C1, R1)), (C1.return = P1), C1);
    }
    function x1(P1, C1, R1, oe) {
      var Fe = R1.type;
      return Fe === O
        ? ee(P1, C1, R1.props.children, oe, R1.key)
        : C1 !== null &&
          (C1.elementType === Fe ||
            (typeof Fe == "object" &&
              Fe !== null &&
              Fe.$$typeof === u1 &&
              Ng(Fe) === C1.type))
        ? ((oe = S(C1, R1.props)),
          (oe.ref = J3(P1, C1, R1)),
          (oe.return = P1),
          oe)
        : ((oe = xc(R1.type, R1.key, R1.props, null, P1.mode, oe)),
          (oe.ref = J3(P1, C1, R1)),
          (oe.return = P1),
          oe);
    }
    function O1(P1, C1, R1, oe) {
      return C1 === null ||
        C1.tag !== 4 ||
        C1.stateNode.containerInfo !== R1.containerInfo ||
        C1.stateNode.implementation !== R1.implementation
        ? ((C1 = Dh(R1, P1.mode, oe)), (C1.return = P1), C1)
        : ((C1 = S(C1, R1.children || [])), (C1.return = P1), C1);
    }
    function ee(P1, C1, R1, oe, Fe) {
      return C1 === null || C1.tag !== 7
        ? ((C1 = ho(R1, P1.mode, oe, Fe)), (C1.return = P1), C1)
        : ((C1 = S(C1, R1)), (C1.return = P1), C1);
    }
    function ne(P1, C1, R1) {
      if ((typeof C1 == "string" && C1 !== "") || typeof C1 == "number")
        return (C1 = Bh("" + C1, P1.mode, R1)), (C1.return = P1), C1;
      if (typeof C1 == "object" && C1 !== null) {
        switch (C1.$$typeof) {
          case M:
            return (
              (R1 = xc(C1.type, C1.key, C1.props, null, P1.mode, R1)),
              (R1.ref = J3(P1, null, C1)),
              (R1.return = P1),
              R1
            );
          case L:
            return (C1 = Dh(C1, P1.mode, R1)), (C1.return = P1), C1;
          case u1:
            var oe = C1._init;
            return ne(P1, oe(C1._payload), R1);
        }
        if (qe(C1) || Z(C1))
          return (C1 = ho(C1, P1.mode, R1, null)), (C1.return = P1), C1;
        Zu(P1, C1);
      }
      return null;
    }
    function Z1(P1, C1, R1, oe) {
      var Fe = C1 !== null ? C1.key : null;
      if ((typeof R1 == "string" && R1 !== "") || typeof R1 == "number")
        return Fe !== null ? null : f1(P1, C1, "" + R1, oe);
      if (typeof R1 == "object" && R1 !== null) {
        switch (R1.$$typeof) {
          case M:
            return R1.key === Fe ? x1(P1, C1, R1, oe) : null;
          case L:
            return R1.key === Fe ? O1(P1, C1, R1, oe) : null;
          case u1:
            return (Fe = R1._init), Z1(P1, C1, Fe(R1._payload), oe);
        }
        if (qe(R1) || Z(R1))
          return Fe !== null ? null : ee(P1, C1, R1, oe, null);
        Zu(P1, R1);
      }
      return null;
    }
    function xe(P1, C1, R1, oe, Fe) {
      if ((typeof oe == "string" && oe !== "") || typeof oe == "number")
        return (P1 = P1.get(R1) || null), f1(C1, P1, "" + oe, Fe);
      if (typeof oe == "object" && oe !== null) {
        switch (oe.$$typeof) {
          case M:
            return (
              (P1 = P1.get(oe.key === null ? R1 : oe.key) || null),
              x1(C1, P1, oe, Fe)
            );
          case L:
            return (
              (P1 = P1.get(oe.key === null ? R1 : oe.key) || null),
              O1(C1, P1, oe, Fe)
            );
          case u1:
            var Ye = oe._init;
            return xe(P1, C1, R1, Ye(oe._payload), Fe);
        }
        if (qe(oe) || Z(oe))
          return (P1 = P1.get(R1) || null), ee(C1, P1, oe, Fe, null);
        Zu(C1, oe);
      }
      return null;
    }
    function Ie(P1, C1, R1, oe) {
      for (
        var Fe = null, Ye = null, Qe = C1, ct = (C1 = 0), zn = null;
        Qe !== null && ct < R1.length;
        ct++
      ) {
        Qe.index > ct ? ((zn = Qe), (Qe = null)) : (zn = Qe.sibling);
        var Bt = Z1(P1, Qe, R1[ct], oe);
        if (Bt === null) {
          Qe === null && (Qe = zn);
          break;
        }
        a && Qe && Bt.alternate === null && u(P1, Qe),
          (C1 = I(Bt, C1, ct)),
          Ye === null ? (Fe = Bt) : (Ye.sibling = Bt),
          (Ye = Bt),
          (Qe = zn);
      }
      if (ct === R1.length) return h(P1, Qe), un && io(P1, ct), Fe;
      if (Qe === null) {
        for (; ct < R1.length; ct++)
          (Qe = ne(P1, R1[ct], oe)),
            Qe !== null &&
              ((C1 = I(Qe, C1, ct)),
              Ye === null ? (Fe = Qe) : (Ye.sibling = Qe),
              (Ye = Qe));
        return un && io(P1, ct), Fe;
      }
      for (Qe = y(P1, Qe); ct < R1.length; ct++)
        (zn = xe(Qe, P1, ct, R1[ct], oe)),
          zn !== null &&
            (a &&
              zn.alternate !== null &&
              Qe.delete(zn.key === null ? ct : zn.key),
            (C1 = I(zn, C1, ct)),
            Ye === null ? (Fe = zn) : (Ye.sibling = zn),
            (Ye = zn));
      return (
        a &&
          Qe.forEach(function (Cs) {
            return u(P1, Cs);
          }),
        un && io(P1, ct),
        Fe
      );
    }
    function Oe(P1, C1, R1, oe) {
      var Fe = Z(R1);
      if (typeof Fe != "function") throw Error(n(150));
      if (((R1 = Fe.call(R1)), R1 == null)) throw Error(n(151));
      for (
        var Ye = (Fe = null), Qe = C1, ct = (C1 = 0), zn = null, Bt = R1.next();
        Qe !== null && !Bt.done;
        ct++, Bt = R1.next()
      ) {
        Qe.index > ct ? ((zn = Qe), (Qe = null)) : (zn = Qe.sibling);
        var Cs = Z1(P1, Qe, Bt.value, oe);
        if (Cs === null) {
          Qe === null && (Qe = zn);
          break;
        }
        a && Qe && Cs.alternate === null && u(P1, Qe),
          (C1 = I(Cs, C1, ct)),
          Ye === null ? (Fe = Cs) : (Ye.sibling = Cs),
          (Ye = Cs),
          (Qe = zn);
      }
      if (Bt.done) return h(P1, Qe), un && io(P1, ct), Fe;
      if (Qe === null) {
        for (; !Bt.done; ct++, Bt = R1.next())
          (Bt = ne(P1, Bt.value, oe)),
            Bt !== null &&
              ((C1 = I(Bt, C1, ct)),
              Ye === null ? (Fe = Bt) : (Ye.sibling = Bt),
              (Ye = Bt));
        return un && io(P1, ct), Fe;
      }
      for (Qe = y(P1, Qe); !Bt.done; ct++, Bt = R1.next())
        (Bt = xe(Qe, P1, ct, Bt.value, oe)),
          Bt !== null &&
            (a &&
              Bt.alternate !== null &&
              Qe.delete(Bt.key === null ? ct : Bt.key),
            (C1 = I(Bt, C1, ct)),
            Ye === null ? (Fe = Bt) : (Ye.sibling = Bt),
            (Ye = Bt));
      return (
        a &&
          Qe.forEach(function (XP) {
            return u(P1, XP);
          }),
        un && io(P1, ct),
        Fe
      );
    }
    function _n(P1, C1, R1, oe) {
      if (
        (typeof R1 == "object" &&
          R1 !== null &&
          R1.type === O &&
          R1.key === null &&
          (R1 = R1.props.children),
        typeof R1 == "object" && R1 !== null)
      ) {
        switch (R1.$$typeof) {
          case M:
            e: {
              for (var Fe = R1.key, Ye = C1; Ye !== null; ) {
                if (Ye.key === Fe) {
                  if (((Fe = R1.type), Fe === O)) {
                    if (Ye.tag === 7) {
                      h(P1, Ye.sibling),
                        (C1 = S(Ye, R1.props.children)),
                        (C1.return = P1),
                        (P1 = C1);
                      break e;
                    }
                  } else if (
                    Ye.elementType === Fe ||
                    (typeof Fe == "object" &&
                      Fe !== null &&
                      Fe.$$typeof === u1 &&
                      Ng(Fe) === Ye.type)
                  ) {
                    h(P1, Ye.sibling),
                      (C1 = S(Ye, R1.props)),
                      (C1.ref = J3(P1, Ye, R1)),
                      (C1.return = P1),
                      (P1 = C1);
                    break e;
                  }
                  h(P1, Ye);
                  break;
                } else u(P1, Ye);
                Ye = Ye.sibling;
              }
              R1.type === O
                ? ((C1 = ho(R1.props.children, P1.mode, oe, R1.key)),
                  (C1.return = P1),
                  (P1 = C1))
                : ((oe = xc(R1.type, R1.key, R1.props, null, P1.mode, oe)),
                  (oe.ref = J3(P1, C1, R1)),
                  (oe.return = P1),
                  (P1 = oe));
            }
            return Y(P1);
          case L:
            e: {
              for (Ye = R1.key; C1 !== null; ) {
                if (C1.key === Ye)
                  if (
                    C1.tag === 4 &&
                    C1.stateNode.containerInfo === R1.containerInfo &&
                    C1.stateNode.implementation === R1.implementation
                  ) {
                    h(P1, C1.sibling),
                      (C1 = S(C1, R1.children || [])),
                      (C1.return = P1),
                      (P1 = C1);
                    break e;
                  } else {
                    h(P1, C1);
                    break;
                  }
                else u(P1, C1);
                C1 = C1.sibling;
              }
              (C1 = Dh(R1, P1.mode, oe)), (C1.return = P1), (P1 = C1);
            }
            return Y(P1);
          case u1:
            return (Ye = R1._init), _n(P1, C1, Ye(R1._payload), oe);
        }
        if (qe(R1)) return Ie(P1, C1, R1, oe);
        if (Z(R1)) return Oe(P1, C1, R1, oe);
        Zu(P1, R1);
      }
      return (typeof R1 == "string" && R1 !== "") || typeof R1 == "number"
        ? ((R1 = "" + R1),
          C1 !== null && C1.tag === 6
            ? (h(P1, C1.sibling), (C1 = S(C1, R1)), (C1.return = P1), (P1 = C1))
            : (h(P1, C1),
              (C1 = Bh(R1, P1.mode, oe)),
              (C1.return = P1),
              (P1 = C1)),
          Y(P1))
        : h(P1, C1);
    }
    return _n;
  }
  var Pa = Og(!0),
    Bg = Og(!1),
    Xu = ds(null),
    Ju = null,
    Ma = null,
    Kf = null;
  function Gf() {
    Kf = Ma = Ju = null;
  }
  function Yf(a) {
    var u = Xu.current;
    nn(Xu), (a._currentValue = u);
  }
  function Qf(a, u, h) {
    for (; a !== null; ) {
      var y = a.alternate;
      if (
        ((a.childLanes & u) !== u
          ? ((a.childLanes |= u), y !== null && (y.childLanes |= u))
          : y !== null && (y.childLanes & u) !== u && (y.childLanes |= u),
        a === h)
      )
        break;
      a = a.return;
    }
  }
  function Ra(a, u) {
    (Ju = a),
      (Kf = Ma = null),
      (a = a.dependencies),
      a !== null &&
        a.firstContext !== null &&
        ((a.lanes & u) !== 0 && (Or = !0), (a.firstContext = null));
  }
  function ui(a) {
    var u = a._currentValue;
    if (Kf !== a)
      if (((a = { context: a, memoizedValue: u, next: null }), Ma === null)) {
        if (Ju === null) throw Error(n(308));
        (Ma = a), (Ju.dependencies = { lanes: 0, firstContext: a });
      } else Ma = Ma.next = a;
    return u;
  }
  var so = null;
  function Zf(a) {
    so === null ? (so = [a]) : so.push(a);
  }
  function Dg(a, u, h, y) {
    var S = u.interleaved;
    return (
      S === null ? ((h.next = h), Zf(u)) : ((h.next = S.next), (S.next = h)),
      (u.interleaved = h),
      A2(a, y)
    );
  }
  function A2(a, u) {
    a.lanes |= u;
    var h = a.alternate;
    for (h !== null && (h.lanes |= u), h = a, a = a.return; a !== null; )
      (a.childLanes |= u),
        (h = a.alternate),
        h !== null && (h.childLanes |= u),
        (h = a),
        (a = a.return);
    return h.tag === 3 ? h.stateNode : null;
  }
  var ps = !1;
  function Xf(a) {
    a.updateQueue = {
      baseState: a.memoizedState,
      firstBaseUpdate: null,
      lastBaseUpdate: null,
      shared: { pending: null, interleaved: null, lanes: 0 },
      effects: null,
    };
  }
  function Fg(a, u) {
    (a = a.updateQueue),
      u.updateQueue === a &&
        (u.updateQueue = {
          baseState: a.baseState,
          firstBaseUpdate: a.firstBaseUpdate,
          lastBaseUpdate: a.lastBaseUpdate,
          shared: a.shared,
          effects: a.effects,
        });
  }
  function T2(a, u) {
    return {
      eventTime: a,
      lane: u,
      tag: 0,
      payload: null,
      callback: null,
      next: null,
    };
  }
  function ms(a, u, h) {
    var y = a.updateQueue;
    if (y === null) return null;
    if (((y = y.shared), (Nt & 2) !== 0)) {
      var S = y.pending;
      return (
        S === null ? (u.next = u) : ((u.next = S.next), (S.next = u)),
        (y.pending = u),
        A2(a, h)
      );
    }
    return (
      (S = y.interleaved),
      S === null ? ((u.next = u), Zf(y)) : ((u.next = S.next), (S.next = u)),
      (y.interleaved = u),
      A2(a, h)
    );
  }
  function ec(a, u, h) {
    if (
      ((u = u.updateQueue), u !== null && ((u = u.shared), (h & 4194240) !== 0))
    ) {
      var y = u.lanes;
      (y &= a.pendingLanes), (h |= y), (u.lanes = h), qt(a, h);
    }
  }
  function Ug(a, u) {
    var h = a.updateQueue,
      y = a.alternate;
    if (y !== null && ((y = y.updateQueue), h === y)) {
      var S = null,
        I = null;
      if (((h = h.firstBaseUpdate), h !== null)) {
        do {
          var Y = {
            eventTime: h.eventTime,
            lane: h.lane,
            tag: h.tag,
            payload: h.payload,
            callback: h.callback,
            next: null,
          };
          I === null ? (S = I = Y) : (I = I.next = Y), (h = h.next);
        } while (h !== null);
        I === null ? (S = I = u) : (I = I.next = u);
      } else S = I = u;
      (h = {
        baseState: y.baseState,
        firstBaseUpdate: S,
        lastBaseUpdate: I,
        shared: y.shared,
        effects: y.effects,
      }),
        (a.updateQueue = h);
      return;
    }
    (a = h.lastBaseUpdate),
      a === null ? (h.firstBaseUpdate = u) : (a.next = u),
      (h.lastBaseUpdate = u);
  }
  function tc(a, u, h, y) {
    var S = a.updateQueue;
    ps = !1;
    var I = S.firstBaseUpdate,
      Y = S.lastBaseUpdate,
      f1 = S.shared.pending;
    if (f1 !== null) {
      S.shared.pending = null;
      var x1 = f1,
        O1 = x1.next;
      (x1.next = null), Y === null ? (I = O1) : (Y.next = O1), (Y = x1);
      var ee = a.alternate;
      ee !== null &&
        ((ee = ee.updateQueue),
        (f1 = ee.lastBaseUpdate),
        f1 !== Y &&
          (f1 === null ? (ee.firstBaseUpdate = O1) : (f1.next = O1),
          (ee.lastBaseUpdate = x1)));
    }
    if (I !== null) {
      var ne = S.baseState;
      (Y = 0), (ee = O1 = x1 = null), (f1 = I);
      do {
        var Z1 = f1.lane,
          xe = f1.eventTime;
        if ((y & Z1) === Z1) {
          ee !== null &&
            (ee = ee.next =
              {
                eventTime: xe,
                lane: 0,
                tag: f1.tag,
                payload: f1.payload,
                callback: f1.callback,
                next: null,
              });
          e: {
            var Ie = a,
              Oe = f1;
            switch (((Z1 = u), (xe = h), Oe.tag)) {
              case 1:
                if (((Ie = Oe.payload), typeof Ie == "function")) {
                  ne = Ie.call(xe, ne, Z1);
                  break e;
                }
                ne = Ie;
                break e;
              case 3:
                Ie.flags = (Ie.flags & -65537) | 128;
              case 0:
                if (
                  ((Ie = Oe.payload),
                  (Z1 = typeof Ie == "function" ? Ie.call(xe, ne, Z1) : Ie),
                  Z1 == null)
                )
                  break e;
                ne = b1({}, ne, Z1);
                break e;
              case 2:
                ps = !0;
            }
          }
          f1.callback !== null &&
            f1.lane !== 0 &&
            ((a.flags |= 64),
            (Z1 = S.effects),
            Z1 === null ? (S.effects = [f1]) : Z1.push(f1));
        } else
          (xe = {
            eventTime: xe,
            lane: Z1,
            tag: f1.tag,
            payload: f1.payload,
            callback: f1.callback,
            next: null,
          }),
            ee === null ? ((O1 = ee = xe), (x1 = ne)) : (ee = ee.next = xe),
            (Y |= Z1);
        if (((f1 = f1.next), f1 === null)) {
          if (((f1 = S.shared.pending), f1 === null)) break;
          (Z1 = f1),
            (f1 = Z1.next),
            (Z1.next = null),
            (S.lastBaseUpdate = Z1),
            (S.shared.pending = null);
        }
      } while (!0);
      if (
        (ee === null && (x1 = ne),
        (S.baseState = x1),
        (S.firstBaseUpdate = O1),
        (S.lastBaseUpdate = ee),
        (u = S.shared.interleaved),
        u !== null)
      ) {
        S = u;
        do (Y |= S.lane), (S = S.next);
        while (S !== u);
      } else I === null && (S.shared.lanes = 0);
      (lo |= Y), (a.lanes = Y), (a.memoizedState = ne);
    }
  }
  function $g(a, u, h) {
    if (((a = u.effects), (u.effects = null), a !== null))
      for (u = 0; u < a.length; u++) {
        var y = a[u],
          S = y.callback;
        if (S !== null) {
          if (((y.callback = null), (y = h), typeof S != "function"))
            throw Error(n(191, S));
          S.call(y);
        }
      }
  }
  var e0 = {},
    Yi = ds(e0),
    t0 = ds(e0),
    n0 = ds(e0);
  function oo(a) {
    if (a === e0) throw Error(n(174));
    return a;
  }
  function Jf(a, u) {
    switch ((Zt(n0, u), Zt(t0, a), Zt(Yi, e0), (a = u.nodeType), a)) {
      case 9:
      case 11:
        u = (u = u.documentElement) ? u.namespaceURI : t1(null, "");
        break;
      default:
        (a = a === 8 ? u.parentNode : u),
          (u = a.namespaceURI || null),
          (a = a.tagName),
          (u = t1(u, a));
    }
    nn(Yi), Zt(Yi, u);
  }
  function La() {
    nn(Yi), nn(t0), nn(n0);
  }
  function Vg(a) {
    oo(n0.current);
    var u = oo(Yi.current),
      h = t1(u, a.type);
    u !== h && (Zt(t0, a), Zt(Yi, h));
  }
  function eh(a) {
    t0.current === a && (nn(Yi), nn(t0));
  }
  var mn = ds(0);
  function nc(a) {
    for (var u = a; u !== null; ) {
      if (u.tag === 13) {
        var h = u.memoizedState;
        if (
          h !== null &&
          ((h = h.dehydrated), h === null || h.data === "$?" || h.data === "$!")
        )
          return u;
      } else if (u.tag === 19 && u.memoizedProps.revealOrder !== void 0) {
        if ((u.flags & 128) !== 0) return u;
      } else if (u.child !== null) {
        (u.child.return = u), (u = u.child);
        continue;
      }
      if (u === a) break;
      for (; u.sibling === null; ) {
        if (u.return === null || u.return === a) return null;
        u = u.return;
      }
      (u.sibling.return = u.return), (u = u.sibling);
    }
    return null;
  }
  var th = [];
  function nh() {
    for (var a = 0; a < th.length; a++)
      th[a]._workInProgressVersionPrimary = null;
    th.length = 0;
  }
  var rc = T.ReactCurrentDispatcher,
    rh = T.ReactCurrentBatchConfig,
    ao = 0,
    gn = null,
    jn = null,
    Vn = null,
    ic = !1,
    r0 = !1,
    i0 = 0,
    bP = 0;
  function cr() {
    throw Error(n(321));
  }
  function ih(a, u) {
    if (u === null) return !1;
    for (var h = 0; h < u.length && h < a.length; h++)
      if (!Ci(a[h], u[h])) return !1;
    return !0;
  }
  function sh(a, u, h, y, S, I) {
    if (
      ((ao = I),
      (gn = u),
      (u.memoizedState = null),
      (u.updateQueue = null),
      (u.lanes = 0),
      (rc.current = a === null || a.memoizedState === null ? EP : kP),
      (a = h(y, S)),
      r0)
    ) {
      I = 0;
      do {
        if (((r0 = !1), (i0 = 0), 25 <= I)) throw Error(n(301));
        (I += 1),
          (Vn = jn = null),
          (u.updateQueue = null),
          (rc.current = _P),
          (a = h(y, S));
      } while (r0);
    }
    if (
      ((rc.current = ac),
      (u = jn !== null && jn.next !== null),
      (ao = 0),
      (Vn = jn = gn = null),
      (ic = !1),
      u)
    )
      throw Error(n(300));
    return a;
  }
  function oh() {
    var a = i0 !== 0;
    return (i0 = 0), a;
  }
  function Qi() {
    var a = {
      memoizedState: null,
      baseState: null,
      baseQueue: null,
      queue: null,
      next: null,
    };
    return Vn === null ? (gn.memoizedState = Vn = a) : (Vn = Vn.next = a), Vn;
  }
  function ci() {
    if (jn === null) {
      var a = gn.alternate;
      a = a !== null ? a.memoizedState : null;
    } else a = jn.next;
    var u = Vn === null ? gn.memoizedState : Vn.next;
    if (u !== null) (Vn = u), (jn = a);
    else {
      if (a === null) throw Error(n(310));
      (jn = a),
        (a = {
          memoizedState: jn.memoizedState,
          baseState: jn.baseState,
          baseQueue: jn.baseQueue,
          queue: jn.queue,
          next: null,
        }),
        Vn === null ? (gn.memoizedState = Vn = a) : (Vn = Vn.next = a);
    }
    return Vn;
  }
  function s0(a, u) {
    return typeof u == "function" ? u(a) : u;
  }
  function ah(a) {
    var u = ci(),
      h = u.queue;
    if (h === null) throw Error(n(311));
    h.lastRenderedReducer = a;
    var y = jn,
      S = y.baseQueue,
      I = h.pending;
    if (I !== null) {
      if (S !== null) {
        var Y = S.next;
        (S.next = I.next), (I.next = Y);
      }
      (y.baseQueue = S = I), (h.pending = null);
    }
    if (S !== null) {
      (I = S.next), (y = y.baseState);
      var f1 = (Y = null),
        x1 = null,
        O1 = I;
      do {
        var ee = O1.lane;
        if ((ao & ee) === ee)
          x1 !== null &&
            (x1 = x1.next =
              {
                lane: 0,
                action: O1.action,
                hasEagerState: O1.hasEagerState,
                eagerState: O1.eagerState,
                next: null,
              }),
            (y = O1.hasEagerState ? O1.eagerState : a(y, O1.action));
        else {
          var ne = {
            lane: ee,
            action: O1.action,
            hasEagerState: O1.hasEagerState,
            eagerState: O1.eagerState,
            next: null,
          };
          x1 === null ? ((f1 = x1 = ne), (Y = y)) : (x1 = x1.next = ne),
            (gn.lanes |= ee),
            (lo |= ee);
        }
        O1 = O1.next;
      } while (O1 !== null && O1 !== I);
      x1 === null ? (Y = y) : (x1.next = f1),
        Ci(y, u.memoizedState) || (Or = !0),
        (u.memoizedState = y),
        (u.baseState = Y),
        (u.baseQueue = x1),
        (h.lastRenderedState = y);
    }
    if (((a = h.interleaved), a !== null)) {
      S = a;
      do (I = S.lane), (gn.lanes |= I), (lo |= I), (S = S.next);
      while (S !== a);
    } else S === null && (h.lanes = 0);
    return [u.memoizedState, h.dispatch];
  }
  function lh(a) {
    var u = ci(),
      h = u.queue;
    if (h === null) throw Error(n(311));
    h.lastRenderedReducer = a;
    var y = h.dispatch,
      S = h.pending,
      I = u.memoizedState;
    if (S !== null) {
      h.pending = null;
      var Y = (S = S.next);
      do (I = a(I, Y.action)), (Y = Y.next);
      while (Y !== S);
      Ci(I, u.memoizedState) || (Or = !0),
        (u.memoizedState = I),
        u.baseQueue === null && (u.baseState = I),
        (h.lastRenderedState = I);
    }
    return [I, y];
  }
  function Wg() {}
  function zg(a, u) {
    var h = gn,
      y = ci(),
      S = u(),
      I = !Ci(y.memoizedState, S);
    if (
      (I && ((y.memoizedState = S), (Or = !0)),
      (y = y.queue),
      uh(Kg.bind(null, h, y, a), [a]),
      y.getSnapshot !== u || I || (Vn !== null && Vn.memoizedState.tag & 1))
    ) {
      if (
        ((h.flags |= 2048),
        o0(9, qg.bind(null, h, y, S, u), void 0, null),
        Wn === null)
      )
        throw Error(n(349));
      (ao & 30) !== 0 || Hg(h, u, S);
    }
    return S;
  }
  function Hg(a, u, h) {
    (a.flags |= 16384),
      (a = { getSnapshot: u, value: h }),
      (u = gn.updateQueue),
      u === null
        ? ((u = { lastEffect: null, stores: null }),
          (gn.updateQueue = u),
          (u.stores = [a]))
        : ((h = u.stores), h === null ? (u.stores = [a]) : h.push(a));
  }
  function qg(a, u, h, y) {
    (u.value = h), (u.getSnapshot = y), Gg(u) && Yg(a);
  }
  function Kg(a, u, h) {
    return h(function () {
      Gg(u) && Yg(a);
    });
  }
  function Gg(a) {
    var u = a.getSnapshot;
    a = a.value;
    try {
      var h = u();
      return !Ci(a, h);
    } catch {
      return !0;
    }
  }
  function Yg(a) {
    var u = A2(a, 1);
    u !== null && Ai(u, a, 1, -1);
  }
  function Qg(a) {
    var u = Qi();
    return (
      typeof a == "function" && (a = a()),
      (u.memoizedState = u.baseState = a),
      (a = {
        pending: null,
        interleaved: null,
        lanes: 0,
        dispatch: null,
        lastRenderedReducer: s0,
        lastRenderedState: a,
      }),
      (u.queue = a),
      (a = a.dispatch = SP.bind(null, gn, a)),
      [u.memoizedState, a]
    );
  }
  function o0(a, u, h, y) {
    return (
      (a = { tag: a, create: u, destroy: h, deps: y, next: null }),
      (u = gn.updateQueue),
      u === null
        ? ((u = { lastEffect: null, stores: null }),
          (gn.updateQueue = u),
          (u.lastEffect = a.next = a))
        : ((h = u.lastEffect),
          h === null
            ? (u.lastEffect = a.next = a)
            : ((y = h.next), (h.next = a), (a.next = y), (u.lastEffect = a))),
      a
    );
  }
  function Zg() {
    return ci().memoizedState;
  }
  function sc(a, u, h, y) {
    var S = Qi();
    (gn.flags |= a),
      (S.memoizedState = o0(1 | u, h, void 0, y === void 0 ? null : y));
  }
  function oc(a, u, h, y) {
    var S = ci();
    y = y === void 0 ? null : y;
    var I = void 0;
    if (jn !== null) {
      var Y = jn.memoizedState;
      if (((I = Y.destroy), y !== null && ih(y, Y.deps))) {
        S.memoizedState = o0(u, h, I, y);
        return;
      }
    }
    (gn.flags |= a), (S.memoizedState = o0(1 | u, h, I, y));
  }
  function Xg(a, u) {
    return sc(8390656, 8, a, u);
  }
  function uh(a, u) {
    return oc(2048, 8, a, u);
  }
  function Jg(a, u) {
    return oc(4, 2, a, u);
  }
  function e7(a, u) {
    return oc(4, 4, a, u);
  }
  function t7(a, u) {
    if (typeof u == "function")
      return (
        (a = a()),
        u(a),
        function () {
          u(null);
        }
      );
    if (u != null)
      return (
        (a = a()),
        (u.current = a),
        function () {
          u.current = null;
        }
      );
  }
  function n7(a, u, h) {
    return (
      (h = h != null ? h.concat([a]) : null), oc(4, 4, t7.bind(null, u, a), h)
    );
  }
  function ch() {}
  function r7(a, u) {
    var h = ci();
    u = u === void 0 ? null : u;
    var y = h.memoizedState;
    return y !== null && u !== null && ih(u, y[1])
      ? y[0]
      : ((h.memoizedState = [a, u]), a);
  }
  function i7(a, u) {
    var h = ci();
    u = u === void 0 ? null : u;
    var y = h.memoizedState;
    return y !== null && u !== null && ih(u, y[1])
      ? y[0]
      : ((a = a()), (h.memoizedState = [a, u]), a);
  }
  function s7(a, u, h) {
    return (ao & 21) === 0
      ? (a.baseState && ((a.baseState = !1), (Or = !0)), (a.memoizedState = h))
      : (Ci(h, u) ||
          ((h = $e()), (gn.lanes |= h), (lo |= h), (a.baseState = !0)),
        u);
  }
  function xP(a, u) {
    var h = be;
    (be = h !== 0 && 4 > h ? h : 4), a(!0);
    var y = rh.transition;
    rh.transition = {};
    try {
      a(!1), u();
    } finally {
      (be = h), (rh.transition = y);
    }
  }
  function o7() {
    return ci().memoizedState;
  }
  function CP(a, u, h) {
    var y = ws(a);
    if (
      ((h = {
        lane: y,
        action: h,
        hasEagerState: !1,
        eagerState: null,
        next: null,
      }),
      a7(a))
    )
      l7(u, h);
    else if (((h = Dg(a, u, h, y)), h !== null)) {
      var S = Er();
      Ai(h, a, y, S), u7(h, u, y);
    }
  }
  function SP(a, u, h) {
    var y = ws(a),
      S = {
        lane: y,
        action: h,
        hasEagerState: !1,
        eagerState: null,
        next: null,
      };
    if (a7(a)) l7(u, S);
    else {
      var I = a.alternate;
      if (
        a.lanes === 0 &&
        (I === null || I.lanes === 0) &&
        ((I = u.lastRenderedReducer), I !== null)
      )
        try {
          var Y = u.lastRenderedState,
            f1 = I(Y, h);
          if (((S.hasEagerState = !0), (S.eagerState = f1), Ci(f1, Y))) {
            var x1 = u.interleaved;
            x1 === null
              ? ((S.next = S), Zf(u))
              : ((S.next = x1.next), (x1.next = S)),
              (u.interleaved = S);
            return;
          }
        } catch {
        } finally {
        }
      (h = Dg(a, u, S, y)),
        h !== null && ((S = Er()), Ai(h, a, y, S), u7(h, u, y));
    }
  }
  function a7(a) {
    var u = a.alternate;
    return a === gn || (u !== null && u === gn);
  }
  function l7(a, u) {
    r0 = ic = !0;
    var h = a.pending;
    h === null ? (u.next = u) : ((u.next = h.next), (h.next = u)),
      (a.pending = u);
  }
  function u7(a, u, h) {
    if ((h & 4194240) !== 0) {
      var y = u.lanes;
      (y &= a.pendingLanes), (h |= y), (u.lanes = h), qt(a, h);
    }
  }
  var ac = {
      readContext: ui,
      useCallback: cr,
      useContext: cr,
      useEffect: cr,
      useImperativeHandle: cr,
      useInsertionEffect: cr,
      useLayoutEffect: cr,
      useMemo: cr,
      useReducer: cr,
      useRef: cr,
      useState: cr,
      useDebugValue: cr,
      useDeferredValue: cr,
      useTransition: cr,
      useMutableSource: cr,
      useSyncExternalStore: cr,
      useId: cr,
      unstable_isNewReconciler: !1,
    },
    EP = {
      readContext: ui,
      useCallback: function (a, u) {
        return (Qi().memoizedState = [a, u === void 0 ? null : u]), a;
      },
      useContext: ui,
      useEffect: Xg,
      useImperativeHandle: function (a, u, h) {
        return (
          (h = h != null ? h.concat([a]) : null),
          sc(4194308, 4, t7.bind(null, u, a), h)
        );
      },
      useLayoutEffect: function (a, u) {
        return sc(4194308, 4, a, u);
      },
      useInsertionEffect: function (a, u) {
        return sc(4, 2, a, u);
      },
      useMemo: function (a, u) {
        var h = Qi();
        return (
          (u = u === void 0 ? null : u),
          (a = a()),
          (h.memoizedState = [a, u]),
          a
        );
      },
      useReducer: function (a, u, h) {
        var y = Qi();
        return (
          (u = h !== void 0 ? h(u) : u),
          (y.memoizedState = y.baseState = u),
          (a = {
            pending: null,
            interleaved: null,
            lanes: 0,
            dispatch: null,
            lastRenderedReducer: a,
            lastRenderedState: u,
          }),
          (y.queue = a),
          (a = a.dispatch = CP.bind(null, gn, a)),
          [y.memoizedState, a]
        );
      },
      useRef: function (a) {
        var u = Qi();
        return (a = { current: a }), (u.memoizedState = a);
      },
      useState: Qg,
      useDebugValue: ch,
      useDeferredValue: function (a) {
        return (Qi().memoizedState = a);
      },
      useTransition: function () {
        var a = Qg(!1),
          u = a[0];
        return (a = xP.bind(null, a[1])), (Qi().memoizedState = a), [u, a];
      },
      useMutableSource: function () {},
      useSyncExternalStore: function (a, u, h) {
        var y = gn,
          S = Qi();
        if (un) {
          if (h === void 0) throw Error(n(407));
          h = h();
        } else {
          if (((h = u()), Wn === null)) throw Error(n(349));
          (ao & 30) !== 0 || Hg(y, u, h);
        }
        S.memoizedState = h;
        var I = { value: h, getSnapshot: u };
        return (
          (S.queue = I),
          Xg(Kg.bind(null, y, I, a), [a]),
          (y.flags |= 2048),
          o0(9, qg.bind(null, y, I, h, u), void 0, null),
          h
        );
      },
      useId: function () {
        var a = Qi(),
          u = Wn.identifierPrefix;
        if (un) {
          var h = _2,
            y = k2;
          (h = (y & ~(1 << (32 - H1(y) - 1))).toString(32) + h),
            (u = ":" + u + "R" + h),
            (h = i0++),
            0 < h && (u += "H" + h.toString(32)),
            (u += ":");
        } else (h = bP++), (u = ":" + u + "r" + h.toString(32) + ":");
        return (a.memoizedState = u);
      },
      unstable_isNewReconciler: !1,
    },
    kP = {
      readContext: ui,
      useCallback: r7,
      useContext: ui,
      useEffect: uh,
      useImperativeHandle: n7,
      useInsertionEffect: Jg,
      useLayoutEffect: e7,
      useMemo: i7,
      useReducer: ah,
      useRef: Zg,
      useState: function () {
        return ah(s0);
      },
      useDebugValue: ch,
      useDeferredValue: function (a) {
        var u = ci();
        return s7(u, jn.memoizedState, a);
      },
      useTransition: function () {
        var a = ah(s0)[0],
          u = ci().memoizedState;
        return [a, u];
      },
      useMutableSource: Wg,
      useSyncExternalStore: zg,
      useId: o7,
      unstable_isNewReconciler: !1,
    },
    _P = {
      readContext: ui,
      useCallback: r7,
      useContext: ui,
      useEffect: uh,
      useImperativeHandle: n7,
      useInsertionEffect: Jg,
      useLayoutEffect: e7,
      useMemo: i7,
      useReducer: lh,
      useRef: Zg,
      useState: function () {
        return lh(s0);
      },
      useDebugValue: ch,
      useDeferredValue: function (a) {
        var u = ci();
        return jn === null ? (u.memoizedState = a) : s7(u, jn.memoizedState, a);
      },
      useTransition: function () {
        var a = lh(s0)[0],
          u = ci().memoizedState;
        return [a, u];
      },
      useMutableSource: Wg,
      useSyncExternalStore: zg,
      useId: o7,
      unstable_isNewReconciler: !1,
    };
  function Ei(a, u) {
    if (a && a.defaultProps) {
      (u = b1({}, u)), (a = a.defaultProps);
      for (var h in a) u[h] === void 0 && (u[h] = a[h]);
      return u;
    }
    return u;
  }
  function dh(a, u, h, y) {
    (u = a.memoizedState),
      (h = h(y, u)),
      (h = h == null ? u : b1({}, u, h)),
      (a.memoizedState = h),
      a.lanes === 0 && (a.updateQueue.baseState = h);
  }
  var lc = {
    isMounted: function (a) {
      return (a = a._reactInternals) ? X1(a) === a : !1;
    },
    enqueueSetState: function (a, u, h) {
      a = a._reactInternals;
      var y = Er(),
        S = ws(a),
        I = T2(y, S);
      (I.payload = u),
        h != null && (I.callback = h),
        (u = ms(a, I, S)),
        u !== null && (Ai(u, a, S, y), ec(u, a, S));
    },
    enqueueReplaceState: function (a, u, h) {
      a = a._reactInternals;
      var y = Er(),
        S = ws(a),
        I = T2(y, S);
      (I.tag = 1),
        (I.payload = u),
        h != null && (I.callback = h),
        (u = ms(a, I, S)),
        u !== null && (Ai(u, a, S, y), ec(u, a, S));
    },
    enqueueForceUpdate: function (a, u) {
      a = a._reactInternals;
      var h = Er(),
        y = ws(a),
        S = T2(h, y);
      (S.tag = 2),
        u != null && (S.callback = u),
        (u = ms(a, S, y)),
        u !== null && (Ai(u, a, y, h), ec(u, a, y));
    },
  };
  function c7(a, u, h, y, S, I, Y) {
    return (
      (a = a.stateNode),
      typeof a.shouldComponentUpdate == "function"
        ? a.shouldComponentUpdate(y, I, Y)
        : u.prototype && u.prototype.isPureReactComponent
        ? !q3(h, y) || !q3(S, I)
        : !0
    );
  }
  function d7(a, u, h) {
    var y = !1,
      S = fs,
      I = u.contextType;
    return (
      typeof I == "object" && I !== null
        ? (I = ui(I))
        : ((S = Nr(u) ? no : ur.current),
          (y = u.contextTypes),
          (I = (y = y != null) ? ka(a, S) : fs)),
      (u = new u(h, I)),
      (a.memoizedState =
        u.state !== null && u.state !== void 0 ? u.state : null),
      (u.updater = lc),
      (a.stateNode = u),
      (u._reactInternals = a),
      y &&
        ((a = a.stateNode),
        (a.__reactInternalMemoizedUnmaskedChildContext = S),
        (a.__reactInternalMemoizedMaskedChildContext = I)),
      u
    );
  }
  function f7(a, u, h, y) {
    (a = u.state),
      typeof u.componentWillReceiveProps == "function" &&
        u.componentWillReceiveProps(h, y),
      typeof u.UNSAFE_componentWillReceiveProps == "function" &&
        u.UNSAFE_componentWillReceiveProps(h, y),
      u.state !== a && lc.enqueueReplaceState(u, u.state, null);
  }
  function fh(a, u, h, y) {
    var S = a.stateNode;
    (S.props = h), (S.state = a.memoizedState), (S.refs = {}), Xf(a);
    var I = u.contextType;
    typeof I == "object" && I !== null
      ? (S.context = ui(I))
      : ((I = Nr(u) ? no : ur.current), (S.context = ka(a, I))),
      (S.state = a.memoizedState),
      (I = u.getDerivedStateFromProps),
      typeof I == "function" && (dh(a, u, I, h), (S.state = a.memoizedState)),
      typeof u.getDerivedStateFromProps == "function" ||
        typeof S.getSnapshotBeforeUpdate == "function" ||
        (typeof S.UNSAFE_componentWillMount != "function" &&
          typeof S.componentWillMount != "function") ||
        ((u = S.state),
        typeof S.componentWillMount == "function" && S.componentWillMount(),
        typeof S.UNSAFE_componentWillMount == "function" &&
          S.UNSAFE_componentWillMount(),
        u !== S.state && lc.enqueueReplaceState(S, S.state, null),
        tc(a, h, S, y),
        (S.state = a.memoizedState)),
      typeof S.componentDidMount == "function" && (a.flags |= 4194308);
  }
  function Ia(a, u) {
    try {
      var h = "",
        y = u;
      do (h += M1(y)), (y = y.return);
      while (y);
      var S = h;
    } catch (I) {
      S =
        `
Error generating stack: ` +
        I.message +
        `
` +
        I.stack;
    }
    return { value: a, source: u, stack: S, digest: null };
  }
  function hh(a, u, h) {
    return { value: a, source: null, stack: h ?? null, digest: u ?? null };
  }
  function ph(a, u) {
    try {
      console.error(u.value);
    } catch (h) {
      setTimeout(function () {
        throw h;
      });
    }
  }
  var AP = typeof WeakMap == "function" ? WeakMap : Map;
  function h7(a, u, h) {
    (h = T2(-1, h)), (h.tag = 3), (h.payload = { element: null });
    var y = u.value;
    return (
      (h.callback = function () {
        mc || ((mc = !0), (Ph = y)), ph(a, u);
      }),
      h
    );
  }
  function p7(a, u, h) {
    (h = T2(-1, h)), (h.tag = 3);
    var y = a.type.getDerivedStateFromError;
    if (typeof y == "function") {
      var S = u.value;
      (h.payload = function () {
        return y(S);
      }),
        (h.callback = function () {
          ph(a, u);
        });
    }
    var I = a.stateNode;
    return (
      I !== null &&
        typeof I.componentDidCatch == "function" &&
        (h.callback = function () {
          ph(a, u),
            typeof y != "function" &&
              (ys === null ? (ys = new Set([this])) : ys.add(this));
          var Y = u.stack;
          this.componentDidCatch(u.value, {
            componentStack: Y !== null ? Y : "",
          });
        }),
      h
    );
  }
  function m7(a, u, h) {
    var y = a.pingCache;
    if (y === null) {
      y = a.pingCache = new AP();
      var S = new Set();
      y.set(u, S);
    } else (S = y.get(u)), S === void 0 && ((S = new Set()), y.set(u, S));
    S.has(h) || (S.add(h), (a = $P.bind(null, a, u, h)), u.then(a, a));
  }
  function g7(a) {
    do {
      var u;
      if (
        ((u = a.tag === 13) &&
          ((u = a.memoizedState),
          (u = u !== null ? u.dehydrated !== null : !0)),
        u)
      )
        return a;
      a = a.return;
    } while (a !== null);
    return null;
  }
  function y7(a, u, h, y, S) {
    return (a.mode & 1) === 0
      ? (a === u
          ? (a.flags |= 65536)
          : ((a.flags |= 128),
            (h.flags |= 131072),
            (h.flags &= -52805),
            h.tag === 1 &&
              (h.alternate === null
                ? (h.tag = 17)
                : ((u = T2(-1, 1)), (u.tag = 2), ms(h, u, 1))),
            (h.lanes |= 1)),
        a)
      : ((a.flags |= 65536), (a.lanes = S), a);
  }
  var TP = T.ReactCurrentOwner,
    Or = !1;
  function Sr(a, u, h, y) {
    u.child = a === null ? Bg(u, null, h, y) : Pa(u, a.child, h, y);
  }
  function v7(a, u, h, y, S) {
    h = h.render;
    var I = u.ref;
    return (
      Ra(u, S),
      (y = sh(a, u, h, y, I, S)),
      (h = oh()),
      a !== null && !Or
        ? ((u.updateQueue = a.updateQueue),
          (u.flags &= -2053),
          (a.lanes &= ~S),
          P2(a, u, S))
        : (un && h && Vf(u), (u.flags |= 1), Sr(a, u, y, S), u.child)
    );
  }
  function w7(a, u, h, y, S) {
    if (a === null) {
      var I = h.type;
      return typeof I == "function" &&
        !Oh(I) &&
        I.defaultProps === void 0 &&
        h.compare === null &&
        h.defaultProps === void 0
        ? ((u.tag = 15), (u.type = I), b7(a, u, I, y, S))
        : ((a = xc(h.type, null, y, u, u.mode, S)),
          (a.ref = u.ref),
          (a.return = u),
          (u.child = a));
    }
    if (((I = a.child), (a.lanes & S) === 0)) {
      var Y = I.memoizedProps;
      if (
        ((h = h.compare), (h = h !== null ? h : q3), h(Y, y) && a.ref === u.ref)
      )
        return P2(a, u, S);
    }
    return (
      (u.flags |= 1),
      (a = xs(I, y)),
      (a.ref = u.ref),
      (a.return = u),
      (u.child = a)
    );
  }
  function b7(a, u, h, y, S) {
    if (a !== null) {
      var I = a.memoizedProps;
      if (q3(I, y) && a.ref === u.ref)
        if (((Or = !1), (u.pendingProps = y = I), (a.lanes & S) !== 0))
          (a.flags & 131072) !== 0 && (Or = !0);
        else return (u.lanes = a.lanes), P2(a, u, S);
    }
    return mh(a, u, h, y, S);
  }
  function x7(a, u, h) {
    var y = u.pendingProps,
      S = y.children,
      I = a !== null ? a.memoizedState : null;
    if (y.mode === "hidden")
      if ((u.mode & 1) === 0)
        (u.memoizedState = {
          baseLanes: 0,
          cachePool: null,
          transitions: null,
        }),
          Zt(Na, Qr),
          (Qr |= h);
      else {
        if ((h & 1073741824) === 0)
          return (
            (a = I !== null ? I.baseLanes | h : h),
            (u.lanes = u.childLanes = 1073741824),
            (u.memoizedState = {
              baseLanes: a,
              cachePool: null,
              transitions: null,
            }),
            (u.updateQueue = null),
            Zt(Na, Qr),
            (Qr |= a),
            null
          );
        (u.memoizedState = {
          baseLanes: 0,
          cachePool: null,
          transitions: null,
        }),
          (y = I !== null ? I.baseLanes : h),
          Zt(Na, Qr),
          (Qr |= y);
      }
    else
      I !== null ? ((y = I.baseLanes | h), (u.memoizedState = null)) : (y = h),
        Zt(Na, Qr),
        (Qr |= y);
    return Sr(a, u, S, h), u.child;
  }
  function C7(a, u) {
    var h = u.ref;
    ((a === null && h !== null) || (a !== null && a.ref !== h)) &&
      ((u.flags |= 512), (u.flags |= 2097152));
  }
  function mh(a, u, h, y, S) {
    var I = Nr(h) ? no : ur.current;
    return (
      (I = ka(u, I)),
      Ra(u, S),
      (h = sh(a, u, h, y, I, S)),
      (y = oh()),
      a !== null && !Or
        ? ((u.updateQueue = a.updateQueue),
          (u.flags &= -2053),
          (a.lanes &= ~S),
          P2(a, u, S))
        : (un && y && Vf(u), (u.flags |= 1), Sr(a, u, h, S), u.child)
    );
  }
  function S7(a, u, h, y, S) {
    if (Nr(h)) {
      var I = !0;
      qu(u);
    } else I = !1;
    if ((Ra(u, S), u.stateNode === null))
      cc(a, u), d7(u, h, y), fh(u, h, y, S), (y = !0);
    else if (a === null) {
      var Y = u.stateNode,
        f1 = u.memoizedProps;
      Y.props = f1;
      var x1 = Y.context,
        O1 = h.contextType;
      typeof O1 == "object" && O1 !== null
        ? (O1 = ui(O1))
        : ((O1 = Nr(h) ? no : ur.current), (O1 = ka(u, O1)));
      var ee = h.getDerivedStateFromProps,
        ne =
          typeof ee == "function" ||
          typeof Y.getSnapshotBeforeUpdate == "function";
      ne ||
        (typeof Y.UNSAFE_componentWillReceiveProps != "function" &&
          typeof Y.componentWillReceiveProps != "function") ||
        ((f1 !== y || x1 !== O1) && f7(u, Y, y, O1)),
        (ps = !1);
      var Z1 = u.memoizedState;
      (Y.state = Z1),
        tc(u, y, Y, S),
        (x1 = u.memoizedState),
        f1 !== y || Z1 !== x1 || jr.current || ps
          ? (typeof ee == "function" &&
              (dh(u, h, ee, y), (x1 = u.memoizedState)),
            (f1 = ps || c7(u, h, f1, y, Z1, x1, O1))
              ? (ne ||
                  (typeof Y.UNSAFE_componentWillMount != "function" &&
                    typeof Y.componentWillMount != "function") ||
                  (typeof Y.componentWillMount == "function" &&
                    Y.componentWillMount(),
                  typeof Y.UNSAFE_componentWillMount == "function" &&
                    Y.UNSAFE_componentWillMount()),
                typeof Y.componentDidMount == "function" &&
                  (u.flags |= 4194308))
              : (typeof Y.componentDidMount == "function" &&
                  (u.flags |= 4194308),
                (u.memoizedProps = y),
                (u.memoizedState = x1)),
            (Y.props = y),
            (Y.state = x1),
            (Y.context = O1),
            (y = f1))
          : (typeof Y.componentDidMount == "function" && (u.flags |= 4194308),
            (y = !1));
    } else {
      (Y = u.stateNode),
        Fg(a, u),
        (f1 = u.memoizedProps),
        (O1 = u.type === u.elementType ? f1 : Ei(u.type, f1)),
        (Y.props = O1),
        (ne = u.pendingProps),
        (Z1 = Y.context),
        (x1 = h.contextType),
        typeof x1 == "object" && x1 !== null
          ? (x1 = ui(x1))
          : ((x1 = Nr(h) ? no : ur.current), (x1 = ka(u, x1)));
      var xe = h.getDerivedStateFromProps;
      (ee =
        typeof xe == "function" ||
        typeof Y.getSnapshotBeforeUpdate == "function") ||
        (typeof Y.UNSAFE_componentWillReceiveProps != "function" &&
          typeof Y.componentWillReceiveProps != "function") ||
        ((f1 !== ne || Z1 !== x1) && f7(u, Y, y, x1)),
        (ps = !1),
        (Z1 = u.memoizedState),
        (Y.state = Z1),
        tc(u, y, Y, S);
      var Ie = u.memoizedState;
      f1 !== ne || Z1 !== Ie || jr.current || ps
        ? (typeof xe == "function" && (dh(u, h, xe, y), (Ie = u.memoizedState)),
          (O1 = ps || c7(u, h, O1, y, Z1, Ie, x1) || !1)
            ? (ee ||
                (typeof Y.UNSAFE_componentWillUpdate != "function" &&
                  typeof Y.componentWillUpdate != "function") ||
                (typeof Y.componentWillUpdate == "function" &&
                  Y.componentWillUpdate(y, Ie, x1),
                typeof Y.UNSAFE_componentWillUpdate == "function" &&
                  Y.UNSAFE_componentWillUpdate(y, Ie, x1)),
              typeof Y.componentDidUpdate == "function" && (u.flags |= 4),
              typeof Y.getSnapshotBeforeUpdate == "function" &&
                (u.flags |= 1024))
            : (typeof Y.componentDidUpdate != "function" ||
                (f1 === a.memoizedProps && Z1 === a.memoizedState) ||
                (u.flags |= 4),
              typeof Y.getSnapshotBeforeUpdate != "function" ||
                (f1 === a.memoizedProps && Z1 === a.memoizedState) ||
                (u.flags |= 1024),
              (u.memoizedProps = y),
              (u.memoizedState = Ie)),
          (Y.props = y),
          (Y.state = Ie),
          (Y.context = x1),
          (y = O1))
        : (typeof Y.componentDidUpdate != "function" ||
            (f1 === a.memoizedProps && Z1 === a.memoizedState) ||
            (u.flags |= 4),
          typeof Y.getSnapshotBeforeUpdate != "function" ||
            (f1 === a.memoizedProps && Z1 === a.memoizedState) ||
            (u.flags |= 1024),
          (y = !1));
    }
    return gh(a, u, h, y, I, S);
  }
  function gh(a, u, h, y, S, I) {
    C7(a, u);
    var Y = (u.flags & 128) !== 0;
    if (!y && !Y) return S && Tg(u, h, !1), P2(a, u, I);
    (y = u.stateNode), (TP.current = u);
    var f1 =
      Y && typeof h.getDerivedStateFromError != "function" ? null : y.render();
    return (
      (u.flags |= 1),
      a !== null && Y
        ? ((u.child = Pa(u, a.child, null, I)), (u.child = Pa(u, null, f1, I)))
        : Sr(a, u, f1, I),
      (u.memoizedState = y.state),
      S && Tg(u, h, !0),
      u.child
    );
  }
  function E7(a) {
    var u = a.stateNode;
    u.pendingContext
      ? _g(a, u.pendingContext, u.pendingContext !== u.context)
      : u.context && _g(a, u.context, !1),
      Jf(a, u.containerInfo);
  }
  function k7(a, u, h, y, S) {
    return Ta(), qf(S), (u.flags |= 256), Sr(a, u, h, y), u.child;
  }
  var yh = { dehydrated: null, treeContext: null, retryLane: 0 };
  function vh(a) {
    return { baseLanes: a, cachePool: null, transitions: null };
  }
  function _7(a, u, h) {
    var y = u.pendingProps,
      S = mn.current,
      I = !1,
      Y = (u.flags & 128) !== 0,
      f1;
    if (
      ((f1 = Y) ||
        (f1 = a !== null && a.memoizedState === null ? !1 : (S & 2) !== 0),
      f1
        ? ((I = !0), (u.flags &= -129))
        : (a === null || a.memoizedState !== null) && (S |= 1),
      Zt(mn, S & 1),
      a === null)
    )
      return (
        Hf(u),
        (a = u.memoizedState),
        a !== null && ((a = a.dehydrated), a !== null)
          ? ((u.mode & 1) === 0
              ? (u.lanes = 1)
              : a.data === "$!"
              ? (u.lanes = 8)
              : (u.lanes = 1073741824),
            null)
          : ((Y = y.children),
            (a = y.fallback),
            I
              ? ((y = u.mode),
                (I = u.child),
                (Y = { mode: "hidden", children: Y }),
                (y & 1) === 0 && I !== null
                  ? ((I.childLanes = 0), (I.pendingProps = Y))
                  : (I = Cc(Y, y, 0, null)),
                (a = ho(a, y, h, null)),
                (I.return = u),
                (a.return = u),
                (I.sibling = a),
                (u.child = I),
                (u.child.memoizedState = vh(h)),
                (u.memoizedState = yh),
                a)
              : wh(u, Y))
      );
    if (
      ((S = a.memoizedState), S !== null && ((f1 = S.dehydrated), f1 !== null))
    )
      return PP(a, u, Y, y, f1, S, h);
    if (I) {
      (I = y.fallback), (Y = u.mode), (S = a.child), (f1 = S.sibling);
      var x1 = { mode: "hidden", children: y.children };
      return (
        (Y & 1) === 0 && u.child !== S
          ? ((y = u.child),
            (y.childLanes = 0),
            (y.pendingProps = x1),
            (u.deletions = null))
          : ((y = xs(S, x1)), (y.subtreeFlags = S.subtreeFlags & 14680064)),
        f1 !== null
          ? (I = xs(f1, I))
          : ((I = ho(I, Y, h, null)), (I.flags |= 2)),
        (I.return = u),
        (y.return = u),
        (y.sibling = I),
        (u.child = y),
        (y = I),
        (I = u.child),
        (Y = a.child.memoizedState),
        (Y =
          Y === null
            ? vh(h)
            : {
                baseLanes: Y.baseLanes | h,
                cachePool: null,
                transitions: Y.transitions,
              }),
        (I.memoizedState = Y),
        (I.childLanes = a.childLanes & ~h),
        (u.memoizedState = yh),
        y
      );
    }
    return (
      (I = a.child),
      (a = I.sibling),
      (y = xs(I, { mode: "visible", children: y.children })),
      (u.mode & 1) === 0 && (y.lanes = h),
      (y.return = u),
      (y.sibling = null),
      a !== null &&
        ((h = u.deletions),
        h === null ? ((u.deletions = [a]), (u.flags |= 16)) : h.push(a)),
      (u.child = y),
      (u.memoizedState = null),
      y
    );
  }
  function wh(a, u) {
    return (
      (u = Cc({ mode: "visible", children: u }, a.mode, 0, null)),
      (u.return = a),
      (a.child = u)
    );
  }
  function uc(a, u, h, y) {
    return (
      y !== null && qf(y),
      Pa(u, a.child, null, h),
      (a = wh(u, u.pendingProps.children)),
      (a.flags |= 2),
      (u.memoizedState = null),
      a
    );
  }
  function PP(a, u, h, y, S, I, Y) {
    if (h)
      return u.flags & 256
        ? ((u.flags &= -257), (y = hh(Error(n(422)))), uc(a, u, Y, y))
        : u.memoizedState !== null
        ? ((u.child = a.child), (u.flags |= 128), null)
        : ((I = y.fallback),
          (S = u.mode),
          (y = Cc({ mode: "visible", children: y.children }, S, 0, null)),
          (I = ho(I, S, Y, null)),
          (I.flags |= 2),
          (y.return = u),
          (I.return = u),
          (y.sibling = I),
          (u.child = y),
          (u.mode & 1) !== 0 && Pa(u, a.child, null, Y),
          (u.child.memoizedState = vh(Y)),
          (u.memoizedState = yh),
          I);
    if ((u.mode & 1) === 0) return uc(a, u, Y, null);
    if (S.data === "$!") {
      if (((y = S.nextSibling && S.nextSibling.dataset), y)) var f1 = y.dgst;
      return (
        (y = f1), (I = Error(n(419))), (y = hh(I, y, void 0)), uc(a, u, Y, y)
      );
    }
    if (((f1 = (Y & a.childLanes) !== 0), Or || f1)) {
      if (((y = Wn), y !== null)) {
        switch (Y & -Y) {
          case 4:
            S = 2;
            break;
          case 16:
            S = 8;
            break;
          case 64:
          case 128:
          case 256:
          case 512:
          case 1024:
          case 2048:
          case 4096:
          case 8192:
          case 16384:
          case 32768:
          case 65536:
          case 131072:
          case 262144:
          case 524288:
          case 1048576:
          case 2097152:
          case 4194304:
          case 8388608:
          case 16777216:
          case 33554432:
          case 67108864:
            S = 32;
            break;
          case 536870912:
            S = 268435456;
            break;
          default:
            S = 0;
        }
        (S = (S & (y.suspendedLanes | Y)) !== 0 ? 0 : S),
          S !== 0 &&
            S !== I.retryLane &&
            ((I.retryLane = S), A2(a, S), Ai(y, a, S, -1));
      }
      return Nh(), (y = hh(Error(n(421)))), uc(a, u, Y, y);
    }
    return S.data === "$?"
      ? ((u.flags |= 128),
        (u.child = a.child),
        (u = VP.bind(null, a)),
        (S._reactRetry = u),
        null)
      : ((a = I.treeContext),
        (Yr = cs(S.nextSibling)),
        (Gr = u),
        (un = !0),
        (Si = null),
        a !== null &&
          ((ai[li++] = k2),
          (ai[li++] = _2),
          (ai[li++] = ro),
          (k2 = a.id),
          (_2 = a.overflow),
          (ro = u)),
        (u = wh(u, y.children)),
        (u.flags |= 4096),
        u);
  }
  function A7(a, u, h) {
    a.lanes |= u;
    var y = a.alternate;
    y !== null && (y.lanes |= u), Qf(a.return, u, h);
  }
  function bh(a, u, h, y, S) {
    var I = a.memoizedState;
    I === null
      ? (a.memoizedState = {
          isBackwards: u,
          rendering: null,
          renderingStartTime: 0,
          last: y,
          tail: h,
          tailMode: S,
        })
      : ((I.isBackwards = u),
        (I.rendering = null),
        (I.renderingStartTime = 0),
        (I.last = y),
        (I.tail = h),
        (I.tailMode = S));
  }
  function T7(a, u, h) {
    var y = u.pendingProps,
      S = y.revealOrder,
      I = y.tail;
    if ((Sr(a, u, y.children, h), (y = mn.current), (y & 2) !== 0))
      (y = (y & 1) | 2), (u.flags |= 128);
    else {
      if (a !== null && (a.flags & 128) !== 0)
        e: for (a = u.child; a !== null; ) {
          if (a.tag === 13) a.memoizedState !== null && A7(a, h, u);
          else if (a.tag === 19) A7(a, h, u);
          else if (a.child !== null) {
            (a.child.return = a), (a = a.child);
            continue;
          }
          if (a === u) break e;
          for (; a.sibling === null; ) {
            if (a.return === null || a.return === u) break e;
            a = a.return;
          }
          (a.sibling.return = a.return), (a = a.sibling);
        }
      y &= 1;
    }
    if ((Zt(mn, y), (u.mode & 1) === 0)) u.memoizedState = null;
    else
      switch (S) {
        case "forwards":
          for (h = u.child, S = null; h !== null; )
            (a = h.alternate),
              a !== null && nc(a) === null && (S = h),
              (h = h.sibling);
          (h = S),
            h === null
              ? ((S = u.child), (u.child = null))
              : ((S = h.sibling), (h.sibling = null)),
            bh(u, !1, S, h, I);
          break;
        case "backwards":
          for (h = null, S = u.child, u.child = null; S !== null; ) {
            if (((a = S.alternate), a !== null && nc(a) === null)) {
              u.child = S;
              break;
            }
            (a = S.sibling), (S.sibling = h), (h = S), (S = a);
          }
          bh(u, !0, h, null, I);
          break;
        case "together":
          bh(u, !1, null, null, void 0);
          break;
        default:
          u.memoizedState = null;
      }
    return u.child;
  }
  function cc(a, u) {
    (u.mode & 1) === 0 &&
      a !== null &&
      ((a.alternate = null), (u.alternate = null), (u.flags |= 2));
  }
  function P2(a, u, h) {
    if (
      (a !== null && (u.dependencies = a.dependencies),
      (lo |= u.lanes),
      (h & u.childLanes) === 0)
    )
      return null;
    if (a !== null && u.child !== a.child) throw Error(n(153));
    if (u.child !== null) {
      for (
        a = u.child, h = xs(a, a.pendingProps), u.child = h, h.return = u;
        a.sibling !== null;

      )
        (a = a.sibling),
          (h = h.sibling = xs(a, a.pendingProps)),
          (h.return = u);
      h.sibling = null;
    }
    return u.child;
  }
  function MP(a, u, h) {
    switch (u.tag) {
      case 3:
        E7(u), Ta();
        break;
      case 5:
        Vg(u);
        break;
      case 1:
        Nr(u.type) && qu(u);
        break;
      case 4:
        Jf(u, u.stateNode.containerInfo);
        break;
      case 10:
        var y = u.type._context,
          S = u.memoizedProps.value;
        Zt(Xu, y._currentValue), (y._currentValue = S);
        break;
      case 13:
        if (((y = u.memoizedState), y !== null))
          return y.dehydrated !== null
            ? (Zt(mn, mn.current & 1), (u.flags |= 128), null)
            : (h & u.child.childLanes) !== 0
            ? _7(a, u, h)
            : (Zt(mn, mn.current & 1),
              (a = P2(a, u, h)),
              a !== null ? a.sibling : null);
        Zt(mn, mn.current & 1);
        break;
      case 19:
        if (((y = (h & u.childLanes) !== 0), (a.flags & 128) !== 0)) {
          if (y) return T7(a, u, h);
          u.flags |= 128;
        }
        if (
          ((S = u.memoizedState),
          S !== null &&
            ((S.rendering = null), (S.tail = null), (S.lastEffect = null)),
          Zt(mn, mn.current),
          y)
        )
          break;
        return null;
      case 22:
      case 23:
        return (u.lanes = 0), x7(a, u, h);
    }
    return P2(a, u, h);
  }
  var P7, xh, M7, R7;
  (P7 = function (a, u) {
    for (var h = u.child; h !== null; ) {
      if (h.tag === 5 || h.tag === 6) a.appendChild(h.stateNode);
      else if (h.tag !== 4 && h.child !== null) {
        (h.child.return = h), (h = h.child);
        continue;
      }
      if (h === u) break;
      for (; h.sibling === null; ) {
        if (h.return === null || h.return === u) return;
        h = h.return;
      }
      (h.sibling.return = h.return), (h = h.sibling);
    }
  }),
    (xh = function () {}),
    (M7 = function (a, u, h, y) {
      var S = a.memoizedProps;
      if (S !== y) {
        (a = u.stateNode), oo(Yi.current);
        var I = null;
        switch (h) {
          case "input":
            (S = ie(a, S)), (y = ie(a, y)), (I = []);
            break;
          case "select":
            (S = b1({}, S, { value: void 0 })),
              (y = b1({}, y, { value: void 0 })),
              (I = []);
            break;
          case "textarea":
            (S = g1(a, S)), (y = g1(a, y)), (I = []);
            break;
          default:
            typeof S.onClick != "function" &&
              typeof y.onClick == "function" &&
              (a.onclick = Wu);
        }
        w1(h, y);
        var Y;
        h = null;
        for (O1 in S)
          if (!y.hasOwnProperty(O1) && S.hasOwnProperty(O1) && S[O1] != null)
            if (O1 === "style") {
              var f1 = S[O1];
              for (Y in f1)
                f1.hasOwnProperty(Y) && (h || (h = {}), (h[Y] = ""));
            } else
              O1 !== "dangerouslySetInnerHTML" &&
                O1 !== "children" &&
                O1 !== "suppressContentEditableWarning" &&
                O1 !== "suppressHydrationWarning" &&
                O1 !== "autoFocus" &&
                (i.hasOwnProperty(O1)
                  ? I || (I = [])
                  : (I = I || []).push(O1, null));
        for (O1 in y) {
          var x1 = y[O1];
          if (
            ((f1 = S != null ? S[O1] : void 0),
            y.hasOwnProperty(O1) && x1 !== f1 && (x1 != null || f1 != null))
          )
            if (O1 === "style")
              if (f1) {
                for (Y in f1)
                  !f1.hasOwnProperty(Y) ||
                    (x1 && x1.hasOwnProperty(Y)) ||
                    (h || (h = {}), (h[Y] = ""));
                for (Y in x1)
                  x1.hasOwnProperty(Y) &&
                    f1[Y] !== x1[Y] &&
                    (h || (h = {}), (h[Y] = x1[Y]));
              } else h || (I || (I = []), I.push(O1, h)), (h = x1);
            else
              O1 === "dangerouslySetInnerHTML"
                ? ((x1 = x1 ? x1.__html : void 0),
                  (f1 = f1 ? f1.__html : void 0),
                  x1 != null && f1 !== x1 && (I = I || []).push(O1, x1))
                : O1 === "children"
                ? (typeof x1 != "string" && typeof x1 != "number") ||
                  (I = I || []).push(O1, "" + x1)
                : O1 !== "suppressContentEditableWarning" &&
                  O1 !== "suppressHydrationWarning" &&
                  (i.hasOwnProperty(O1)
                    ? (x1 != null && O1 === "onScroll" && tn("scroll", a),
                      I || f1 === x1 || (I = []))
                    : (I = I || []).push(O1, x1));
        }
        h && (I = I || []).push("style", h);
        var O1 = I;
        (u.updateQueue = O1) && (u.flags |= 4);
      }
    }),
    (R7 = function (a, u, h, y) {
      h !== y && (u.flags |= 4);
    });
  function a0(a, u) {
    if (!un)
      switch (a.tailMode) {
        case "hidden":
          u = a.tail;
          for (var h = null; u !== null; )
            u.alternate !== null && (h = u), (u = u.sibling);
          h === null ? (a.tail = null) : (h.sibling = null);
          break;
        case "collapsed":
          h = a.tail;
          for (var y = null; h !== null; )
            h.alternate !== null && (y = h), (h = h.sibling);
          y === null
            ? u || a.tail === null
              ? (a.tail = null)
              : (a.tail.sibling = null)
            : (y.sibling = null);
      }
  }
  function dr(a) {
    var u = a.alternate !== null && a.alternate.child === a.child,
      h = 0,
      y = 0;
    if (u)
      for (var S = a.child; S !== null; )
        (h |= S.lanes | S.childLanes),
          (y |= S.subtreeFlags & 14680064),
          (y |= S.flags & 14680064),
          (S.return = a),
          (S = S.sibling);
    else
      for (S = a.child; S !== null; )
        (h |= S.lanes | S.childLanes),
          (y |= S.subtreeFlags),
          (y |= S.flags),
          (S.return = a),
          (S = S.sibling);
    return (a.subtreeFlags |= y), (a.childLanes = h), u;
  }
  function RP(a, u, h) {
    var y = u.pendingProps;
    switch ((Wf(u), u.tag)) {
      case 2:
      case 16:
      case 15:
      case 0:
      case 11:
      case 7:
      case 8:
      case 12:
      case 9:
      case 14:
        return dr(u), null;
      case 1:
        return Nr(u.type) && Hu(), dr(u), null;
      case 3:
        return (
          (y = u.stateNode),
          La(),
          nn(jr),
          nn(ur),
          nh(),
          y.pendingContext &&
            ((y.context = y.pendingContext), (y.pendingContext = null)),
          (a === null || a.child === null) &&
            (Qu(u)
              ? (u.flags |= 4)
              : a === null ||
                (a.memoizedState.isDehydrated && (u.flags & 256) === 0) ||
                ((u.flags |= 1024), Si !== null && (Lh(Si), (Si = null)))),
          xh(a, u),
          dr(u),
          null
        );
      case 5:
        eh(u);
        var S = oo(n0.current);
        if (((h = u.type), a !== null && u.stateNode != null))
          M7(a, u, h, y, S),
            a.ref !== u.ref && ((u.flags |= 512), (u.flags |= 2097152));
        else {
          if (!y) {
            if (u.stateNode === null) throw Error(n(166));
            return dr(u), null;
          }
          if (((a = oo(Yi.current)), Qu(u))) {
            (y = u.stateNode), (h = u.type);
            var I = u.memoizedProps;
            switch (((y[Gi] = u), (y[Z3] = I), (a = (u.mode & 1) !== 0), h)) {
              case "dialog":
                tn("cancel", y), tn("close", y);
                break;
              case "iframe":
              case "object":
              case "embed":
                tn("load", y);
                break;
              case "video":
              case "audio":
                for (S = 0; S < G3.length; S++) tn(G3[S], y);
                break;
              case "source":
                tn("error", y);
                break;
              case "img":
              case "image":
              case "link":
                tn("error", y), tn("load", y);
                break;
              case "details":
                tn("toggle", y);
                break;
              case "input":
                ae(y, I), tn("invalid", y);
                break;
              case "select":
                (y._wrapperState = { wasMultiple: !!I.multiple }),
                  tn("invalid", y);
                break;
              case "textarea":
                E1(y, I), tn("invalid", y);
            }
            w1(h, I), (S = null);
            for (var Y in I)
              if (I.hasOwnProperty(Y)) {
                var f1 = I[Y];
                Y === "children"
                  ? typeof f1 == "string"
                    ? y.textContent !== f1 &&
                      (I.suppressHydrationWarning !== !0 &&
                        Vu(y.textContent, f1, a),
                      (S = ["children", f1]))
                    : typeof f1 == "number" &&
                      y.textContent !== "" + f1 &&
                      (I.suppressHydrationWarning !== !0 &&
                        Vu(y.textContent, f1, a),
                      (S = ["children", "" + f1]))
                  : i.hasOwnProperty(Y) &&
                    f1 != null &&
                    Y === "onScroll" &&
                    tn("scroll", y);
              }
            switch (h) {
              case "input":
                A1(y), ce(y, I, !0);
                break;
              case "textarea":
                A1(y), a1(y);
                break;
              case "select":
              case "option":
                break;
              default:
                typeof I.onClick == "function" && (y.onclick = Wu);
            }
            (y = S), (u.updateQueue = y), y !== null && (u.flags |= 4);
          } else {
            (Y = S.nodeType === 9 ? S : S.ownerDocument),
              a === "http://www.w3.org/1999/xhtml" && (a = K(h)),
              a === "http://www.w3.org/1999/xhtml"
                ? h === "script"
                  ? ((a = Y.createElement("div")),
                    (a.innerHTML = "<script></script>"),
                    (a = a.removeChild(a.firstChild)))
                  : typeof y.is == "string"
                  ? (a = Y.createElement(h, { is: y.is }))
                  : ((a = Y.createElement(h)),
                    h === "select" &&
                      ((Y = a),
                      y.multiple
                        ? (Y.multiple = !0)
                        : y.size && (Y.size = y.size)))
                : (a = Y.createElementNS(a, h)),
              (a[Gi] = u),
              (a[Z3] = y),
              P7(a, u, !1, !1),
              (u.stateNode = a);
            e: {
              switch (((Y = $1(h, y)), h)) {
                case "dialog":
                  tn("cancel", a), tn("close", a), (S = y);
                  break;
                case "iframe":
                case "object":
                case "embed":
                  tn("load", a), (S = y);
                  break;
                case "video":
                case "audio":
                  for (S = 0; S < G3.length; S++) tn(G3[S], a);
                  S = y;
                  break;
                case "source":
                  tn("error", a), (S = y);
                  break;
                case "img":
                case "image":
                case "link":
                  tn("error", a), tn("load", a), (S = y);
                  break;
                case "details":
                  tn("toggle", a), (S = y);
                  break;
                case "input":
                  ae(a, y), (S = ie(a, y)), tn("invalid", a);
                  break;
                case "option":
                  S = y;
                  break;
                case "select":
                  (a._wrapperState = { wasMultiple: !!y.multiple }),
                    (S = b1({}, y, { value: void 0 })),
                    tn("invalid", a);
                  break;
                case "textarea":
                  E1(a, y), (S = g1(a, y)), tn("invalid", a);
                  break;
                default:
                  S = y;
              }
              w1(h, S), (f1 = S);
              for (I in f1)
                if (f1.hasOwnProperty(I)) {
                  var x1 = f1[I];
                  I === "style"
                    ? s1(a, x1)
                    : I === "dangerouslySetInnerHTML"
                    ? ((x1 = x1 ? x1.__html : void 0), x1 != null && m1(a, x1))
                    : I === "children"
                    ? typeof x1 == "string"
                      ? (h !== "textarea" || x1 !== "") && R(a, x1)
                      : typeof x1 == "number" && R(a, "" + x1)
                    : I !== "suppressContentEditableWarning" &&
                      I !== "suppressHydrationWarning" &&
                      I !== "autoFocus" &&
                      (i.hasOwnProperty(I)
                        ? x1 != null && I === "onScroll" && tn("scroll", a)
                        : x1 != null && _(a, I, x1, Y));
                }
              switch (h) {
                case "input":
                  A1(a), ce(a, y, !1);
                  break;
                case "textarea":
                  A1(a), a1(a);
                  break;
                case "option":
                  y.value != null && a.setAttribute("value", "" + d1(y.value));
                  break;
                case "select":
                  (a.multiple = !!y.multiple),
                    (I = y.value),
                    I != null
                      ? je(a, !!y.multiple, I, !1)
                      : y.defaultValue != null &&
                        je(a, !!y.multiple, y.defaultValue, !0);
                  break;
                default:
                  typeof S.onClick == "function" && (a.onclick = Wu);
              }
              switch (h) {
                case "button":
                case "input":
                case "select":
                case "textarea":
                  y = !!y.autoFocus;
                  break e;
                case "img":
                  y = !0;
                  break e;
                default:
                  y = !1;
              }
            }
            y && (u.flags |= 4);
          }
          u.ref !== null && ((u.flags |= 512), (u.flags |= 2097152));
        }
        return dr(u), null;
      case 6:
        if (a && u.stateNode != null) R7(a, u, a.memoizedProps, y);
        else {
          if (typeof y != "string" && u.stateNode === null) throw Error(n(166));
          if (((h = oo(n0.current)), oo(Yi.current), Qu(u))) {
            if (
              ((y = u.stateNode),
              (h = u.memoizedProps),
              (y[Gi] = u),
              (I = y.nodeValue !== h) && ((a = Gr), a !== null))
            )
              switch (a.tag) {
                case 3:
                  Vu(y.nodeValue, h, (a.mode & 1) !== 0);
                  break;
                case 5:
                  a.memoizedProps.suppressHydrationWarning !== !0 &&
                    Vu(y.nodeValue, h, (a.mode & 1) !== 0);
              }
            I && (u.flags |= 4);
          } else
            (y = (h.nodeType === 9 ? h : h.ownerDocument).createTextNode(y)),
              (y[Gi] = u),
              (u.stateNode = y);
        }
        return dr(u), null;
      case 13:
        if (
          (nn(mn),
          (y = u.memoizedState),
          a === null ||
            (a.memoizedState !== null && a.memoizedState.dehydrated !== null))
        ) {
          if (un && Yr !== null && (u.mode & 1) !== 0 && (u.flags & 128) === 0)
            jg(), Ta(), (u.flags |= 98560), (I = !1);
          else if (((I = Qu(u)), y !== null && y.dehydrated !== null)) {
            if (a === null) {
              if (!I) throw Error(n(318));
              if (
                ((I = u.memoizedState),
                (I = I !== null ? I.dehydrated : null),
                !I)
              )
                throw Error(n(317));
              I[Gi] = u;
            } else
              Ta(),
                (u.flags & 128) === 0 && (u.memoizedState = null),
                (u.flags |= 4);
            dr(u), (I = !1);
          } else Si !== null && (Lh(Si), (Si = null)), (I = !0);
          if (!I) return u.flags & 65536 ? u : null;
        }
        return (u.flags & 128) !== 0
          ? ((u.lanes = h), u)
          : ((y = y !== null),
            y !== (a !== null && a.memoizedState !== null) &&
              y &&
              ((u.child.flags |= 8192),
              (u.mode & 1) !== 0 &&
                (a === null || (mn.current & 1) !== 0
                  ? Nn === 0 && (Nn = 3)
                  : Nh())),
            u.updateQueue !== null && (u.flags |= 4),
            dr(u),
            null);
      case 4:
        return (
          La(),
          xh(a, u),
          a === null && Y3(u.stateNode.containerInfo),
          dr(u),
          null
        );
      case 10:
        return Yf(u.type._context), dr(u), null;
      case 17:
        return Nr(u.type) && Hu(), dr(u), null;
      case 19:
        if ((nn(mn), (I = u.memoizedState), I === null)) return dr(u), null;
        if (((y = (u.flags & 128) !== 0), (Y = I.rendering), Y === null))
          if (y) a0(I, !1);
          else {
            if (Nn !== 0 || (a !== null && (a.flags & 128) !== 0))
              for (a = u.child; a !== null; ) {
                if (((Y = nc(a)), Y !== null)) {
                  for (
                    u.flags |= 128,
                      a0(I, !1),
                      y = Y.updateQueue,
                      y !== null && ((u.updateQueue = y), (u.flags |= 4)),
                      u.subtreeFlags = 0,
                      y = h,
                      h = u.child;
                    h !== null;

                  )
                    (I = h),
                      (a = y),
                      (I.flags &= 14680066),
                      (Y = I.alternate),
                      Y === null
                        ? ((I.childLanes = 0),
                          (I.lanes = a),
                          (I.child = null),
                          (I.subtreeFlags = 0),
                          (I.memoizedProps = null),
                          (I.memoizedState = null),
                          (I.updateQueue = null),
                          (I.dependencies = null),
                          (I.stateNode = null))
                        : ((I.childLanes = Y.childLanes),
                          (I.lanes = Y.lanes),
                          (I.child = Y.child),
                          (I.subtreeFlags = 0),
                          (I.deletions = null),
                          (I.memoizedProps = Y.memoizedProps),
                          (I.memoizedState = Y.memoizedState),
                          (I.updateQueue = Y.updateQueue),
                          (I.type = Y.type),
                          (a = Y.dependencies),
                          (I.dependencies =
                            a === null
                              ? null
                              : {
                                  lanes: a.lanes,
                                  firstContext: a.firstContext,
                                })),
                      (h = h.sibling);
                  return Zt(mn, (mn.current & 1) | 2), u.child;
                }
                a = a.sibling;
              }
            I.tail !== null &&
              Ce() > Oa &&
              ((u.flags |= 128), (y = !0), a0(I, !1), (u.lanes = 4194304));
          }
        else {
          if (!y)
            if (((a = nc(Y)), a !== null)) {
              if (
                ((u.flags |= 128),
                (y = !0),
                (h = a.updateQueue),
                h !== null && ((u.updateQueue = h), (u.flags |= 4)),
                a0(I, !0),
                I.tail === null &&
                  I.tailMode === "hidden" &&
                  !Y.alternate &&
                  !un)
              )
                return dr(u), null;
            } else
              2 * Ce() - I.renderingStartTime > Oa &&
                h !== 1073741824 &&
                ((u.flags |= 128), (y = !0), a0(I, !1), (u.lanes = 4194304));
          I.isBackwards
            ? ((Y.sibling = u.child), (u.child = Y))
            : ((h = I.last),
              h !== null ? (h.sibling = Y) : (u.child = Y),
              (I.last = Y));
        }
        return I.tail !== null
          ? ((u = I.tail),
            (I.rendering = u),
            (I.tail = u.sibling),
            (I.renderingStartTime = Ce()),
            (u.sibling = null),
            (h = mn.current),
            Zt(mn, y ? (h & 1) | 2 : h & 1),
            u)
          : (dr(u), null);
      case 22:
      case 23:
        return (
          jh(),
          (y = u.memoizedState !== null),
          a !== null && (a.memoizedState !== null) !== y && (u.flags |= 8192),
          y && (u.mode & 1) !== 0
            ? (Qr & 1073741824) !== 0 &&
              (dr(u), u.subtreeFlags & 6 && (u.flags |= 8192))
            : dr(u),
          null
        );
      case 24:
        return null;
      case 25:
        return null;
    }
    throw Error(n(156, u.tag));
  }
  function LP(a, u) {
    switch ((Wf(u), u.tag)) {
      case 1:
        return (
          Nr(u.type) && Hu(),
          (a = u.flags),
          a & 65536 ? ((u.flags = (a & -65537) | 128), u) : null
        );
      case 3:
        return (
          La(),
          nn(jr),
          nn(ur),
          nh(),
          (a = u.flags),
          (a & 65536) !== 0 && (a & 128) === 0
            ? ((u.flags = (a & -65537) | 128), u)
            : null
        );
      case 5:
        return eh(u), null;
      case 13:
        if (
          (nn(mn), (a = u.memoizedState), a !== null && a.dehydrated !== null)
        ) {
          if (u.alternate === null) throw Error(n(340));
          Ta();
        }
        return (
          (a = u.flags), a & 65536 ? ((u.flags = (a & -65537) | 128), u) : null
        );
      case 19:
        return nn(mn), null;
      case 4:
        return La(), null;
      case 10:
        return Yf(u.type._context), null;
      case 22:
      case 23:
        return jh(), null;
      case 24:
        return null;
      default:
        return null;
    }
  }
  var dc = !1,
    fr = !1,
    IP = typeof WeakSet == "function" ? WeakSet : Set,
    Re = null;
  function ja(a, u) {
    var h = a.ref;
    if (h !== null)
      if (typeof h == "function")
        try {
          h(null);
        } catch (y) {
          xn(a, u, y);
        }
      else h.current = null;
  }
  function Ch(a, u, h) {
    try {
      h();
    } catch (y) {
      xn(a, u, y);
    }
  }
  var L7 = !1;
  function jP(a, u) {
    if (((jf = Ot), (a = cg()), _f(a))) {
      if ("selectionStart" in a)
        var h = { start: a.selectionStart, end: a.selectionEnd };
      else
        e: {
          h = ((h = a.ownerDocument) && h.defaultView) || window;
          var y = h.getSelection && h.getSelection();
          if (y && y.rangeCount !== 0) {
            h = y.anchorNode;
            var S = y.anchorOffset,
              I = y.focusNode;
            y = y.focusOffset;
            try {
              h.nodeType, I.nodeType;
            } catch {
              h = null;
              break e;
            }
            var Y = 0,
              f1 = -1,
              x1 = -1,
              O1 = 0,
              ee = 0,
              ne = a,
              Z1 = null;
            t: for (;;) {
              for (
                var xe;
                ne !== h || (S !== 0 && ne.nodeType !== 3) || (f1 = Y + S),
                  ne !== I || (y !== 0 && ne.nodeType !== 3) || (x1 = Y + y),
                  ne.nodeType === 3 && (Y += ne.nodeValue.length),
                  (xe = ne.firstChild) !== null;

              )
                (Z1 = ne), (ne = xe);
              for (;;) {
                if (ne === a) break t;
                if (
                  (Z1 === h && ++O1 === S && (f1 = Y),
                  Z1 === I && ++ee === y && (x1 = Y),
                  (xe = ne.nextSibling) !== null)
                )
                  break;
                (ne = Z1), (Z1 = ne.parentNode);
              }
              ne = xe;
            }
            h = f1 === -1 || x1 === -1 ? null : { start: f1, end: x1 };
          } else h = null;
        }
      h = h || { start: 0, end: 0 };
    } else h = null;
    for (
      Nf = { focusedElem: a, selectionRange: h }, Ot = !1, Re = u;
      Re !== null;

    )
      if (
        ((u = Re), (a = u.child), (u.subtreeFlags & 1028) !== 0 && a !== null)
      )
        (a.return = u), (Re = a);
      else
        for (; Re !== null; ) {
          u = Re;
          try {
            var Ie = u.alternate;
            if ((u.flags & 1024) !== 0)
              switch (u.tag) {
                case 0:
                case 11:
                case 15:
                  break;
                case 1:
                  if (Ie !== null) {
                    var Oe = Ie.memoizedProps,
                      _n = Ie.memoizedState,
                      P1 = u.stateNode,
                      C1 = P1.getSnapshotBeforeUpdate(
                        u.elementType === u.type ? Oe : Ei(u.type, Oe),
                        _n
                      );
                    P1.__reactInternalSnapshotBeforeUpdate = C1;
                  }
                  break;
                case 3:
                  var R1 = u.stateNode.containerInfo;
                  R1.nodeType === 1
                    ? (R1.textContent = "")
                    : R1.nodeType === 9 &&
                      R1.documentElement &&
                      R1.removeChild(R1.documentElement);
                  break;
                case 5:
                case 6:
                case 4:
                case 17:
                  break;
                default:
                  throw Error(n(163));
              }
          } catch (oe) {
            xn(u, u.return, oe);
          }
          if (((a = u.sibling), a !== null)) {
            (a.return = u.return), (Re = a);
            break;
          }
          Re = u.return;
        }
    return (Ie = L7), (L7 = !1), Ie;
  }
  function l0(a, u, h) {
    var y = u.updateQueue;
    if (((y = y !== null ? y.lastEffect : null), y !== null)) {
      var S = (y = y.next);
      do {
        if ((S.tag & a) === a) {
          var I = S.destroy;
          (S.destroy = void 0), I !== void 0 && Ch(u, h, I);
        }
        S = S.next;
      } while (S !== y);
    }
  }
  function fc(a, u) {
    if (
      ((u = u.updateQueue), (u = u !== null ? u.lastEffect : null), u !== null)
    ) {
      var h = (u = u.next);
      do {
        if ((h.tag & a) === a) {
          var y = h.create;
          h.destroy = y();
        }
        h = h.next;
      } while (h !== u);
    }
  }
  function Sh(a) {
    var u = a.ref;
    if (u !== null) {
      var h = a.stateNode;
      switch (a.tag) {
        case 5:
          a = h;
          break;
        default:
          a = h;
      }
      typeof u == "function" ? u(a) : (u.current = a);
    }
  }
  function I7(a) {
    var u = a.alternate;
    u !== null && ((a.alternate = null), I7(u)),
      (a.child = null),
      (a.deletions = null),
      (a.sibling = null),
      a.tag === 5 &&
        ((u = a.stateNode),
        u !== null &&
          (delete u[Gi],
          delete u[Z3],
          delete u[Ff],
          delete u[gP],
          delete u[yP])),
      (a.stateNode = null),
      (a.return = null),
      (a.dependencies = null),
      (a.memoizedProps = null),
      (a.memoizedState = null),
      (a.pendingProps = null),
      (a.stateNode = null),
      (a.updateQueue = null);
  }
  function j7(a) {
    return a.tag === 5 || a.tag === 3 || a.tag === 4;
  }
  function N7(a) {
    e: for (;;) {
      for (; a.sibling === null; ) {
        if (a.return === null || j7(a.return)) return null;
        a = a.return;
      }
      for (
        a.sibling.return = a.return, a = a.sibling;
        a.tag !== 5 && a.tag !== 6 && a.tag !== 18;

      ) {
        if (a.flags & 2 || a.child === null || a.tag === 4) continue e;
        (a.child.return = a), (a = a.child);
      }
      if (!(a.flags & 2)) return a.stateNode;
    }
  }
  function Eh(a, u, h) {
    var y = a.tag;
    if (y === 5 || y === 6)
      (a = a.stateNode),
        u
          ? h.nodeType === 8
            ? h.parentNode.insertBefore(a, u)
            : h.insertBefore(a, u)
          : (h.nodeType === 8
              ? ((u = h.parentNode), u.insertBefore(a, h))
              : ((u = h), u.appendChild(a)),
            (h = h._reactRootContainer),
            h != null || u.onclick !== null || (u.onclick = Wu));
    else if (y !== 4 && ((a = a.child), a !== null))
      for (Eh(a, u, h), a = a.sibling; a !== null; )
        Eh(a, u, h), (a = a.sibling);
  }
  function kh(a, u, h) {
    var y = a.tag;
    if (y === 5 || y === 6)
      (a = a.stateNode), u ? h.insertBefore(a, u) : h.appendChild(a);
    else if (y !== 4 && ((a = a.child), a !== null))
      for (kh(a, u, h), a = a.sibling; a !== null; )
        kh(a, u, h), (a = a.sibling);
  }
  var Qn = null,
    ki = !1;
  function gs(a, u, h) {
    for (h = h.child; h !== null; ) O7(a, u, h), (h = h.sibling);
  }
  function O7(a, u, h) {
    if (I1 && typeof I1.onCommitFiberUnmount == "function")
      try {
        I1.onCommitFiberUnmount(le, h);
      } catch {}
    switch (h.tag) {
      case 5:
        fr || ja(h, u);
      case 6:
        var y = Qn,
          S = ki;
        (Qn = null),
          gs(a, u, h),
          (Qn = y),
          (ki = S),
          Qn !== null &&
            (ki
              ? ((a = Qn),
                (h = h.stateNode),
                a.nodeType === 8
                  ? a.parentNode.removeChild(h)
                  : a.removeChild(h))
              : Qn.removeChild(h.stateNode));
        break;
      case 18:
        Qn !== null &&
          (ki
            ? ((a = Qn),
              (h = h.stateNode),
              a.nodeType === 8
                ? Df(a.parentNode, h)
                : a.nodeType === 1 && Df(a, h),
              Ue(a))
            : Df(Qn, h.stateNode));
        break;
      case 4:
        (y = Qn),
          (S = ki),
          (Qn = h.stateNode.containerInfo),
          (ki = !0),
          gs(a, u, h),
          (Qn = y),
          (ki = S);
        break;
      case 0:
      case 11:
      case 14:
      case 15:
        if (
          !fr &&
          ((y = h.updateQueue), y !== null && ((y = y.lastEffect), y !== null))
        ) {
          S = y = y.next;
          do {
            var I = S,
              Y = I.destroy;
            (I = I.tag),
              Y !== void 0 && ((I & 2) !== 0 || (I & 4) !== 0) && Ch(h, u, Y),
              (S = S.next);
          } while (S !== y);
        }
        gs(a, u, h);
        break;
      case 1:
        if (
          !fr &&
          (ja(h, u),
          (y = h.stateNode),
          typeof y.componentWillUnmount == "function")
        )
          try {
            (y.props = h.memoizedProps),
              (y.state = h.memoizedState),
              y.componentWillUnmount();
          } catch (f1) {
            xn(h, u, f1);
          }
        gs(a, u, h);
        break;
      case 21:
        gs(a, u, h);
        break;
      case 22:
        h.mode & 1
          ? ((fr = (y = fr) || h.memoizedState !== null), gs(a, u, h), (fr = y))
          : gs(a, u, h);
        break;
      default:
        gs(a, u, h);
    }
  }
  function B7(a) {
    var u = a.updateQueue;
    if (u !== null) {
      a.updateQueue = null;
      var h = a.stateNode;
      h === null && (h = a.stateNode = new IP()),
        u.forEach(function (y) {
          var S = WP.bind(null, a, y);
          h.has(y) || (h.add(y), y.then(S, S));
        });
    }
  }
  function _i(a, u) {
    var h = u.deletions;
    if (h !== null)
      for (var y = 0; y < h.length; y++) {
        var S = h[y];
        try {
          var I = a,
            Y = u,
            f1 = Y;
          e: for (; f1 !== null; ) {
            switch (f1.tag) {
              case 5:
                (Qn = f1.stateNode), (ki = !1);
                break e;
              case 3:
                (Qn = f1.stateNode.containerInfo), (ki = !0);
                break e;
              case 4:
                (Qn = f1.stateNode.containerInfo), (ki = !0);
                break e;
            }
            f1 = f1.return;
          }
          if (Qn === null) throw Error(n(160));
          O7(I, Y, S), (Qn = null), (ki = !1);
          var x1 = S.alternate;
          x1 !== null && (x1.return = null), (S.return = null);
        } catch (O1) {
          xn(S, u, O1);
        }
      }
    if (u.subtreeFlags & 12854)
      for (u = u.child; u !== null; ) D7(u, a), (u = u.sibling);
  }
  function D7(a, u) {
    var h = a.alternate,
      y = a.flags;
    switch (a.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        if ((_i(u, a), Zi(a), y & 4)) {
          try {
            l0(3, a, a.return), fc(3, a);
          } catch (Oe) {
            xn(a, a.return, Oe);
          }
          try {
            l0(5, a, a.return);
          } catch (Oe) {
            xn(a, a.return, Oe);
          }
        }
        break;
      case 1:
        _i(u, a), Zi(a), y & 512 && h !== null && ja(h, h.return);
        break;
      case 5:
        if (
          (_i(u, a),
          Zi(a),
          y & 512 && h !== null && ja(h, h.return),
          a.flags & 32)
        ) {
          var S = a.stateNode;
          try {
            R(S, "");
          } catch (Oe) {
            xn(a, a.return, Oe);
          }
        }
        if (y & 4 && ((S = a.stateNode), S != null)) {
          var I = a.memoizedProps,
            Y = h !== null ? h.memoizedProps : I,
            f1 = a.type,
            x1 = a.updateQueue;
          if (((a.updateQueue = null), x1 !== null))
            try {
              f1 === "input" &&
                I.type === "radio" &&
                I.name != null &&
                Be(S, I),
                $1(f1, Y);
              var O1 = $1(f1, I);
              for (Y = 0; Y < x1.length; Y += 2) {
                var ee = x1[Y],
                  ne = x1[Y + 1];
                ee === "style"
                  ? s1(S, ne)
                  : ee === "dangerouslySetInnerHTML"
                  ? m1(S, ne)
                  : ee === "children"
                  ? R(S, ne)
                  : _(S, ee, ne, O1);
              }
              switch (f1) {
                case "input":
                  Ve(S, I);
                  break;
                case "textarea":
                  j1(S, I);
                  break;
                case "select":
                  var Z1 = S._wrapperState.wasMultiple;
                  S._wrapperState.wasMultiple = !!I.multiple;
                  var xe = I.value;
                  xe != null
                    ? je(S, !!I.multiple, xe, !1)
                    : Z1 !== !!I.multiple &&
                      (I.defaultValue != null
                        ? je(S, !!I.multiple, I.defaultValue, !0)
                        : je(S, !!I.multiple, I.multiple ? [] : "", !1));
              }
              S[Z3] = I;
            } catch (Oe) {
              xn(a, a.return, Oe);
            }
        }
        break;
      case 6:
        if ((_i(u, a), Zi(a), y & 4)) {
          if (a.stateNode === null) throw Error(n(162));
          (S = a.stateNode), (I = a.memoizedProps);
          try {
            S.nodeValue = I;
          } catch (Oe) {
            xn(a, a.return, Oe);
          }
        }
        break;
      case 3:
        if (
          (_i(u, a), Zi(a), y & 4 && h !== null && h.memoizedState.isDehydrated)
        )
          try {
            Ue(u.containerInfo);
          } catch (Oe) {
            xn(a, a.return, Oe);
          }
        break;
      case 4:
        _i(u, a), Zi(a);
        break;
      case 13:
        _i(u, a),
          Zi(a),
          (S = a.child),
          S.flags & 8192 &&
            ((I = S.memoizedState !== null),
            (S.stateNode.isHidden = I),
            !I ||
              (S.alternate !== null && S.alternate.memoizedState !== null) ||
              (Th = Ce())),
          y & 4 && B7(a);
        break;
      case 22:
        if (
          ((ee = h !== null && h.memoizedState !== null),
          a.mode & 1 ? ((fr = (O1 = fr) || ee), _i(u, a), (fr = O1)) : _i(u, a),
          Zi(a),
          y & 8192)
        ) {
          if (
            ((O1 = a.memoizedState !== null),
            (a.stateNode.isHidden = O1) && !ee && (a.mode & 1) !== 0)
          )
            for (Re = a, ee = a.child; ee !== null; ) {
              for (ne = Re = ee; Re !== null; ) {
                switch (((Z1 = Re), (xe = Z1.child), Z1.tag)) {
                  case 0:
                  case 11:
                  case 14:
                  case 15:
                    l0(4, Z1, Z1.return);
                    break;
                  case 1:
                    ja(Z1, Z1.return);
                    var Ie = Z1.stateNode;
                    if (typeof Ie.componentWillUnmount == "function") {
                      (y = Z1), (h = Z1.return);
                      try {
                        (u = y),
                          (Ie.props = u.memoizedProps),
                          (Ie.state = u.memoizedState),
                          Ie.componentWillUnmount();
                      } catch (Oe) {
                        xn(y, h, Oe);
                      }
                    }
                    break;
                  case 5:
                    ja(Z1, Z1.return);
                    break;
                  case 22:
                    if (Z1.memoizedState !== null) {
                      $7(ne);
                      continue;
                    }
                }
                xe !== null ? ((xe.return = Z1), (Re = xe)) : $7(ne);
              }
              ee = ee.sibling;
            }
          e: for (ee = null, ne = a; ; ) {
            if (ne.tag === 5) {
              if (ee === null) {
                ee = ne;
                try {
                  (S = ne.stateNode),
                    O1
                      ? ((I = S.style),
                        typeof I.setProperty == "function"
                          ? I.setProperty("display", "none", "important")
                          : (I.display = "none"))
                      : ((f1 = ne.stateNode),
                        (x1 = ne.memoizedProps.style),
                        (Y =
                          x1 != null && x1.hasOwnProperty("display")
                            ? x1.display
                            : null),
                        (f1.style.display = q("display", Y)));
                } catch (Oe) {
                  xn(a, a.return, Oe);
                }
              }
            } else if (ne.tag === 6) {
              if (ee === null)
                try {
                  ne.stateNode.nodeValue = O1 ? "" : ne.memoizedProps;
                } catch (Oe) {
                  xn(a, a.return, Oe);
                }
            } else if (
              ((ne.tag !== 22 && ne.tag !== 23) ||
                ne.memoizedState === null ||
                ne === a) &&
              ne.child !== null
            ) {
              (ne.child.return = ne), (ne = ne.child);
              continue;
            }
            if (ne === a) break e;
            for (; ne.sibling === null; ) {
              if (ne.return === null || ne.return === a) break e;
              ee === ne && (ee = null), (ne = ne.return);
            }
            ee === ne && (ee = null),
              (ne.sibling.return = ne.return),
              (ne = ne.sibling);
          }
        }
        break;
      case 19:
        _i(u, a), Zi(a), y & 4 && B7(a);
        break;
      case 21:
        break;
      default:
        _i(u, a), Zi(a);
    }
  }
  function Zi(a) {
    var u = a.flags;
    if (u & 2) {
      try {
        e: {
          for (var h = a.return; h !== null; ) {
            if (j7(h)) {
              var y = h;
              break e;
            }
            h = h.return;
          }
          throw Error(n(160));
        }
        switch (y.tag) {
          case 5:
            var S = y.stateNode;
            y.flags & 32 && (R(S, ""), (y.flags &= -33));
            var I = N7(a);
            kh(a, I, S);
            break;
          case 3:
          case 4:
            var Y = y.stateNode.containerInfo,
              f1 = N7(a);
            Eh(a, f1, Y);
            break;
          default:
            throw Error(n(161));
        }
      } catch (x1) {
        xn(a, a.return, x1);
      }
      a.flags &= -3;
    }
    u & 4096 && (a.flags &= -4097);
  }
  function NP(a, u, h) {
    (Re = a), F7(a);
  }
  function F7(a, u, h) {
    for (var y = (a.mode & 1) !== 0; Re !== null; ) {
      var S = Re,
        I = S.child;
      if (S.tag === 22 && y) {
        var Y = S.memoizedState !== null || dc;
        if (!Y) {
          var f1 = S.alternate,
            x1 = (f1 !== null && f1.memoizedState !== null) || fr;
          f1 = dc;
          var O1 = fr;
          if (((dc = Y), (fr = x1) && !O1))
            for (Re = S; Re !== null; )
              (Y = Re),
                (x1 = Y.child),
                Y.tag === 22 && Y.memoizedState !== null
                  ? V7(S)
                  : x1 !== null
                  ? ((x1.return = Y), (Re = x1))
                  : V7(S);
          for (; I !== null; ) (Re = I), F7(I), (I = I.sibling);
          (Re = S), (dc = f1), (fr = O1);
        }
        U7(a);
      } else
        (S.subtreeFlags & 8772) !== 0 && I !== null
          ? ((I.return = S), (Re = I))
          : U7(a);
    }
  }
  function U7(a) {
    for (; Re !== null; ) {
      var u = Re;
      if ((u.flags & 8772) !== 0) {
        var h = u.alternate;
        try {
          if ((u.flags & 8772) !== 0)
            switch (u.tag) {
              case 0:
              case 11:
              case 15:
                fr || fc(5, u);
                break;
              case 1:
                var y = u.stateNode;
                if (u.flags & 4 && !fr)
                  if (h === null) y.componentDidMount();
                  else {
                    var S =
                      u.elementType === u.type
                        ? h.memoizedProps
                        : Ei(u.type, h.memoizedProps);
                    y.componentDidUpdate(
                      S,
                      h.memoizedState,
                      y.__reactInternalSnapshotBeforeUpdate
                    );
                  }
                var I = u.updateQueue;
                I !== null && $g(u, I, y);
                break;
              case 3:
                var Y = u.updateQueue;
                if (Y !== null) {
                  if (((h = null), u.child !== null))
                    switch (u.child.tag) {
                      case 5:
                        h = u.child.stateNode;
                        break;
                      case 1:
                        h = u.child.stateNode;
                    }
                  $g(u, Y, h);
                }
                break;
              case 5:
                var f1 = u.stateNode;
                if (h === null && u.flags & 4) {
                  h = f1;
                  var x1 = u.memoizedProps;
                  switch (u.type) {
                    case "button":
                    case "input":
                    case "select":
                    case "textarea":
                      x1.autoFocus && h.focus();
                      break;
                    case "img":
                      x1.src && (h.src = x1.src);
                  }
                }
                break;
              case 6:
                break;
              case 4:
                break;
              case 12:
                break;
              case 13:
                if (u.memoizedState === null) {
                  var O1 = u.alternate;
                  if (O1 !== null) {
                    var ee = O1.memoizedState;
                    if (ee !== null) {
                      var ne = ee.dehydrated;
                      ne !== null && Ue(ne);
                    }
                  }
                }
                break;
              case 19:
              case 17:
              case 21:
              case 22:
              case 23:
              case 25:
                break;
              default:
                throw Error(n(163));
            }
          fr || (u.flags & 512 && Sh(u));
        } catch (Z1) {
          xn(u, u.return, Z1);
        }
      }
      if (u === a) {
        Re = null;
        break;
      }
      if (((h = u.sibling), h !== null)) {
        (h.return = u.return), (Re = h);
        break;
      }
      Re = u.return;
    }
  }
  function $7(a) {
    for (; Re !== null; ) {
      var u = Re;
      if (u === a) {
        Re = null;
        break;
      }
      var h = u.sibling;
      if (h !== null) {
        (h.return = u.return), (Re = h);
        break;
      }
      Re = u.return;
    }
  }
  function V7(a) {
    for (; Re !== null; ) {
      var u = Re;
      try {
        switch (u.tag) {
          case 0:
          case 11:
          case 15:
            var h = u.return;
            try {
              fc(4, u);
            } catch (x1) {
              xn(u, h, x1);
            }
            break;
          case 1:
            var y = u.stateNode;
            if (typeof y.componentDidMount == "function") {
              var S = u.return;
              try {
                y.componentDidMount();
              } catch (x1) {
                xn(u, S, x1);
              }
            }
            var I = u.return;
            try {
              Sh(u);
            } catch (x1) {
              xn(u, I, x1);
            }
            break;
          case 5:
            var Y = u.return;
            try {
              Sh(u);
            } catch (x1) {
              xn(u, Y, x1);
            }
        }
      } catch (x1) {
        xn(u, u.return, x1);
      }
      if (u === a) {
        Re = null;
        break;
      }
      var f1 = u.sibling;
      if (f1 !== null) {
        (f1.return = u.return), (Re = f1);
        break;
      }
      Re = u.return;
    }
  }
  var OP = Math.ceil,
    hc = T.ReactCurrentDispatcher,
    _h = T.ReactCurrentOwner,
    di = T.ReactCurrentBatchConfig,
    Nt = 0,
    Wn = null,
    Ln = null,
    Zn = 0,
    Qr = 0,
    Na = ds(0),
    Nn = 0,
    u0 = null,
    lo = 0,
    pc = 0,
    Ah = 0,
    c0 = null,
    Br = null,
    Th = 0,
    Oa = 1 / 0,
    M2 = null,
    mc = !1,
    Ph = null,
    ys = null,
    gc = !1,
    vs = null,
    yc = 0,
    d0 = 0,
    Mh = null,
    vc = -1,
    wc = 0;
  function Er() {
    return (Nt & 6) !== 0 ? Ce() : vc !== -1 ? vc : (vc = Ce());
  }
  function ws(a) {
    return (a.mode & 1) === 0
      ? 1
      : (Nt & 2) !== 0 && Zn !== 0
      ? Zn & -Zn
      : wP.transition !== null
      ? (wc === 0 && (wc = $e()), wc)
      : ((a = be),
        a !== 0 || ((a = window.event), (a = a === void 0 ? 16 : lr(a.type))),
        a);
  }
  function Ai(a, u, h, y) {
    if (50 < d0) throw ((d0 = 0), (Mh = null), Error(n(185)));
    mt(a, h, y),
      ((Nt & 2) === 0 || a !== Wn) &&
        (a === Wn && ((Nt & 2) === 0 && (pc |= h), Nn === 4 && bs(a, Zn)),
        Dr(a, y),
        h === 1 &&
          Nt === 0 &&
          (u.mode & 1) === 0 &&
          ((Oa = Ce() + 500), Ku && hs()));
  }
  function Dr(a, u) {
    var h = a.callbackNode;
    ft(a, u);
    var y = rt(a, a === Wn ? Zn : 0);
    if (y === 0)
      h !== null && at(h), (a.callbackNode = null), (a.callbackPriority = 0);
    else if (((u = y & -y), a.callbackPriority !== u)) {
      if ((h != null && at(h), u === 1))
        a.tag === 0 ? vP(z7.bind(null, a)) : Pg(z7.bind(null, a)),
          pP(function () {
            (Nt & 6) === 0 && hs();
          }),
          (h = null);
      else {
        switch (Pt(y)) {
          case 1:
            h = ve;
            break;
          case 4:
            h = Ne;
            break;
          case 16:
            h = fe;
            break;
          case 536870912:
            h = Te;
            break;
          default:
            h = fe;
        }
        h = X7(h, W7.bind(null, a));
      }
      (a.callbackPriority = u), (a.callbackNode = h);
    }
  }
  function W7(a, u) {
    if (((vc = -1), (wc = 0), (Nt & 6) !== 0)) throw Error(n(327));
    var h = a.callbackNode;
    if (Ba() && a.callbackNode !== h) return null;
    var y = rt(a, a === Wn ? Zn : 0);
    if (y === 0) return null;
    if ((y & 30) !== 0 || (y & a.expiredLanes) !== 0 || u) u = bc(a, y);
    else {
      u = y;
      var S = Nt;
      Nt |= 2;
      var I = q7();
      (Wn !== a || Zn !== u) && ((M2 = null), (Oa = Ce() + 500), co(a, u));
      do
        try {
          FP();
          break;
        } catch (f1) {
          H7(a, f1);
        }
      while (!0);
      Gf(),
        (hc.current = I),
        (Nt = S),
        Ln !== null ? (u = 0) : ((Wn = null), (Zn = 0), (u = Nn));
    }
    if (u !== 0) {
      if (
        (u === 2 && ((S = Et(a)), S !== 0 && ((y = S), (u = Rh(a, S)))),
        u === 1)
      )
        throw ((h = u0), co(a, 0), bs(a, y), Dr(a, Ce()), h);
      if (u === 6) bs(a, y);
      else {
        if (
          ((S = a.current.alternate),
          (y & 30) === 0 &&
            !BP(S) &&
            ((u = bc(a, y)),
            u === 2 && ((I = Et(a)), I !== 0 && ((y = I), (u = Rh(a, I)))),
            u === 1))
        )
          throw ((h = u0), co(a, 0), bs(a, y), Dr(a, Ce()), h);
        switch (((a.finishedWork = S), (a.finishedLanes = y), u)) {
          case 0:
          case 1:
            throw Error(n(345));
          case 2:
            fo(a, Br, M2);
            break;
          case 3:
            if (
              (bs(a, y),
              (y & 130023424) === y && ((u = Th + 500 - Ce()), 10 < u))
            ) {
              if (rt(a, 0) !== 0) break;
              if (((S = a.suspendedLanes), (S & y) !== y)) {
                Er(), (a.pingedLanes |= a.suspendedLanes & S);
                break;
              }
              a.timeoutHandle = Bf(fo.bind(null, a, Br, M2), u);
              break;
            }
            fo(a, Br, M2);
            break;
          case 4:
            if ((bs(a, y), (y & 4194240) === y)) break;
            for (u = a.eventTimes, S = -1; 0 < y; ) {
              var Y = 31 - H1(y);
              (I = 1 << Y), (Y = u[Y]), Y > S && (S = Y), (y &= ~I);
            }
            if (
              ((y = S),
              (y = Ce() - y),
              (y =
                (120 > y
                  ? 120
                  : 480 > y
                  ? 480
                  : 1080 > y
                  ? 1080
                  : 1920 > y
                  ? 1920
                  : 3e3 > y
                  ? 3e3
                  : 4320 > y
                  ? 4320
                  : 1960 * OP(y / 1960)) - y),
              10 < y)
            ) {
              a.timeoutHandle = Bf(fo.bind(null, a, Br, M2), y);
              break;
            }
            fo(a, Br, M2);
            break;
          case 5:
            fo(a, Br, M2);
            break;
          default:
            throw Error(n(329));
        }
      }
    }
    return Dr(a, Ce()), a.callbackNode === h ? W7.bind(null, a) : null;
  }
  function Rh(a, u) {
    var h = c0;
    return (
      a.current.memoizedState.isDehydrated && (co(a, u).flags |= 256),
      (a = bc(a, u)),
      a !== 2 && ((u = Br), (Br = h), u !== null && Lh(u)),
      a
    );
  }
  function Lh(a) {
    Br === null ? (Br = a) : Br.push.apply(Br, a);
  }
  function BP(a) {
    for (var u = a; ; ) {
      if (u.flags & 16384) {
        var h = u.updateQueue;
        if (h !== null && ((h = h.stores), h !== null))
          for (var y = 0; y < h.length; y++) {
            var S = h[y],
              I = S.getSnapshot;
            S = S.value;
            try {
              if (!Ci(I(), S)) return !1;
            } catch {
              return !1;
            }
          }
      }
      if (((h = u.child), u.subtreeFlags & 16384 && h !== null))
        (h.return = u), (u = h);
      else {
        if (u === a) break;
        for (; u.sibling === null; ) {
          if (u.return === null || u.return === a) return !0;
          u = u.return;
        }
        (u.sibling.return = u.return), (u = u.sibling);
      }
    }
    return !0;
  }
  function bs(a, u) {
    for (
      u &= ~Ah,
        u &= ~pc,
        a.suspendedLanes |= u,
        a.pingedLanes &= ~u,
        a = a.expirationTimes;
      0 < u;

    ) {
      var h = 31 - H1(u),
        y = 1 << h;
      (a[h] = -1), (u &= ~y);
    }
  }
  function z7(a) {
    if ((Nt & 6) !== 0) throw Error(n(327));
    Ba();
    var u = rt(a, 0);
    if ((u & 1) === 0) return Dr(a, Ce()), null;
    var h = bc(a, u);
    if (a.tag !== 0 && h === 2) {
      var y = Et(a);
      y !== 0 && ((u = y), (h = Rh(a, y)));
    }
    if (h === 1) throw ((h = u0), co(a, 0), bs(a, u), Dr(a, Ce()), h);
    if (h === 6) throw Error(n(345));
    return (
      (a.finishedWork = a.current.alternate),
      (a.finishedLanes = u),
      fo(a, Br, M2),
      Dr(a, Ce()),
      null
    );
  }
  function Ih(a, u) {
    var h = Nt;
    Nt |= 1;
    try {
      return a(u);
    } finally {
      (Nt = h), Nt === 0 && ((Oa = Ce() + 500), Ku && hs());
    }
  }
  function uo(a) {
    vs !== null && vs.tag === 0 && (Nt & 6) === 0 && Ba();
    var u = Nt;
    Nt |= 1;
    var h = di.transition,
      y = be;
    try {
      if (((di.transition = null), (be = 1), a)) return a();
    } finally {
      (be = y), (di.transition = h), (Nt = u), (Nt & 6) === 0 && hs();
    }
  }
  function jh() {
    (Qr = Na.current), nn(Na);
  }
  function co(a, u) {
    (a.finishedWork = null), (a.finishedLanes = 0);
    var h = a.timeoutHandle;
    if ((h !== -1 && ((a.timeoutHandle = -1), hP(h)), Ln !== null))
      for (h = Ln.return; h !== null; ) {
        var y = h;
        switch ((Wf(y), y.tag)) {
          case 1:
            (y = y.type.childContextTypes), y != null && Hu();
            break;
          case 3:
            La(), nn(jr), nn(ur), nh();
            break;
          case 5:
            eh(y);
            break;
          case 4:
            La();
            break;
          case 13:
            nn(mn);
            break;
          case 19:
            nn(mn);
            break;
          case 10:
            Yf(y.type._context);
            break;
          case 22:
          case 23:
            jh();
        }
        h = h.return;
      }
    if (
      ((Wn = a),
      (Ln = a = xs(a.current, null)),
      (Zn = Qr = u),
      (Nn = 0),
      (u0 = null),
      (Ah = pc = lo = 0),
      (Br = c0 = null),
      so !== null)
    ) {
      for (u = 0; u < so.length; u++)
        if (((h = so[u]), (y = h.interleaved), y !== null)) {
          h.interleaved = null;
          var S = y.next,
            I = h.pending;
          if (I !== null) {
            var Y = I.next;
            (I.next = S), (y.next = Y);
          }
          h.pending = y;
        }
      so = null;
    }
    return a;
  }
  function H7(a, u) {
    do {
      var h = Ln;
      try {
        if ((Gf(), (rc.current = ac), ic)) {
          for (var y = gn.memoizedState; y !== null; ) {
            var S = y.queue;
            S !== null && (S.pending = null), (y = y.next);
          }
          ic = !1;
        }
        if (
          ((ao = 0),
          (Vn = jn = gn = null),
          (r0 = !1),
          (i0 = 0),
          (_h.current = null),
          h === null || h.return === null)
        ) {
          (Nn = 1), (u0 = u), (Ln = null);
          break;
        }
        e: {
          var I = a,
            Y = h.return,
            f1 = h,
            x1 = u;
          if (
            ((u = Zn),
            (f1.flags |= 32768),
            x1 !== null &&
              typeof x1 == "object" &&
              typeof x1.then == "function")
          ) {
            var O1 = x1,
              ee = f1,
              ne = ee.tag;
            if ((ee.mode & 1) === 0 && (ne === 0 || ne === 11 || ne === 15)) {
              var Z1 = ee.alternate;
              Z1
                ? ((ee.updateQueue = Z1.updateQueue),
                  (ee.memoizedState = Z1.memoizedState),
                  (ee.lanes = Z1.lanes))
                : ((ee.updateQueue = null), (ee.memoizedState = null));
            }
            var xe = g7(Y);
            if (xe !== null) {
              (xe.flags &= -257),
                y7(xe, Y, f1, I, u),
                xe.mode & 1 && m7(I, O1, u),
                (u = xe),
                (x1 = O1);
              var Ie = u.updateQueue;
              if (Ie === null) {
                var Oe = new Set();
                Oe.add(x1), (u.updateQueue = Oe);
              } else Ie.add(x1);
              break e;
            } else {
              if ((u & 1) === 0) {
                m7(I, O1, u), Nh();
                break e;
              }
              x1 = Error(n(426));
            }
          } else if (un && f1.mode & 1) {
            var _n = g7(Y);
            if (_n !== null) {
              (_n.flags & 65536) === 0 && (_n.flags |= 256),
                y7(_n, Y, f1, I, u),
                qf(Ia(x1, f1));
              break e;
            }
          }
          (I = x1 = Ia(x1, f1)),
            Nn !== 4 && (Nn = 2),
            c0 === null ? (c0 = [I]) : c0.push(I),
            (I = Y);
          do {
            switch (I.tag) {
              case 3:
                (I.flags |= 65536), (u &= -u), (I.lanes |= u);
                var P1 = h7(I, x1, u);
                Ug(I, P1);
                break e;
              case 1:
                f1 = x1;
                var C1 = I.type,
                  R1 = I.stateNode;
                if (
                  (I.flags & 128) === 0 &&
                  (typeof C1.getDerivedStateFromError == "function" ||
                    (R1 !== null &&
                      typeof R1.componentDidCatch == "function" &&
                      (ys === null || !ys.has(R1))))
                ) {
                  (I.flags |= 65536), (u &= -u), (I.lanes |= u);
                  var oe = p7(I, f1, u);
                  Ug(I, oe);
                  break e;
                }
            }
            I = I.return;
          } while (I !== null);
        }
        G7(h);
      } catch (Fe) {
        (u = Fe), Ln === h && h !== null && (Ln = h = h.return);
        continue;
      }
      break;
    } while (!0);
  }
  function q7() {
    var a = hc.current;
    return (hc.current = ac), a === null ? ac : a;
  }
  function Nh() {
    (Nn === 0 || Nn === 3 || Nn === 2) && (Nn = 4),
      Wn === null ||
        ((lo & 268435455) === 0 && (pc & 268435455) === 0) ||
        bs(Wn, Zn);
  }
  function bc(a, u) {
    var h = Nt;
    Nt |= 2;
    var y = q7();
    (Wn !== a || Zn !== u) && ((M2 = null), co(a, u));
    do
      try {
        DP();
        break;
      } catch (S) {
        H7(a, S);
      }
    while (!0);
    if ((Gf(), (Nt = h), (hc.current = y), Ln !== null)) throw Error(n(261));
    return (Wn = null), (Zn = 0), Nn;
  }
  function DP() {
    for (; Ln !== null; ) K7(Ln);
  }
  function FP() {
    for (; Ln !== null && !ut(); ) K7(Ln);
  }
  function K7(a) {
    var u = Z7(a.alternate, a, Qr);
    (a.memoizedProps = a.pendingProps),
      u === null ? G7(a) : (Ln = u),
      (_h.current = null);
  }
  function G7(a) {
    var u = a;
    do {
      var h = u.alternate;
      if (((a = u.return), (u.flags & 32768) === 0)) {
        if (((h = RP(h, u, Qr)), h !== null)) {
          Ln = h;
          return;
        }
      } else {
        if (((h = LP(h, u)), h !== null)) {
          (h.flags &= 32767), (Ln = h);
          return;
        }
        if (a !== null)
          (a.flags |= 32768), (a.subtreeFlags = 0), (a.deletions = null);
        else {
          (Nn = 6), (Ln = null);
          return;
        }
      }
      if (((u = u.sibling), u !== null)) {
        Ln = u;
        return;
      }
      Ln = u = a;
    } while (u !== null);
    Nn === 0 && (Nn = 5);
  }
  function fo(a, u, h) {
    var y = be,
      S = di.transition;
    try {
      (di.transition = null), (be = 1), UP(a, u, h, y);
    } finally {
      (di.transition = S), (be = y);
    }
    return null;
  }
  function UP(a, u, h, y) {
    do Ba();
    while (vs !== null);
    if ((Nt & 6) !== 0) throw Error(n(327));
    h = a.finishedWork;
    var S = a.finishedLanes;
    if (h === null) return null;
    if (((a.finishedWork = null), (a.finishedLanes = 0), h === a.current))
      throw Error(n(177));
    (a.callbackNode = null), (a.callbackPriority = 0);
    var I = h.lanes | h.childLanes;
    if (
      (ht(a, I),
      a === Wn && ((Ln = Wn = null), (Zn = 0)),
      ((h.subtreeFlags & 2064) === 0 && (h.flags & 2064) === 0) ||
        gc ||
        ((gc = !0),
        X7(fe, function () {
          return Ba(), null;
        })),
      (I = (h.flags & 15990) !== 0),
      (h.subtreeFlags & 15990) !== 0 || I)
    ) {
      (I = di.transition), (di.transition = null);
      var Y = be;
      be = 1;
      var f1 = Nt;
      (Nt |= 4),
        (_h.current = null),
        jP(a, h),
        D7(h, a),
        oP(Nf),
        (Ot = !!jf),
        (Nf = jf = null),
        (a.current = h),
        NP(h),
        tt(),
        (Nt = f1),
        (be = Y),
        (di.transition = I);
    } else a.current = h;
    if (
      (gc && ((gc = !1), (vs = a), (yc = S)),
      (I = a.pendingLanes),
      I === 0 && (ys = null),
      N1(h.stateNode),
      Dr(a, Ce()),
      u !== null)
    )
      for (y = a.onRecoverableError, h = 0; h < u.length; h++)
        (S = u[h]), y(S.value, { componentStack: S.stack, digest: S.digest });
    if (mc) throw ((mc = !1), (a = Ph), (Ph = null), a);
    return (
      (yc & 1) !== 0 && a.tag !== 0 && Ba(),
      (I = a.pendingLanes),
      (I & 1) !== 0 ? (a === Mh ? d0++ : ((d0 = 0), (Mh = a))) : (d0 = 0),
      hs(),
      null
    );
  }
  function Ba() {
    if (vs !== null) {
      var a = Pt(yc),
        u = di.transition,
        h = be;
      try {
        if (((di.transition = null), (be = 16 > a ? 16 : a), vs === null))
          var y = !1;
        else {
          if (((a = vs), (vs = null), (yc = 0), (Nt & 6) !== 0))
            throw Error(n(331));
          var S = Nt;
          for (Nt |= 4, Re = a.current; Re !== null; ) {
            var I = Re,
              Y = I.child;
            if ((Re.flags & 16) !== 0) {
              var f1 = I.deletions;
              if (f1 !== null) {
                for (var x1 = 0; x1 < f1.length; x1++) {
                  var O1 = f1[x1];
                  for (Re = O1; Re !== null; ) {
                    var ee = Re;
                    switch (ee.tag) {
                      case 0:
                      case 11:
                      case 15:
                        l0(8, ee, I);
                    }
                    var ne = ee.child;
                    if (ne !== null) (ne.return = ee), (Re = ne);
                    else
                      for (; Re !== null; ) {
                        ee = Re;
                        var Z1 = ee.sibling,
                          xe = ee.return;
                        if ((I7(ee), ee === O1)) {
                          Re = null;
                          break;
                        }
                        if (Z1 !== null) {
                          (Z1.return = xe), (Re = Z1);
                          break;
                        }
                        Re = xe;
                      }
                  }
                }
                var Ie = I.alternate;
                if (Ie !== null) {
                  var Oe = Ie.child;
                  if (Oe !== null) {
                    Ie.child = null;
                    do {
                      var _n = Oe.sibling;
                      (Oe.sibling = null), (Oe = _n);
                    } while (Oe !== null);
                  }
                }
                Re = I;
              }
            }
            if ((I.subtreeFlags & 2064) !== 0 && Y !== null)
              (Y.return = I), (Re = Y);
            else
              e: for (; Re !== null; ) {
                if (((I = Re), (I.flags & 2048) !== 0))
                  switch (I.tag) {
                    case 0:
                    case 11:
                    case 15:
                      l0(9, I, I.return);
                  }
                var P1 = I.sibling;
                if (P1 !== null) {
                  (P1.return = I.return), (Re = P1);
                  break e;
                }
                Re = I.return;
              }
          }
          var C1 = a.current;
          for (Re = C1; Re !== null; ) {
            Y = Re;
            var R1 = Y.child;
            if ((Y.subtreeFlags & 2064) !== 0 && R1 !== null)
              (R1.return = Y), (Re = R1);
            else
              e: for (Y = C1; Re !== null; ) {
                if (((f1 = Re), (f1.flags & 2048) !== 0))
                  try {
                    switch (f1.tag) {
                      case 0:
                      case 11:
                      case 15:
                        fc(9, f1);
                    }
                  } catch (Fe) {
                    xn(f1, f1.return, Fe);
                  }
                if (f1 === Y) {
                  Re = null;
                  break e;
                }
                var oe = f1.sibling;
                if (oe !== null) {
                  (oe.return = f1.return), (Re = oe);
                  break e;
                }
                Re = f1.return;
              }
          }
          if (
            ((Nt = S),
            hs(),
            I1 && typeof I1.onPostCommitFiberRoot == "function")
          )
            try {
              I1.onPostCommitFiberRoot(le, a);
            } catch {}
          y = !0;
        }
        return y;
      } finally {
        (be = h), (di.transition = u);
      }
    }
    return !1;
  }
  function Y7(a, u, h) {
    (u = Ia(h, u)),
      (u = h7(a, u, 1)),
      (a = ms(a, u, 1)),
      (u = Er()),
      a !== null && (mt(a, 1, u), Dr(a, u));
  }
  function xn(a, u, h) {
    if (a.tag === 3) Y7(a, a, h);
    else
      for (; u !== null; ) {
        if (u.tag === 3) {
          Y7(u, a, h);
          break;
        } else if (u.tag === 1) {
          var y = u.stateNode;
          if (
            typeof u.type.getDerivedStateFromError == "function" ||
            (typeof y.componentDidCatch == "function" &&
              (ys === null || !ys.has(y)))
          ) {
            (a = Ia(h, a)),
              (a = p7(u, a, 1)),
              (u = ms(u, a, 1)),
              (a = Er()),
              u !== null && (mt(u, 1, a), Dr(u, a));
            break;
          }
        }
        u = u.return;
      }
  }
  function $P(a, u, h) {
    var y = a.pingCache;
    y !== null && y.delete(u),
      (u = Er()),
      (a.pingedLanes |= a.suspendedLanes & h),
      Wn === a &&
        (Zn & h) === h &&
        (Nn === 4 || (Nn === 3 && (Zn & 130023424) === Zn && 500 > Ce() - Th)
          ? co(a, 0)
          : (Ah |= h)),
      Dr(a, u);
  }
  function Q7(a, u) {
    u === 0 &&
      ((a.mode & 1) === 0
        ? (u = 1)
        : ((u = Je), (Je <<= 1), (Je & 130023424) === 0 && (Je = 4194304)));
    var h = Er();
    (a = A2(a, u)), a !== null && (mt(a, u, h), Dr(a, h));
  }
  function VP(a) {
    var u = a.memoizedState,
      h = 0;
    u !== null && (h = u.retryLane), Q7(a, h);
  }
  function WP(a, u) {
    var h = 0;
    switch (a.tag) {
      case 13:
        var y = a.stateNode,
          S = a.memoizedState;
        S !== null && (h = S.retryLane);
        break;
      case 19:
        y = a.stateNode;
        break;
      default:
        throw Error(n(314));
    }
    y !== null && y.delete(u), Q7(a, h);
  }
  var Z7;
  Z7 = function (a, u, h) {
    if (a !== null)
      if (a.memoizedProps !== u.pendingProps || jr.current) Or = !0;
      else {
        if ((a.lanes & h) === 0 && (u.flags & 128) === 0)
          return (Or = !1), MP(a, u, h);
        Or = (a.flags & 131072) !== 0;
      }
    else (Or = !1), un && (u.flags & 1048576) !== 0 && Mg(u, Yu, u.index);
    switch (((u.lanes = 0), u.tag)) {
      case 2:
        var y = u.type;
        cc(a, u), (a = u.pendingProps);
        var S = ka(u, ur.current);
        Ra(u, h), (S = sh(null, u, y, a, S, h));
        var I = oh();
        return (
          (u.flags |= 1),
          typeof S == "object" &&
          S !== null &&
          typeof S.render == "function" &&
          S.$$typeof === void 0
            ? ((u.tag = 1),
              (u.memoizedState = null),
              (u.updateQueue = null),
              Nr(y) ? ((I = !0), qu(u)) : (I = !1),
              (u.memoizedState =
                S.state !== null && S.state !== void 0 ? S.state : null),
              Xf(u),
              (S.updater = lc),
              (u.stateNode = S),
              (S._reactInternals = u),
              fh(u, y, a, h),
              (u = gh(null, u, y, !0, I, h)))
            : ((u.tag = 0), un && I && Vf(u), Sr(null, u, S, h), (u = u.child)),
          u
        );
      case 16:
        y = u.elementType;
        e: {
          switch (
            (cc(a, u),
            (a = u.pendingProps),
            (S = y._init),
            (y = S(y._payload)),
            (u.type = y),
            (S = u.tag = HP(y)),
            (a = Ei(y, a)),
            S)
          ) {
            case 0:
              u = mh(null, u, y, a, h);
              break e;
            case 1:
              u = S7(null, u, y, a, h);
              break e;
            case 11:
              u = v7(null, u, y, a, h);
              break e;
            case 14:
              u = w7(null, u, y, Ei(y.type, a), h);
              break e;
          }
          throw Error(n(306, y, ""));
        }
        return u;
      case 0:
        return (
          (y = u.type),
          (S = u.pendingProps),
          (S = u.elementType === y ? S : Ei(y, S)),
          mh(a, u, y, S, h)
        );
      case 1:
        return (
          (y = u.type),
          (S = u.pendingProps),
          (S = u.elementType === y ? S : Ei(y, S)),
          S7(a, u, y, S, h)
        );
      case 3:
        e: {
          if ((E7(u), a === null)) throw Error(n(387));
          (y = u.pendingProps),
            (I = u.memoizedState),
            (S = I.element),
            Fg(a, u),
            tc(u, y, null, h);
          var Y = u.memoizedState;
          if (((y = Y.element), I.isDehydrated))
            if (
              ((I = {
                element: y,
                isDehydrated: !1,
                cache: Y.cache,
                pendingSuspenseBoundaries: Y.pendingSuspenseBoundaries,
                transitions: Y.transitions,
              }),
              (u.updateQueue.baseState = I),
              (u.memoizedState = I),
              u.flags & 256)
            ) {
              (S = Ia(Error(n(423)), u)), (u = k7(a, u, y, h, S));
              break e;
            } else if (y !== S) {
              (S = Ia(Error(n(424)), u)), (u = k7(a, u, y, h, S));
              break e;
            } else
              for (
                Yr = cs(u.stateNode.containerInfo.firstChild),
                  Gr = u,
                  un = !0,
                  Si = null,
                  h = Bg(u, null, y, h),
                  u.child = h;
                h;

              )
                (h.flags = (h.flags & -3) | 4096), (h = h.sibling);
          else {
            if ((Ta(), y === S)) {
              u = P2(a, u, h);
              break e;
            }
            Sr(a, u, y, h);
          }
          u = u.child;
        }
        return u;
      case 5:
        return (
          Vg(u),
          a === null && Hf(u),
          (y = u.type),
          (S = u.pendingProps),
          (I = a !== null ? a.memoizedProps : null),
          (Y = S.children),
          Of(y, S) ? (Y = null) : I !== null && Of(y, I) && (u.flags |= 32),
          C7(a, u),
          Sr(a, u, Y, h),
          u.child
        );
      case 6:
        return a === null && Hf(u), null;
      case 13:
        return _7(a, u, h);
      case 4:
        return (
          Jf(u, u.stateNode.containerInfo),
          (y = u.pendingProps),
          a === null ? (u.child = Pa(u, null, y, h)) : Sr(a, u, y, h),
          u.child
        );
      case 11:
        return (
          (y = u.type),
          (S = u.pendingProps),
          (S = u.elementType === y ? S : Ei(y, S)),
          v7(a, u, y, S, h)
        );
      case 7:
        return Sr(a, u, u.pendingProps, h), u.child;
      case 8:
        return Sr(a, u, u.pendingProps.children, h), u.child;
      case 12:
        return Sr(a, u, u.pendingProps.children, h), u.child;
      case 10:
        e: {
          if (
            ((y = u.type._context),
            (S = u.pendingProps),
            (I = u.memoizedProps),
            (Y = S.value),
            Zt(Xu, y._currentValue),
            (y._currentValue = Y),
            I !== null)
          )
            if (Ci(I.value, Y)) {
              if (I.children === S.children && !jr.current) {
                u = P2(a, u, h);
                break e;
              }
            } else
              for (I = u.child, I !== null && (I.return = u); I !== null; ) {
                var f1 = I.dependencies;
                if (f1 !== null) {
                  Y = I.child;
                  for (var x1 = f1.firstContext; x1 !== null; ) {
                    if (x1.context === y) {
                      if (I.tag === 1) {
                        (x1 = T2(-1, h & -h)), (x1.tag = 2);
                        var O1 = I.updateQueue;
                        if (O1 !== null) {
                          O1 = O1.shared;
                          var ee = O1.pending;
                          ee === null
                            ? (x1.next = x1)
                            : ((x1.next = ee.next), (ee.next = x1)),
                            (O1.pending = x1);
                        }
                      }
                      (I.lanes |= h),
                        (x1 = I.alternate),
                        x1 !== null && (x1.lanes |= h),
                        Qf(I.return, h, u),
                        (f1.lanes |= h);
                      break;
                    }
                    x1 = x1.next;
                  }
                } else if (I.tag === 10) Y = I.type === u.type ? null : I.child;
                else if (I.tag === 18) {
                  if (((Y = I.return), Y === null)) throw Error(n(341));
                  (Y.lanes |= h),
                    (f1 = Y.alternate),
                    f1 !== null && (f1.lanes |= h),
                    Qf(Y, h, u),
                    (Y = I.sibling);
                } else Y = I.child;
                if (Y !== null) Y.return = I;
                else
                  for (Y = I; Y !== null; ) {
                    if (Y === u) {
                      Y = null;
                      break;
                    }
                    if (((I = Y.sibling), I !== null)) {
                      (I.return = Y.return), (Y = I);
                      break;
                    }
                    Y = Y.return;
                  }
                I = Y;
              }
          Sr(a, u, S.children, h), (u = u.child);
        }
        return u;
      case 9:
        return (
          (S = u.type),
          (y = u.pendingProps.children),
          Ra(u, h),
          (S = ui(S)),
          (y = y(S)),
          (u.flags |= 1),
          Sr(a, u, y, h),
          u.child
        );
      case 14:
        return (
          (y = u.type),
          (S = Ei(y, u.pendingProps)),
          (S = Ei(y.type, S)),
          w7(a, u, y, S, h)
        );
      case 15:
        return b7(a, u, u.type, u.pendingProps, h);
      case 17:
        return (
          (y = u.type),
          (S = u.pendingProps),
          (S = u.elementType === y ? S : Ei(y, S)),
          cc(a, u),
          (u.tag = 1),
          Nr(y) ? ((a = !0), qu(u)) : (a = !1),
          Ra(u, h),
          d7(u, y, S),
          fh(u, y, S, h),
          gh(null, u, y, !0, a, h)
        );
      case 19:
        return T7(a, u, h);
      case 22:
        return x7(a, u, h);
    }
    throw Error(n(156, u.tag));
  };
  function X7(a, u) {
    return Xe(a, u);
  }
  function zP(a, u, h, y) {
    (this.tag = a),
      (this.key = h),
      (this.sibling =
        this.child =
        this.return =
        this.stateNode =
        this.type =
        this.elementType =
          null),
      (this.index = 0),
      (this.ref = null),
      (this.pendingProps = u),
      (this.dependencies =
        this.memoizedState =
        this.updateQueue =
        this.memoizedProps =
          null),
      (this.mode = y),
      (this.subtreeFlags = this.flags = 0),
      (this.deletions = null),
      (this.childLanes = this.lanes = 0),
      (this.alternate = null);
  }
  function fi(a, u, h, y) {
    return new zP(a, u, h, y);
  }
  function Oh(a) {
    return (a = a.prototype), !(!a || !a.isReactComponent);
  }
  function HP(a) {
    if (typeof a == "function") return Oh(a) ? 1 : 0;
    if (a != null) {
      if (((a = a.$$typeof), a === F)) return 11;
      if (a === G) return 14;
    }
    return 2;
  }
  function xs(a, u) {
    var h = a.alternate;
    return (
      h === null
        ? ((h = fi(a.tag, u, a.key, a.mode)),
          (h.elementType = a.elementType),
          (h.type = a.type),
          (h.stateNode = a.stateNode),
          (h.alternate = a),
          (a.alternate = h))
        : ((h.pendingProps = u),
          (h.type = a.type),
          (h.flags = 0),
          (h.subtreeFlags = 0),
          (h.deletions = null)),
      (h.flags = a.flags & 14680064),
      (h.childLanes = a.childLanes),
      (h.lanes = a.lanes),
      (h.child = a.child),
      (h.memoizedProps = a.memoizedProps),
      (h.memoizedState = a.memoizedState),
      (h.updateQueue = a.updateQueue),
      (u = a.dependencies),
      (h.dependencies =
        u === null ? null : { lanes: u.lanes, firstContext: u.firstContext }),
      (h.sibling = a.sibling),
      (h.index = a.index),
      (h.ref = a.ref),
      h
    );
  }
  function xc(a, u, h, y, S, I) {
    var Y = 2;
    if (((y = a), typeof a == "function")) Oh(a) && (Y = 1);
    else if (typeof a == "string") Y = 5;
    else
      e: switch (a) {
        case O:
          return ho(h.children, S, I, u);
        case U:
          (Y = 8), (S |= 8);
          break;
        case D:
          return (
            (a = fi(12, h, u, S | 2)), (a.elementType = D), (a.lanes = I), a
          );
        case B:
          return (a = fi(13, h, u, S)), (a.elementType = B), (a.lanes = I), a;
        case j:
          return (a = fi(19, h, u, S)), (a.elementType = j), (a.lanes = I), a;
        case e1:
          return Cc(h, S, I, u);
        default:
          if (typeof a == "object" && a !== null)
            switch (a.$$typeof) {
              case H:
                Y = 10;
                break e;
              case $:
                Y = 9;
                break e;
              case F:
                Y = 11;
                break e;
              case G:
                Y = 14;
                break e;
              case u1:
                (Y = 16), (y = null);
                break e;
            }
          throw Error(n(130, a == null ? a : typeof a, ""));
      }
    return (
      (u = fi(Y, h, u, S)), (u.elementType = a), (u.type = y), (u.lanes = I), u
    );
  }
  function ho(a, u, h, y) {
    return (a = fi(7, a, y, u)), (a.lanes = h), a;
  }
  function Cc(a, u, h, y) {
    return (
      (a = fi(22, a, y, u)),
      (a.elementType = e1),
      (a.lanes = h),
      (a.stateNode = { isHidden: !1 }),
      a
    );
  }
  function Bh(a, u, h) {
    return (a = fi(6, a, null, u)), (a.lanes = h), a;
  }
  function Dh(a, u, h) {
    return (
      (u = fi(4, a.children !== null ? a.children : [], a.key, u)),
      (u.lanes = h),
      (u.stateNode = {
        containerInfo: a.containerInfo,
        pendingChildren: null,
        implementation: a.implementation,
      }),
      u
    );
  }
  function qP(a, u, h, y, S) {
    (this.tag = u),
      (this.containerInfo = a),
      (this.finishedWork =
        this.pingCache =
        this.current =
        this.pendingChildren =
          null),
      (this.timeoutHandle = -1),
      (this.callbackNode = this.pendingContext = this.context = null),
      (this.callbackPriority = 0),
      (this.eventTimes = lt(0)),
      (this.expirationTimes = lt(-1)),
      (this.entangledLanes =
        this.finishedLanes =
        this.mutableReadLanes =
        this.expiredLanes =
        this.pingedLanes =
        this.suspendedLanes =
        this.pendingLanes =
          0),
      (this.entanglements = lt(0)),
      (this.identifierPrefix = y),
      (this.onRecoverableError = S),
      (this.mutableSourceEagerHydrationData = null);
  }
  function Fh(a, u, h, y, S, I, Y, f1, x1) {
    return (
      (a = new qP(a, u, h, f1, x1)),
      u === 1 ? ((u = 1), I === !0 && (u |= 8)) : (u = 0),
      (I = fi(3, null, null, u)),
      (a.current = I),
      (I.stateNode = a),
      (I.memoizedState = {
        element: y,
        isDehydrated: h,
        cache: null,
        transitions: null,
        pendingSuspenseBoundaries: null,
      }),
      Xf(I),
      a
    );
  }
  function KP(a, u, h) {
    var y =
      3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
    return {
      $$typeof: L,
      key: y == null ? null : "" + y,
      children: a,
      containerInfo: u,
      implementation: h,
    };
  }
  function J7(a) {
    if (!a) return fs;
    a = a._reactInternals;
    e: {
      if (X1(a) !== a || a.tag !== 1) throw Error(n(170));
      var u = a;
      do {
        switch (u.tag) {
          case 3:
            u = u.stateNode.context;
            break e;
          case 1:
            if (Nr(u.type)) {
              u = u.stateNode.__reactInternalMemoizedMergedChildContext;
              break e;
            }
        }
        u = u.return;
      } while (u !== null);
      throw Error(n(171));
    }
    if (a.tag === 1) {
      var h = a.type;
      if (Nr(h)) return Ag(a, h, u);
    }
    return u;
  }
  function e8(a, u, h, y, S, I, Y, f1, x1) {
    return (
      (a = Fh(h, y, !0, a, S, I, Y, f1, x1)),
      (a.context = J7(null)),
      (h = a.current),
      (y = Er()),
      (S = ws(h)),
      (I = T2(y, S)),
      (I.callback = u ?? null),
      ms(h, I, S),
      (a.current.lanes = S),
      mt(a, S, y),
      Dr(a, y),
      a
    );
  }
  function Sc(a, u, h, y) {
    var S = u.current,
      I = Er(),
      Y = ws(S);
    return (
      (h = J7(h)),
      u.context === null ? (u.context = h) : (u.pendingContext = h),
      (u = T2(I, Y)),
      (u.payload = { element: a }),
      (y = y === void 0 ? null : y),
      y !== null && (u.callback = y),
      (a = ms(S, u, Y)),
      a !== null && (Ai(a, S, Y, I), ec(a, S, Y)),
      Y
    );
  }
  function Ec(a) {
    if (((a = a.current), !a.child)) return null;
    switch (a.child.tag) {
      case 5:
        return a.child.stateNode;
      default:
        return a.child.stateNode;
    }
  }
  function t8(a, u) {
    if (((a = a.memoizedState), a !== null && a.dehydrated !== null)) {
      var h = a.retryLane;
      a.retryLane = h !== 0 && h < u ? h : u;
    }
  }
  function Uh(a, u) {
    t8(a, u), (a = a.alternate) && t8(a, u);
  }
  function GP() {
    return null;
  }
  var n8 =
    typeof reportError == "function"
      ? reportError
      : function (a) {
          console.error(a);
        };
  function $h(a) {
    this._internalRoot = a;
  }
  (kc.prototype.render = $h.prototype.render =
    function (a) {
      var u = this._internalRoot;
      if (u === null) throw Error(n(409));
      Sc(a, u, null, null);
    }),
    (kc.prototype.unmount = $h.prototype.unmount =
      function () {
        var a = this._internalRoot;
        if (a !== null) {
          this._internalRoot = null;
          var u = a.containerInfo;
          uo(function () {
            Sc(null, a, null, null);
          }),
            (u[S2] = null);
        }
      });
  function kc(a) {
    this._internalRoot = a;
  }
  kc.prototype.unstable_scheduleHydration = function (a) {
    if (a) {
      var u = En();
      a = { blockedOn: null, target: a, priority: u };
      for (var h = 0; h < W.length && u !== 0 && u < W[h].priority; h++);
      W.splice(h, 0, a), h === 0 && B1(a);
    }
  };
  function Vh(a) {
    return !(!a || (a.nodeType !== 1 && a.nodeType !== 9 && a.nodeType !== 11));
  }
  function _c(a) {
    return !(
      !a ||
      (a.nodeType !== 1 &&
        a.nodeType !== 9 &&
        a.nodeType !== 11 &&
        (a.nodeType !== 8 || a.nodeValue !== " react-mount-point-unstable "))
    );
  }
  function r8() {}
  function YP(a, u, h, y, S) {
    if (S) {
      if (typeof y == "function") {
        var I = y;
        y = function () {
          var O1 = Ec(Y);
          I.call(O1);
        };
      }
      var Y = e8(u, y, a, 0, null, !1, !1, "", r8);
      return (
        (a._reactRootContainer = Y),
        (a[S2] = Y.current),
        Y3(a.nodeType === 8 ? a.parentNode : a),
        uo(),
        Y
      );
    }
    for (; (S = a.lastChild); ) a.removeChild(S);
    if (typeof y == "function") {
      var f1 = y;
      y = function () {
        var O1 = Ec(x1);
        f1.call(O1);
      };
    }
    var x1 = Fh(a, 0, !1, null, null, !1, !1, "", r8);
    return (
      (a._reactRootContainer = x1),
      (a[S2] = x1.current),
      Y3(a.nodeType === 8 ? a.parentNode : a),
      uo(function () {
        Sc(u, x1, h, y);
      }),
      x1
    );
  }
  function Ac(a, u, h, y, S) {
    var I = h._reactRootContainer;
    if (I) {
      var Y = I;
      if (typeof S == "function") {
        var f1 = S;
        S = function () {
          var x1 = Ec(Y);
          f1.call(x1);
        };
      }
      Sc(u, Y, a, S);
    } else Y = YP(h, u, a, S, y);
    return Ec(Y);
  }
  (Mt = function (a) {
    switch (a.tag) {
      case 3:
        var u = a.stateNode;
        if (u.current.memoizedState.isDehydrated) {
          var h = ot(u.pendingLanes);
          h !== 0 &&
            (qt(u, h | 1),
            Dr(u, Ce()),
            (Nt & 6) === 0 && ((Oa = Ce() + 500), hs()));
        }
        break;
      case 13:
        uo(function () {
          var y = A2(a, 1);
          if (y !== null) {
            var S = Er();
            Ai(y, a, 1, S);
          }
        }),
          Uh(a, 1);
    }
  }),
    (Kt = function (a) {
      if (a.tag === 13) {
        var u = A2(a, 134217728);
        if (u !== null) {
          var h = Er();
          Ai(u, a, 134217728, h);
        }
        Uh(a, 134217728);
      }
    }),
    (an = function (a) {
      if (a.tag === 13) {
        var u = ws(a),
          h = A2(a, u);
        if (h !== null) {
          var y = Er();
          Ai(h, a, u, y);
        }
        Uh(a, u);
      }
    }),
    (En = function () {
      return be;
    }),
    (kn = function (a, u) {
      var h = be;
      try {
        return (be = a), u();
      } finally {
        be = h;
      }
    }),
    (Le = function (a, u, h) {
      switch (u) {
        case "input":
          if ((Ve(a, h), (u = h.name), h.type === "radio" && u != null)) {
            for (h = a; h.parentNode; ) h = h.parentNode;
            for (
              h = h.querySelectorAll(
                "input[name=" + JSON.stringify("" + u) + '][type="radio"]'
              ),
                u = 0;
              u < h.length;
              u++
            ) {
              var y = h[u];
              if (y !== a && y.form === a.form) {
                var S = zu(y);
                if (!S) throw Error(n(90));
                L1(y), Ve(y, S);
              }
            }
          }
          break;
        case "textarea":
          j1(a, h);
          break;
        case "select":
          (u = h.value), u != null && je(a, !!h.multiple, u, !1);
      }
    }),
    (hn = Ih),
    (si = uo);
  var QP = { usingClientEntryPoint: !1, Events: [X3, Sa, zu, en, At, Ih] },
    f0 = {
      findFiberByHostInstance: to,
      bundleType: 0,
      version: "18.3.1",
      rendererPackageName: "react-dom",
    },
    ZP = {
      bundleType: f0.bundleType,
      version: f0.version,
      rendererPackageName: f0.rendererPackageName,
      rendererConfig: f0.rendererConfig,
      overrideHookState: null,
      overrideHookStateDeletePath: null,
      overrideHookStateRenamePath: null,
      overrideProps: null,
      overridePropsDeletePath: null,
      overridePropsRenamePath: null,
      setErrorHandler: null,
      setSuspenseHandler: null,
      scheduleUpdate: null,
      currentDispatcherRef: T.ReactCurrentDispatcher,
      findHostInstanceByFiber: function (a) {
        return (a = ye(a)), a === null ? null : a.stateNode;
      },
      findFiberByHostInstance: f0.findFiberByHostInstance || GP,
      findHostInstancesForRefresh: null,
      scheduleRefresh: null,
      scheduleRoot: null,
      setRefreshHandler: null,
      getCurrentFiber: null,
      reconcilerVersion: "18.3.1-next-f1338f8080-20240426",
    };
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u") {
    var Tc = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (!Tc.isDisabled && Tc.supportsFiber)
      try {
        (le = Tc.inject(ZP)), (I1 = Tc);
      } catch {}
  }
  return (
    (Fr.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = QP),
    (Fr.createPortal = function (a, u) {
      var h =
        2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
      if (!Vh(u)) throw Error(n(200));
      return KP(a, u, null, h);
    }),
    (Fr.createRoot = function (a, u) {
      if (!Vh(a)) throw Error(n(299));
      var h = !1,
        y = "",
        S = n8;
      return (
        u != null &&
          (u.unstable_strictMode === !0 && (h = !0),
          u.identifierPrefix !== void 0 && (y = u.identifierPrefix),
          u.onRecoverableError !== void 0 && (S = u.onRecoverableError)),
        (u = Fh(a, 1, !1, null, null, h, !1, y, S)),
        (a[S2] = u.current),
        Y3(a.nodeType === 8 ? a.parentNode : a),
        new $h(u)
      );
    }),
    (Fr.findDOMNode = function (a) {
      if (a == null) return null;
      if (a.nodeType === 1) return a;
      var u = a._reactInternals;
      if (u === void 0)
        throw typeof a.render == "function"
          ? Error(n(188))
          : ((a = Object.keys(a).join(",")), Error(n(268, a)));
      return (a = ye(u)), (a = a === null ? null : a.stateNode), a;
    }),
    (Fr.flushSync = function (a) {
      return uo(a);
    }),
    (Fr.hydrate = function (a, u, h) {
      if (!_c(u)) throw Error(n(200));
      return Ac(null, a, u, !0, h);
    }),
    (Fr.hydrateRoot = function (a, u, h) {
      if (!Vh(a)) throw Error(n(405));
      var y = (h != null && h.hydratedSources) || null,
        S = !1,
        I = "",
        Y = n8;
      if (
        (h != null &&
          (h.unstable_strictMode === !0 && (S = !0),
          h.identifierPrefix !== void 0 && (I = h.identifierPrefix),
          h.onRecoverableError !== void 0 && (Y = h.onRecoverableError)),
        (u = e8(u, null, a, 1, h ?? null, S, !1, I, Y)),
        (a[S2] = u.current),
        Y3(a),
        y)
      )
        for (a = 0; a < y.length; a++)
          (h = y[a]),
            (S = h._getVersion),
            (S = S(h._source)),
            u.mutableSourceEagerHydrationData == null
              ? (u.mutableSourceEagerHydrationData = [h, S])
              : u.mutableSourceEagerHydrationData.push(h, S);
      return new kc(u);
    }),
    (Fr.render = function (a, u, h) {
      if (!_c(u)) throw Error(n(200));
      return Ac(null, a, u, !1, h);
    }),
    (Fr.unmountComponentAtNode = function (a) {
      if (!_c(a)) throw Error(n(40));
      return a._reactRootContainer
        ? (uo(function () {
            Ac(null, null, a, !1, function () {
              (a._reactRootContainer = null), (a[S2] = null);
            });
          }),
          !0)
        : !1;
    }),
    (Fr.unstable_batchedUpdates = Ih),
    (Fr.unstable_renderSubtreeIntoContainer = function (a, u, h, y) {
      if (!_c(h)) throw Error(n(200));
      if (a == null || a._reactInternals === void 0) throw Error(n(38));
      return Ac(a, u, h, !1, y);
    }),
    (Fr.version = "18.3.1-next-f1338f8080-20240426"),
    Fr
  );
}
var j8;
function vC() {
  if (j8) return Qh.exports;
  j8 = 1;
  function e() {
    if (
      !(
        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" ||
        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function"
      )
    )
      try {
        __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e);
      } catch (t) {
        console.error(t);
      }
  }
  return e(), (Qh.exports = vR()), Qh.exports;
}
var N8;
function wR() {
  if (N8) return Rc;
  N8 = 1;
  var e = vC();
  return (Rc.createRoot = e.createRoot), (Rc.hydrateRoot = e.hydrateRoot), Rc;
}
var bR = wR(),
  Jh = { exports: {} },
  e9 = {};
/**
 * @license React
 * use-sync-external-store-with-selector.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var O8;
function xR() {
  if (O8) return e9;
  O8 = 1;
  var e = E3();
  function t(c, f) {
    return (c === f && (c !== 0 || 1 / c === 1 / f)) || (c !== c && f !== f);
  }
  var n = typeof Object.is == "function" ? Object.is : t,
    r = e.useSyncExternalStore,
    i = e.useRef,
    s = e.useEffect,
    o = e.useMemo,
    l = e.useDebugValue;
  return (
    (e9.useSyncExternalStoreWithSelector = function (c, f, d, p, m) {
      var g = i(null);
      if (g.current === null) {
        var w = { hasValue: !1, value: null };
        g.current = w;
      } else w = g.current;
      g = o(
        function () {
          function x(M) {
            if (!E) {
              if (((E = !0), (P = M), (M = p(M)), m !== void 0 && w.hasValue)) {
                var L = w.value;
                if (m(L, M)) return (_ = L);
              }
              return (_ = M);
            }
            if (((L = _), n(P, M))) return L;
            var O = p(M);
            return m !== void 0 && m(L, O) ? ((P = M), L) : ((P = M), (_ = O));
          }
          var E = !1,
            P,
            _,
            T = d === void 0 ? null : d;
          return [
            function () {
              return x(f());
            },
            T === null
              ? void 0
              : function () {
                  return x(T());
                },
          ];
        },
        [f, d, p, m]
      );
      var b = r(c, g[0], g[1]);
      return (
        s(
          function () {
            (w.hasValue = !0), (w.value = b);
          },
          [b]
        ),
        l(b),
        b
      );
    }),
    e9
  );
}
var B8;
function CR() {
  return B8 || ((B8 = 1), (Jh.exports = xR())), Jh.exports;
}
var SR = CR();
function wC(e) {
  e();
}
function ER() {
  let e = null,
    t = null;
  return {
    clear() {
      (e = null), (t = null);
    },
    notify() {
      wC(() => {
        let n = e;
        for (; n; ) n.callback(), (n = n.next);
      });
    },
    get() {
      const n = [];
      let r = e;
      for (; r; ) n.push(r), (r = r.next);
      return n;
    },
    subscribe(n) {
      let r = !0;
      const i = (t = { callback: n, next: null, prev: t });
      return (
        i.prev ? (i.prev.next = i) : (e = i),
        function () {
          !r ||
            e === null ||
            ((r = !1),
            i.next ? (i.next.prev = i.prev) : (t = i.prev),
            i.prev ? (i.prev.next = i.next) : (e = i.next));
        }
      );
    },
  };
}
var D8 = { notify() {}, get: () => [] };
function kR(e, t) {
  let n,
    r = D8,
    i = 0,
    s = !1;
  function o(b) {
    d();
    const x = r.subscribe(b);
    let E = !1;
    return () => {
      E || ((E = !0), x(), p());
    };
  }
  function l() {
    r.notify();
  }
  function c() {
    w.onStateChange && w.onStateChange();
  }
  function f() {
    return s;
  }
  function d() {
    i++, n || ((n = e.subscribe(c)), (r = ER()));
  }
  function p() {
    i--, n && i === 0 && (n(), (n = void 0), r.clear(), (r = D8));
  }
  function m() {
    s || ((s = !0), d());
  }
  function g() {
    s && ((s = !1), p());
  }
  const w = {
    addNestedSub: o,
    notifyNestedSubs: l,
    handleChangeWrapper: c,
    isSubscribed: f,
    trySubscribe: m,
    tryUnsubscribe: g,
    getListeners: () => r,
  };
  return w;
}
var _R = () =>
    typeof window < "u" &&
    typeof window.document < "u" &&
    typeof window.document.createElement < "u",
  AR = _R(),
  TR = () => typeof navigator < "u" && navigator.product === "ReactNative",
  PR = TR(),
  MR = () => (AR || PR ? N.useLayoutEffect : N.useEffect),
  RR = MR();
function F8(e, t) {
  return e === t ? e !== 0 || t !== 0 || 1 / e === 1 / t : e !== e && t !== t;
}
function dl(e, t) {
  if (F8(e, t)) return !0;
  if (typeof e != "object" || e === null || typeof t != "object" || t === null)
    return !1;
  const n = Object.keys(e),
    r = Object.keys(t);
  if (n.length !== r.length) return !1;
  for (let i = 0; i < n.length; i++)
    if (!Object.prototype.hasOwnProperty.call(t, n[i]) || !F8(e[n[i]], t[n[i]]))
      return !1;
  return !0;
}
var t9 = Symbol.for("react-redux-context"),
  n9 = typeof globalThis < "u" ? globalThis : {};
function LR() {
  if (!N.createContext) return {};
  const e = n9[t9] ?? (n9[t9] = new Map());
  let t = e.get(N.createContext);
  return t || ((t = N.createContext(null)), e.set(N.createContext, t)), t;
}
var Bs = LR();
function IR(e) {
  const { children: t, context: n, serverState: r, store: i } = e,
    s = N.useMemo(() => {
      const c = kR(i);
      return {
        store: i,
        subscription: c,
        getServerState: r ? () => r : void 0,
      };
    }, [i, r]),
    o = N.useMemo(() => i.getState(), [i]);
  RR(() => {
    const { subscription: c } = s;
    return (
      (c.onStateChange = c.notifyNestedSubs),
      c.trySubscribe(),
      o !== i.getState() && c.notifyNestedSubs(),
      () => {
        c.tryUnsubscribe(), (c.onStateChange = void 0);
      }
    );
  }, [s, o]);
  const l = n || Bs;
  return N.createElement(l.Provider, { value: s }, t);
}
var jR = IR;
function z6(e = Bs) {
  return function () {
    return N.useContext(e);
  };
}
var bC = z6();
function xC(e = Bs) {
  const t = e === Bs ? bC : z6(e),
    n = () => {
      const { store: r } = t();
      return r;
    };
  return Object.assign(n, { withTypes: () => n }), n;
}
var CC = xC();
function NR(e = Bs) {
  const t = e === Bs ? CC : xC(e),
    n = () => t().dispatch;
  return Object.assign(n, { withTypes: () => n }), n;
}
var v2 = NR(),
  OR = (e, t) => e === t;
function BR(e = Bs) {
  const t = e === Bs ? bC : z6(e),
    n = (r, i = {}) => {
      const { equalityFn: s = OR } =
          typeof i == "function" ? { equalityFn: i } : i,
        o = t(),
        { store: l, subscription: c, getServerState: f } = o;
      N.useRef(!0);
      const d = N.useCallback(
          {
            [r.name](m) {
              return r(m);
            },
          }[r.name],
          [r]
        ),
        p = SR.useSyncExternalStoreWithSelector(
          c.addNestedSub,
          l.getState,
          f || l.getState,
          d,
          s
        );
      return N.useDebugValue(p), p;
    };
  return Object.assign(n, { withTypes: () => n }), n;
}
var ia = BR(),
  DR = wC,
  SC = {},
  w4 = {};
w4.byteLength = $R;
w4.toByteArray = WR;
w4.fromByteArray = qR;
var e2 = [],
  gi = [],
  FR = typeof Uint8Array < "u" ? Uint8Array : Array,
  r9 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
for (var Ua = 0, UR = r9.length; Ua < UR; ++Ua)
  (e2[Ua] = r9[Ua]), (gi[r9.charCodeAt(Ua)] = Ua);
gi[45] = 62;
gi[95] = 63;
function EC(e) {
  var t = e.length;
  if (t % 4 > 0)
    throw new Error("Invalid string. Length must be a multiple of 4");
  var n = e.indexOf("=");
  n === -1 && (n = t);
  var r = n === t ? 0 : 4 - (n % 4);
  return [n, r];
}
function $R(e) {
  var t = EC(e),
    n = t[0],
    r = t[1];
  return ((n + r) * 3) / 4 - r;
}
function VR(e, t, n) {
  return ((t + n) * 3) / 4 - n;
}
function WR(e) {
  var t,
    n = EC(e),
    r = n[0],
    i = n[1],
    s = new FR(VR(e, r, i)),
    o = 0,
    l = i > 0 ? r - 4 : r,
    c;
  for (c = 0; c < l; c += 4)
    (t =
      (gi[e.charCodeAt(c)] << 18) |
      (gi[e.charCodeAt(c + 1)] << 12) |
      (gi[e.charCodeAt(c + 2)] << 6) |
      gi[e.charCodeAt(c + 3)]),
      (s[o++] = (t >> 16) & 255),
      (s[o++] = (t >> 8) & 255),
      (s[o++] = t & 255);
  return (
    i === 2 &&
      ((t = (gi[e.charCodeAt(c)] << 2) | (gi[e.charCodeAt(c + 1)] >> 4)),
      (s[o++] = t & 255)),
    i === 1 &&
      ((t =
        (gi[e.charCodeAt(c)] << 10) |
        (gi[e.charCodeAt(c + 1)] << 4) |
        (gi[e.charCodeAt(c + 2)] >> 2)),
      (s[o++] = (t >> 8) & 255),
      (s[o++] = t & 255)),
    s
  );
}
function zR(e) {
  return (
    e2[(e >> 18) & 63] + e2[(e >> 12) & 63] + e2[(e >> 6) & 63] + e2[e & 63]
  );
}
function HR(e, t, n) {
  for (var r, i = [], s = t; s < n; s += 3)
    (r =
      ((e[s] << 16) & 16711680) + ((e[s + 1] << 8) & 65280) + (e[s + 2] & 255)),
      i.push(zR(r));
  return i.join("");
}
function qR(e) {
  for (
    var t, n = e.length, r = n % 3, i = [], s = 16383, o = 0, l = n - r;
    o < l;
    o += s
  )
    i.push(HR(e, o, o + s > l ? l : o + s));
  return (
    r === 1
      ? ((t = e[n - 1]), i.push(e2[t >> 2] + e2[(t << 4) & 63] + "=="))
      : r === 2 &&
        ((t = (e[n - 2] << 8) + e[n - 1]),
        i.push(e2[t >> 10] + e2[(t >> 4) & 63] + e2[(t << 2) & 63] + "=")),
    i.join("")
  );
}
var H6 = {};
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */ H6.read =
  function (e, t, n, r, i) {
    var s,
      o,
      l = i * 8 - r - 1,
      c = (1 << l) - 1,
      f = c >> 1,
      d = -7,
      p = n ? i - 1 : 0,
      m = n ? -1 : 1,
      g = e[t + p];
    for (
      p += m, s = g & ((1 << -d) - 1), g >>= -d, d += l;
      d > 0;
      s = s * 256 + e[t + p], p += m, d -= 8
    );
    for (
      o = s & ((1 << -d) - 1), s >>= -d, d += r;
      d > 0;
      o = o * 256 + e[t + p], p += m, d -= 8
    );
    if (s === 0) s = 1 - f;
    else {
      if (s === c) return o ? NaN : (g ? -1 : 1) * (1 / 0);
      (o = o + Math.pow(2, r)), (s = s - f);
    }
    return (g ? -1 : 1) * o * Math.pow(2, s - r);
  };
H6.write = function (e, t, n, r, i, s) {
  var o,
    l,
    c,
    f = s * 8 - i - 1,
    d = (1 << f) - 1,
    p = d >> 1,
    m = i === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
    g = r ? 0 : s - 1,
    w = r ? 1 : -1,
    b = t < 0 || (t === 0 && 1 / t < 0) ? 1 : 0;
  for (
    t = Math.abs(t),
      isNaN(t) || t === 1 / 0
        ? ((l = isNaN(t) ? 1 : 0), (o = d))
        : ((o = Math.floor(Math.log(t) / Math.LN2)),
          t * (c = Math.pow(2, -o)) < 1 && (o--, (c *= 2)),
          o + p >= 1 ? (t += m / c) : (t += m * Math.pow(2, 1 - p)),
          t * c >= 2 && (o++, (c /= 2)),
          o + p >= d
            ? ((l = 0), (o = d))
            : o + p >= 1
            ? ((l = (t * c - 1) * Math.pow(2, i)), (o = o + p))
            : ((l = t * Math.pow(2, p - 1) * Math.pow(2, i)), (o = 0)));
    i >= 8;
    e[n + g] = l & 255, g += w, l /= 256, i -= 8
  );
  for (
    o = (o << i) | l, f += i;
    f > 0;
    e[n + g] = o & 255, g += w, o /= 256, f -= 8
  );
  e[n + g - w] |= b * 128;
};
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */ (function (e) {
  const t = w4,
    n = H6,
    r =
      typeof Symbol == "function" && typeof Symbol.for == "function"
        ? Symbol.for("nodejs.util.inspect.custom")
        : null;
  (e.Buffer = d), (e.SlowBuffer = M), (e.INSPECT_MAX_BYTES = 50);
  const i = 2147483647;
  e.kMaxLength = i;
  const { Uint8Array: s, ArrayBuffer: o, SharedArrayBuffer: l } = globalThis;
  (d.TYPED_ARRAY_SUPPORT = c()),
    !d.TYPED_ARRAY_SUPPORT &&
      typeof console < "u" &&
      typeof console.error == "function" &&
      console.error(
        "This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."
      );
  function c() {
    try {
      const R = new s(1),
        C = {
          foo: function () {
            return 42;
          },
        };
      return (
        Object.setPrototypeOf(C, s.prototype),
        Object.setPrototypeOf(R, C),
        R.foo() === 42
      );
    } catch {
      return !1;
    }
  }
  Object.defineProperty(d.prototype, "parent", {
    enumerable: !0,
    get: function () {
      if (d.isBuffer(this)) return this.buffer;
    },
  }),
    Object.defineProperty(d.prototype, "offset", {
      enumerable: !0,
      get: function () {
        if (d.isBuffer(this)) return this.byteOffset;
      },
    });
  function f(R) {
    if (R > i)
      throw new RangeError(
        'The value "' + R + '" is invalid for option "size"'
      );
    const C = new s(R);
    return Object.setPrototypeOf(C, d.prototype), C;
  }
  function d(R, C, k) {
    if (typeof R == "number") {
      if (typeof C == "string")
        throw new TypeError(
          'The "string" argument must be of type string. Received type number'
        );
      return w(R);
    }
    return p(R, C, k);
  }
  d.poolSize = 8192;
  function p(R, C, k) {
    if (typeof R == "string") return b(R, C);
    if (o.isView(R)) return E(R);
    if (R == null)
      throw new TypeError(
        "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " +
          typeof R
      );
    if (
      a1(R, o) ||
      (R && a1(R.buffer, o)) ||
      (typeof l < "u" && (a1(R, l) || (R && a1(R.buffer, l))))
    )
      return P(R, C, k);
    if (typeof R == "number")
      throw new TypeError(
        'The "value" argument must not be of type number. Received type number'
      );
    const q = R.valueOf && R.valueOf();
    if (q != null && q !== R) return d.from(q, C, k);
    const s1 = _(R);
    if (s1) return s1;
    if (
      typeof Symbol < "u" &&
      Symbol.toPrimitive != null &&
      typeof R[Symbol.toPrimitive] == "function"
    )
      return d.from(R[Symbol.toPrimitive]("string"), C, k);
    throw new TypeError(
      "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " +
        typeof R
    );
  }
  (d.from = function (R, C, k) {
    return p(R, C, k);
  }),
    Object.setPrototypeOf(d.prototype, s.prototype),
    Object.setPrototypeOf(d, s);
  function m(R) {
    if (typeof R != "number")
      throw new TypeError('"size" argument must be of type number');
    if (R < 0)
      throw new RangeError(
        'The value "' + R + '" is invalid for option "size"'
      );
  }
  function g(R, C, k) {
    return (
      m(R),
      R <= 0
        ? f(R)
        : C !== void 0
        ? typeof k == "string"
          ? f(R).fill(C, k)
          : f(R).fill(C)
        : f(R)
    );
  }
  d.alloc = function (R, C, k) {
    return g(R, C, k);
  };
  function w(R) {
    return m(R), f(R < 0 ? 0 : T(R) | 0);
  }
  (d.allocUnsafe = function (R) {
    return w(R);
  }),
    (d.allocUnsafeSlow = function (R) {
      return w(R);
    });
  function b(R, C) {
    if (((typeof C != "string" || C === "") && (C = "utf8"), !d.isEncoding(C)))
      throw new TypeError("Unknown encoding: " + C);
    const k = L(R, C) | 0;
    let q = f(k);
    const s1 = q.write(R, C);
    return s1 !== k && (q = q.slice(0, s1)), q;
  }
  function x(R) {
    const C = R.length < 0 ? 0 : T(R.length) | 0,
      k = f(C);
    for (let q = 0; q < C; q += 1) k[q] = R[q] & 255;
    return k;
  }
  function E(R) {
    if (a1(R, s)) {
      const C = new s(R);
      return P(C.buffer, C.byteOffset, C.byteLength);
    }
    return x(R);
  }
  function P(R, C, k) {
    if (C < 0 || R.byteLength < C)
      throw new RangeError('"offset" is outside of buffer bounds');
    if (R.byteLength < C + (k || 0))
      throw new RangeError('"length" is outside of buffer bounds');
    let q;
    return (
      C === void 0 && k === void 0
        ? (q = new s(R))
        : k === void 0
        ? (q = new s(R, C))
        : (q = new s(R, C, k)),
      Object.setPrototypeOf(q, d.prototype),
      q
    );
  }
  function _(R) {
    if (d.isBuffer(R)) {
      const C = T(R.length) | 0,
        k = f(C);
      return k.length === 0 || R.copy(k, 0, 0, C), k;
    }
    if (R.length !== void 0)
      return typeof R.length != "number" || K(R.length) ? f(0) : x(R);
    if (R.type === "Buffer" && Array.isArray(R.data)) return x(R.data);
  }
  function T(R) {
    if (R >= i)
      throw new RangeError(
        "Attempt to allocate Buffer larger than maximum size: 0x" +
          i.toString(16) +
          " bytes"
      );
    return R | 0;
  }
  function M(R) {
    return +R != R && (R = 0), d.alloc(+R);
  }
  (d.isBuffer = function (C) {
    return C != null && C._isBuffer === !0 && C !== d.prototype;
  }),
    (d.compare = function (C, k) {
      if (
        (a1(C, s) && (C = d.from(C, C.offset, C.byteLength)),
        a1(k, s) && (k = d.from(k, k.offset, k.byteLength)),
        !d.isBuffer(C) || !d.isBuffer(k))
      )
        throw new TypeError(
          'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
        );
      if (C === k) return 0;
      let q = C.length,
        s1 = k.length;
      for (let v1 = 0, w1 = Math.min(q, s1); v1 < w1; ++v1)
        if (C[v1] !== k[v1]) {
          (q = C[v1]), (s1 = k[v1]);
          break;
        }
      return q < s1 ? -1 : s1 < q ? 1 : 0;
    }),
    (d.isEncoding = function (C) {
      switch (String(C).toLowerCase()) {
        case "hex":
        case "utf8":
        case "utf-8":
        case "ascii":
        case "latin1":
        case "binary":
        case "base64":
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return !0;
        default:
          return !1;
      }
    }),
    (d.concat = function (C, k) {
      if (!Array.isArray(C))
        throw new TypeError('"list" argument must be an Array of Buffers');
      if (C.length === 0) return d.alloc(0);
      let q;
      if (k === void 0) for (k = 0, q = 0; q < C.length; ++q) k += C[q].length;
      const s1 = d.allocUnsafe(k);
      let v1 = 0;
      for (q = 0; q < C.length; ++q) {
        let w1 = C[q];
        if (a1(w1, s))
          v1 + w1.length > s1.length
            ? (d.isBuffer(w1) || (w1 = d.from(w1)), w1.copy(s1, v1))
            : s.prototype.set.call(s1, w1, v1);
        else if (d.isBuffer(w1)) w1.copy(s1, v1);
        else throw new TypeError('"list" argument must be an Array of Buffers');
        v1 += w1.length;
      }
      return s1;
    });
  function L(R, C) {
    if (d.isBuffer(R)) return R.length;
    if (o.isView(R) || a1(R, o)) return R.byteLength;
    if (typeof R != "string")
      throw new TypeError(
        'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' +
          typeof R
      );
    const k = R.length,
      q = arguments.length > 2 && arguments[2] === !0;
    if (!q && k === 0) return 0;
    let s1 = !1;
    for (;;)
      switch (C) {
        case "ascii":
        case "latin1":
        case "binary":
          return k;
        case "utf8":
        case "utf-8":
          return qe(R).length;
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return k * 2;
        case "hex":
          return k >>> 1;
        case "base64":
          return E1(R).length;
        default:
          if (s1) return q ? -1 : qe(R).length;
          (C = ("" + C).toLowerCase()), (s1 = !0);
      }
  }
  d.byteLength = L;
  function O(R, C, k) {
    let q = !1;
    if (
      ((C === void 0 || C < 0) && (C = 0),
      C > this.length ||
        ((k === void 0 || k > this.length) && (k = this.length), k <= 0) ||
        ((k >>>= 0), (C >>>= 0), k <= C))
    )
      return "";
    for (R || (R = "utf8"); ; )
      switch (R) {
        case "hex":
          return k1(this, C, k);
        case "utf8":
        case "utf-8":
          return e1(this, C, k);
        case "ascii":
          return b1(this, C, k);
        case "latin1":
        case "binary":
          return o1(this, C, k);
        case "base64":
          return u1(this, C, k);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return Y1(this, C, k);
        default:
          if (q) throw new TypeError("Unknown encoding: " + R);
          (R = (R + "").toLowerCase()), (q = !0);
      }
  }
  d.prototype._isBuffer = !0;
  function U(R, C, k) {
    const q = R[C];
    (R[C] = R[k]), (R[k] = q);
  }
  (d.prototype.swap16 = function () {
    const C = this.length;
    if (C % 2 !== 0)
      throw new RangeError("Buffer size must be a multiple of 16-bits");
    for (let k = 0; k < C; k += 2) U(this, k, k + 1);
    return this;
  }),
    (d.prototype.swap32 = function () {
      const C = this.length;
      if (C % 4 !== 0)
        throw new RangeError("Buffer size must be a multiple of 32-bits");
      for (let k = 0; k < C; k += 4) U(this, k, k + 3), U(this, k + 1, k + 2);
      return this;
    }),
    (d.prototype.swap64 = function () {
      const C = this.length;
      if (C % 8 !== 0)
        throw new RangeError("Buffer size must be a multiple of 64-bits");
      for (let k = 0; k < C; k += 8)
        U(this, k, k + 7),
          U(this, k + 1, k + 6),
          U(this, k + 2, k + 5),
          U(this, k + 3, k + 4);
      return this;
    }),
    (d.prototype.toString = function () {
      const C = this.length;
      return C === 0
        ? ""
        : arguments.length === 0
        ? e1(this, 0, C)
        : O.apply(this, arguments);
    }),
    (d.prototype.toLocaleString = d.prototype.toString),
    (d.prototype.equals = function (C) {
      if (!d.isBuffer(C)) throw new TypeError("Argument must be a Buffer");
      return this === C ? !0 : d.compare(this, C) === 0;
    }),
    (d.prototype.inspect = function () {
      let C = "";
      const k = e.INSPECT_MAX_BYTES;
      return (
        (C = this.toString("hex", 0, k)
          .replace(/(.{2})/g, "$1 ")
          .trim()),
        this.length > k && (C += " ... "),
        "<Buffer " + C + ">"
      );
    }),
    r && (d.prototype[r] = d.prototype.inspect),
    (d.prototype.compare = function (C, k, q, s1, v1) {
      if ((a1(C, s) && (C = d.from(C, C.offset, C.byteLength)), !d.isBuffer(C)))
        throw new TypeError(
          'The "target" argument must be one of type Buffer or Uint8Array. Received type ' +
            typeof C
        );
      if (
        (k === void 0 && (k = 0),
        q === void 0 && (q = C ? C.length : 0),
        s1 === void 0 && (s1 = 0),
        v1 === void 0 && (v1 = this.length),
        k < 0 || q > C.length || s1 < 0 || v1 > this.length)
      )
        throw new RangeError("out of range index");
      if (s1 >= v1 && k >= q) return 0;
      if (s1 >= v1) return -1;
      if (k >= q) return 1;
      if (((k >>>= 0), (q >>>= 0), (s1 >>>= 0), (v1 >>>= 0), this === C))
        return 0;
      let w1 = v1 - s1,
        $1 = q - k;
      const he = Math.min(w1, $1),
        U1 = this.slice(s1, v1),
        Le = C.slice(k, q);
      for (let pe = 0; pe < he; ++pe)
        if (U1[pe] !== Le[pe]) {
          (w1 = U1[pe]), ($1 = Le[pe]);
          break;
        }
      return w1 < $1 ? -1 : $1 < w1 ? 1 : 0;
    });
  function D(R, C, k, q, s1) {
    if (R.length === 0) return -1;
    if (
      (typeof k == "string"
        ? ((q = k), (k = 0))
        : k > 2147483647
        ? (k = 2147483647)
        : k < -2147483648 && (k = -2147483648),
      (k = +k),
      K(k) && (k = s1 ? 0 : R.length - 1),
      k < 0 && (k = R.length + k),
      k >= R.length)
    ) {
      if (s1) return -1;
      k = R.length - 1;
    } else if (k < 0)
      if (s1) k = 0;
      else return -1;
    if ((typeof C == "string" && (C = d.from(C, q)), d.isBuffer(C)))
      return C.length === 0 ? -1 : H(R, C, k, q, s1);
    if (typeof C == "number")
      return (
        (C = C & 255),
        typeof s.prototype.indexOf == "function"
          ? s1
            ? s.prototype.indexOf.call(R, C, k)
            : s.prototype.lastIndexOf.call(R, C, k)
          : H(R, [C], k, q, s1)
      );
    throw new TypeError("val must be string, number or Buffer");
  }
  function H(R, C, k, q, s1) {
    let v1 = 1,
      w1 = R.length,
      $1 = C.length;
    if (
      q !== void 0 &&
      ((q = String(q).toLowerCase()),
      q === "ucs2" || q === "ucs-2" || q === "utf16le" || q === "utf-16le")
    ) {
      if (R.length < 2 || C.length < 2) return -1;
      (v1 = 2), (w1 /= 2), ($1 /= 2), (k /= 2);
    }
    function he(Le, pe) {
      return v1 === 1 ? Le[pe] : Le.readUInt16BE(pe * v1);
    }
    let U1;
    if (s1) {
      let Le = -1;
      for (U1 = k; U1 < w1; U1++)
        if (he(R, U1) === he(C, Le === -1 ? 0 : U1 - Le)) {
          if ((Le === -1 && (Le = U1), U1 - Le + 1 === $1)) return Le * v1;
        } else Le !== -1 && (U1 -= U1 - Le), (Le = -1);
    } else
      for (k + $1 > w1 && (k = w1 - $1), U1 = k; U1 >= 0; U1--) {
        let Le = !0;
        for (let pe = 0; pe < $1; pe++)
          if (he(R, U1 + pe) !== he(C, pe)) {
            Le = !1;
            break;
          }
        if (Le) return U1;
      }
    return -1;
  }
  (d.prototype.includes = function (C, k, q) {
    return this.indexOf(C, k, q) !== -1;
  }),
    (d.prototype.indexOf = function (C, k, q) {
      return D(this, C, k, q, !0);
    }),
    (d.prototype.lastIndexOf = function (C, k, q) {
      return D(this, C, k, q, !1);
    });
  function $(R, C, k, q) {
    k = Number(k) || 0;
    const s1 = R.length - k;
    q ? ((q = Number(q)), q > s1 && (q = s1)) : (q = s1);
    const v1 = C.length;
    q > v1 / 2 && (q = v1 / 2);
    let w1;
    for (w1 = 0; w1 < q; ++w1) {
      const $1 = parseInt(C.substr(w1 * 2, 2), 16);
      if (K($1)) return w1;
      R[k + w1] = $1;
    }
    return w1;
  }
  function F(R, C, k, q) {
    return j1(qe(C, R.length - k), R, k, q);
  }
  function B(R, C, k, q) {
    return j1(je(C), R, k, q);
  }
  function j(R, C, k, q) {
    return j1(E1(C), R, k, q);
  }
  function G(R, C, k, q) {
    return j1(g1(C, R.length - k), R, k, q);
  }
  (d.prototype.write = function (C, k, q, s1) {
    if (k === void 0) (s1 = "utf8"), (q = this.length), (k = 0);
    else if (q === void 0 && typeof k == "string")
      (s1 = k), (q = this.length), (k = 0);
    else if (isFinite(k))
      (k = k >>> 0),
        isFinite(q)
          ? ((q = q >>> 0), s1 === void 0 && (s1 = "utf8"))
          : ((s1 = q), (q = void 0));
    else
      throw new Error(
        "Buffer.write(string, encoding, offset[, length]) is no longer supported"
      );
    const v1 = this.length - k;
    if (
      ((q === void 0 || q > v1) && (q = v1),
      (C.length > 0 && (q < 0 || k < 0)) || k > this.length)
    )
      throw new RangeError("Attempt to write outside buffer bounds");
    s1 || (s1 = "utf8");
    let w1 = !1;
    for (;;)
      switch (s1) {
        case "hex":
          return $(this, C, k, q);
        case "utf8":
        case "utf-8":
          return F(this, C, k, q);
        case "ascii":
        case "latin1":
        case "binary":
          return B(this, C, k, q);
        case "base64":
          return j(this, C, k, q);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return G(this, C, k, q);
        default:
          if (w1) throw new TypeError("Unknown encoding: " + s1);
          (s1 = ("" + s1).toLowerCase()), (w1 = !0);
      }
  }),
    (d.prototype.toJSON = function () {
      return {
        type: "Buffer",
        data: Array.prototype.slice.call(this._arr || this, 0),
      };
    });
  function u1(R, C, k) {
    return C === 0 && k === R.length
      ? t.fromByteArray(R)
      : t.fromByteArray(R.slice(C, k));
  }
  function e1(R, C, k) {
    k = Math.min(R.length, k);
    const q = [];
    let s1 = C;
    for (; s1 < k; ) {
      const v1 = R[s1];
      let w1 = null,
        $1 = v1 > 239 ? 4 : v1 > 223 ? 3 : v1 > 191 ? 2 : 1;
      if (s1 + $1 <= k) {
        let he, U1, Le, pe;
        switch ($1) {
          case 1:
            v1 < 128 && (w1 = v1);
            break;
          case 2:
            (he = R[s1 + 1]),
              (he & 192) === 128 &&
                ((pe = ((v1 & 31) << 6) | (he & 63)), pe > 127 && (w1 = pe));
            break;
          case 3:
            (he = R[s1 + 1]),
              (U1 = R[s1 + 2]),
              (he & 192) === 128 &&
                (U1 & 192) === 128 &&
                ((pe = ((v1 & 15) << 12) | ((he & 63) << 6) | (U1 & 63)),
                pe > 2047 && (pe < 55296 || pe > 57343) && (w1 = pe));
            break;
          case 4:
            (he = R[s1 + 1]),
              (U1 = R[s1 + 2]),
              (Le = R[s1 + 3]),
              (he & 192) === 128 &&
                (U1 & 192) === 128 &&
                (Le & 192) === 128 &&
                ((pe =
                  ((v1 & 15) << 18) |
                  ((he & 63) << 12) |
                  ((U1 & 63) << 6) |
                  (Le & 63)),
                pe > 65535 && pe < 1114112 && (w1 = pe));
        }
      }
      w1 === null
        ? ((w1 = 65533), ($1 = 1))
        : w1 > 65535 &&
          ((w1 -= 65536),
          q.push(((w1 >>> 10) & 1023) | 55296),
          (w1 = 56320 | (w1 & 1023))),
        q.push(w1),
        (s1 += $1);
    }
    return Z(q);
  }
  const i1 = 4096;
  function Z(R) {
    const C = R.length;
    if (C <= i1) return String.fromCharCode.apply(String, R);
    let k = "",
      q = 0;
    for (; q < C; )
      k += String.fromCharCode.apply(String, R.slice(q, (q += i1)));
    return k;
  }
  function b1(R, C, k) {
    let q = "";
    k = Math.min(R.length, k);
    for (let s1 = C; s1 < k; ++s1) q += String.fromCharCode(R[s1] & 127);
    return q;
  }
  function o1(R, C, k) {
    let q = "";
    k = Math.min(R.length, k);
    for (let s1 = C; s1 < k; ++s1) q += String.fromCharCode(R[s1]);
    return q;
  }
  function k1(R, C, k) {
    const q = R.length;
    (!C || C < 0) && (C = 0), (!k || k < 0 || k > q) && (k = q);
    let s1 = "";
    for (let v1 = C; v1 < k; ++v1) s1 += t1[R[v1]];
    return s1;
  }
  function Y1(R, C, k) {
    const q = R.slice(C, k);
    let s1 = "";
    for (let v1 = 0; v1 < q.length - 1; v1 += 2)
      s1 += String.fromCharCode(q[v1] + q[v1 + 1] * 256);
    return s1;
  }
  d.prototype.slice = function (C, k) {
    const q = this.length;
    (C = ~~C),
      (k = k === void 0 ? q : ~~k),
      C < 0 ? ((C += q), C < 0 && (C = 0)) : C > q && (C = q),
      k < 0 ? ((k += q), k < 0 && (k = 0)) : k > q && (k = q),
      k < C && (k = C);
    const s1 = this.subarray(C, k);
    return Object.setPrototypeOf(s1, d.prototype), s1;
  };
  function G1(R, C, k) {
    if (R % 1 !== 0 || R < 0) throw new RangeError("offset is not uint");
    if (R + C > k)
      throw new RangeError("Trying to access beyond buffer length");
  }
  (d.prototype.readUintLE = d.prototype.readUIntLE =
    function (C, k, q) {
      (C = C >>> 0), (k = k >>> 0), q || G1(C, k, this.length);
      let s1 = this[C],
        v1 = 1,
        w1 = 0;
      for (; ++w1 < k && (v1 *= 256); ) s1 += this[C + w1] * v1;
      return s1;
    }),
    (d.prototype.readUintBE = d.prototype.readUIntBE =
      function (C, k, q) {
        (C = C >>> 0), (k = k >>> 0), q || G1(C, k, this.length);
        let s1 = this[C + --k],
          v1 = 1;
        for (; k > 0 && (v1 *= 256); ) s1 += this[C + --k] * v1;
        return s1;
      }),
    (d.prototype.readUint8 = d.prototype.readUInt8 =
      function (C, k) {
        return (C = C >>> 0), k || G1(C, 1, this.length), this[C];
      }),
    (d.prototype.readUint16LE = d.prototype.readUInt16LE =
      function (C, k) {
        return (
          (C = C >>> 0),
          k || G1(C, 2, this.length),
          this[C] | (this[C + 1] << 8)
        );
      }),
    (d.prototype.readUint16BE = d.prototype.readUInt16BE =
      function (C, k) {
        return (
          (C = C >>> 0),
          k || G1(C, 2, this.length),
          (this[C] << 8) | this[C + 1]
        );
      }),
    (d.prototype.readUint32LE = d.prototype.readUInt32LE =
      function (C, k) {
        return (
          (C = C >>> 0),
          k || G1(C, 4, this.length),
          (this[C] | (this[C + 1] << 8) | (this[C + 2] << 16)) +
            this[C + 3] * 16777216
        );
      }),
    (d.prototype.readUint32BE = d.prototype.readUInt32BE =
      function (C, k) {
        return (
          (C = C >>> 0),
          k || G1(C, 4, this.length),
          this[C] * 16777216 +
            ((this[C + 1] << 16) | (this[C + 2] << 8) | this[C + 3])
        );
      }),
    (d.prototype.readBigUInt64LE = r1(function (C) {
      (C = C >>> 0), Be(C, "offset");
      const k = this[C],
        q = this[C + 7];
      (k === void 0 || q === void 0) && Ve(C, this.length - 8);
      const s1 =
          k + this[++C] * 2 ** 8 + this[++C] * 2 ** 16 + this[++C] * 2 ** 24,
        v1 = this[++C] + this[++C] * 2 ** 8 + this[++C] * 2 ** 16 + q * 2 ** 24;
      return BigInt(s1) + (BigInt(v1) << BigInt(32));
    })),
    (d.prototype.readBigUInt64BE = r1(function (C) {
      (C = C >>> 0), Be(C, "offset");
      const k = this[C],
        q = this[C + 7];
      (k === void 0 || q === void 0) && Ve(C, this.length - 8);
      const s1 =
          k * 2 ** 24 + this[++C] * 2 ** 16 + this[++C] * 2 ** 8 + this[++C],
        v1 = this[++C] * 2 ** 24 + this[++C] * 2 ** 16 + this[++C] * 2 ** 8 + q;
      return (BigInt(s1) << BigInt(32)) + BigInt(v1);
    })),
    (d.prototype.readIntLE = function (C, k, q) {
      (C = C >>> 0), (k = k >>> 0), q || G1(C, k, this.length);
      let s1 = this[C],
        v1 = 1,
        w1 = 0;
      for (; ++w1 < k && (v1 *= 256); ) s1 += this[C + w1] * v1;
      return (v1 *= 128), s1 >= v1 && (s1 -= Math.pow(2, 8 * k)), s1;
    }),
    (d.prototype.readIntBE = function (C, k, q) {
      (C = C >>> 0), (k = k >>> 0), q || G1(C, k, this.length);
      let s1 = k,
        v1 = 1,
        w1 = this[C + --s1];
      for (; s1 > 0 && (v1 *= 256); ) w1 += this[C + --s1] * v1;
      return (v1 *= 128), w1 >= v1 && (w1 -= Math.pow(2, 8 * k)), w1;
    }),
    (d.prototype.readInt8 = function (C, k) {
      return (
        (C = C >>> 0),
        k || G1(C, 1, this.length),
        this[C] & 128 ? (255 - this[C] + 1) * -1 : this[C]
      );
    }),
    (d.prototype.readInt16LE = function (C, k) {
      (C = C >>> 0), k || G1(C, 2, this.length);
      const q = this[C] | (this[C + 1] << 8);
      return q & 32768 ? q | 4294901760 : q;
    }),
    (d.prototype.readInt16BE = function (C, k) {
      (C = C >>> 0), k || G1(C, 2, this.length);
      const q = this[C + 1] | (this[C] << 8);
      return q & 32768 ? q | 4294901760 : q;
    }),
    (d.prototype.readInt32LE = function (C, k) {
      return (
        (C = C >>> 0),
        k || G1(C, 4, this.length),
        this[C] | (this[C + 1] << 8) | (this[C + 2] << 16) | (this[C + 3] << 24)
      );
    }),
    (d.prototype.readInt32BE = function (C, k) {
      return (
        (C = C >>> 0),
        k || G1(C, 4, this.length),
        (this[C] << 24) | (this[C + 1] << 16) | (this[C + 2] << 8) | this[C + 3]
      );
    }),
    (d.prototype.readBigInt64LE = r1(function (C) {
      (C = C >>> 0), Be(C, "offset");
      const k = this[C],
        q = this[C + 7];
      (k === void 0 || q === void 0) && Ve(C, this.length - 8);
      const s1 =
        this[C + 4] + this[C + 5] * 2 ** 8 + this[C + 6] * 2 ** 16 + (q << 24);
      return (
        (BigInt(s1) << BigInt(32)) +
        BigInt(
          k + this[++C] * 2 ** 8 + this[++C] * 2 ** 16 + this[++C] * 2 ** 24
        )
      );
    })),
    (d.prototype.readBigInt64BE = r1(function (C) {
      (C = C >>> 0), Be(C, "offset");
      const k = this[C],
        q = this[C + 7];
      (k === void 0 || q === void 0) && Ve(C, this.length - 8);
      const s1 =
        (k << 24) + this[++C] * 2 ** 16 + this[++C] * 2 ** 8 + this[++C];
      return (
        (BigInt(s1) << BigInt(32)) +
        BigInt(
          this[++C] * 2 ** 24 + this[++C] * 2 ** 16 + this[++C] * 2 ** 8 + q
        )
      );
    })),
    (d.prototype.readFloatLE = function (C, k) {
      return (
        (C = C >>> 0), k || G1(C, 4, this.length), n.read(this, C, !0, 23, 4)
      );
    }),
    (d.prototype.readFloatBE = function (C, k) {
      return (
        (C = C >>> 0), k || G1(C, 4, this.length), n.read(this, C, !1, 23, 4)
      );
    }),
    (d.prototype.readDoubleLE = function (C, k) {
      return (
        (C = C >>> 0), k || G1(C, 8, this.length), n.read(this, C, !0, 52, 8)
      );
    }),
    (d.prototype.readDoubleBE = function (C, k) {
      return (
        (C = C >>> 0), k || G1(C, 8, this.length), n.read(this, C, !1, 52, 8)
      );
    });
  function M1(R, C, k, q, s1, v1) {
    if (!d.isBuffer(R))
      throw new TypeError('"buffer" argument must be a Buffer instance');
    if (C > s1 || C < v1)
      throw new RangeError('"value" argument is out of bounds');
    if (k + q > R.length) throw new RangeError("Index out of range");
  }
  (d.prototype.writeUintLE = d.prototype.writeUIntLE =
    function (C, k, q, s1) {
      if (((C = +C), (k = k >>> 0), (q = q >>> 0), !s1)) {
        const $1 = Math.pow(2, 8 * q) - 1;
        M1(this, C, k, q, $1, 0);
      }
      let v1 = 1,
        w1 = 0;
      for (this[k] = C & 255; ++w1 < q && (v1 *= 256); )
        this[k + w1] = (C / v1) & 255;
      return k + q;
    }),
    (d.prototype.writeUintBE = d.prototype.writeUIntBE =
      function (C, k, q, s1) {
        if (((C = +C), (k = k >>> 0), (q = q >>> 0), !s1)) {
          const $1 = Math.pow(2, 8 * q) - 1;
          M1(this, C, k, q, $1, 0);
        }
        let v1 = q - 1,
          w1 = 1;
        for (this[k + v1] = C & 255; --v1 >= 0 && (w1 *= 256); )
          this[k + v1] = (C / w1) & 255;
        return k + q;
      }),
    (d.prototype.writeUint8 = d.prototype.writeUInt8 =
      function (C, k, q) {
        return (
          (C = +C),
          (k = k >>> 0),
          q || M1(this, C, k, 1, 255, 0),
          (this[k] = C & 255),
          k + 1
        );
      }),
    (d.prototype.writeUint16LE = d.prototype.writeUInt16LE =
      function (C, k, q) {
        return (
          (C = +C),
          (k = k >>> 0),
          q || M1(this, C, k, 2, 65535, 0),
          (this[k] = C & 255),
          (this[k + 1] = C >>> 8),
          k + 2
        );
      }),
    (d.prototype.writeUint16BE = d.prototype.writeUInt16BE =
      function (C, k, q) {
        return (
          (C = +C),
          (k = k >>> 0),
          q || M1(this, C, k, 2, 65535, 0),
          (this[k] = C >>> 8),
          (this[k + 1] = C & 255),
          k + 2
        );
      }),
    (d.prototype.writeUint32LE = d.prototype.writeUInt32LE =
      function (C, k, q) {
        return (
          (C = +C),
          (k = k >>> 0),
          q || M1(this, C, k, 4, 4294967295, 0),
          (this[k + 3] = C >>> 24),
          (this[k + 2] = C >>> 16),
          (this[k + 1] = C >>> 8),
          (this[k] = C & 255),
          k + 4
        );
      }),
    (d.prototype.writeUint32BE = d.prototype.writeUInt32BE =
      function (C, k, q) {
        return (
          (C = +C),
          (k = k >>> 0),
          q || M1(this, C, k, 4, 4294967295, 0),
          (this[k] = C >>> 24),
          (this[k + 1] = C >>> 16),
          (this[k + 2] = C >>> 8),
          (this[k + 3] = C & 255),
          k + 4
        );
      });
  function Q1(R, C, k, q, s1) {
    ae(C, q, s1, R, k, 7);
    let v1 = Number(C & BigInt(4294967295));
    (R[k++] = v1),
      (v1 = v1 >> 8),
      (R[k++] = v1),
      (v1 = v1 >> 8),
      (R[k++] = v1),
      (v1 = v1 >> 8),
      (R[k++] = v1);
    let w1 = Number((C >> BigInt(32)) & BigInt(4294967295));
    return (
      (R[k++] = w1),
      (w1 = w1 >> 8),
      (R[k++] = w1),
      (w1 = w1 >> 8),
      (R[k++] = w1),
      (w1 = w1 >> 8),
      (R[k++] = w1),
      k
    );
  }
  function re(R, C, k, q, s1) {
    ae(C, q, s1, R, k, 7);
    let v1 = Number(C & BigInt(4294967295));
    (R[k + 7] = v1),
      (v1 = v1 >> 8),
      (R[k + 6] = v1),
      (v1 = v1 >> 8),
      (R[k + 5] = v1),
      (v1 = v1 >> 8),
      (R[k + 4] = v1);
    let w1 = Number((C >> BigInt(32)) & BigInt(4294967295));
    return (
      (R[k + 3] = w1),
      (w1 = w1 >> 8),
      (R[k + 2] = w1),
      (w1 = w1 >> 8),
      (R[k + 1] = w1),
      (w1 = w1 >> 8),
      (R[k] = w1),
      k + 8
    );
  }
  (d.prototype.writeBigUInt64LE = r1(function (C, k = 0) {
    return Q1(this, C, k, BigInt(0), BigInt("0xffffffffffffffff"));
  })),
    (d.prototype.writeBigUInt64BE = r1(function (C, k = 0) {
      return re(this, C, k, BigInt(0), BigInt("0xffffffffffffffff"));
    })),
    (d.prototype.writeIntLE = function (C, k, q, s1) {
      if (((C = +C), (k = k >>> 0), !s1)) {
        const he = Math.pow(2, 8 * q - 1);
        M1(this, C, k, q, he - 1, -he);
      }
      let v1 = 0,
        w1 = 1,
        $1 = 0;
      for (this[k] = C & 255; ++v1 < q && (w1 *= 256); )
        C < 0 && $1 === 0 && this[k + v1 - 1] !== 0 && ($1 = 1),
          (this[k + v1] = (((C / w1) >> 0) - $1) & 255);
      return k + q;
    }),
    (d.prototype.writeIntBE = function (C, k, q, s1) {
      if (((C = +C), (k = k >>> 0), !s1)) {
        const he = Math.pow(2, 8 * q - 1);
        M1(this, C, k, q, he - 1, -he);
      }
      let v1 = q - 1,
        w1 = 1,
        $1 = 0;
      for (this[k + v1] = C & 255; --v1 >= 0 && (w1 *= 256); )
        C < 0 && $1 === 0 && this[k + v1 + 1] !== 0 && ($1 = 1),
          (this[k + v1] = (((C / w1) >> 0) - $1) & 255);
      return k + q;
    }),
    (d.prototype.writeInt8 = function (C, k, q) {
      return (
        (C = +C),
        (k = k >>> 0),
        q || M1(this, C, k, 1, 127, -128),
        C < 0 && (C = 255 + C + 1),
        (this[k] = C & 255),
        k + 1
      );
    }),
    (d.prototype.writeInt16LE = function (C, k, q) {
      return (
        (C = +C),
        (k = k >>> 0),
        q || M1(this, C, k, 2, 32767, -32768),
        (this[k] = C & 255),
        (this[k + 1] = C >>> 8),
        k + 2
      );
    }),
    (d.prototype.writeInt16BE = function (C, k, q) {
      return (
        (C = +C),
        (k = k >>> 0),
        q || M1(this, C, k, 2, 32767, -32768),
        (this[k] = C >>> 8),
        (this[k + 1] = C & 255),
        k + 2
      );
    }),
    (d.prototype.writeInt32LE = function (C, k, q) {
      return (
        (C = +C),
        (k = k >>> 0),
        q || M1(this, C, k, 4, 2147483647, -2147483648),
        (this[k] = C & 255),
        (this[k + 1] = C >>> 8),
        (this[k + 2] = C >>> 16),
        (this[k + 3] = C >>> 24),
        k + 4
      );
    }),
    (d.prototype.writeInt32BE = function (C, k, q) {
      return (
        (C = +C),
        (k = k >>> 0),
        q || M1(this, C, k, 4, 2147483647, -2147483648),
        C < 0 && (C = 4294967295 + C + 1),
        (this[k] = C >>> 24),
        (this[k + 1] = C >>> 16),
        (this[k + 2] = C >>> 8),
        (this[k + 3] = C & 255),
        k + 4
      );
    }),
    (d.prototype.writeBigInt64LE = r1(function (C, k = 0) {
      return Q1(
        this,
        C,
        k,
        -BigInt("0x8000000000000000"),
        BigInt("0x7fffffffffffffff")
      );
    })),
    (d.prototype.writeBigInt64BE = r1(function (C, k = 0) {
      return re(
        this,
        C,
        k,
        -BigInt("0x8000000000000000"),
        BigInt("0x7fffffffffffffff")
      );
    }));
  function d1(R, C, k, q, s1, v1) {
    if (k + q > R.length) throw new RangeError("Index out of range");
    if (k < 0) throw new RangeError("Index out of range");
  }
  function h1(R, C, k, q, s1) {
    return (
      (C = +C),
      (k = k >>> 0),
      s1 || d1(R, C, k, 4),
      n.write(R, C, k, q, 23, 4),
      k + 4
    );
  }
  (d.prototype.writeFloatLE = function (C, k, q) {
    return h1(this, C, k, !0, q);
  }),
    (d.prototype.writeFloatBE = function (C, k, q) {
      return h1(this, C, k, !1, q);
    });
  function y1(R, C, k, q, s1) {
    return (
      (C = +C),
      (k = k >>> 0),
      s1 || d1(R, C, k, 8),
      n.write(R, C, k, q, 52, 8),
      k + 8
    );
  }
  (d.prototype.writeDoubleLE = function (C, k, q) {
    return y1(this, C, k, !0, q);
  }),
    (d.prototype.writeDoubleBE = function (C, k, q) {
      return y1(this, C, k, !1, q);
    }),
    (d.prototype.copy = function (C, k, q, s1) {
      if (!d.isBuffer(C)) throw new TypeError("argument should be a Buffer");
      if (
        (q || (q = 0),
        !s1 && s1 !== 0 && (s1 = this.length),
        k >= C.length && (k = C.length),
        k || (k = 0),
        s1 > 0 && s1 < q && (s1 = q),
        s1 === q || C.length === 0 || this.length === 0)
      )
        return 0;
      if (k < 0) throw new RangeError("targetStart out of bounds");
      if (q < 0 || q >= this.length) throw new RangeError("Index out of range");
      if (s1 < 0) throw new RangeError("sourceEnd out of bounds");
      s1 > this.length && (s1 = this.length),
        C.length - k < s1 - q && (s1 = C.length - k + q);
      const v1 = s1 - q;
      return (
        this === C && typeof s.prototype.copyWithin == "function"
          ? this.copyWithin(k, q, s1)
          : s.prototype.set.call(C, this.subarray(q, s1), k),
        v1
      );
    }),
    (d.prototype.fill = function (C, k, q, s1) {
      if (typeof C == "string") {
        if (
          (typeof k == "string"
            ? ((s1 = k), (k = 0), (q = this.length))
            : typeof q == "string" && ((s1 = q), (q = this.length)),
          s1 !== void 0 && typeof s1 != "string")
        )
          throw new TypeError("encoding must be a string");
        if (typeof s1 == "string" && !d.isEncoding(s1))
          throw new TypeError("Unknown encoding: " + s1);
        if (C.length === 1) {
          const w1 = C.charCodeAt(0);
          ((s1 === "utf8" && w1 < 128) || s1 === "latin1") && (C = w1);
        }
      } else
        typeof C == "number"
          ? (C = C & 255)
          : typeof C == "boolean" && (C = Number(C));
      if (k < 0 || this.length < k || this.length < q)
        throw new RangeError("Out of range index");
      if (q <= k) return this;
      (k = k >>> 0), (q = q === void 0 ? this.length : q >>> 0), C || (C = 0);
      let v1;
      if (typeof C == "number") for (v1 = k; v1 < q; ++v1) this[v1] = C;
      else {
        const w1 = d.isBuffer(C) ? C : d.from(C, s1),
          $1 = w1.length;
        if ($1 === 0)
          throw new TypeError(
            'The value "' + C + '" is invalid for argument "value"'
          );
        for (v1 = 0; v1 < q - k; ++v1) this[v1 + k] = w1[v1 % $1];
      }
      return this;
    });
  const A1 = {};
  function L1(R, C, k) {
    A1[R] = class extends k {
      constructor() {
        super(),
          Object.defineProperty(this, "message", {
            value: C.apply(this, arguments),
            writable: !0,
            configurable: !0,
          }),
          (this.name = `${this.name} [${R}]`),
          this.stack,
          delete this.name;
      }
      get code() {
        return R;
      }
      set code(s1) {
        Object.defineProperty(this, "code", {
          configurable: !0,
          enumerable: !0,
          value: s1,
          writable: !0,
        });
      }
      toString() {
        return `${this.name} [${R}]: ${this.message}`;
      }
    };
  }
  L1(
    "ERR_BUFFER_OUT_OF_BOUNDS",
    function (R) {
      return R
        ? `${R} is outside of buffer bounds`
        : "Attempt to access memory outside buffer bounds";
    },
    RangeError
  ),
    L1(
      "ERR_INVALID_ARG_TYPE",
      function (R, C) {
        return `The "${R}" argument must be of type number. Received type ${typeof C}`;
      },
      TypeError
    ),
    L1(
      "ERR_OUT_OF_RANGE",
      function (R, C, k) {
        let q = `The value of "${R}" is out of range.`,
          s1 = k;
        return (
          Number.isInteger(k) && Math.abs(k) > 2 ** 32
            ? (s1 = V1(String(k)))
            : typeof k == "bigint" &&
              ((s1 = String(k)),
              (k > BigInt(2) ** BigInt(32) || k < -(BigInt(2) ** BigInt(32))) &&
                (s1 = V1(s1)),
              (s1 += "n")),
          (q += ` It must be ${C}. Received ${s1}`),
          q
        );
      },
      RangeError
    );
  function V1(R) {
    let C = "",
      k = R.length;
    const q = R[0] === "-" ? 1 : 0;
    for (; k >= q + 4; k -= 3) C = `_${R.slice(k - 3, k)}${C}`;
    return `${R.slice(0, k)}${C}`;
  }
  function ie(R, C, k) {
    Be(C, "offset"),
      (R[C] === void 0 || R[C + k] === void 0) && Ve(C, R.length - (k + 1));
  }
  function ae(R, C, k, q, s1, v1) {
    if (R > k || R < C) {
      const w1 = typeof C == "bigint" ? "n" : "";
      let $1;
      throw (
        (C === 0 || C === BigInt(0)
          ? ($1 = `>= 0${w1} and < 2${w1} ** ${(v1 + 1) * 8}${w1}`)
          : ($1 = `>= -(2${w1} ** ${(v1 + 1) * 8 - 1}${w1}) and < 2 ** ${
              (v1 + 1) * 8 - 1
            }${w1}`),
        new A1.ERR_OUT_OF_RANGE("value", $1, R))
      );
    }
    ie(q, s1, v1);
  }
  function Be(R, C) {
    if (typeof R != "number") throw new A1.ERR_INVALID_ARG_TYPE(C, "number", R);
  }
  function Ve(R, C, k) {
    throw Math.floor(R) !== R
      ? (Be(R, k), new A1.ERR_OUT_OF_RANGE("offset", "an integer", R))
      : C < 0
      ? new A1.ERR_BUFFER_OUT_OF_BOUNDS()
      : new A1.ERR_OUT_OF_RANGE("offset", `>= 0 and <= ${C}`, R);
  }
  const ce = /[^+/0-9A-Za-z-_]/g;
  function gt(R) {
    if (((R = R.split("=")[0]), (R = R.trim().replace(ce, "")), R.length < 2))
      return "";
    for (; R.length % 4 !== 0; ) R = R + "=";
    return R;
  }
  function qe(R, C) {
    C = C || 1 / 0;
    let k;
    const q = R.length;
    let s1 = null;
    const v1 = [];
    for (let w1 = 0; w1 < q; ++w1) {
      if (((k = R.charCodeAt(w1)), k > 55295 && k < 57344)) {
        if (!s1) {
          if (k > 56319) {
            (C -= 3) > -1 && v1.push(239, 191, 189);
            continue;
          } else if (w1 + 1 === q) {
            (C -= 3) > -1 && v1.push(239, 191, 189);
            continue;
          }
          s1 = k;
          continue;
        }
        if (k < 56320) {
          (C -= 3) > -1 && v1.push(239, 191, 189), (s1 = k);
          continue;
        }
        k = (((s1 - 55296) << 10) | (k - 56320)) + 65536;
      } else s1 && (C -= 3) > -1 && v1.push(239, 191, 189);
      if (((s1 = null), k < 128)) {
        if ((C -= 1) < 0) break;
        v1.push(k);
      } else if (k < 2048) {
        if ((C -= 2) < 0) break;
        v1.push((k >> 6) | 192, (k & 63) | 128);
      } else if (k < 65536) {
        if ((C -= 3) < 0) break;
        v1.push((k >> 12) | 224, ((k >> 6) & 63) | 128, (k & 63) | 128);
      } else if (k < 1114112) {
        if ((C -= 4) < 0) break;
        v1.push(
          (k >> 18) | 240,
          ((k >> 12) & 63) | 128,
          ((k >> 6) & 63) | 128,
          (k & 63) | 128
        );
      } else throw new Error("Invalid code point");
    }
    return v1;
  }
  function je(R) {
    const C = [];
    for (let k = 0; k < R.length; ++k) C.push(R.charCodeAt(k) & 255);
    return C;
  }
  function g1(R, C) {
    let k, q, s1;
    const v1 = [];
    for (let w1 = 0; w1 < R.length && !((C -= 2) < 0); ++w1)
      (k = R.charCodeAt(w1)),
        (q = k >> 8),
        (s1 = k % 256),
        v1.push(s1),
        v1.push(q);
    return v1;
  }
  function E1(R) {
    return t.toByteArray(gt(R));
  }
  function j1(R, C, k, q) {
    let s1;
    for (s1 = 0; s1 < q && !(s1 + k >= C.length || s1 >= R.length); ++s1)
      C[s1 + k] = R[s1];
    return s1;
  }
  function a1(R, C) {
    return (
      R instanceof C ||
      (R != null &&
        R.constructor != null &&
        R.constructor.name != null &&
        R.constructor.name === C.name)
    );
  }
  function K(R) {
    return R !== R;
  }
  const t1 = (function () {
    const R = "0123456789abcdef",
      C = new Array(256);
    for (let k = 0; k < 16; ++k) {
      const q = k * 16;
      for (let s1 = 0; s1 < 16; ++s1) C[q + s1] = R[k] + R[s1];
    }
    return C;
  })();
  function r1(R) {
    return typeof BigInt > "u" ? m1 : R;
  }
  function m1() {
    throw new Error("BigInt not supported");
  }
})(SC);
const ge = SC.Buffer;
var ad = { exports: {} },
  KR = ad.exports,
  U8;
function GR() {
  return (
    U8 ||
      ((U8 = 1),
      (function (e) {
        (function (t, n) {
          e.exports
            ? (e.exports = n())
            : (t.nacl || (t.nacl = {}), (t.nacl.util = n()));
        })(KR, function () {
          var t = {};
          function n(r) {
            if (
              !/^(?:[A-Za-z0-9+\/]{2}[A-Za-z0-9+\/]{2})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.test(
                r
              )
            )
              throw new TypeError("invalid encoding");
          }
          return (
            (t.decodeUTF8 = function (r) {
              if (typeof r != "string") throw new TypeError("expected string");
              var i,
                s = unescape(encodeURIComponent(r)),
                o = new Uint8Array(s.length);
              for (i = 0; i < s.length; i++) o[i] = s.charCodeAt(i);
              return o;
            }),
            (t.encodeUTF8 = function (r) {
              var i,
                s = [];
              for (i = 0; i < r.length; i++) s.push(String.fromCharCode(r[i]));
              return decodeURIComponent(escape(s.join("")));
            }),
            typeof atob > "u"
              ? typeof ge.from < "u"
                ? ((t.encodeBase64 = function (r) {
                    return ge.from(r).toString("base64");
                  }),
                  (t.decodeBase64 = function (r) {
                    return (
                      n(r),
                      new Uint8Array(
                        Array.prototype.slice.call(ge.from(r, "base64"), 0)
                      )
                    );
                  }))
                : ((t.encodeBase64 = function (r) {
                    return new ge(r).toString("base64");
                  }),
                  (t.decodeBase64 = function (r) {
                    return (
                      n(r),
                      new Uint8Array(
                        Array.prototype.slice.call(new ge(r, "base64"), 0)
                      )
                    );
                  }))
              : ((t.encodeBase64 = function (r) {
                  var i,
                    s = [],
                    o = r.length;
                  for (i = 0; i < o; i++) s.push(String.fromCharCode(r[i]));
                  return btoa(s.join(""));
                }),
                (t.decodeBase64 = function (r) {
                  n(r);
                  var i,
                    s = atob(r),
                    o = new Uint8Array(s.length);
                  for (i = 0; i < s.length; i++) o[i] = s.charCodeAt(i);
                  return o;
                })),
            t
          );
        });
      })(ad)),
    ad.exports
  );
}
var YR = GR();
const Ml = qs(YR);
function QR(e) {
  throw new Error(
    'Could not dynamically require "' +
      e +
      '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.'
  );
}
var i9 = { exports: {} };
const ZR = {},
  XR = Object.freeze(
    Object.defineProperty(
      { __proto__: null, default: ZR },
      Symbol.toStringTag,
      { value: "Module" }
    )
  ),
  JR = nC(XR);
var $8;
function q6() {
  return (
    $8 ||
      (($8 = 1),
      (function (e) {
        (function (t) {
          var n = function (V) {
              var X,
                Q = new Float64Array(16);
              if (V) for (X = 0; X < V.length; X++) Q[X] = V[X];
              return Q;
            },
            r = function () {
              throw new Error("no PRNG");
            },
            i = new Uint8Array(16),
            s = new Uint8Array(32);
          s[0] = 9;
          var o = n(),
            l = n([1]),
            c = n([56129, 1]),
            f = n([
              30883, 4953, 19914, 30187, 55467, 16705, 2637, 112, 59544, 30585,
              16505, 36039, 65139, 11119, 27886, 20995,
            ]),
            d = n([
              61785, 9906, 39828, 60374, 45398, 33411, 5274, 224, 53552, 61171,
              33010, 6542, 64743, 22239, 55772, 9222,
            ]),
            p = n([
              54554, 36645, 11616, 51542, 42930, 38181, 51040, 26924, 56412,
              64982, 57905, 49316, 21502, 52590, 14035, 8553,
            ]),
            m = n([
              26200, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214,
              26214, 26214, 26214, 26214, 26214, 26214, 26214,
            ]),
            g = n([
              41136, 18958, 6951, 50414, 58488, 44335, 6150, 12099, 55207,
              15867, 153, 11085, 57099, 20417, 9344, 11139,
            ]);
          function w(V, X, Q, A) {
            (V[X] = (Q >> 24) & 255),
              (V[X + 1] = (Q >> 16) & 255),
              (V[X + 2] = (Q >> 8) & 255),
              (V[X + 3] = Q & 255),
              (V[X + 4] = (A >> 24) & 255),
              (V[X + 5] = (A >> 16) & 255),
              (V[X + 6] = (A >> 8) & 255),
              (V[X + 7] = A & 255);
          }
          function b(V, X, Q, A, n1) {
            var _1,
              T1 = 0;
            for (_1 = 0; _1 < n1; _1++) T1 |= V[X + _1] ^ Q[A + _1];
            return (1 & ((T1 - 1) >>> 8)) - 1;
          }
          function x(V, X, Q, A) {
            return b(V, X, Q, A, 16);
          }
          function E(V, X, Q, A) {
            return b(V, X, Q, A, 32);
          }
          function P(V, X, Q, A) {
            for (
              var n1 =
                  (A[0] & 255) |
                  ((A[1] & 255) << 8) |
                  ((A[2] & 255) << 16) |
                  ((A[3] & 255) << 24),
                _1 =
                  (Q[0] & 255) |
                  ((Q[1] & 255) << 8) |
                  ((Q[2] & 255) << 16) |
                  ((Q[3] & 255) << 24),
                T1 =
                  (Q[4] & 255) |
                  ((Q[5] & 255) << 8) |
                  ((Q[6] & 255) << 16) |
                  ((Q[7] & 255) << 24),
                W1 =
                  (Q[8] & 255) |
                  ((Q[9] & 255) << 8) |
                  ((Q[10] & 255) << 16) |
                  ((Q[11] & 255) << 24),
                X1 =
                  (Q[12] & 255) |
                  ((Q[13] & 255) << 8) |
                  ((Q[14] & 255) << 16) |
                  ((Q[15] & 255) << 24),
                Me =
                  (A[4] & 255) |
                  ((A[5] & 255) << 8) |
                  ((A[6] & 255) << 16) |
                  ((A[7] & 255) << 24),
                de =
                  (X[0] & 255) |
                  ((X[1] & 255) << 8) |
                  ((X[2] & 255) << 16) |
                  ((X[3] & 255) << 24),
                St =
                  (X[4] & 255) |
                  ((X[5] & 255) << 8) |
                  ((X[6] & 255) << 16) |
                  ((X[7] & 255) << 24),
                ye =
                  (X[8] & 255) |
                  ((X[9] & 255) << 8) |
                  ((X[10] & 255) << 16) |
                  ((X[11] & 255) << 24),
                Ge =
                  (X[12] & 255) |
                  ((X[13] & 255) << 8) |
                  ((X[14] & 255) << 16) |
                  ((X[15] & 255) << 24),
                Xe =
                  (A[8] & 255) |
                  ((A[9] & 255) << 8) |
                  ((A[10] & 255) << 16) |
                  ((A[11] & 255) << 24),
                at =
                  (Q[16] & 255) |
                  ((Q[17] & 255) << 8) |
                  ((Q[18] & 255) << 16) |
                  ((Q[19] & 255) << 24),
                ut =
                  (Q[20] & 255) |
                  ((Q[21] & 255) << 8) |
                  ((Q[22] & 255) << 16) |
                  ((Q[23] & 255) << 24),
                tt =
                  (Q[24] & 255) |
                  ((Q[25] & 255) << 8) |
                  ((Q[26] & 255) << 16) |
                  ((Q[27] & 255) << 24),
                Ce =
                  (Q[28] & 255) |
                  ((Q[29] & 255) << 8) |
                  ((Q[30] & 255) << 16) |
                  ((Q[31] & 255) << 24),
                nt =
                  (A[12] & 255) |
                  ((A[13] & 255) << 8) |
                  ((A[14] & 255) << 16) |
                  ((A[15] & 255) << 24),
                ve = n1,
                Ne = _1,
                fe = T1,
                we = W1,
                Te = X1,
                le = Me,
                I1 = de,
                N1 = St,
                H1 = ye,
                z1 = Ge,
                q1 = Xe,
                J1 = at,
                De = ut,
                Je = tt,
                ot = Ce,
                rt = nt,
                p1,
                ft = 0;
              ft < 20;
              ft += 2
            )
              (p1 = (ve + De) | 0),
                (Te ^= (p1 << 7) | (p1 >>> 25)),
                (p1 = (Te + ve) | 0),
                (H1 ^= (p1 << 9) | (p1 >>> 23)),
                (p1 = (H1 + Te) | 0),
                (De ^= (p1 << 13) | (p1 >>> 19)),
                (p1 = (De + H1) | 0),
                (ve ^= (p1 << 18) | (p1 >>> 14)),
                (p1 = (le + Ne) | 0),
                (z1 ^= (p1 << 7) | (p1 >>> 25)),
                (p1 = (z1 + le) | 0),
                (Je ^= (p1 << 9) | (p1 >>> 23)),
                (p1 = (Je + z1) | 0),
                (Ne ^= (p1 << 13) | (p1 >>> 19)),
                (p1 = (Ne + Je) | 0),
                (le ^= (p1 << 18) | (p1 >>> 14)),
                (p1 = (q1 + I1) | 0),
                (ot ^= (p1 << 7) | (p1 >>> 25)),
                (p1 = (ot + q1) | 0),
                (fe ^= (p1 << 9) | (p1 >>> 23)),
                (p1 = (fe + ot) | 0),
                (I1 ^= (p1 << 13) | (p1 >>> 19)),
                (p1 = (I1 + fe) | 0),
                (q1 ^= (p1 << 18) | (p1 >>> 14)),
                (p1 = (rt + J1) | 0),
                (we ^= (p1 << 7) | (p1 >>> 25)),
                (p1 = (we + rt) | 0),
                (N1 ^= (p1 << 9) | (p1 >>> 23)),
                (p1 = (N1 + we) | 0),
                (J1 ^= (p1 << 13) | (p1 >>> 19)),
                (p1 = (J1 + N1) | 0),
                (rt ^= (p1 << 18) | (p1 >>> 14)),
                (p1 = (ve + we) | 0),
                (Ne ^= (p1 << 7) | (p1 >>> 25)),
                (p1 = (Ne + ve) | 0),
                (fe ^= (p1 << 9) | (p1 >>> 23)),
                (p1 = (fe + Ne) | 0),
                (we ^= (p1 << 13) | (p1 >>> 19)),
                (p1 = (we + fe) | 0),
                (ve ^= (p1 << 18) | (p1 >>> 14)),
                (p1 = (le + Te) | 0),
                (I1 ^= (p1 << 7) | (p1 >>> 25)),
                (p1 = (I1 + le) | 0),
                (N1 ^= (p1 << 9) | (p1 >>> 23)),
                (p1 = (N1 + I1) | 0),
                (Te ^= (p1 << 13) | (p1 >>> 19)),
                (p1 = (Te + N1) | 0),
                (le ^= (p1 << 18) | (p1 >>> 14)),
                (p1 = (q1 + z1) | 0),
                (J1 ^= (p1 << 7) | (p1 >>> 25)),
                (p1 = (J1 + q1) | 0),
                (H1 ^= (p1 << 9) | (p1 >>> 23)),
                (p1 = (H1 + J1) | 0),
                (z1 ^= (p1 << 13) | (p1 >>> 19)),
                (p1 = (z1 + H1) | 0),
                (q1 ^= (p1 << 18) | (p1 >>> 14)),
                (p1 = (rt + ot) | 0),
                (De ^= (p1 << 7) | (p1 >>> 25)),
                (p1 = (De + rt) | 0),
                (Je ^= (p1 << 9) | (p1 >>> 23)),
                (p1 = (Je + De) | 0),
                (ot ^= (p1 << 13) | (p1 >>> 19)),
                (p1 = (ot + Je) | 0),
                (rt ^= (p1 << 18) | (p1 >>> 14));
            (ve = (ve + n1) | 0),
              (Ne = (Ne + _1) | 0),
              (fe = (fe + T1) | 0),
              (we = (we + W1) | 0),
              (Te = (Te + X1) | 0),
              (le = (le + Me) | 0),
              (I1 = (I1 + de) | 0),
              (N1 = (N1 + St) | 0),
              (H1 = (H1 + ye) | 0),
              (z1 = (z1 + Ge) | 0),
              (q1 = (q1 + Xe) | 0),
              (J1 = (J1 + at) | 0),
              (De = (De + ut) | 0),
              (Je = (Je + tt) | 0),
              (ot = (ot + Ce) | 0),
              (rt = (rt + nt) | 0),
              (V[0] = (ve >>> 0) & 255),
              (V[1] = (ve >>> 8) & 255),
              (V[2] = (ve >>> 16) & 255),
              (V[3] = (ve >>> 24) & 255),
              (V[4] = (Ne >>> 0) & 255),
              (V[5] = (Ne >>> 8) & 255),
              (V[6] = (Ne >>> 16) & 255),
              (V[7] = (Ne >>> 24) & 255),
              (V[8] = (fe >>> 0) & 255),
              (V[9] = (fe >>> 8) & 255),
              (V[10] = (fe >>> 16) & 255),
              (V[11] = (fe >>> 24) & 255),
              (V[12] = (we >>> 0) & 255),
              (V[13] = (we >>> 8) & 255),
              (V[14] = (we >>> 16) & 255),
              (V[15] = (we >>> 24) & 255),
              (V[16] = (Te >>> 0) & 255),
              (V[17] = (Te >>> 8) & 255),
              (V[18] = (Te >>> 16) & 255),
              (V[19] = (Te >>> 24) & 255),
              (V[20] = (le >>> 0) & 255),
              (V[21] = (le >>> 8) & 255),
              (V[22] = (le >>> 16) & 255),
              (V[23] = (le >>> 24) & 255),
              (V[24] = (I1 >>> 0) & 255),
              (V[25] = (I1 >>> 8) & 255),
              (V[26] = (I1 >>> 16) & 255),
              (V[27] = (I1 >>> 24) & 255),
              (V[28] = (N1 >>> 0) & 255),
              (V[29] = (N1 >>> 8) & 255),
              (V[30] = (N1 >>> 16) & 255),
              (V[31] = (N1 >>> 24) & 255),
              (V[32] = (H1 >>> 0) & 255),
              (V[33] = (H1 >>> 8) & 255),
              (V[34] = (H1 >>> 16) & 255),
              (V[35] = (H1 >>> 24) & 255),
              (V[36] = (z1 >>> 0) & 255),
              (V[37] = (z1 >>> 8) & 255),
              (V[38] = (z1 >>> 16) & 255),
              (V[39] = (z1 >>> 24) & 255),
              (V[40] = (q1 >>> 0) & 255),
              (V[41] = (q1 >>> 8) & 255),
              (V[42] = (q1 >>> 16) & 255),
              (V[43] = (q1 >>> 24) & 255),
              (V[44] = (J1 >>> 0) & 255),
              (V[45] = (J1 >>> 8) & 255),
              (V[46] = (J1 >>> 16) & 255),
              (V[47] = (J1 >>> 24) & 255),
              (V[48] = (De >>> 0) & 255),
              (V[49] = (De >>> 8) & 255),
              (V[50] = (De >>> 16) & 255),
              (V[51] = (De >>> 24) & 255),
              (V[52] = (Je >>> 0) & 255),
              (V[53] = (Je >>> 8) & 255),
              (V[54] = (Je >>> 16) & 255),
              (V[55] = (Je >>> 24) & 255),
              (V[56] = (ot >>> 0) & 255),
              (V[57] = (ot >>> 8) & 255),
              (V[58] = (ot >>> 16) & 255),
              (V[59] = (ot >>> 24) & 255),
              (V[60] = (rt >>> 0) & 255),
              (V[61] = (rt >>> 8) & 255),
              (V[62] = (rt >>> 16) & 255),
              (V[63] = (rt >>> 24) & 255);
          }
          function _(V, X, Q, A) {
            for (
              var n1 =
                  (A[0] & 255) |
                  ((A[1] & 255) << 8) |
                  ((A[2] & 255) << 16) |
                  ((A[3] & 255) << 24),
                _1 =
                  (Q[0] & 255) |
                  ((Q[1] & 255) << 8) |
                  ((Q[2] & 255) << 16) |
                  ((Q[3] & 255) << 24),
                T1 =
                  (Q[4] & 255) |
                  ((Q[5] & 255) << 8) |
                  ((Q[6] & 255) << 16) |
                  ((Q[7] & 255) << 24),
                W1 =
                  (Q[8] & 255) |
                  ((Q[9] & 255) << 8) |
                  ((Q[10] & 255) << 16) |
                  ((Q[11] & 255) << 24),
                X1 =
                  (Q[12] & 255) |
                  ((Q[13] & 255) << 8) |
                  ((Q[14] & 255) << 16) |
                  ((Q[15] & 255) << 24),
                Me =
                  (A[4] & 255) |
                  ((A[5] & 255) << 8) |
                  ((A[6] & 255) << 16) |
                  ((A[7] & 255) << 24),
                de =
                  (X[0] & 255) |
                  ((X[1] & 255) << 8) |
                  ((X[2] & 255) << 16) |
                  ((X[3] & 255) << 24),
                St =
                  (X[4] & 255) |
                  ((X[5] & 255) << 8) |
                  ((X[6] & 255) << 16) |
                  ((X[7] & 255) << 24),
                ye =
                  (X[8] & 255) |
                  ((X[9] & 255) << 8) |
                  ((X[10] & 255) << 16) |
                  ((X[11] & 255) << 24),
                Ge =
                  (X[12] & 255) |
                  ((X[13] & 255) << 8) |
                  ((X[14] & 255) << 16) |
                  ((X[15] & 255) << 24),
                Xe =
                  (A[8] & 255) |
                  ((A[9] & 255) << 8) |
                  ((A[10] & 255) << 16) |
                  ((A[11] & 255) << 24),
                at =
                  (Q[16] & 255) |
                  ((Q[17] & 255) << 8) |
                  ((Q[18] & 255) << 16) |
                  ((Q[19] & 255) << 24),
                ut =
                  (Q[20] & 255) |
                  ((Q[21] & 255) << 8) |
                  ((Q[22] & 255) << 16) |
                  ((Q[23] & 255) << 24),
                tt =
                  (Q[24] & 255) |
                  ((Q[25] & 255) << 8) |
                  ((Q[26] & 255) << 16) |
                  ((Q[27] & 255) << 24),
                Ce =
                  (Q[28] & 255) |
                  ((Q[29] & 255) << 8) |
                  ((Q[30] & 255) << 16) |
                  ((Q[31] & 255) << 24),
                nt =
                  (A[12] & 255) |
                  ((A[13] & 255) << 8) |
                  ((A[14] & 255) << 16) |
                  ((A[15] & 255) << 24),
                ve = n1,
                Ne = _1,
                fe = T1,
                we = W1,
                Te = X1,
                le = Me,
                I1 = de,
                N1 = St,
                H1 = ye,
                z1 = Ge,
                q1 = Xe,
                J1 = at,
                De = ut,
                Je = tt,
                ot = Ce,
                rt = nt,
                p1,
                ft = 0;
              ft < 20;
              ft += 2
            )
              (p1 = (ve + De) | 0),
                (Te ^= (p1 << 7) | (p1 >>> 25)),
                (p1 = (Te + ve) | 0),
                (H1 ^= (p1 << 9) | (p1 >>> 23)),
                (p1 = (H1 + Te) | 0),
                (De ^= (p1 << 13) | (p1 >>> 19)),
                (p1 = (De + H1) | 0),
                (ve ^= (p1 << 18) | (p1 >>> 14)),
                (p1 = (le + Ne) | 0),
                (z1 ^= (p1 << 7) | (p1 >>> 25)),
                (p1 = (z1 + le) | 0),
                (Je ^= (p1 << 9) | (p1 >>> 23)),
                (p1 = (Je + z1) | 0),
                (Ne ^= (p1 << 13) | (p1 >>> 19)),
                (p1 = (Ne + Je) | 0),
                (le ^= (p1 << 18) | (p1 >>> 14)),
                (p1 = (q1 + I1) | 0),
                (ot ^= (p1 << 7) | (p1 >>> 25)),
                (p1 = (ot + q1) | 0),
                (fe ^= (p1 << 9) | (p1 >>> 23)),
                (p1 = (fe + ot) | 0),
                (I1 ^= (p1 << 13) | (p1 >>> 19)),
                (p1 = (I1 + fe) | 0),
                (q1 ^= (p1 << 18) | (p1 >>> 14)),
                (p1 = (rt + J1) | 0),
                (we ^= (p1 << 7) | (p1 >>> 25)),
                (p1 = (we + rt) | 0),
                (N1 ^= (p1 << 9) | (p1 >>> 23)),
                (p1 = (N1 + we) | 0),
                (J1 ^= (p1 << 13) | (p1 >>> 19)),
                (p1 = (J1 + N1) | 0),
                (rt ^= (p1 << 18) | (p1 >>> 14)),
                (p1 = (ve + we) | 0),
                (Ne ^= (p1 << 7) | (p1 >>> 25)),
                (p1 = (Ne + ve) | 0),
                (fe ^= (p1 << 9) | (p1 >>> 23)),
                (p1 = (fe + Ne) | 0),
                (we ^= (p1 << 13) | (p1 >>> 19)),
                (p1 = (we + fe) | 0),
                (ve ^= (p1 << 18) | (p1 >>> 14)),
                (p1 = (le + Te) | 0),
                (I1 ^= (p1 << 7) | (p1 >>> 25)),
                (p1 = (I1 + le) | 0),
                (N1 ^= (p1 << 9) | (p1 >>> 23)),
                (p1 = (N1 + I1) | 0),
                (Te ^= (p1 << 13) | (p1 >>> 19)),
                (p1 = (Te + N1) | 0),
                (le ^= (p1 << 18) | (p1 >>> 14)),
                (p1 = (q1 + z1) | 0),
                (J1 ^= (p1 << 7) | (p1 >>> 25)),
                (p1 = (J1 + q1) | 0),
                (H1 ^= (p1 << 9) | (p1 >>> 23)),
                (p1 = (H1 + J1) | 0),
                (z1 ^= (p1 << 13) | (p1 >>> 19)),
                (p1 = (z1 + H1) | 0),
                (q1 ^= (p1 << 18) | (p1 >>> 14)),
                (p1 = (rt + ot) | 0),
                (De ^= (p1 << 7) | (p1 >>> 25)),
                (p1 = (De + rt) | 0),
                (Je ^= (p1 << 9) | (p1 >>> 23)),
                (p1 = (Je + De) | 0),
                (ot ^= (p1 << 13) | (p1 >>> 19)),
                (p1 = (ot + Je) | 0),
                (rt ^= (p1 << 18) | (p1 >>> 14));
            (V[0] = (ve >>> 0) & 255),
              (V[1] = (ve >>> 8) & 255),
              (V[2] = (ve >>> 16) & 255),
              (V[3] = (ve >>> 24) & 255),
              (V[4] = (le >>> 0) & 255),
              (V[5] = (le >>> 8) & 255),
              (V[6] = (le >>> 16) & 255),
              (V[7] = (le >>> 24) & 255),
              (V[8] = (q1 >>> 0) & 255),
              (V[9] = (q1 >>> 8) & 255),
              (V[10] = (q1 >>> 16) & 255),
              (V[11] = (q1 >>> 24) & 255),
              (V[12] = (rt >>> 0) & 255),
              (V[13] = (rt >>> 8) & 255),
              (V[14] = (rt >>> 16) & 255),
              (V[15] = (rt >>> 24) & 255),
              (V[16] = (I1 >>> 0) & 255),
              (V[17] = (I1 >>> 8) & 255),
              (V[18] = (I1 >>> 16) & 255),
              (V[19] = (I1 >>> 24) & 255),
              (V[20] = (N1 >>> 0) & 255),
              (V[21] = (N1 >>> 8) & 255),
              (V[22] = (N1 >>> 16) & 255),
              (V[23] = (N1 >>> 24) & 255),
              (V[24] = (H1 >>> 0) & 255),
              (V[25] = (H1 >>> 8) & 255),
              (V[26] = (H1 >>> 16) & 255),
              (V[27] = (H1 >>> 24) & 255),
              (V[28] = (z1 >>> 0) & 255),
              (V[29] = (z1 >>> 8) & 255),
              (V[30] = (z1 >>> 16) & 255),
              (V[31] = (z1 >>> 24) & 255);
          }
          function T(V, X, Q, A) {
            P(V, X, Q, A);
          }
          function M(V, X, Q, A) {
            _(V, X, Q, A);
          }
          var L = new Uint8Array([
            101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32,
            107,
          ]);
          function O(V, X, Q, A, n1, _1, T1) {
            var W1 = new Uint8Array(16),
              X1 = new Uint8Array(64),
              Me,
              de;
            for (de = 0; de < 16; de++) W1[de] = 0;
            for (de = 0; de < 8; de++) W1[de] = _1[de];
            for (; n1 >= 64; ) {
              for (T(X1, W1, T1, L), de = 0; de < 64; de++)
                V[X + de] = Q[A + de] ^ X1[de];
              for (Me = 1, de = 8; de < 16; de++)
                (Me = (Me + (W1[de] & 255)) | 0),
                  (W1[de] = Me & 255),
                  (Me >>>= 8);
              (n1 -= 64), (X += 64), (A += 64);
            }
            if (n1 > 0)
              for (T(X1, W1, T1, L), de = 0; de < n1; de++)
                V[X + de] = Q[A + de] ^ X1[de];
            return 0;
          }
          function U(V, X, Q, A, n1) {
            var _1 = new Uint8Array(16),
              T1 = new Uint8Array(64),
              W1,
              X1;
            for (X1 = 0; X1 < 16; X1++) _1[X1] = 0;
            for (X1 = 0; X1 < 8; X1++) _1[X1] = A[X1];
            for (; Q >= 64; ) {
              for (T(T1, _1, n1, L), X1 = 0; X1 < 64; X1++) V[X + X1] = T1[X1];
              for (W1 = 1, X1 = 8; X1 < 16; X1++)
                (W1 = (W1 + (_1[X1] & 255)) | 0),
                  (_1[X1] = W1 & 255),
                  (W1 >>>= 8);
              (Q -= 64), (X += 64);
            }
            if (Q > 0)
              for (T(T1, _1, n1, L), X1 = 0; X1 < Q; X1++) V[X + X1] = T1[X1];
            return 0;
          }
          function D(V, X, Q, A, n1) {
            var _1 = new Uint8Array(32);
            M(_1, A, n1, L);
            for (var T1 = new Uint8Array(8), W1 = 0; W1 < 8; W1++)
              T1[W1] = A[W1 + 16];
            return U(V, X, Q, T1, _1);
          }
          function H(V, X, Q, A, n1, _1, T1) {
            var W1 = new Uint8Array(32);
            M(W1, _1, T1, L);
            for (var X1 = new Uint8Array(8), Me = 0; Me < 8; Me++)
              X1[Me] = _1[Me + 16];
            return O(V, X, Q, A, n1, X1, W1);
          }
          var $ = function (V) {
            (this.buffer = new Uint8Array(16)),
              (this.r = new Uint16Array(10)),
              (this.h = new Uint16Array(10)),
              (this.pad = new Uint16Array(8)),
              (this.leftover = 0),
              (this.fin = 0);
            var X, Q, A, n1, _1, T1, W1, X1;
            (X = (V[0] & 255) | ((V[1] & 255) << 8)),
              (this.r[0] = X & 8191),
              (Q = (V[2] & 255) | ((V[3] & 255) << 8)),
              (this.r[1] = ((X >>> 13) | (Q << 3)) & 8191),
              (A = (V[4] & 255) | ((V[5] & 255) << 8)),
              (this.r[2] = ((Q >>> 10) | (A << 6)) & 7939),
              (n1 = (V[6] & 255) | ((V[7] & 255) << 8)),
              (this.r[3] = ((A >>> 7) | (n1 << 9)) & 8191),
              (_1 = (V[8] & 255) | ((V[9] & 255) << 8)),
              (this.r[4] = ((n1 >>> 4) | (_1 << 12)) & 255),
              (this.r[5] = (_1 >>> 1) & 8190),
              (T1 = (V[10] & 255) | ((V[11] & 255) << 8)),
              (this.r[6] = ((_1 >>> 14) | (T1 << 2)) & 8191),
              (W1 = (V[12] & 255) | ((V[13] & 255) << 8)),
              (this.r[7] = ((T1 >>> 11) | (W1 << 5)) & 8065),
              (X1 = (V[14] & 255) | ((V[15] & 255) << 8)),
              (this.r[8] = ((W1 >>> 8) | (X1 << 8)) & 8191),
              (this.r[9] = (X1 >>> 5) & 127),
              (this.pad[0] = (V[16] & 255) | ((V[17] & 255) << 8)),
              (this.pad[1] = (V[18] & 255) | ((V[19] & 255) << 8)),
              (this.pad[2] = (V[20] & 255) | ((V[21] & 255) << 8)),
              (this.pad[3] = (V[22] & 255) | ((V[23] & 255) << 8)),
              (this.pad[4] = (V[24] & 255) | ((V[25] & 255) << 8)),
              (this.pad[5] = (V[26] & 255) | ((V[27] & 255) << 8)),
              (this.pad[6] = (V[28] & 255) | ((V[29] & 255) << 8)),
              (this.pad[7] = (V[30] & 255) | ((V[31] & 255) << 8));
          };
          ($.prototype.blocks = function (V, X, Q) {
            for (
              var A = this.fin ? 0 : 2048,
                n1,
                _1,
                T1,
                W1,
                X1,
                Me,
                de,
                St,
                ye,
                Ge,
                Xe,
                at,
                ut,
                tt,
                Ce,
                nt,
                ve,
                Ne,
                fe,
                we = this.h[0],
                Te = this.h[1],
                le = this.h[2],
                I1 = this.h[3],
                N1 = this.h[4],
                H1 = this.h[5],
                z1 = this.h[6],
                q1 = this.h[7],
                J1 = this.h[8],
                De = this.h[9],
                Je = this.r[0],
                ot = this.r[1],
                rt = this.r[2],
                p1 = this.r[3],
                ft = this.r[4],
                Et = this.r[5],
                $e = this.r[6],
                lt = this.r[7],
                mt = this.r[8],
                ht = this.r[9];
              Q >= 16;

            )
              (n1 = (V[X + 0] & 255) | ((V[X + 1] & 255) << 8)),
                (we += n1 & 8191),
                (_1 = (V[X + 2] & 255) | ((V[X + 3] & 255) << 8)),
                (Te += ((n1 >>> 13) | (_1 << 3)) & 8191),
                (T1 = (V[X + 4] & 255) | ((V[X + 5] & 255) << 8)),
                (le += ((_1 >>> 10) | (T1 << 6)) & 8191),
                (W1 = (V[X + 6] & 255) | ((V[X + 7] & 255) << 8)),
                (I1 += ((T1 >>> 7) | (W1 << 9)) & 8191),
                (X1 = (V[X + 8] & 255) | ((V[X + 9] & 255) << 8)),
                (N1 += ((W1 >>> 4) | (X1 << 12)) & 8191),
                (H1 += (X1 >>> 1) & 8191),
                (Me = (V[X + 10] & 255) | ((V[X + 11] & 255) << 8)),
                (z1 += ((X1 >>> 14) | (Me << 2)) & 8191),
                (de = (V[X + 12] & 255) | ((V[X + 13] & 255) << 8)),
                (q1 += ((Me >>> 11) | (de << 5)) & 8191),
                (St = (V[X + 14] & 255) | ((V[X + 15] & 255) << 8)),
                (J1 += ((de >>> 8) | (St << 8)) & 8191),
                (De += (St >>> 5) | A),
                (ye = 0),
                (Ge = ye),
                (Ge += we * Je),
                (Ge += Te * (5 * ht)),
                (Ge += le * (5 * mt)),
                (Ge += I1 * (5 * lt)),
                (Ge += N1 * (5 * $e)),
                (ye = Ge >>> 13),
                (Ge &= 8191),
                (Ge += H1 * (5 * Et)),
                (Ge += z1 * (5 * ft)),
                (Ge += q1 * (5 * p1)),
                (Ge += J1 * (5 * rt)),
                (Ge += De * (5 * ot)),
                (ye += Ge >>> 13),
                (Ge &= 8191),
                (Xe = ye),
                (Xe += we * ot),
                (Xe += Te * Je),
                (Xe += le * (5 * ht)),
                (Xe += I1 * (5 * mt)),
                (Xe += N1 * (5 * lt)),
                (ye = Xe >>> 13),
                (Xe &= 8191),
                (Xe += H1 * (5 * $e)),
                (Xe += z1 * (5 * Et)),
                (Xe += q1 * (5 * ft)),
                (Xe += J1 * (5 * p1)),
                (Xe += De * (5 * rt)),
                (ye += Xe >>> 13),
                (Xe &= 8191),
                (at = ye),
                (at += we * rt),
                (at += Te * ot),
                (at += le * Je),
                (at += I1 * (5 * ht)),
                (at += N1 * (5 * mt)),
                (ye = at >>> 13),
                (at &= 8191),
                (at += H1 * (5 * lt)),
                (at += z1 * (5 * $e)),
                (at += q1 * (5 * Et)),
                (at += J1 * (5 * ft)),
                (at += De * (5 * p1)),
                (ye += at >>> 13),
                (at &= 8191),
                (ut = ye),
                (ut += we * p1),
                (ut += Te * rt),
                (ut += le * ot),
                (ut += I1 * Je),
                (ut += N1 * (5 * ht)),
                (ye = ut >>> 13),
                (ut &= 8191),
                (ut += H1 * (5 * mt)),
                (ut += z1 * (5 * lt)),
                (ut += q1 * (5 * $e)),
                (ut += J1 * (5 * Et)),
                (ut += De * (5 * ft)),
                (ye += ut >>> 13),
                (ut &= 8191),
                (tt = ye),
                (tt += we * ft),
                (tt += Te * p1),
                (tt += le * rt),
                (tt += I1 * ot),
                (tt += N1 * Je),
                (ye = tt >>> 13),
                (tt &= 8191),
                (tt += H1 * (5 * ht)),
                (tt += z1 * (5 * mt)),
                (tt += q1 * (5 * lt)),
                (tt += J1 * (5 * $e)),
                (tt += De * (5 * Et)),
                (ye += tt >>> 13),
                (tt &= 8191),
                (Ce = ye),
                (Ce += we * Et),
                (Ce += Te * ft),
                (Ce += le * p1),
                (Ce += I1 * rt),
                (Ce += N1 * ot),
                (ye = Ce >>> 13),
                (Ce &= 8191),
                (Ce += H1 * Je),
                (Ce += z1 * (5 * ht)),
                (Ce += q1 * (5 * mt)),
                (Ce += J1 * (5 * lt)),
                (Ce += De * (5 * $e)),
                (ye += Ce >>> 13),
                (Ce &= 8191),
                (nt = ye),
                (nt += we * $e),
                (nt += Te * Et),
                (nt += le * ft),
                (nt += I1 * p1),
                (nt += N1 * rt),
                (ye = nt >>> 13),
                (nt &= 8191),
                (nt += H1 * ot),
                (nt += z1 * Je),
                (nt += q1 * (5 * ht)),
                (nt += J1 * (5 * mt)),
                (nt += De * (5 * lt)),
                (ye += nt >>> 13),
                (nt &= 8191),
                (ve = ye),
                (ve += we * lt),
                (ve += Te * $e),
                (ve += le * Et),
                (ve += I1 * ft),
                (ve += N1 * p1),
                (ye = ve >>> 13),
                (ve &= 8191),
                (ve += H1 * rt),
                (ve += z1 * ot),
                (ve += q1 * Je),
                (ve += J1 * (5 * ht)),
                (ve += De * (5 * mt)),
                (ye += ve >>> 13),
                (ve &= 8191),
                (Ne = ye),
                (Ne += we * mt),
                (Ne += Te * lt),
                (Ne += le * $e),
                (Ne += I1 * Et),
                (Ne += N1 * ft),
                (ye = Ne >>> 13),
                (Ne &= 8191),
                (Ne += H1 * p1),
                (Ne += z1 * rt),
                (Ne += q1 * ot),
                (Ne += J1 * Je),
                (Ne += De * (5 * ht)),
                (ye += Ne >>> 13),
                (Ne &= 8191),
                (fe = ye),
                (fe += we * ht),
                (fe += Te * mt),
                (fe += le * lt),
                (fe += I1 * $e),
                (fe += N1 * Et),
                (ye = fe >>> 13),
                (fe &= 8191),
                (fe += H1 * ft),
                (fe += z1 * p1),
                (fe += q1 * rt),
                (fe += J1 * ot),
                (fe += De * Je),
                (ye += fe >>> 13),
                (fe &= 8191),
                (ye = ((ye << 2) + ye) | 0),
                (ye = (ye + Ge) | 0),
                (Ge = ye & 8191),
                (ye = ye >>> 13),
                (Xe += ye),
                (we = Ge),
                (Te = Xe),
                (le = at),
                (I1 = ut),
                (N1 = tt),
                (H1 = Ce),
                (z1 = nt),
                (q1 = ve),
                (J1 = Ne),
                (De = fe),
                (X += 16),
                (Q -= 16);
            (this.h[0] = we),
              (this.h[1] = Te),
              (this.h[2] = le),
              (this.h[3] = I1),
              (this.h[4] = N1),
              (this.h[5] = H1),
              (this.h[6] = z1),
              (this.h[7] = q1),
              (this.h[8] = J1),
              (this.h[9] = De);
          }),
            ($.prototype.finish = function (V, X) {
              var Q = new Uint16Array(10),
                A,
                n1,
                _1,
                T1;
              if (this.leftover) {
                for (T1 = this.leftover, this.buffer[T1++] = 1; T1 < 16; T1++)
                  this.buffer[T1] = 0;
                (this.fin = 1), this.blocks(this.buffer, 0, 16);
              }
              for (
                A = this.h[1] >>> 13, this.h[1] &= 8191, T1 = 2;
                T1 < 10;
                T1++
              )
                (this.h[T1] += A),
                  (A = this.h[T1] >>> 13),
                  (this.h[T1] &= 8191);
              for (
                this.h[0] += A * 5,
                  A = this.h[0] >>> 13,
                  this.h[0] &= 8191,
                  this.h[1] += A,
                  A = this.h[1] >>> 13,
                  this.h[1] &= 8191,
                  this.h[2] += A,
                  Q[0] = this.h[0] + 5,
                  A = Q[0] >>> 13,
                  Q[0] &= 8191,
                  T1 = 1;
                T1 < 10;
                T1++
              )
                (Q[T1] = this.h[T1] + A), (A = Q[T1] >>> 13), (Q[T1] &= 8191);
              for (Q[9] -= 8192, n1 = (A ^ 1) - 1, T1 = 0; T1 < 10; T1++)
                Q[T1] &= n1;
              for (n1 = ~n1, T1 = 0; T1 < 10; T1++)
                this.h[T1] = (this.h[T1] & n1) | Q[T1];
              for (
                this.h[0] = (this.h[0] | (this.h[1] << 13)) & 65535,
                  this.h[1] = ((this.h[1] >>> 3) | (this.h[2] << 10)) & 65535,
                  this.h[2] = ((this.h[2] >>> 6) | (this.h[3] << 7)) & 65535,
                  this.h[3] = ((this.h[3] >>> 9) | (this.h[4] << 4)) & 65535,
                  this.h[4] =
                    ((this.h[4] >>> 12) |
                      (this.h[5] << 1) |
                      (this.h[6] << 14)) &
                    65535,
                  this.h[5] = ((this.h[6] >>> 2) | (this.h[7] << 11)) & 65535,
                  this.h[6] = ((this.h[7] >>> 5) | (this.h[8] << 8)) & 65535,
                  this.h[7] = ((this.h[8] >>> 8) | (this.h[9] << 5)) & 65535,
                  _1 = this.h[0] + this.pad[0],
                  this.h[0] = _1 & 65535,
                  T1 = 1;
                T1 < 8;
                T1++
              )
                (_1 = (((this.h[T1] + this.pad[T1]) | 0) + (_1 >>> 16)) | 0),
                  (this.h[T1] = _1 & 65535);
              (V[X + 0] = (this.h[0] >>> 0) & 255),
                (V[X + 1] = (this.h[0] >>> 8) & 255),
                (V[X + 2] = (this.h[1] >>> 0) & 255),
                (V[X + 3] = (this.h[1] >>> 8) & 255),
                (V[X + 4] = (this.h[2] >>> 0) & 255),
                (V[X + 5] = (this.h[2] >>> 8) & 255),
                (V[X + 6] = (this.h[3] >>> 0) & 255),
                (V[X + 7] = (this.h[3] >>> 8) & 255),
                (V[X + 8] = (this.h[4] >>> 0) & 255),
                (V[X + 9] = (this.h[4] >>> 8) & 255),
                (V[X + 10] = (this.h[5] >>> 0) & 255),
                (V[X + 11] = (this.h[5] >>> 8) & 255),
                (V[X + 12] = (this.h[6] >>> 0) & 255),
                (V[X + 13] = (this.h[6] >>> 8) & 255),
                (V[X + 14] = (this.h[7] >>> 0) & 255),
                (V[X + 15] = (this.h[7] >>> 8) & 255);
            }),
            ($.prototype.update = function (V, X, Q) {
              var A, n1;
              if (this.leftover) {
                for (
                  n1 = 16 - this.leftover, n1 > Q && (n1 = Q), A = 0;
                  A < n1;
                  A++
                )
                  this.buffer[this.leftover + A] = V[X + A];
                if (
                  ((Q -= n1),
                  (X += n1),
                  (this.leftover += n1),
                  this.leftover < 16)
                )
                  return;
                this.blocks(this.buffer, 0, 16), (this.leftover = 0);
              }
              if (
                (Q >= 16 &&
                  ((n1 = Q - (Q % 16)),
                  this.blocks(V, X, n1),
                  (X += n1),
                  (Q -= n1)),
                Q)
              ) {
                for (A = 0; A < Q; A++)
                  this.buffer[this.leftover + A] = V[X + A];
                this.leftover += Q;
              }
            });
          function F(V, X, Q, A, n1, _1) {
            var T1 = new $(_1);
            return T1.update(Q, A, n1), T1.finish(V, X), 0;
          }
          function B(V, X, Q, A, n1, _1) {
            var T1 = new Uint8Array(16);
            return F(T1, 0, Q, A, n1, _1), x(V, X, T1, 0);
          }
          function j(V, X, Q, A, n1) {
            var _1;
            if (Q < 32) return -1;
            for (
              H(V, 0, X, 0, Q, A, n1), F(V, 16, V, 32, Q - 32, V), _1 = 0;
              _1 < 16;
              _1++
            )
              V[_1] = 0;
            return 0;
          }
          function G(V, X, Q, A, n1) {
            var _1,
              T1 = new Uint8Array(32);
            if (
              Q < 32 ||
              (D(T1, 0, 32, A, n1), B(X, 16, X, 32, Q - 32, T1) !== 0)
            )
              return -1;
            for (H(V, 0, X, 0, Q, A, n1), _1 = 0; _1 < 32; _1++) V[_1] = 0;
            return 0;
          }
          function u1(V, X) {
            var Q;
            for (Q = 0; Q < 16; Q++) V[Q] = X[Q] | 0;
          }
          function e1(V) {
            var X,
              Q,
              A = 1;
            for (X = 0; X < 16; X++)
              (Q = V[X] + A + 65535),
                (A = Math.floor(Q / 65536)),
                (V[X] = Q - A * 65536);
            V[0] += A - 1 + 37 * (A - 1);
          }
          function i1(V, X, Q) {
            for (var A, n1 = ~(Q - 1), _1 = 0; _1 < 16; _1++)
              (A = n1 & (V[_1] ^ X[_1])), (V[_1] ^= A), (X[_1] ^= A);
          }
          function Z(V, X) {
            var Q,
              A,
              n1,
              _1 = n(),
              T1 = n();
            for (Q = 0; Q < 16; Q++) T1[Q] = X[Q];
            for (e1(T1), e1(T1), e1(T1), A = 0; A < 2; A++) {
              for (_1[0] = T1[0] - 65517, Q = 1; Q < 15; Q++)
                (_1[Q] = T1[Q] - 65535 - ((_1[Q - 1] >> 16) & 1)),
                  (_1[Q - 1] &= 65535);
              (_1[15] = T1[15] - 32767 - ((_1[14] >> 16) & 1)),
                (n1 = (_1[15] >> 16) & 1),
                (_1[14] &= 65535),
                i1(T1, _1, 1 - n1);
            }
            for (Q = 0; Q < 16; Q++)
              (V[2 * Q] = T1[Q] & 255), (V[2 * Q + 1] = T1[Q] >> 8);
          }
          function b1(V, X) {
            var Q = new Uint8Array(32),
              A = new Uint8Array(32);
            return Z(Q, V), Z(A, X), E(Q, 0, A, 0);
          }
          function o1(V) {
            var X = new Uint8Array(32);
            return Z(X, V), X[0] & 1;
          }
          function k1(V, X) {
            var Q;
            for (Q = 0; Q < 16; Q++) V[Q] = X[2 * Q] + (X[2 * Q + 1] << 8);
            V[15] &= 32767;
          }
          function Y1(V, X, Q) {
            for (var A = 0; A < 16; A++) V[A] = X[A] + Q[A];
          }
          function G1(V, X, Q) {
            for (var A = 0; A < 16; A++) V[A] = X[A] - Q[A];
          }
          function M1(V, X, Q) {
            var A,
              n1,
              _1 = 0,
              T1 = 0,
              W1 = 0,
              X1 = 0,
              Me = 0,
              de = 0,
              St = 0,
              ye = 0,
              Ge = 0,
              Xe = 0,
              at = 0,
              ut = 0,
              tt = 0,
              Ce = 0,
              nt = 0,
              ve = 0,
              Ne = 0,
              fe = 0,
              we = 0,
              Te = 0,
              le = 0,
              I1 = 0,
              N1 = 0,
              H1 = 0,
              z1 = 0,
              q1 = 0,
              J1 = 0,
              De = 0,
              Je = 0,
              ot = 0,
              rt = 0,
              p1 = Q[0],
              ft = Q[1],
              Et = Q[2],
              $e = Q[3],
              lt = Q[4],
              mt = Q[5],
              ht = Q[6],
              qt = Q[7],
              be = Q[8],
              Pt = Q[9],
              Mt = Q[10],
              Kt = Q[11],
              an = Q[12],
              En = Q[13],
              kn = Q[14],
              bn = Q[15];
            (A = X[0]),
              (_1 += A * p1),
              (T1 += A * ft),
              (W1 += A * Et),
              (X1 += A * $e),
              (Me += A * lt),
              (de += A * mt),
              (St += A * ht),
              (ye += A * qt),
              (Ge += A * be),
              (Xe += A * Pt),
              (at += A * Mt),
              (ut += A * Kt),
              (tt += A * an),
              (Ce += A * En),
              (nt += A * kn),
              (ve += A * bn),
              (A = X[1]),
              (T1 += A * p1),
              (W1 += A * ft),
              (X1 += A * Et),
              (Me += A * $e),
              (de += A * lt),
              (St += A * mt),
              (ye += A * ht),
              (Ge += A * qt),
              (Xe += A * be),
              (at += A * Pt),
              (ut += A * Mt),
              (tt += A * Kt),
              (Ce += A * an),
              (nt += A * En),
              (ve += A * kn),
              (Ne += A * bn),
              (A = X[2]),
              (W1 += A * p1),
              (X1 += A * ft),
              (Me += A * Et),
              (de += A * $e),
              (St += A * lt),
              (ye += A * mt),
              (Ge += A * ht),
              (Xe += A * qt),
              (at += A * be),
              (ut += A * Pt),
              (tt += A * Mt),
              (Ce += A * Kt),
              (nt += A * an),
              (ve += A * En),
              (Ne += A * kn),
              (fe += A * bn),
              (A = X[3]),
              (X1 += A * p1),
              (Me += A * ft),
              (de += A * Et),
              (St += A * $e),
              (ye += A * lt),
              (Ge += A * mt),
              (Xe += A * ht),
              (at += A * qt),
              (ut += A * be),
              (tt += A * Pt),
              (Ce += A * Mt),
              (nt += A * Kt),
              (ve += A * an),
              (Ne += A * En),
              (fe += A * kn),
              (we += A * bn),
              (A = X[4]),
              (Me += A * p1),
              (de += A * ft),
              (St += A * Et),
              (ye += A * $e),
              (Ge += A * lt),
              (Xe += A * mt),
              (at += A * ht),
              (ut += A * qt),
              (tt += A * be),
              (Ce += A * Pt),
              (nt += A * Mt),
              (ve += A * Kt),
              (Ne += A * an),
              (fe += A * En),
              (we += A * kn),
              (Te += A * bn),
              (A = X[5]),
              (de += A * p1),
              (St += A * ft),
              (ye += A * Et),
              (Ge += A * $e),
              (Xe += A * lt),
              (at += A * mt),
              (ut += A * ht),
              (tt += A * qt),
              (Ce += A * be),
              (nt += A * Pt),
              (ve += A * Mt),
              (Ne += A * Kt),
              (fe += A * an),
              (we += A * En),
              (Te += A * kn),
              (le += A * bn),
              (A = X[6]),
              (St += A * p1),
              (ye += A * ft),
              (Ge += A * Et),
              (Xe += A * $e),
              (at += A * lt),
              (ut += A * mt),
              (tt += A * ht),
              (Ce += A * qt),
              (nt += A * be),
              (ve += A * Pt),
              (Ne += A * Mt),
              (fe += A * Kt),
              (we += A * an),
              (Te += A * En),
              (le += A * kn),
              (I1 += A * bn),
              (A = X[7]),
              (ye += A * p1),
              (Ge += A * ft),
              (Xe += A * Et),
              (at += A * $e),
              (ut += A * lt),
              (tt += A * mt),
              (Ce += A * ht),
              (nt += A * qt),
              (ve += A * be),
              (Ne += A * Pt),
              (fe += A * Mt),
              (we += A * Kt),
              (Te += A * an),
              (le += A * En),
              (I1 += A * kn),
              (N1 += A * bn),
              (A = X[8]),
              (Ge += A * p1),
              (Xe += A * ft),
              (at += A * Et),
              (ut += A * $e),
              (tt += A * lt),
              (Ce += A * mt),
              (nt += A * ht),
              (ve += A * qt),
              (Ne += A * be),
              (fe += A * Pt),
              (we += A * Mt),
              (Te += A * Kt),
              (le += A * an),
              (I1 += A * En),
              (N1 += A * kn),
              (H1 += A * bn),
              (A = X[9]),
              (Xe += A * p1),
              (at += A * ft),
              (ut += A * Et),
              (tt += A * $e),
              (Ce += A * lt),
              (nt += A * mt),
              (ve += A * ht),
              (Ne += A * qt),
              (fe += A * be),
              (we += A * Pt),
              (Te += A * Mt),
              (le += A * Kt),
              (I1 += A * an),
              (N1 += A * En),
              (H1 += A * kn),
              (z1 += A * bn),
              (A = X[10]),
              (at += A * p1),
              (ut += A * ft),
              (tt += A * Et),
              (Ce += A * $e),
              (nt += A * lt),
              (ve += A * mt),
              (Ne += A * ht),
              (fe += A * qt),
              (we += A * be),
              (Te += A * Pt),
              (le += A * Mt),
              (I1 += A * Kt),
              (N1 += A * an),
              (H1 += A * En),
              (z1 += A * kn),
              (q1 += A * bn),
              (A = X[11]),
              (ut += A * p1),
              (tt += A * ft),
              (Ce += A * Et),
              (nt += A * $e),
              (ve += A * lt),
              (Ne += A * mt),
              (fe += A * ht),
              (we += A * qt),
              (Te += A * be),
              (le += A * Pt),
              (I1 += A * Mt),
              (N1 += A * Kt),
              (H1 += A * an),
              (z1 += A * En),
              (q1 += A * kn),
              (J1 += A * bn),
              (A = X[12]),
              (tt += A * p1),
              (Ce += A * ft),
              (nt += A * Et),
              (ve += A * $e),
              (Ne += A * lt),
              (fe += A * mt),
              (we += A * ht),
              (Te += A * qt),
              (le += A * be),
              (I1 += A * Pt),
              (N1 += A * Mt),
              (H1 += A * Kt),
              (z1 += A * an),
              (q1 += A * En),
              (J1 += A * kn),
              (De += A * bn),
              (A = X[13]),
              (Ce += A * p1),
              (nt += A * ft),
              (ve += A * Et),
              (Ne += A * $e),
              (fe += A * lt),
              (we += A * mt),
              (Te += A * ht),
              (le += A * qt),
              (I1 += A * be),
              (N1 += A * Pt),
              (H1 += A * Mt),
              (z1 += A * Kt),
              (q1 += A * an),
              (J1 += A * En),
              (De += A * kn),
              (Je += A * bn),
              (A = X[14]),
              (nt += A * p1),
              (ve += A * ft),
              (Ne += A * Et),
              (fe += A * $e),
              (we += A * lt),
              (Te += A * mt),
              (le += A * ht),
              (I1 += A * qt),
              (N1 += A * be),
              (H1 += A * Pt),
              (z1 += A * Mt),
              (q1 += A * Kt),
              (J1 += A * an),
              (De += A * En),
              (Je += A * kn),
              (ot += A * bn),
              (A = X[15]),
              (ve += A * p1),
              (Ne += A * ft),
              (fe += A * Et),
              (we += A * $e),
              (Te += A * lt),
              (le += A * mt),
              (I1 += A * ht),
              (N1 += A * qt),
              (H1 += A * be),
              (z1 += A * Pt),
              (q1 += A * Mt),
              (J1 += A * Kt),
              (De += A * an),
              (Je += A * En),
              (ot += A * kn),
              (rt += A * bn),
              (_1 += 38 * Ne),
              (T1 += 38 * fe),
              (W1 += 38 * we),
              (X1 += 38 * Te),
              (Me += 38 * le),
              (de += 38 * I1),
              (St += 38 * N1),
              (ye += 38 * H1),
              (Ge += 38 * z1),
              (Xe += 38 * q1),
              (at += 38 * J1),
              (ut += 38 * De),
              (tt += 38 * Je),
              (Ce += 38 * ot),
              (nt += 38 * rt),
              (n1 = 1),
              (A = _1 + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (_1 = A - n1 * 65536),
              (A = T1 + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (T1 = A - n1 * 65536),
              (A = W1 + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (W1 = A - n1 * 65536),
              (A = X1 + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (X1 = A - n1 * 65536),
              (A = Me + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (Me = A - n1 * 65536),
              (A = de + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (de = A - n1 * 65536),
              (A = St + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (St = A - n1 * 65536),
              (A = ye + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (ye = A - n1 * 65536),
              (A = Ge + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (Ge = A - n1 * 65536),
              (A = Xe + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (Xe = A - n1 * 65536),
              (A = at + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (at = A - n1 * 65536),
              (A = ut + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (ut = A - n1 * 65536),
              (A = tt + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (tt = A - n1 * 65536),
              (A = Ce + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (Ce = A - n1 * 65536),
              (A = nt + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (nt = A - n1 * 65536),
              (A = ve + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (ve = A - n1 * 65536),
              (_1 += n1 - 1 + 37 * (n1 - 1)),
              (n1 = 1),
              (A = _1 + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (_1 = A - n1 * 65536),
              (A = T1 + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (T1 = A - n1 * 65536),
              (A = W1 + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (W1 = A - n1 * 65536),
              (A = X1 + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (X1 = A - n1 * 65536),
              (A = Me + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (Me = A - n1 * 65536),
              (A = de + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (de = A - n1 * 65536),
              (A = St + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (St = A - n1 * 65536),
              (A = ye + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (ye = A - n1 * 65536),
              (A = Ge + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (Ge = A - n1 * 65536),
              (A = Xe + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (Xe = A - n1 * 65536),
              (A = at + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (at = A - n1 * 65536),
              (A = ut + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (ut = A - n1 * 65536),
              (A = tt + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (tt = A - n1 * 65536),
              (A = Ce + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (Ce = A - n1 * 65536),
              (A = nt + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (nt = A - n1 * 65536),
              (A = ve + n1 + 65535),
              (n1 = Math.floor(A / 65536)),
              (ve = A - n1 * 65536),
              (_1 += n1 - 1 + 37 * (n1 - 1)),
              (V[0] = _1),
              (V[1] = T1),
              (V[2] = W1),
              (V[3] = X1),
              (V[4] = Me),
              (V[5] = de),
              (V[6] = St),
              (V[7] = ye),
              (V[8] = Ge),
              (V[9] = Xe),
              (V[10] = at),
              (V[11] = ut),
              (V[12] = tt),
              (V[13] = Ce),
              (V[14] = nt),
              (V[15] = ve);
          }
          function Q1(V, X) {
            M1(V, X, X);
          }
          function re(V, X) {
            var Q = n(),
              A;
            for (A = 0; A < 16; A++) Q[A] = X[A];
            for (A = 253; A >= 0; A--)
              Q1(Q, Q), A !== 2 && A !== 4 && M1(Q, Q, X);
            for (A = 0; A < 16; A++) V[A] = Q[A];
          }
          function d1(V, X) {
            var Q = n(),
              A;
            for (A = 0; A < 16; A++) Q[A] = X[A];
            for (A = 250; A >= 0; A--) Q1(Q, Q), A !== 1 && M1(Q, Q, X);
            for (A = 0; A < 16; A++) V[A] = Q[A];
          }
          function h1(V, X, Q) {
            var A = new Uint8Array(32),
              n1 = new Float64Array(80),
              _1,
              T1,
              W1 = n(),
              X1 = n(),
              Me = n(),
              de = n(),
              St = n(),
              ye = n();
            for (T1 = 0; T1 < 31; T1++) A[T1] = X[T1];
            for (
              A[31] = (X[31] & 127) | 64, A[0] &= 248, k1(n1, Q), T1 = 0;
              T1 < 16;
              T1++
            )
              (X1[T1] = n1[T1]), (de[T1] = W1[T1] = Me[T1] = 0);
            for (W1[0] = de[0] = 1, T1 = 254; T1 >= 0; --T1)
              (_1 = (A[T1 >>> 3] >>> (T1 & 7)) & 1),
                i1(W1, X1, _1),
                i1(Me, de, _1),
                Y1(St, W1, Me),
                G1(W1, W1, Me),
                Y1(Me, X1, de),
                G1(X1, X1, de),
                Q1(de, St),
                Q1(ye, W1),
                M1(W1, Me, W1),
                M1(Me, X1, St),
                Y1(St, W1, Me),
                G1(W1, W1, Me),
                Q1(X1, W1),
                G1(Me, de, ye),
                M1(W1, Me, c),
                Y1(W1, W1, de),
                M1(Me, Me, W1),
                M1(W1, de, ye),
                M1(de, X1, n1),
                Q1(X1, St),
                i1(W1, X1, _1),
                i1(Me, de, _1);
            for (T1 = 0; T1 < 16; T1++)
              (n1[T1 + 16] = W1[T1]),
                (n1[T1 + 32] = Me[T1]),
                (n1[T1 + 48] = X1[T1]),
                (n1[T1 + 64] = de[T1]);
            var Ge = n1.subarray(32),
              Xe = n1.subarray(16);
            return re(Ge, Ge), M1(Xe, Xe, Ge), Z(V, Xe), 0;
          }
          function y1(V, X) {
            return h1(V, X, s);
          }
          function A1(V, X) {
            return r(X, 32), y1(V, X);
          }
          function L1(V, X, Q) {
            var A = new Uint8Array(32);
            return h1(A, Q, X), M(V, i, A, L);
          }
          var V1 = j,
            ie = G;
          function ae(V, X, Q, A, n1, _1) {
            var T1 = new Uint8Array(32);
            return L1(T1, n1, _1), V1(V, X, Q, A, T1);
          }
          function Be(V, X, Q, A, n1, _1) {
            var T1 = new Uint8Array(32);
            return L1(T1, n1, _1), ie(V, X, Q, A, T1);
          }
          var Ve = [
            1116352408, 3609767458, 1899447441, 602891725, 3049323471,
            3964484399, 3921009573, 2173295548, 961987163, 4081628472,
            1508970993, 3053834265, 2453635748, 2937671579, 2870763221,
            3664609560, 3624381080, 2734883394, 310598401, 1164996542,
            607225278, 1323610764, 1426881987, 3590304994, 1925078388,
            4068182383, 2162078206, 991336113, 2614888103, 633803317,
            3248222580, 3479774868, 3835390401, 2666613458, 4022224774,
            944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983,
            1495990901, 1249150122, 1856431235, 1555081692, 3175218132,
            1996064986, 2198950837, 2554220882, 3999719339, 2821834349,
            766784016, 2952996808, 2566594879, 3210313671, 3203337956,
            3336571891, 1034457026, 3584528711, 2466948901, 113926993,
            3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912,
            1546045734, 1294757372, 1522805485, 1396182291, 2643833823,
            1695183700, 2343527390, 1986661051, 1014477480, 2177026350,
            1206759142, 2456956037, 344077627, 2730485921, 1290863460,
            2820302411, 3158454273, 3259730800, 3505952657, 3345764771,
            106217008, 3516065817, 3606008344, 3600352804, 1432725776,
            4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752,
            506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280,
            958139571, 3318307427, 1322822218, 3812723403, 1537002063,
            2003034995, 1747873779, 3602036899, 1955562222, 1575990012,
            2024104815, 1125592928, 2227730452, 2716904306, 2361852424,
            442776044, 2428436474, 593698344, 2756734187, 3733110249,
            3204031479, 2999351573, 3329325298, 3815920427, 3391569614,
            3928383900, 3515267271, 566280711, 3940187606, 3454069534,
            4118630271, 4000239992, 116418474, 1914138554, 174292421,
            2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733,
            587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580,
            2618297676, 1288033470, 3409855158, 1501505948, 4234509866,
            1607167915, 987167468, 1816402316, 1246189591,
          ];
          function ce(V, X, Q, A) {
            for (
              var n1 = new Int32Array(16),
                _1 = new Int32Array(16),
                T1,
                W1,
                X1,
                Me,
                de,
                St,
                ye,
                Ge,
                Xe,
                at,
                ut,
                tt,
                Ce,
                nt,
                ve,
                Ne,
                fe,
                we,
                Te,
                le,
                I1,
                N1,
                H1,
                z1,
                q1,
                J1,
                De = V[0],
                Je = V[1],
                ot = V[2],
                rt = V[3],
                p1 = V[4],
                ft = V[5],
                Et = V[6],
                $e = V[7],
                lt = X[0],
                mt = X[1],
                ht = X[2],
                qt = X[3],
                be = X[4],
                Pt = X[5],
                Mt = X[6],
                Kt = X[7],
                an = 0;
              A >= 128;

            ) {
              for (Te = 0; Te < 16; Te++)
                (le = 8 * Te + an),
                  (n1[Te] =
                    (Q[le + 0] << 24) |
                    (Q[le + 1] << 16) |
                    (Q[le + 2] << 8) |
                    Q[le + 3]),
                  (_1[Te] =
                    (Q[le + 4] << 24) |
                    (Q[le + 5] << 16) |
                    (Q[le + 6] << 8) |
                    Q[le + 7]);
              for (Te = 0; Te < 80; Te++)
                if (
                  ((T1 = De),
                  (W1 = Je),
                  (X1 = ot),
                  (Me = rt),
                  (de = p1),
                  (St = ft),
                  (ye = Et),
                  (Ge = $e),
                  (Xe = lt),
                  (at = mt),
                  (ut = ht),
                  (tt = qt),
                  (Ce = be),
                  (nt = Pt),
                  (ve = Mt),
                  (Ne = Kt),
                  (I1 = $e),
                  (N1 = Kt),
                  (H1 = N1 & 65535),
                  (z1 = N1 >>> 16),
                  (q1 = I1 & 65535),
                  (J1 = I1 >>> 16),
                  (I1 =
                    ((p1 >>> 14) | (be << 18)) ^
                    ((p1 >>> 18) | (be << 14)) ^
                    ((be >>> 9) | (p1 << 23))),
                  (N1 =
                    ((be >>> 14) | (p1 << 18)) ^
                    ((be >>> 18) | (p1 << 14)) ^
                    ((p1 >>> 9) | (be << 23))),
                  (H1 += N1 & 65535),
                  (z1 += N1 >>> 16),
                  (q1 += I1 & 65535),
                  (J1 += I1 >>> 16),
                  (I1 = (p1 & ft) ^ (~p1 & Et)),
                  (N1 = (be & Pt) ^ (~be & Mt)),
                  (H1 += N1 & 65535),
                  (z1 += N1 >>> 16),
                  (q1 += I1 & 65535),
                  (J1 += I1 >>> 16),
                  (I1 = Ve[Te * 2]),
                  (N1 = Ve[Te * 2 + 1]),
                  (H1 += N1 & 65535),
                  (z1 += N1 >>> 16),
                  (q1 += I1 & 65535),
                  (J1 += I1 >>> 16),
                  (I1 = n1[Te % 16]),
                  (N1 = _1[Te % 16]),
                  (H1 += N1 & 65535),
                  (z1 += N1 >>> 16),
                  (q1 += I1 & 65535),
                  (J1 += I1 >>> 16),
                  (z1 += H1 >>> 16),
                  (q1 += z1 >>> 16),
                  (J1 += q1 >>> 16),
                  (fe = (q1 & 65535) | (J1 << 16)),
                  (we = (H1 & 65535) | (z1 << 16)),
                  (I1 = fe),
                  (N1 = we),
                  (H1 = N1 & 65535),
                  (z1 = N1 >>> 16),
                  (q1 = I1 & 65535),
                  (J1 = I1 >>> 16),
                  (I1 =
                    ((De >>> 28) | (lt << 4)) ^
                    ((lt >>> 2) | (De << 30)) ^
                    ((lt >>> 7) | (De << 25))),
                  (N1 =
                    ((lt >>> 28) | (De << 4)) ^
                    ((De >>> 2) | (lt << 30)) ^
                    ((De >>> 7) | (lt << 25))),
                  (H1 += N1 & 65535),
                  (z1 += N1 >>> 16),
                  (q1 += I1 & 65535),
                  (J1 += I1 >>> 16),
                  (I1 = (De & Je) ^ (De & ot) ^ (Je & ot)),
                  (N1 = (lt & mt) ^ (lt & ht) ^ (mt & ht)),
                  (H1 += N1 & 65535),
                  (z1 += N1 >>> 16),
                  (q1 += I1 & 65535),
                  (J1 += I1 >>> 16),
                  (z1 += H1 >>> 16),
                  (q1 += z1 >>> 16),
                  (J1 += q1 >>> 16),
                  (Ge = (q1 & 65535) | (J1 << 16)),
                  (Ne = (H1 & 65535) | (z1 << 16)),
                  (I1 = Me),
                  (N1 = tt),
                  (H1 = N1 & 65535),
                  (z1 = N1 >>> 16),
                  (q1 = I1 & 65535),
                  (J1 = I1 >>> 16),
                  (I1 = fe),
                  (N1 = we),
                  (H1 += N1 & 65535),
                  (z1 += N1 >>> 16),
                  (q1 += I1 & 65535),
                  (J1 += I1 >>> 16),
                  (z1 += H1 >>> 16),
                  (q1 += z1 >>> 16),
                  (J1 += q1 >>> 16),
                  (Me = (q1 & 65535) | (J1 << 16)),
                  (tt = (H1 & 65535) | (z1 << 16)),
                  (Je = T1),
                  (ot = W1),
                  (rt = X1),
                  (p1 = Me),
                  (ft = de),
                  (Et = St),
                  ($e = ye),
                  (De = Ge),
                  (mt = Xe),
                  (ht = at),
                  (qt = ut),
                  (be = tt),
                  (Pt = Ce),
                  (Mt = nt),
                  (Kt = ve),
                  (lt = Ne),
                  Te % 16 === 15)
                )
                  for (le = 0; le < 16; le++)
                    (I1 = n1[le]),
                      (N1 = _1[le]),
                      (H1 = N1 & 65535),
                      (z1 = N1 >>> 16),
                      (q1 = I1 & 65535),
                      (J1 = I1 >>> 16),
                      (I1 = n1[(le + 9) % 16]),
                      (N1 = _1[(le + 9) % 16]),
                      (H1 += N1 & 65535),
                      (z1 += N1 >>> 16),
                      (q1 += I1 & 65535),
                      (J1 += I1 >>> 16),
                      (fe = n1[(le + 1) % 16]),
                      (we = _1[(le + 1) % 16]),
                      (I1 =
                        ((fe >>> 1) | (we << 31)) ^
                        ((fe >>> 8) | (we << 24)) ^
                        (fe >>> 7)),
                      (N1 =
                        ((we >>> 1) | (fe << 31)) ^
                        ((we >>> 8) | (fe << 24)) ^
                        ((we >>> 7) | (fe << 25))),
                      (H1 += N1 & 65535),
                      (z1 += N1 >>> 16),
                      (q1 += I1 & 65535),
                      (J1 += I1 >>> 16),
                      (fe = n1[(le + 14) % 16]),
                      (we = _1[(le + 14) % 16]),
                      (I1 =
                        ((fe >>> 19) | (we << 13)) ^
                        ((we >>> 29) | (fe << 3)) ^
                        (fe >>> 6)),
                      (N1 =
                        ((we >>> 19) | (fe << 13)) ^
                        ((fe >>> 29) | (we << 3)) ^
                        ((we >>> 6) | (fe << 26))),
                      (H1 += N1 & 65535),
                      (z1 += N1 >>> 16),
                      (q1 += I1 & 65535),
                      (J1 += I1 >>> 16),
                      (z1 += H1 >>> 16),
                      (q1 += z1 >>> 16),
                      (J1 += q1 >>> 16),
                      (n1[le] = (q1 & 65535) | (J1 << 16)),
                      (_1[le] = (H1 & 65535) | (z1 << 16));
              (I1 = De),
                (N1 = lt),
                (H1 = N1 & 65535),
                (z1 = N1 >>> 16),
                (q1 = I1 & 65535),
                (J1 = I1 >>> 16),
                (I1 = V[0]),
                (N1 = X[0]),
                (H1 += N1 & 65535),
                (z1 += N1 >>> 16),
                (q1 += I1 & 65535),
                (J1 += I1 >>> 16),
                (z1 += H1 >>> 16),
                (q1 += z1 >>> 16),
                (J1 += q1 >>> 16),
                (V[0] = De = (q1 & 65535) | (J1 << 16)),
                (X[0] = lt = (H1 & 65535) | (z1 << 16)),
                (I1 = Je),
                (N1 = mt),
                (H1 = N1 & 65535),
                (z1 = N1 >>> 16),
                (q1 = I1 & 65535),
                (J1 = I1 >>> 16),
                (I1 = V[1]),
                (N1 = X[1]),
                (H1 += N1 & 65535),
                (z1 += N1 >>> 16),
                (q1 += I1 & 65535),
                (J1 += I1 >>> 16),
                (z1 += H1 >>> 16),
                (q1 += z1 >>> 16),
                (J1 += q1 >>> 16),
                (V[1] = Je = (q1 & 65535) | (J1 << 16)),
                (X[1] = mt = (H1 & 65535) | (z1 << 16)),
                (I1 = ot),
                (N1 = ht),
                (H1 = N1 & 65535),
                (z1 = N1 >>> 16),
                (q1 = I1 & 65535),
                (J1 = I1 >>> 16),
                (I1 = V[2]),
                (N1 = X[2]),
                (H1 += N1 & 65535),
                (z1 += N1 >>> 16),
                (q1 += I1 & 65535),
                (J1 += I1 >>> 16),
                (z1 += H1 >>> 16),
                (q1 += z1 >>> 16),
                (J1 += q1 >>> 16),
                (V[2] = ot = (q1 & 65535) | (J1 << 16)),
                (X[2] = ht = (H1 & 65535) | (z1 << 16)),
                (I1 = rt),
                (N1 = qt),
                (H1 = N1 & 65535),
                (z1 = N1 >>> 16),
                (q1 = I1 & 65535),
                (J1 = I1 >>> 16),
                (I1 = V[3]),
                (N1 = X[3]),
                (H1 += N1 & 65535),
                (z1 += N1 >>> 16),
                (q1 += I1 & 65535),
                (J1 += I1 >>> 16),
                (z1 += H1 >>> 16),
                (q1 += z1 >>> 16),
                (J1 += q1 >>> 16),
                (V[3] = rt = (q1 & 65535) | (J1 << 16)),
                (X[3] = qt = (H1 & 65535) | (z1 << 16)),
                (I1 = p1),
                (N1 = be),
                (H1 = N1 & 65535),
                (z1 = N1 >>> 16),
                (q1 = I1 & 65535),
                (J1 = I1 >>> 16),
                (I1 = V[4]),
                (N1 = X[4]),
                (H1 += N1 & 65535),
                (z1 += N1 >>> 16),
                (q1 += I1 & 65535),
                (J1 += I1 >>> 16),
                (z1 += H1 >>> 16),
                (q1 += z1 >>> 16),
                (J1 += q1 >>> 16),
                (V[4] = p1 = (q1 & 65535) | (J1 << 16)),
                (X[4] = be = (H1 & 65535) | (z1 << 16)),
                (I1 = ft),
                (N1 = Pt),
                (H1 = N1 & 65535),
                (z1 = N1 >>> 16),
                (q1 = I1 & 65535),
                (J1 = I1 >>> 16),
                (I1 = V[5]),
                (N1 = X[5]),
                (H1 += N1 & 65535),
                (z1 += N1 >>> 16),
                (q1 += I1 & 65535),
                (J1 += I1 >>> 16),
                (z1 += H1 >>> 16),
                (q1 += z1 >>> 16),
                (J1 += q1 >>> 16),
                (V[5] = ft = (q1 & 65535) | (J1 << 16)),
                (X[5] = Pt = (H1 & 65535) | (z1 << 16)),
                (I1 = Et),
                (N1 = Mt),
                (H1 = N1 & 65535),
                (z1 = N1 >>> 16),
                (q1 = I1 & 65535),
                (J1 = I1 >>> 16),
                (I1 = V[6]),
                (N1 = X[6]),
                (H1 += N1 & 65535),
                (z1 += N1 >>> 16),
                (q1 += I1 & 65535),
                (J1 += I1 >>> 16),
                (z1 += H1 >>> 16),
                (q1 += z1 >>> 16),
                (J1 += q1 >>> 16),
                (V[6] = Et = (q1 & 65535) | (J1 << 16)),
                (X[6] = Mt = (H1 & 65535) | (z1 << 16)),
                (I1 = $e),
                (N1 = Kt),
                (H1 = N1 & 65535),
                (z1 = N1 >>> 16),
                (q1 = I1 & 65535),
                (J1 = I1 >>> 16),
                (I1 = V[7]),
                (N1 = X[7]),
                (H1 += N1 & 65535),
                (z1 += N1 >>> 16),
                (q1 += I1 & 65535),
                (J1 += I1 >>> 16),
                (z1 += H1 >>> 16),
                (q1 += z1 >>> 16),
                (J1 += q1 >>> 16),
                (V[7] = $e = (q1 & 65535) | (J1 << 16)),
                (X[7] = Kt = (H1 & 65535) | (z1 << 16)),
                (an += 128),
                (A -= 128);
            }
            return A;
          }
          function gt(V, X, Q) {
            var A = new Int32Array(8),
              n1 = new Int32Array(8),
              _1 = new Uint8Array(256),
              T1,
              W1 = Q;
            for (
              A[0] = 1779033703,
                A[1] = 3144134277,
                A[2] = 1013904242,
                A[3] = 2773480762,
                A[4] = 1359893119,
                A[5] = 2600822924,
                A[6] = 528734635,
                A[7] = 1541459225,
                n1[0] = 4089235720,
                n1[1] = 2227873595,
                n1[2] = 4271175723,
                n1[3] = 1595750129,
                n1[4] = 2917565137,
                n1[5] = 725511199,
                n1[6] = 4215389547,
                n1[7] = 327033209,
                ce(A, n1, X, Q),
                Q %= 128,
                T1 = 0;
              T1 < Q;
              T1++
            )
              _1[T1] = X[W1 - Q + T1];
            for (
              _1[Q] = 128,
                Q = 256 - 128 * (Q < 112 ? 1 : 0),
                _1[Q - 9] = 0,
                w(_1, Q - 8, (W1 / 536870912) | 0, W1 << 3),
                ce(A, n1, _1, Q),
                T1 = 0;
              T1 < 8;
              T1++
            )
              w(V, 8 * T1, A[T1], n1[T1]);
            return 0;
          }
          function qe(V, X) {
            var Q = n(),
              A = n(),
              n1 = n(),
              _1 = n(),
              T1 = n(),
              W1 = n(),
              X1 = n(),
              Me = n(),
              de = n();
            G1(Q, V[1], V[0]),
              G1(de, X[1], X[0]),
              M1(Q, Q, de),
              Y1(A, V[0], V[1]),
              Y1(de, X[0], X[1]),
              M1(A, A, de),
              M1(n1, V[3], X[3]),
              M1(n1, n1, d),
              M1(_1, V[2], X[2]),
              Y1(_1, _1, _1),
              G1(T1, A, Q),
              G1(W1, _1, n1),
              Y1(X1, _1, n1),
              Y1(Me, A, Q),
              M1(V[0], T1, W1),
              M1(V[1], Me, X1),
              M1(V[2], X1, W1),
              M1(V[3], T1, Me);
          }
          function je(V, X, Q) {
            var A;
            for (A = 0; A < 4; A++) i1(V[A], X[A], Q);
          }
          function g1(V, X) {
            var Q = n(),
              A = n(),
              n1 = n();
            re(n1, X[2]),
              M1(Q, X[0], n1),
              M1(A, X[1], n1),
              Z(V, A),
              (V[31] ^= o1(Q) << 7);
          }
          function E1(V, X, Q) {
            var A, n1;
            for (
              u1(V[0], o), u1(V[1], l), u1(V[2], l), u1(V[3], o), n1 = 255;
              n1 >= 0;
              --n1
            )
              (A = (Q[(n1 / 8) | 0] >> (n1 & 7)) & 1),
                je(V, X, A),
                qe(X, V),
                qe(V, V),
                je(V, X, A);
          }
          function j1(V, X) {
            var Q = [n(), n(), n(), n()];
            u1(Q[0], p), u1(Q[1], m), u1(Q[2], l), M1(Q[3], p, m), E1(V, Q, X);
          }
          function a1(V, X, Q) {
            var A = new Uint8Array(64),
              n1 = [n(), n(), n(), n()],
              _1;
            for (
              Q || r(X, 32),
                gt(A, X, 32),
                A[0] &= 248,
                A[31] &= 127,
                A[31] |= 64,
                j1(n1, A),
                g1(V, n1),
                _1 = 0;
              _1 < 32;
              _1++
            )
              X[_1 + 32] = V[_1];
            return 0;
          }
          var K = new Float64Array([
            237, 211, 245, 92, 26, 99, 18, 88, 214, 156, 247, 162, 222, 249,
            222, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16,
          ]);
          function t1(V, X) {
            var Q, A, n1, _1;
            for (A = 63; A >= 32; --A) {
              for (Q = 0, n1 = A - 32, _1 = A - 12; n1 < _1; ++n1)
                (X[n1] += Q - 16 * X[A] * K[n1 - (A - 32)]),
                  (Q = Math.floor((X[n1] + 128) / 256)),
                  (X[n1] -= Q * 256);
              (X[n1] += Q), (X[A] = 0);
            }
            for (Q = 0, n1 = 0; n1 < 32; n1++)
              (X[n1] += Q - (X[31] >> 4) * K[n1]),
                (Q = X[n1] >> 8),
                (X[n1] &= 255);
            for (n1 = 0; n1 < 32; n1++) X[n1] -= Q * K[n1];
            for (A = 0; A < 32; A++)
              (X[A + 1] += X[A] >> 8), (V[A] = X[A] & 255);
          }
          function r1(V) {
            var X = new Float64Array(64),
              Q;
            for (Q = 0; Q < 64; Q++) X[Q] = V[Q];
            for (Q = 0; Q < 64; Q++) V[Q] = 0;
            t1(V, X);
          }
          function m1(V, X, Q, A) {
            var n1 = new Uint8Array(64),
              _1 = new Uint8Array(64),
              T1 = new Uint8Array(64),
              W1,
              X1,
              Me = new Float64Array(64),
              de = [n(), n(), n(), n()];
            gt(n1, A, 32), (n1[0] &= 248), (n1[31] &= 127), (n1[31] |= 64);
            var St = Q + 64;
            for (W1 = 0; W1 < Q; W1++) V[64 + W1] = X[W1];
            for (W1 = 0; W1 < 32; W1++) V[32 + W1] = n1[32 + W1];
            for (
              gt(T1, V.subarray(32), Q + 32),
                r1(T1),
                j1(de, T1),
                g1(V, de),
                W1 = 32;
              W1 < 64;
              W1++
            )
              V[W1] = A[W1];
            for (gt(_1, V, Q + 64), r1(_1), W1 = 0; W1 < 64; W1++) Me[W1] = 0;
            for (W1 = 0; W1 < 32; W1++) Me[W1] = T1[W1];
            for (W1 = 0; W1 < 32; W1++)
              for (X1 = 0; X1 < 32; X1++) Me[W1 + X1] += _1[W1] * n1[X1];
            return t1(V.subarray(32), Me), St;
          }
          function R(V, X) {
            var Q = n(),
              A = n(),
              n1 = n(),
              _1 = n(),
              T1 = n(),
              W1 = n(),
              X1 = n();
            return (
              u1(V[2], l),
              k1(V[1], X),
              Q1(n1, V[1]),
              M1(_1, n1, f),
              G1(n1, n1, V[2]),
              Y1(_1, V[2], _1),
              Q1(T1, _1),
              Q1(W1, T1),
              M1(X1, W1, T1),
              M1(Q, X1, n1),
              M1(Q, Q, _1),
              d1(Q, Q),
              M1(Q, Q, n1),
              M1(Q, Q, _1),
              M1(Q, Q, _1),
              M1(V[0], Q, _1),
              Q1(A, V[0]),
              M1(A, A, _1),
              b1(A, n1) && M1(V[0], V[0], g),
              Q1(A, V[0]),
              M1(A, A, _1),
              b1(A, n1)
                ? -1
                : (o1(V[0]) === X[31] >> 7 && G1(V[0], o, V[0]),
                  M1(V[3], V[0], V[1]),
                  0)
            );
          }
          function C(V, X, Q, A) {
            var n1,
              _1 = new Uint8Array(32),
              T1 = new Uint8Array(64),
              W1 = [n(), n(), n(), n()],
              X1 = [n(), n(), n(), n()];
            if (Q < 64 || R(X1, A)) return -1;
            for (n1 = 0; n1 < Q; n1++) V[n1] = X[n1];
            for (n1 = 0; n1 < 32; n1++) V[n1 + 32] = A[n1];
            if (
              (gt(T1, V, Q),
              r1(T1),
              E1(W1, X1, T1),
              j1(X1, X.subarray(32)),
              qe(W1, X1),
              g1(_1, W1),
              (Q -= 64),
              E(X, 0, _1, 0))
            ) {
              for (n1 = 0; n1 < Q; n1++) V[n1] = 0;
              return -1;
            }
            for (n1 = 0; n1 < Q; n1++) V[n1] = X[n1 + 64];
            return Q;
          }
          var k = 32,
            q = 24,
            s1 = 32,
            v1 = 16,
            w1 = 32,
            $1 = 32,
            he = 32,
            U1 = 32,
            Le = 32,
            pe = q,
            bt = s1,
            It = v1,
            en = 64,
            At = 32,
            hn = 64,
            si = 32,
            Ht = 64;
          t.lowlevel = {
            crypto_core_hsalsa20: M,
            crypto_stream_xor: H,
            crypto_stream: D,
            crypto_stream_salsa20_xor: O,
            crypto_stream_salsa20: U,
            crypto_onetimeauth: F,
            crypto_onetimeauth_verify: B,
            crypto_verify_16: x,
            crypto_verify_32: E,
            crypto_secretbox: j,
            crypto_secretbox_open: G,
            crypto_scalarmult: h1,
            crypto_scalarmult_base: y1,
            crypto_box_beforenm: L1,
            crypto_box_afternm: V1,
            crypto_box: ae,
            crypto_box_open: Be,
            crypto_box_keypair: A1,
            crypto_hash: gt,
            crypto_sign: m1,
            crypto_sign_keypair: a1,
            crypto_sign_open: C,
            crypto_secretbox_KEYBYTES: k,
            crypto_secretbox_NONCEBYTES: q,
            crypto_secretbox_ZEROBYTES: s1,
            crypto_secretbox_BOXZEROBYTES: v1,
            crypto_scalarmult_BYTES: w1,
            crypto_scalarmult_SCALARBYTES: $1,
            crypto_box_PUBLICKEYBYTES: he,
            crypto_box_SECRETKEYBYTES: U1,
            crypto_box_BEFORENMBYTES: Le,
            crypto_box_NONCEBYTES: pe,
            crypto_box_ZEROBYTES: bt,
            crypto_box_BOXZEROBYTES: It,
            crypto_sign_BYTES: en,
            crypto_sign_PUBLICKEYBYTES: At,
            crypto_sign_SECRETKEYBYTES: hn,
            crypto_sign_SEEDBYTES: si,
            crypto_hash_BYTES: Ht,
            gf: n,
            D: f,
            L: K,
            pack25519: Z,
            unpack25519: k1,
            M: M1,
            A: Y1,
            S: Q1,
            Z: G1,
            pow2523: d1,
            add: qe,
            set25519: u1,
            modL: t1,
            scalarmult: E1,
            scalarbase: j1,
          };
          function Lr(V, X) {
            if (V.length !== k) throw new Error("bad key size");
            if (X.length !== q) throw new Error("bad nonce size");
          }
          function xr(V, X) {
            if (V.length !== he) throw new Error("bad public key size");
            if (X.length !== U1) throw new Error("bad secret key size");
          }
          function on() {
            for (var V = 0; V < arguments.length; V++)
              if (!(arguments[V] instanceof Uint8Array))
                throw new TypeError("unexpected type, use Uint8Array");
          }
          function oi(V) {
            for (var X = 0; X < V.length; X++) V[X] = 0;
          }
          (t.randomBytes = function (V) {
            var X = new Uint8Array(V);
            return r(X, V), X;
          }),
            (t.secretbox = function (V, X, Q) {
              on(V, X, Q), Lr(Q, X);
              for (
                var A = new Uint8Array(s1 + V.length),
                  n1 = new Uint8Array(A.length),
                  _1 = 0;
                _1 < V.length;
                _1++
              )
                A[_1 + s1] = V[_1];
              return j(n1, A, A.length, X, Q), n1.subarray(v1);
            }),
            (t.secretbox.open = function (V, X, Q) {
              on(V, X, Q), Lr(Q, X);
              for (
                var A = new Uint8Array(v1 + V.length),
                  n1 = new Uint8Array(A.length),
                  _1 = 0;
                _1 < V.length;
                _1++
              )
                A[_1 + v1] = V[_1];
              return A.length < 32 || G(n1, A, A.length, X, Q) !== 0
                ? null
                : n1.subarray(s1);
            }),
            (t.secretbox.keyLength = k),
            (t.secretbox.nonceLength = q),
            (t.secretbox.overheadLength = v1),
            (t.scalarMult = function (V, X) {
              if ((on(V, X), V.length !== $1)) throw new Error("bad n size");
              if (X.length !== w1) throw new Error("bad p size");
              var Q = new Uint8Array(w1);
              return h1(Q, V, X), Q;
            }),
            (t.scalarMult.base = function (V) {
              if ((on(V), V.length !== $1)) throw new Error("bad n size");
              var X = new Uint8Array(w1);
              return y1(X, V), X;
            }),
            (t.scalarMult.scalarLength = $1),
            (t.scalarMult.groupElementLength = w1),
            (t.box = function (V, X, Q, A) {
              var n1 = t.box.before(Q, A);
              return t.secretbox(V, X, n1);
            }),
            (t.box.before = function (V, X) {
              on(V, X), xr(V, X);
              var Q = new Uint8Array(Le);
              return L1(Q, V, X), Q;
            }),
            (t.box.after = t.secretbox),
            (t.box.open = function (V, X, Q, A) {
              var n1 = t.box.before(Q, A);
              return t.secretbox.open(V, X, n1);
            }),
            (t.box.open.after = t.secretbox.open),
            (t.box.keyPair = function () {
              var V = new Uint8Array(he),
                X = new Uint8Array(U1);
              return A1(V, X), { publicKey: V, secretKey: X };
            }),
            (t.box.keyPair.fromSecretKey = function (V) {
              if ((on(V), V.length !== U1))
                throw new Error("bad secret key size");
              var X = new Uint8Array(he);
              return y1(X, V), { publicKey: X, secretKey: new Uint8Array(V) };
            }),
            (t.box.publicKeyLength = he),
            (t.box.secretKeyLength = U1),
            (t.box.sharedKeyLength = Le),
            (t.box.nonceLength = pe),
            (t.box.overheadLength = t.secretbox.overheadLength),
            (t.sign = function (V, X) {
              if ((on(V, X), X.length !== hn))
                throw new Error("bad secret key size");
              var Q = new Uint8Array(en + V.length);
              return m1(Q, V, V.length, X), Q;
            }),
            (t.sign.open = function (V, X) {
              if ((on(V, X), X.length !== At))
                throw new Error("bad public key size");
              var Q = new Uint8Array(V.length),
                A = C(Q, V, V.length, X);
              if (A < 0) return null;
              for (var n1 = new Uint8Array(A), _1 = 0; _1 < n1.length; _1++)
                n1[_1] = Q[_1];
              return n1;
            }),
            (t.sign.detached = function (V, X) {
              for (
                var Q = t.sign(V, X), A = new Uint8Array(en), n1 = 0;
                n1 < A.length;
                n1++
              )
                A[n1] = Q[n1];
              return A;
            }),
            (t.sign.detached.verify = function (V, X, Q) {
              if ((on(V, X, Q), X.length !== en))
                throw new Error("bad signature size");
              if (Q.length !== At) throw new Error("bad public key size");
              var A = new Uint8Array(en + V.length),
                n1 = new Uint8Array(en + V.length),
                _1;
              for (_1 = 0; _1 < en; _1++) A[_1] = X[_1];
              for (_1 = 0; _1 < V.length; _1++) A[_1 + en] = V[_1];
              return C(n1, A, A.length, Q) >= 0;
            }),
            (t.sign.keyPair = function () {
              var V = new Uint8Array(At),
                X = new Uint8Array(hn);
              return a1(V, X), { publicKey: V, secretKey: X };
            }),
            (t.sign.keyPair.fromSecretKey = function (V) {
              if ((on(V), V.length !== hn))
                throw new Error("bad secret key size");
              for (var X = new Uint8Array(At), Q = 0; Q < X.length; Q++)
                X[Q] = V[32 + Q];
              return { publicKey: X, secretKey: new Uint8Array(V) };
            }),
            (t.sign.keyPair.fromSeed = function (V) {
              if ((on(V), V.length !== si)) throw new Error("bad seed size");
              for (
                var X = new Uint8Array(At), Q = new Uint8Array(hn), A = 0;
                A < 32;
                A++
              )
                Q[A] = V[A];
              return a1(X, Q, !0), { publicKey: X, secretKey: Q };
            }),
            (t.sign.publicKeyLength = At),
            (t.sign.secretKeyLength = hn),
            (t.sign.seedLength = si),
            (t.sign.signatureLength = en),
            (t.hash = function (V) {
              on(V);
              var X = new Uint8Array(Ht);
              return gt(X, V, V.length), X;
            }),
            (t.hash.hashLength = Ht),
            (t.verify = function (V, X) {
              return (
                on(V, X),
                V.length === 0 || X.length === 0 || V.length !== X.length
                  ? !1
                  : b(V, 0, X, 0, V.length) === 0
              );
            }),
            (t.setPRNG = function (V) {
              r = V;
            }),
            (function () {
              var V = typeof self < "u" ? self.crypto || self.msCrypto : null;
              if (V && V.getRandomValues) {
                var X = 65536;
                t.setPRNG(function (Q, A) {
                  var n1,
                    _1 = new Uint8Array(A);
                  for (n1 = 0; n1 < A; n1 += X)
                    V.getRandomValues(
                      _1.subarray(n1, n1 + Math.min(A - n1, X))
                    );
                  for (n1 = 0; n1 < A; n1++) Q[n1] = _1[n1];
                  oi(_1);
                });
              } else
                typeof QR < "u" &&
                  ((V = JR),
                  V &&
                    V.randomBytes &&
                    t.setPRNG(function (Q, A) {
                      var n1,
                        _1 = V.randomBytes(A);
                      for (n1 = 0; n1 < A; n1++) Q[n1] = _1[n1];
                      oi(_1);
                    }));
            })();
        })(e.exports ? e.exports : (self.nacl = self.nacl || {}));
      })(i9)),
    i9.exports
  );
}
var eL = q6();
const Lc = qs(eL);
var Ms;
(function (e) {
  (e[(e.UNKNOWN_ERROR = 0)] = "UNKNOWN_ERROR"),
    (e[(e.BAD_REQUEST_ERROR = 1)] = "BAD_REQUEST_ERROR"),
    (e[(e.MANIFEST_NOT_FOUND_ERROR = 2)] = "MANIFEST_NOT_FOUND_ERROR"),
    (e[(e.MANIFEST_CONTENT_ERROR = 3)] = "MANIFEST_CONTENT_ERROR"),
    (e[(e.UNKNOWN_APP_ERROR = 100)] = "UNKNOWN_APP_ERROR"),
    (e[(e.USER_REJECTS_ERROR = 300)] = "USER_REJECTS_ERROR"),
    (e[(e.METHOD_NOT_SUPPORTED = 400)] = "METHOD_NOT_SUPPORTED");
})(Ms || (Ms = {}));
var V8;
(function (e) {
  (e[(e.UNKNOWN_ERROR = 0)] = "UNKNOWN_ERROR"),
    (e[(e.METHOD_NOT_SUPPORTED = 400)] = "METHOD_NOT_SUPPORTED");
})(V8 || (V8 = {}));
var Xa;
(function (e) {
  (e[(e.UNKNOWN_ERROR = 0)] = "UNKNOWN_ERROR"),
    (e[(e.BAD_REQUEST_ERROR = 1)] = "BAD_REQUEST_ERROR"),
    (e[(e.UNKNOWN_APP_ERROR = 100)] = "UNKNOWN_APP_ERROR"),
    (e[(e.USER_REJECTS_ERROR = 300)] = "USER_REJECTS_ERROR"),
    (e[(e.METHOD_NOT_SUPPORTED = 400)] = "METHOD_NOT_SUPPORTED");
})(Xa || (Xa = {}));
var W8;
(function (e) {
  (e[(e.UNKNOWN_ERROR = 0)] = "UNKNOWN_ERROR"),
    (e[(e.BAD_REQUEST_ERROR = 1)] = "BAD_REQUEST_ERROR"),
    (e[(e.UNKNOWN_APP_ERROR = 100)] = "UNKNOWN_APP_ERROR"),
    (e[(e.USER_REJECTS_ERROR = 300)] = "USER_REJECTS_ERROR"),
    (e[(e.METHOD_NOT_SUPPORTED = 400)] = "METHOD_NOT_SUPPORTED");
})(W8 || (W8 = {}));
var z8;
(function (e) {
  (e[(e.UNKNOWN_ERROR = 0)] = "UNKNOWN_ERROR"),
    (e[(e.BAD_REQUEST_ERROR = 1)] = "BAD_REQUEST_ERROR"),
    (e[(e.UNKNOWN_APP_ERROR = 100)] = "UNKNOWN_APP_ERROR"),
    (e[(e.METHOD_NOT_SUPPORTED = 400)] = "METHOD_NOT_SUPPORTED");
})(z8 || (z8 = {}));
var Rl;
(function (e) {
  (e.MAINNET = "-239"), (e.TESTNET = "-3");
})(Rl || (Rl = {}));
function tL(e, t) {
  const n = Ml.encodeBase64(e);
  return t ? encodeURIComponent(n) : n;
}
function nL(e, t) {
  return t && (e = decodeURIComponent(e)), Ml.decodeBase64(e);
}
function rL(e, t = !1) {
  let n;
  return (
    e instanceof Uint8Array
      ? (n = e)
      : (typeof e != "string" && (e = JSON.stringify(e)),
        (n = Ml.decodeUTF8(e))),
    tL(n, t)
  );
}
function iL(e, t = !1) {
  const n = nL(e, t);
  return {
    toString() {
      return Ml.encodeUTF8(n);
    },
    toObject() {
      try {
        return JSON.parse(Ml.encodeUTF8(n));
      } catch {
        return null;
      }
    },
    toUint8Array() {
      return n;
    },
  };
}
const K6 = { encode: rL, decode: iL };
function sL(e, t) {
  const n = new Uint8Array(e.length + t.length);
  return n.set(e), n.set(t, e.length), n;
}
function oL(e, t) {
  if (t >= e.length) throw new Error("Index is out of buffer");
  const n = e.slice(0, t),
    r = e.slice(t);
  return [n, r];
}
function s9(e) {
  let t = "";
  return (
    e.forEach((n) => {
      t += ("0" + (n & 255).toString(16)).slice(-2);
    }),
    t
  );
}
function Md(e) {
  if (e.length % 2 !== 0) throw new Error(`Cannot convert ${e} to bytesArray`);
  const t = new Uint8Array(e.length / 2);
  for (let n = 0; n < e.length; n += 2)
    t[n / 2] = parseInt(e.slice(n, n + 2), 16);
  return t;
}
class T5 {
  constructor(t) {
    (this.nonceLength = 24),
      (this.keyPair = t
        ? this.createKeypairFromString(t)
        : this.createKeypair()),
      (this.sessionId = s9(this.keyPair.publicKey));
  }
  createKeypair() {
    return Lc.box.keyPair();
  }
  createKeypairFromString(t) {
    return { publicKey: Md(t.publicKey), secretKey: Md(t.secretKey) };
  }
  createNonce() {
    return Lc.randomBytes(this.nonceLength);
  }
  encrypt(t, n) {
    const r = new TextEncoder().encode(t),
      i = this.createNonce(),
      s = Lc.box(r, i, n, this.keyPair.secretKey);
    return sL(i, s);
  }
  decrypt(t, n) {
    const [r, i] = oL(t, this.nonceLength),
      s = Lc.box.open(i, r, n, this.keyPair.secretKey);
    if (!s)
      throw new Error(`Decryption error: 
 message: ${t.toString()} 
 sender pubkey: ${n.toString()} 
 keypair pubkey: ${this.keyPair.publicKey.toString()} 
 keypair secretkey: ${this.keyPair.secretKey.toString()}`);
    return new TextDecoder().decode(s);
  }
  stringifyKeypair() {
    return {
      publicKey: s9(this.keyPair.publicKey),
      secretKey: s9(this.keyPair.secretKey),
    };
  }
}
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ function aL(
  e,
  t
) {
  var n = {};
  for (var r in e)
    Object.prototype.hasOwnProperty.call(e, r) &&
      t.indexOf(r) < 0 &&
      (n[r] = e[r]);
  if (e != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(e); i < r.length; i++)
      t.indexOf(r[i]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
        (n[r[i]] = e[r[i]]);
  return n;
}
function Ae(e, t, n, r) {
  function i(s) {
    return s instanceof n
      ? s
      : new n(function (o) {
          o(s);
        });
  }
  return new (n || (n = Promise))(function (s, o) {
    function l(d) {
      try {
        f(r.next(d));
      } catch (p) {
        o(p);
      }
    }
    function c(d) {
      try {
        f(r.throw(d));
      } catch (p) {
        o(p);
      }
    }
    function f(d) {
      d.done ? s(d.value) : i(d.value).then(l, c);
    }
    f((r = r.apply(e, [])).next());
  });
}
class ze extends Error {
  constructor(t, n) {
    super(t, n),
      (this.message = `${ze.prefix} ${this.constructor.name}${
        this.info ? ": " + this.info : ""
      }${
        t
          ? `
` + t
          : ""
      }`),
      Object.setPrototypeOf(this, ze.prototype);
  }
  get info() {
    return "";
  }
}
ze.prefix = "[TON_CONNECT_SDK_ERROR]";
class G6 extends ze {
  get info() {
    return "Passed DappMetadata is in incorrect format.";
  }
  constructor(...t) {
    super(...t), Object.setPrototypeOf(this, G6.prototype);
  }
}
class b4 extends ze {
  get info() {
    return "Passed `tonconnect-manifest.json` contains errors. Check format of your manifest. See more https://github.com/ton-connect/docs/blob/main/requests-responses.md#app-manifest";
  }
  constructor(...t) {
    super(...t), Object.setPrototypeOf(this, b4.prototype);
  }
}
class x4 extends ze {
  get info() {
    return "Manifest not found. Make sure you added `tonconnect-manifest.json` to the root of your app or passed correct manifestUrl. See more https://github.com/ton-connect/docs/blob/main/requests-responses.md#app-manifest";
  }
  constructor(...t) {
    super(...t), Object.setPrototypeOf(this, x4.prototype);
  }
}
class Y6 extends ze {
  get info() {
    return "Wallet connection called but wallet already connected. To avoid the error, disconnect the wallet before doing a new connection.";
  }
  constructor(...t) {
    super(...t), Object.setPrototypeOf(this, Y6.prototype);
  }
}
class Rd extends ze {
  get info() {
    return "Send transaction or other protocol methods called while wallet is not connected.";
  }
  constructor(...t) {
    super(...t), Object.setPrototypeOf(this, Rd.prototype);
  }
}
function lL(e) {
  return "jsBridgeKey" in e;
}
class C4 extends ze {
  get info() {
    return "User rejects the action in the wallet.";
  }
  constructor(...t) {
    super(...t), Object.setPrototypeOf(this, C4.prototype);
  }
}
class S4 extends ze {
  get info() {
    return "Request to the wallet contains errors.";
  }
  constructor(...t) {
    super(...t), Object.setPrototypeOf(this, S4.prototype);
  }
}
class E4 extends ze {
  get info() {
    return "App tries to send rpc request to the injected wallet while not connected.";
  }
  constructor(...t) {
    super(...t), Object.setPrototypeOf(this, E4.prototype);
  }
}
class Q6 extends ze {
  get info() {
    return "There is an attempt to connect to the injected wallet while it is not exists in the webpage.";
  }
  constructor(...t) {
    super(...t), Object.setPrototypeOf(this, Q6.prototype);
  }
}
class Z6 extends ze {
  get info() {
    return "An error occurred while fetching the wallets list.";
  }
  constructor(...t) {
    super(...t), Object.setPrototypeOf(this, Z6.prototype);
  }
}
class Ja extends ze {
  get info() {
    return "Passed address is in incorrect format.";
  }
  constructor(...t) {
    super(...t), Object.setPrototypeOf(this, Ja.prototype);
  }
}
class Ld extends ze {
  get info() {
    return "Passed hex is in incorrect format.";
  }
  constructor(...t) {
    super(...t), Object.setPrototypeOf(this, Ld.prototype);
  }
}
class Ds extends ze {
  constructor(...t) {
    super(...t), Object.setPrototypeOf(this, Ds.prototype);
  }
}
const H8 = {
  [Ms.UNKNOWN_ERROR]: Ds,
  [Ms.USER_REJECTS_ERROR]: C4,
  [Ms.BAD_REQUEST_ERROR]: S4,
  [Ms.UNKNOWN_APP_ERROR]: E4,
  [Ms.MANIFEST_NOT_FOUND_ERROR]: x4,
  [Ms.MANIFEST_CONTENT_ERROR]: b4,
};
class uL {
  parseError(t) {
    let n = Ds;
    return t.code in H8 && (n = H8[t.code] || Ds), new n(t.message);
  }
}
const cL = new uL();
class dL {
  isError(t) {
    return "error" in t;
  }
}
const q8 = {
  [Xa.UNKNOWN_ERROR]: Ds,
  [Xa.USER_REJECTS_ERROR]: C4,
  [Xa.BAD_REQUEST_ERROR]: S4,
  [Xa.UNKNOWN_APP_ERROR]: E4,
};
class fL extends dL {
  convertToRpcRequest(t) {
    return { method: "sendTransaction", params: [JSON.stringify(t)] };
  }
  parseAndThrowError(t) {
    let n = Ds;
    throw (
      (t.error.code in q8 && (n = q8[t.error.code] || Ds),
      new n(t.error.message))
    );
  }
  convertFromRpcResponse(t) {
    return { boc: t.result };
  }
}
const Ic = new fL();
class hL {
  constructor(t, n) {
    (this.storage = t),
      (this.storeKey = "ton-connect-storage_http-bridge-gateway::" + n);
  }
  storeLastEventId(t) {
    return Ae(this, void 0, void 0, function* () {
      return this.storage.setItem(this.storeKey, t);
    });
  }
  removeLastEventId() {
    return Ae(this, void 0, void 0, function* () {
      return this.storage.removeItem(this.storeKey);
    });
  }
  getLastEventId() {
    return Ae(this, void 0, void 0, function* () {
      const t = yield this.storage.getItem(this.storeKey);
      return t || null;
    });
  }
}
function pL(e) {
  return e.slice(-1) === "/" ? e.slice(0, -1) : e;
}
function kC(e, t) {
  return pL(e) + "/" + t;
}
function js(e) {
  if (!e) return !1;
  const t = new URL(e);
  return t.protocol === "tg:" || t.hostname === "t.me";
}
function _C(e) {
  return e
    .replaceAll(".", "%2E")
    .replaceAll("-", "%2D")
    .replaceAll("_", "%5F")
    .replaceAll("&", "-")
    .replaceAll("=", "__")
    .replaceAll("%", "--");
}
function AC(e, t) {
  return Ae(this, void 0, void 0, function* () {
    return new Promise((n, r) => {
      var i, s;
      if (!((i = void 0) === null || i === void 0) && i.aborted) {
        r(new ze("Delay aborted"));
        return;
      }
      const o = setTimeout(() => n(), e);
      (s = void 0) === null ||
        s === void 0 ||
        s.addEventListener("abort", () => {
          clearTimeout(o), r(new ze("Delay aborted"));
        });
    });
  });
}
function Ni(e) {
  const t = new AbortController();
  return (
    e != null && e.aborted
      ? t.abort()
      : e == null || e.addEventListener("abort", () => t.abort(), { once: !0 }),
    t
  );
}
function fl(e, t) {
  var n, r;
  return Ae(this, void 0, void 0, function* () {
    const i =
        (n = t == null ? void 0 : t.attempts) !== null && n !== void 0 ? n : 10,
      s =
        (r = t == null ? void 0 : t.delayMs) !== null && r !== void 0 ? r : 200,
      o = Ni(t == null ? void 0 : t.signal);
    if (typeof e != "function")
      throw new ze(`Expected a function, got ${typeof e}`);
    let l = 0,
      c;
    for (; l < i; ) {
      if (o.signal.aborted) throw new ze(`Aborted after attempts ${l}`);
      try {
        return yield e({ signal: o.signal });
      } catch (f) {
        (c = f), l++, l < i && (yield AC(s));
      }
    }
    throw c;
  });
}
function On(...e) {
  try {
    console.debug("[TON_CONNECT_SDK]", ...e);
  } catch {}
}
function K2(...e) {
  try {
    console.error("[TON_CONNECT_SDK]", ...e);
  } catch {}
}
function mL(...e) {
  try {
    console.warn("[TON_CONNECT_SDK]", ...e);
  } catch {}
}
function gL(e, t) {
  let n = null,
    r = null,
    i = null,
    s = null,
    o = null;
  const l = (p, ...m) =>
    Ae(this, void 0, void 0, function* () {
      if (
        ((s = p ?? null), o == null || o.abort(), (o = Ni(p)), o.signal.aborted)
      )
        throw new ze("Resource creation was aborted");
      r = m ?? null;
      const g = e(o.signal, ...m);
      i = g;
      const w = yield g;
      if (i !== g && w !== n)
        throw (
          (yield t(w),
          new ze("Resource creation was aborted by a new resource creation"))
        );
      return (n = w), n;
    });
  return {
    create: l,
    current: () => n ?? null,
    dispose: () =>
      Ae(this, void 0, void 0, function* () {
        try {
          const p = n;
          n = null;
          const m = i;
          i = null;
          try {
            o == null || o.abort();
          } catch {}
          yield Promise.allSettled([
            p ? t(p) : Promise.resolve(),
            m ? t(yield m) : Promise.resolve(),
          ]);
        } catch {}
      }),
    recreate: (p) =>
      Ae(this, void 0, void 0, function* () {
        const m = n,
          g = i,
          w = r,
          b = s;
        if ((yield AC(p), m === n && g === i && w === r && b === s))
          return yield l(s, ...(w ?? []));
        throw new ze(
          "Resource recreation was aborted by a new resource creation"
        );
      }),
  };
}
function yL(e, t) {
  const n = t == null ? void 0 : t.timeout,
    r = t == null ? void 0 : t.signal,
    i = Ni(r);
  return new Promise((s, o) =>
    Ae(this, void 0, void 0, function* () {
      if (i.signal.aborted) {
        o(new ze("Operation aborted"));
        return;
      }
      let l;
      typeof n < "u" &&
        (l = setTimeout(() => {
          i.abort(), o(new ze(`Timeout after ${n}ms`));
        }, n)),
        i.signal.addEventListener(
          "abort",
          () => {
            clearTimeout(l), o(new ze("Operation aborted"));
          },
          { once: !0 }
        );
      const c = { timeout: n, abort: i.signal };
      yield e(
        (...f) => {
          clearTimeout(l), s(...f);
        },
        () => {
          clearTimeout(l), o();
        },
        c
      );
    })
  );
}
class o9 {
  constructor(t, n, r, i, s) {
    (this.bridgeUrl = n),
      (this.sessionId = r),
      (this.listener = i),
      (this.errorsListener = s),
      (this.ssePath = "events"),
      (this.postPath = "message"),
      (this.heartbeatMessage = "heartbeat"),
      (this.defaultTtl = 300),
      (this.defaultReconnectDelay = 2e3),
      (this.defaultResendDelay = 5e3),
      (this.eventSource = gL(
        (o, l) =>
          Ae(this, void 0, void 0, function* () {
            const c = {
              bridgeUrl: this.bridgeUrl,
              ssePath: this.ssePath,
              sessionId: this.sessionId,
              bridgeGatewayStorage: this.bridgeGatewayStorage,
              errorHandler: this.errorsHandler.bind(this),
              messageHandler: this.messagesHandler.bind(this),
              signal: o,
              openingDeadlineMS: l,
            };
            return yield vL(c);
          }),
        (o) =>
          Ae(this, void 0, void 0, function* () {
            o.close();
          })
      )),
      (this.bridgeGatewayStorage = new hL(t, n));
  }
  get isReady() {
    const t = this.eventSource.current();
    return (t == null ? void 0 : t.readyState) === EventSource.OPEN;
  }
  get isClosed() {
    const t = this.eventSource.current();
    return (t == null ? void 0 : t.readyState) !== EventSource.OPEN;
  }
  get isConnecting() {
    const t = this.eventSource.current();
    return (t == null ? void 0 : t.readyState) === EventSource.CONNECTING;
  }
  registerSession(t) {
    return Ae(this, void 0, void 0, function* () {
      yield this.eventSource.create(
        t == null ? void 0 : t.signal,
        t == null ? void 0 : t.openingDeadlineMS
      );
    });
  }
  send(t, n, r, i) {
    var s;
    return Ae(this, void 0, void 0, function* () {
      const o = {};
      typeof i == "number"
        ? (o.ttl = i)
        : ((o.ttl = i == null ? void 0 : i.ttl),
          (o.signal = i == null ? void 0 : i.signal),
          (o.attempts = i == null ? void 0 : i.attempts));
      const l = new URL(kC(this.bridgeUrl, this.postPath));
      l.searchParams.append("client_id", this.sessionId),
        l.searchParams.append("to", n),
        l.searchParams.append(
          "ttl",
          ((o == null ? void 0 : o.ttl) || this.defaultTtl).toString()
        ),
        l.searchParams.append("topic", r);
      const c = K6.encode(t);
      yield fl(
        (f) =>
          Ae(this, void 0, void 0, function* () {
            const d = yield this.post(l, c, f.signal);
            if (!d.ok) throw new ze(`Bridge send failed, status ${d.status}`);
          }),
        {
          attempts:
            (s = o == null ? void 0 : o.attempts) !== null && s !== void 0
              ? s
              : Number.MAX_SAFE_INTEGER,
          delayMs: this.defaultResendDelay,
          signal: o == null ? void 0 : o.signal,
        }
      );
    });
  }
  pause() {
    this.eventSource.dispose().catch((t) => K2(`Bridge pause failed, ${t}`));
  }
  unPause() {
    return Ae(this, void 0, void 0, function* () {
      yield this.eventSource.recreate(0);
    });
  }
  close() {
    return Ae(this, void 0, void 0, function* () {
      yield this.eventSource
        .dispose()
        .catch((t) => K2(`Bridge close failed, ${t}`));
    });
  }
  setListener(t) {
    this.listener = t;
  }
  setErrorsListener(t) {
    this.errorsListener = t;
  }
  post(t, n, r) {
    return Ae(this, void 0, void 0, function* () {
      const i = yield fetch(t, { method: "post", body: n, signal: r });
      if (!i.ok) throw new ze(`Bridge send failed, status ${i.status}`);
      return i;
    });
  }
  errorsHandler(t, n) {
    return Ae(this, void 0, void 0, function* () {
      if (this.isConnecting)
        throw (t.close(), new ze("Bridge error, failed to connect"));
      if (this.isReady) {
        try {
          this.errorsListener(n);
        } catch {}
        return;
      }
      if (this.isClosed)
        return (
          t.close(),
          On(`Bridge reconnecting, ${this.defaultReconnectDelay}ms delay`),
          yield this.eventSource.recreate(this.defaultReconnectDelay)
        );
      throw new ze("Bridge error, unknown state");
    });
  }
  messagesHandler(t) {
    return Ae(this, void 0, void 0, function* () {
      if (
        t.data === this.heartbeatMessage ||
        (yield this.bridgeGatewayStorage.storeLastEventId(t.lastEventId),
        this.isClosed)
      )
        return;
      let n;
      try {
        n = JSON.parse(t.data);
      } catch (r) {
        throw new ze(`Bridge message parse failed, message ${r.data}`);
      }
      this.listener(n);
    });
  }
}
function vL(e) {
  return Ae(this, void 0, void 0, function* () {
    return yield yL(
      (t, n, r) =>
        Ae(this, void 0, void 0, function* () {
          var i;
          const o = Ni(r.signal).signal;
          if (o.aborted) {
            n(new ze("Bridge connection aborted"));
            return;
          }
          const l = new URL(kC(e.bridgeUrl, e.ssePath));
          l.searchParams.append("client_id", e.sessionId);
          const c = yield e.bridgeGatewayStorage.getLastEventId();
          if ((c && l.searchParams.append("last_event_id", c), o.aborted)) {
            n(new ze("Bridge connection aborted"));
            return;
          }
          const f = new EventSource(l.toString());
          (f.onerror = (d) =>
            Ae(this, void 0, void 0, function* () {
              if (o.aborted) {
                f.close(), n(new ze("Bridge connection aborted"));
                return;
              }
              try {
                const p = yield e.errorHandler(f, d);
                p !== f && f.close(), p && p !== f && t(p);
              } catch (p) {
                f.close(), n(p);
              }
            })),
            (f.onopen = () => {
              if (o.aborted) {
                f.close(), n(new ze("Bridge connection aborted"));
                return;
              }
              t(f);
            }),
            (f.onmessage = (d) => {
              if (o.aborted) {
                f.close(), n(new ze("Bridge connection aborted"));
                return;
              }
              e.messageHandler(d);
            }),
            (i = e.signal) === null ||
              i === void 0 ||
              i.addEventListener("abort", () => {
                f.close(), n(new ze("Bridge connection aborted"));
              });
        }),
      { timeout: e.openingDeadlineMS, signal: e.signal }
    );
  });
}
function hl(e) {
  return !("connectEvent" in e);
}
class Ll {
  constructor(t) {
    (this.storage = t),
      (this.storeKey = "ton-connect-storage_bridge-connection");
  }
  storeConnection(t) {
    return Ae(this, void 0, void 0, function* () {
      if (t.type === "injected")
        return this.storage.setItem(this.storeKey, JSON.stringify(t));
      if (!hl(t)) {
        const r = {
            sessionKeyPair: t.session.sessionCrypto.stringifyKeypair(),
            walletPublicKey: t.session.walletPublicKey,
            bridgeUrl: t.session.bridgeUrl,
          },
          i = {
            type: "http",
            connectEvent: t.connectEvent,
            session: r,
            lastWalletEventId: t.lastWalletEventId,
            nextRpcRequestId: t.nextRpcRequestId,
          };
        return this.storage.setItem(this.storeKey, JSON.stringify(i));
      }
      const n = {
        type: "http",
        connectionSource: t.connectionSource,
        sessionCrypto: t.sessionCrypto.stringifyKeypair(),
      };
      return this.storage.setItem(this.storeKey, JSON.stringify(n));
    });
  }
  removeConnection() {
    return Ae(this, void 0, void 0, function* () {
      return this.storage.removeItem(this.storeKey);
    });
  }
  getConnection() {
    return Ae(this, void 0, void 0, function* () {
      const t = yield this.storage.getItem(this.storeKey);
      if (!t) return null;
      const n = JSON.parse(t);
      if (n.type === "injected") return n;
      if ("connectEvent" in n) {
        const r = new T5(n.session.sessionKeyPair);
        return {
          type: "http",
          connectEvent: n.connectEvent,
          lastWalletEventId: n.lastWalletEventId,
          nextRpcRequestId: n.nextRpcRequestId,
          session: {
            sessionCrypto: r,
            bridgeUrl: n.session.bridgeUrl,
            walletPublicKey: n.session.walletPublicKey,
          },
        };
      }
      return {
        type: "http",
        sessionCrypto: new T5(n.sessionCrypto),
        connectionSource: n.connectionSource,
      };
    });
  }
  getHttpConnection() {
    return Ae(this, void 0, void 0, function* () {
      const t = yield this.getConnection();
      if (!t)
        throw new ze(
          "Trying to read HTTP connection source while nothing is stored"
        );
      if (t.type === "injected")
        throw new ze(
          "Trying to read HTTP connection source while injected connection is stored"
        );
      return t;
    });
  }
  getHttpPendingConnection() {
    return Ae(this, void 0, void 0, function* () {
      const t = yield this.getConnection();
      if (!t)
        throw new ze(
          "Trying to read HTTP connection source while nothing is stored"
        );
      if (t.type === "injected")
        throw new ze(
          "Trying to read HTTP connection source while injected connection is stored"
        );
      if (!hl(t))
        throw new ze(
          "Trying to read HTTP-pending connection while http connection is stored"
        );
      return t;
    });
  }
  getInjectedConnection() {
    return Ae(this, void 0, void 0, function* () {
      const t = yield this.getConnection();
      if (!t)
        throw new ze(
          "Trying to read Injected bridge connection source while nothing is stored"
        );
      if ((t == null ? void 0 : t.type) === "http")
        throw new ze(
          "Trying to read Injected bridge connection source while HTTP connection is stored"
        );
      return t;
    });
  }
  storedConnectionType() {
    return Ae(this, void 0, void 0, function* () {
      const t = yield this.storage.getItem(this.storeKey);
      return t ? JSON.parse(t).type : null;
    });
  }
  storeLastWalletEventId(t) {
    return Ae(this, void 0, void 0, function* () {
      const n = yield this.getConnection();
      if (n && n.type === "http" && !hl(n))
        return (n.lastWalletEventId = t), this.storeConnection(n);
    });
  }
  getLastWalletEventId() {
    return Ae(this, void 0, void 0, function* () {
      const t = yield this.getConnection();
      if (t && "lastWalletEventId" in t) return t.lastWalletEventId;
    });
  }
  increaseNextRpcRequestId() {
    return Ae(this, void 0, void 0, function* () {
      const t = yield this.getConnection();
      if (t && "nextRpcRequestId" in t) {
        const n = t.nextRpcRequestId || 0;
        return (t.nextRpcRequestId = n + 1), this.storeConnection(t);
      }
    });
  }
  getNextRpcRequestId() {
    return Ae(this, void 0, void 0, function* () {
      const t = yield this.getConnection();
      return (t && "nextRpcRequestId" in t && t.nextRpcRequestId) || 0;
    });
  }
}
const TC = 2;
class Il {
  constructor(t, n) {
    (this.storage = t),
      (this.walletConnectionSource = n),
      (this.type = "http"),
      (this.standardUniversalLink = "tc://"),
      (this.pendingRequests = new Map()),
      (this.session = null),
      (this.gateway = null),
      (this.pendingGateways = []),
      (this.listeners = []),
      (this.defaultOpeningDeadlineMS = 12e3),
      (this.defaultRetryTimeoutMS = 2e3),
      (this.connectionStorage = new Ll(t));
  }
  static fromStorage(t) {
    return Ae(this, void 0, void 0, function* () {
      const r = yield new Ll(t).getHttpConnection();
      return hl(r)
        ? new Il(t, r.connectionSource)
        : new Il(t, { bridgeUrl: r.session.bridgeUrl });
    });
  }
  connect(t, n) {
    var r;
    const i = Ni(n == null ? void 0 : n.signal);
    (r = this.abortController) === null || r === void 0 || r.abort(),
      (this.abortController = i),
      this.closeGateways();
    const s = new T5();
    (this.session = {
      sessionCrypto: s,
      bridgeUrl:
        "bridgeUrl" in this.walletConnectionSource
          ? this.walletConnectionSource.bridgeUrl
          : "",
    }),
      this.connectionStorage
        .storeConnection({
          type: "http",
          connectionSource: this.walletConnectionSource,
          sessionCrypto: s,
        })
        .then(() =>
          Ae(this, void 0, void 0, function* () {
            i.signal.aborted ||
              (yield fl(
                (l) => {
                  var c;
                  return this.openGateways(s, {
                    openingDeadlineMS:
                      (c = n == null ? void 0 : n.openingDeadlineMS) !== null &&
                      c !== void 0
                        ? c
                        : this.defaultOpeningDeadlineMS,
                    signal: l == null ? void 0 : l.signal,
                  });
                },
                {
                  attempts: Number.MAX_SAFE_INTEGER,
                  delayMs: this.defaultRetryTimeoutMS,
                  signal: i.signal,
                }
              ));
          })
        );
    const o =
      "universalLink" in this.walletConnectionSource &&
      this.walletConnectionSource.universalLink
        ? this.walletConnectionSource.universalLink
        : this.standardUniversalLink;
    return this.generateUniversalLink(o, t);
  }
  restoreConnection(t) {
    var n, r;
    return Ae(this, void 0, void 0, function* () {
      const i = Ni(t == null ? void 0 : t.signal);
      if (
        ((n = this.abortController) === null || n === void 0 || n.abort(),
        (this.abortController = i),
        i.signal.aborted)
      )
        return;
      this.closeGateways();
      const s = yield this.connectionStorage.getHttpConnection();
      if (!s || i.signal.aborted) return;
      const o =
        (r = t == null ? void 0 : t.openingDeadlineMS) !== null && r !== void 0
          ? r
          : this.defaultOpeningDeadlineMS;
      if (hl(s))
        return (
          (this.session = {
            sessionCrypto: s.sessionCrypto,
            bridgeUrl:
              "bridgeUrl" in this.walletConnectionSource
                ? this.walletConnectionSource.bridgeUrl
                : "",
          }),
          yield this.openGateways(s.sessionCrypto, {
            openingDeadlineMS: o,
            signal: i == null ? void 0 : i.signal,
          })
        );
      if (Array.isArray(this.walletConnectionSource))
        throw new ze(
          "Internal error. Connection source is array while WalletConnectionSourceHTTP was expected."
        );
      if (
        ((this.session = s.session),
        this.gateway &&
          (On("Gateway is already opened, closing previous gateway"),
          yield this.gateway.close()),
        (this.gateway = new o9(
          this.storage,
          this.walletConnectionSource.bridgeUrl,
          s.session.sessionCrypto.sessionId,
          this.gatewayListener.bind(this),
          this.gatewayErrorsListener.bind(this)
        )),
        !i.signal.aborted)
      ) {
        this.listeners.forEach((l) => l(s.connectEvent));
        try {
          yield fl(
            (l) =>
              this.gateway.registerSession({
                openingDeadlineMS: o,
                signal: l.signal,
              }),
            {
              attempts: Number.MAX_SAFE_INTEGER,
              delayMs: this.defaultRetryTimeoutMS,
              signal: i.signal,
            }
          );
        } catch {
          yield this.disconnect({ signal: i.signal });
          return;
        }
      }
    });
  }
  sendRequest(t, n) {
    const r = {};
    return (
      typeof n == "function"
        ? (r.onRequestSent = n)
        : ((r.onRequestSent = n == null ? void 0 : n.onRequestSent),
          (r.signal = n == null ? void 0 : n.signal),
          (r.attempts = n == null ? void 0 : n.attempts)),
      new Promise((i, s) =>
        Ae(this, void 0, void 0, function* () {
          var o;
          if (
            !this.gateway ||
            !this.session ||
            !("walletPublicKey" in this.session)
          )
            throw new ze("Trying to send bridge request without session");
          const l =
            (yield this.connectionStorage.getNextRpcRequestId()).toString();
          yield this.connectionStorage.increaseNextRpcRequestId(),
            On(
              "Send http-bridge request:",
              Object.assign(Object.assign({}, t), { id: l })
            );
          const c = this.session.sessionCrypto.encrypt(
            JSON.stringify(Object.assign(Object.assign({}, t), { id: l })),
            Md(this.session.walletPublicKey)
          );
          try {
            yield this.gateway.send(c, this.session.walletPublicKey, t.method, {
              attempts: r == null ? void 0 : r.attempts,
              signal: r == null ? void 0 : r.signal,
            }),
              (o = r == null ? void 0 : r.onRequestSent) === null ||
                o === void 0 ||
                o.call(r),
              this.pendingRequests.set(l.toString(), i);
          } catch (f) {
            s(f);
          }
        })
      )
    );
  }
  closeConnection() {
    this.closeGateways(),
      (this.listeners = []),
      (this.session = null),
      (this.gateway = null);
  }
  disconnect(t) {
    return Ae(this, void 0, void 0, function* () {
      return new Promise((n) =>
        Ae(this, void 0, void 0, function* () {
          let r = !1,
            i = null;
          const s = () => {
            r || ((r = !0), this.removeBridgeAndSession().then(n));
          };
          try {
            this.closeGateways();
            const o = Ni(t == null ? void 0 : t.signal);
            (i = setTimeout(() => {
              o.abort();
            }, this.defaultOpeningDeadlineMS)),
              yield this.sendRequest(
                { method: "disconnect", params: [] },
                { onRequestSent: s, signal: o.signal, attempts: 1 }
              );
          } catch (o) {
            On("Disconnect error:", o),
              r || this.removeBridgeAndSession().then(n);
          } finally {
            i && clearTimeout(i), s();
          }
        })
      );
    });
  }
  listen(t) {
    return (
      this.listeners.push(t),
      () => (this.listeners = this.listeners.filter((n) => n !== t))
    );
  }
  pause() {
    var t;
    (t = this.gateway) === null || t === void 0 || t.pause(),
      this.pendingGateways.forEach((n) => n.pause());
  }
  unPause() {
    return Ae(this, void 0, void 0, function* () {
      const t = this.pendingGateways.map((n) => n.unPause());
      this.gateway && t.push(this.gateway.unPause()), yield Promise.all(t);
    });
  }
  pendingGatewaysListener(t, n, r) {
    return Ae(this, void 0, void 0, function* () {
      if (!this.pendingGateways.includes(t)) {
        yield t.close();
        return;
      }
      return (
        this.closeGateways({ except: t }),
        this.gateway &&
          (On("Gateway is already opened, closing previous gateway"),
          yield this.gateway.close()),
        (this.session.bridgeUrl = n),
        (this.gateway = t),
        this.gateway.setErrorsListener(this.gatewayErrorsListener.bind(this)),
        this.gateway.setListener(this.gatewayListener.bind(this)),
        this.gatewayListener(r)
      );
    });
  }
  gatewayListener(t) {
    return Ae(this, void 0, void 0, function* () {
      const n = JSON.parse(
        this.session.sessionCrypto.decrypt(
          K6.decode(t.message).toUint8Array(),
          Md(t.from)
        )
      );
      if ((On("Wallet message received:", n), !("event" in n))) {
        const i = n.id.toString(),
          s = this.pendingRequests.get(i);
        if (!s) {
          On(`Response id ${i} doesn't match any request's id`);
          return;
        }
        s(n), this.pendingRequests.delete(i);
        return;
      }
      if (n.id !== void 0) {
        const i = yield this.connectionStorage.getLastWalletEventId();
        if (i !== void 0 && n.id <= i) {
          K2(
            `Received event id (=${n.id}) must be greater than stored last wallet event id (=${i}) `
          );
          return;
        }
        n.event !== "connect" &&
          (yield this.connectionStorage.storeLastWalletEventId(n.id));
      }
      const r = this.listeners;
      n.event === "connect" && (yield this.updateSession(n, t.from)),
        n.event === "disconnect" &&
          (On("Removing bridge and session: received disconnect event"),
          yield this.removeBridgeAndSession()),
        r.forEach((i) => i(n));
    });
  }
  gatewayErrorsListener(t) {
    return Ae(this, void 0, void 0, function* () {
      throw new ze(`Bridge error ${JSON.stringify(t)}`);
    });
  }
  updateSession(t, n) {
    return Ae(this, void 0, void 0, function* () {
      this.session = Object.assign(Object.assign({}, this.session), {
        walletPublicKey: n,
      });
      const r = t.payload.items.find((s) => s.name === "ton_addr"),
        i = Object.assign(Object.assign({}, t), {
          payload: Object.assign(Object.assign({}, t.payload), { items: [r] }),
        });
      yield this.connectionStorage.storeConnection({
        type: "http",
        session: this.session,
        lastWalletEventId: t.id,
        connectEvent: i,
        nextRpcRequestId: 0,
      });
    });
  }
  removeBridgeAndSession() {
    return Ae(this, void 0, void 0, function* () {
      this.closeConnection(), yield this.connectionStorage.removeConnection();
    });
  }
  generateUniversalLink(t, n) {
    return js(t)
      ? this.generateTGUniversalLink(t, n)
      : this.generateRegularUniversalLink(t, n);
  }
  generateRegularUniversalLink(t, n) {
    const r = new URL(t);
    return (
      r.searchParams.append("v", TC.toString()),
      r.searchParams.append("id", this.session.sessionCrypto.sessionId),
      r.searchParams.append("r", JSON.stringify(n)),
      r.toString()
    );
  }
  generateTGUniversalLink(t, n) {
    const i = this.generateRegularUniversalLink("about:blank", n).split("?")[1],
      s = "tonconnect-" + _C(i),
      o = this.convertToDirectLink(t),
      l = new URL(o);
    return l.searchParams.append("startapp", s), l.toString();
  }
  convertToDirectLink(t) {
    const n = new URL(t);
    return (
      n.searchParams.has("attach") &&
        (n.searchParams.delete("attach"), (n.pathname += "/start")),
      n.toString()
    );
  }
  openGateways(t, n) {
    return Ae(this, void 0, void 0, function* () {
      if (Array.isArray(this.walletConnectionSource)) {
        this.pendingGateways.map((r) => r.close().catch()),
          (this.pendingGateways = this.walletConnectionSource.map((r) => {
            const i = new o9(
              this.storage,
              r.bridgeUrl,
              t.sessionId,
              () => {},
              () => {}
            );
            return (
              i.setListener((s) =>
                this.pendingGatewaysListener(i, r.bridgeUrl, s)
              ),
              i
            );
          })),
          yield Promise.allSettled(
            this.pendingGateways.map((r) =>
              fl(
                (i) => {
                  var s;
                  return this.pendingGateways.some((o) => o === r)
                    ? r.registerSession({
                        openingDeadlineMS:
                          (s = n == null ? void 0 : n.openingDeadlineMS) !==
                            null && s !== void 0
                            ? s
                            : this.defaultOpeningDeadlineMS,
                        signal: i.signal,
                      })
                    : r.close();
                },
                {
                  attempts: Number.MAX_SAFE_INTEGER,
                  delayMs: this.defaultRetryTimeoutMS,
                  signal: n == null ? void 0 : n.signal,
                }
              )
            )
          );
        return;
      } else return this.gateway && (On("Gateway is already opened, closing previous gateway"), yield this.gateway.close()), (this.gateway = new o9(this.storage, this.walletConnectionSource.bridgeUrl, t.sessionId, this.gatewayListener.bind(this), this.gatewayErrorsListener.bind(this))), yield this.gateway.registerSession({ openingDeadlineMS: n == null ? void 0 : n.openingDeadlineMS, signal: n == null ? void 0 : n.signal });
    });
  }
  closeGateways(t) {
    var n;
    (n = this.gateway) === null || n === void 0 || n.close(),
      this.pendingGateways
        .filter((r) => r !== (t == null ? void 0 : t.except))
        .forEach((r) => r.close()),
      (this.pendingGateways = []);
  }
}
function K8(e, t) {
  return PC(e, [t]);
}
function PC(e, t) {
  return !e || typeof e != "object" ? !1 : t.every((n) => n in e);
}
function wL(e) {
  try {
    return !K8(e, "tonconnect") || !K8(e.tonconnect, "walletInfo")
      ? !1
      : PC(e.tonconnect.walletInfo, [
          "name",
          "app_name",
          "image",
          "about_url",
          "platforms",
        ]);
  } catch {
    return !1;
  }
}
let bL = class tl {
  constructor() {
    this.storage = {};
  }
  static getInstance() {
    return tl.instance || (tl.instance = new tl()), tl.instance;
  }
  get length() {
    return Object.keys(this.storage).length;
  }
  clear() {
    this.storage = {};
  }
  getItem(t) {
    var n;
    return (n = this.storage[t]) !== null && n !== void 0 ? n : null;
  }
  key(t) {
    var n;
    const r = Object.keys(this.storage);
    return t < 0 || t >= r.length
      ? null
      : (n = r[t]) !== null && n !== void 0
      ? n
      : null;
  }
  removeItem(t) {
    delete this.storage[t];
  }
  setItem(t, n) {
    this.storage[t] = n;
  }
};
function k4() {
  if (!(typeof window > "u")) return window;
}
function xL() {
  const e = k4();
  if (!e) return [];
  try {
    return Object.keys(e);
  } catch {
    return [];
  }
}
function CL() {
  if (!(typeof document > "u")) return document;
}
function SL() {
  var e;
  const t = (e = k4()) === null || e === void 0 ? void 0 : e.location.origin;
  return t ? t + "/tonconnect-manifest.json" : "";
}
function EL() {
  if (kL()) return localStorage;
  if (_L())
    throw new ze(
      "`localStorage` is unavailable, but it is required for TonConnect. For more details, see https://github.com/ton-connect/sdk/tree/main/packages/sdk#init-connector"
    );
  return bL.getInstance();
}
function kL() {
  try {
    return typeof localStorage < "u";
  } catch {
    return !1;
  }
}
function _L() {
  return (
    typeof process < "u" &&
    process.versions != null &&
    process.versions.node != null
  );
}
class $r {
  constructor(t, n) {
    (this.injectedWalletKey = n),
      (this.type = "injected"),
      (this.unsubscribeCallback = null),
      (this.listenSubscriptions = !1),
      (this.listeners = []);
    const r = $r.window;
    if (!$r.isWindowContainsWallet(r, n)) throw new Q6();
    (this.connectionStorage = new Ll(t)),
      (this.injectedWallet = r[n].tonconnect);
  }
  static fromStorage(t) {
    return Ae(this, void 0, void 0, function* () {
      const r = yield new Ll(t).getInjectedConnection();
      return new $r(t, r.jsBridgeKey);
    });
  }
  static isWalletInjected(t) {
    return $r.isWindowContainsWallet(this.window, t);
  }
  static isInsideWalletBrowser(t) {
    return $r.isWindowContainsWallet(this.window, t)
      ? this.window[t].tonconnect.isWalletBrowser
      : !1;
  }
  static getCurrentlyInjectedWallets() {
    return this.window
      ? xL()
          .filter(([r, i]) => wL(i))
          .map(([r, i]) => ({
            name: i.tonconnect.walletInfo.name,
            appName: i.tonconnect.walletInfo.app_name,
            aboutUrl: i.tonconnect.walletInfo.about_url,
            imageUrl: i.tonconnect.walletInfo.image,
            tondns: i.tonconnect.walletInfo.tondns,
            jsBridgeKey: r,
            injected: !0,
            embedded: i.tonconnect.isWalletBrowser,
            platforms: i.tonconnect.walletInfo.platforms,
          }))
      : [];
  }
  static isWindowContainsWallet(t, n) {
    return !!t && n in t && typeof t[n] == "object" && "tonconnect" in t[n];
  }
  connect(t) {
    this._connect(TC, t);
  }
  restoreConnection() {
    return Ae(this, void 0, void 0, function* () {
      try {
        On("Injected Provider restoring connection...");
        const t = yield this.injectedWallet.restoreConnection();
        On("Injected Provider restoring connection response", t),
          t.event === "connect"
            ? (this.makeSubscriptions(), this.listeners.forEach((n) => n(t)))
            : yield this.connectionStorage.removeConnection();
      } catch (t) {
        yield this.connectionStorage.removeConnection(), console.error(t);
      }
    });
  }
  closeConnection() {
    this.listenSubscriptions && this.injectedWallet.disconnect(),
      this.closeAllListeners();
  }
  disconnect() {
    return Ae(this, void 0, void 0, function* () {
      return new Promise((t) => {
        const n = () => {
          this.closeAllListeners(),
            this.connectionStorage.removeConnection().then(t);
        };
        try {
          this.injectedWallet.disconnect(), n();
        } catch (r) {
          On(r), this.sendRequest({ method: "disconnect", params: [] }, n);
        }
      });
    });
  }
  closeAllListeners() {
    var t;
    (this.listenSubscriptions = !1),
      (this.listeners = []),
      (t = this.unsubscribeCallback) === null || t === void 0 || t.call(this);
  }
  listen(t) {
    return (
      this.listeners.push(t),
      () => (this.listeners = this.listeners.filter((n) => n !== t))
    );
  }
  sendRequest(t, n) {
    var r;
    return Ae(this, void 0, void 0, function* () {
      const i = {};
      typeof n == "function"
        ? (i.onRequestSent = n)
        : ((i.onRequestSent = n == null ? void 0 : n.onRequestSent),
          (i.signal = n == null ? void 0 : n.signal));
      const s = (yield this.connectionStorage.getNextRpcRequestId()).toString();
      yield this.connectionStorage.increaseNextRpcRequestId(),
        On(
          "Send injected-bridge request:",
          Object.assign(Object.assign({}, t), { id: s })
        );
      const o = this.injectedWallet.send(
        Object.assign(Object.assign({}, t), { id: s })
      );
      return (
        o.then((l) => On("Wallet message received:", l)),
        (r = i == null ? void 0 : i.onRequestSent) === null ||
          r === void 0 ||
          r.call(i),
        o
      );
    });
  }
  _connect(t, n) {
    return Ae(this, void 0, void 0, function* () {
      try {
        On(
          `Injected Provider connect request: protocolVersion: ${t}, message:`,
          n
        );
        const r = yield this.injectedWallet.connect(t, n);
        On("Injected Provider connect response:", r),
          r.event === "connect" &&
            (yield this.updateSession(), this.makeSubscriptions()),
          this.listeners.forEach((i) => i(r));
      } catch (r) {
        On("Injected Provider connect error:", r);
        const i = {
          event: "connect_error",
          payload: { code: 0, message: r == null ? void 0 : r.toString() },
        };
        this.listeners.forEach((s) => s(i));
      }
    });
  }
  makeSubscriptions() {
    (this.listenSubscriptions = !0),
      (this.unsubscribeCallback = this.injectedWallet.listen((t) => {
        On("Wallet message received:", t),
          this.listenSubscriptions && this.listeners.forEach((n) => n(t)),
          t.event === "disconnect" && this.disconnect();
      }));
  }
  updateSession() {
    return this.connectionStorage.storeConnection({
      type: "injected",
      jsBridgeKey: this.injectedWalletKey,
      nextRpcRequestId: 0,
    });
  }
}
$r.window = k4();
class AL {
  constructor() {
    this.localStorage = EL();
  }
  getItem(t) {
    return Ae(this, void 0, void 0, function* () {
      return this.localStorage.getItem(t);
    });
  }
  removeItem(t) {
    return Ae(this, void 0, void 0, function* () {
      this.localStorage.removeItem(t);
    });
  }
  setItem(t, n) {
    return Ae(this, void 0, void 0, function* () {
      this.localStorage.setItem(t, n);
    });
  }
}
function qo(e) {
  return TL(e) && e.injected;
}
function _4(e) {
  return qo(e) && e.embedded;
}
function TL(e) {
  return "jsBridgeKey" in e;
}
function X6(e) {
  return "bridgeUrl" in e;
}
const PL = [
  {
    app_name: "telegram-wallet",
    name: "Wallet",
    image: "https://wallet.tg/images/logo-288.png",
    about_url: "https://wallet.tg/",
    universal_url: "https://t.me/wallet?attach=wallet",
    bridge: [{ type: "sse", url: "https://bridge.ton.space/bridge" }],
    platforms: ["ios", "android", "macos", "windows", "linux"],
  },
  {
    app_name: "tonkeeper",
    name: "Tonkeeper",
    image: "https://tonkeeper.com/assets/tonconnect-icon.png",
    tondns: "tonkeeper.ton",
    about_url: "https://tonkeeper.com",
    universal_url: "https://app.tonkeeper.com/ton-connect",
    deepLink: "tonkeeper-tc://",
    bridge: [
      { type: "sse", url: "https://bridge.tonapi.io/bridge" },
      { type: "js", key: "tonkeeper" },
    ],
    platforms: ["ios", "android", "chrome", "firefox", "macos"],
  },
  {
    app_name: "mytonwallet",
    name: "MyTonWallet",
    image: "https://static.mytonwallet.io/icon-256.png",
    about_url: "https://mytonwallet.io",
    universal_url: "https://connect.mytonwallet.org",
    bridge: [
      { type: "js", key: "mytonwallet" },
      { type: "sse", url: "https://tonconnectbridge.mytonwallet.org/bridge/" },
    ],
    platforms: [
      "chrome",
      "windows",
      "macos",
      "linux",
      "ios",
      "android",
      "firefox",
    ],
  },
  {
    app_name: "openmask",
    name: "OpenMask",
    image:
      "https://raw.githubusercontent.com/OpenProduct/openmask-extension/main/public/openmask-logo-288.png",
    about_url: "https://www.openmask.app/",
    bridge: [{ type: "js", key: "openmask" }],
    platforms: ["chrome"],
  },
  {
    app_name: "tonhub",
    name: "Tonhub",
    image: "https://tonhub.com/tonconnect_logo.png",
    about_url: "https://tonhub.com",
    universal_url: "https://tonhub.com/ton-connect",
    bridge: [
      { type: "js", key: "tonhub" },
      { type: "sse", url: "https://connect.tonhubapi.com/tonconnect" },
    ],
    platforms: ["ios", "android"],
  },
  {
    app_name: "dewallet",
    name: "DeWallet",
    image:
      "https://raw.githubusercontent.com/delab-team/manifests-images/main/WalletAvatar.png",
    about_url: "https://delabwallet.com",
    universal_url: "https://t.me/dewallet?attach=wallet",
    bridge: [{ type: "sse", url: "https://sse-bridge.delab.team/bridge" }],
    platforms: ["ios", "android"],
  },
  {
    app_name: "xtonwallet",
    name: "XTONWallet",
    image: "https://xtonwallet.com/assets/img/icon-256-back.png",
    about_url: "https://xtonwallet.com",
    bridge: [{ type: "js", key: "xtonwallet" }],
    platforms: ["chrome", "firefox"],
  },
  {
    app_name: "tonwallet",
    name: "TON Wallet",
    image: "https://wallet.ton.org/assets/ui/qr-logo.png",
    about_url:
      "https://chrome.google.com/webstore/detail/ton-wallet/nphplpgoakhhjchkkhmiggakijnkhfnd",
    bridge: [{ type: "js", key: "tonwallet" }],
    platforms: ["chrome"],
  },
  {
    app_name: "bitgetTonWallet",
    name: "Bitget Wallet",
    image:
      "https://raw.githubusercontent.com/bitkeepwallet/download/main/logo/png/bitget_wallet_logo_0_gas_fee.png",
    about_url: "https://web3.bitget.com",
    deepLink: "bitkeep://",
    bridge: [
      { type: "js", key: "bitgetTonWallet" },
      { type: "sse", url: "https://bridge.tonapi.io/bridge" },
    ],
    platforms: ["ios", "android", "chrome"],
    universal_url: "https://bkcode.vip/ton-connect",
  },
  {
    app_name: "safepalwallet",
    name: "SafePal",
    image: "https://s.pvcliping.com/web/public_image/SafePal_x288.png",
    tondns: "",
    about_url: "https://www.safepal.com",
    universal_url: "https://link.safepal.io/ton-connect",
    deepLink: "safepal-tc://",
    bridge: [
      {
        type: "sse",
        url: "https://ton-bridge.safepal.com/tonbridge/v1/bridge",
      },
      { type: "js", key: "safepalwallet" },
    ],
    platforms: ["ios", "android", "chrome", "firefox"],
  },
  {
    app_name: "okxTonWallet",
    name: "OKX Wallet",
    image: "https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png",
    about_url: "https://www.okx.com/web3",
    universal_url:
      "https://www.okx.com/download?appendQuery=true&deeplink=okx://web3/wallet/tonconnect",
    bridge: [
      { type: "js", key: "okxTonWallet" },
      { type: "sse", url: "https://www.okx.com/tonbridge/discover/rpc/bridge" },
    ],
    platforms: ["chrome", "safari", "firefox", "ios", "android"],
  },
  {
    app_name: "okxTonWalletTr",
    name: "OKX TR Wallet",
    image: "https://static.okx.com/cdn/assets/imgs/247/587A8296F0BB640F.png",
    about_url: "https://tr.okx.com/web3",
    universal_url:
      "https://tr.okx.com/download?appendQuery=true&deeplink=okxtr://web3/wallet/tonconnect",
    bridge: [
      { type: "js", key: "okxTonWallet" },
      { type: "sse", url: "https://www.okx.com/tonbridge/discover/rpc/bridge" },
    ],
    platforms: ["chrome", "safari", "firefox", "ios", "android"],
  },
];
class P5 {
  constructor(t) {
    (this.walletsListCache = null),
      (this.walletsListCacheCreationTimestamp = null),
      (this.walletsListSource =
        "https://raw.githubusercontent.com/ton-blockchain/wallets-list/main/wallets-v2.json"),
      t != null &&
        t.walletsListSource &&
        (this.walletsListSource = t.walletsListSource),
      t != null && t.cacheTTLMs && (this.cacheTTLMs = t.cacheTTLMs);
  }
  getWallets() {
    return Ae(this, void 0, void 0, function* () {
      return (
        this.cacheTTLMs &&
          this.walletsListCacheCreationTimestamp &&
          Date.now() >
            this.walletsListCacheCreationTimestamp + this.cacheTTLMs &&
          (this.walletsListCache = null),
        this.walletsListCache ||
          ((this.walletsListCache = this.fetchWalletsList()),
          this.walletsListCache
            .then(() => {
              this.walletsListCacheCreationTimestamp = Date.now();
            })
            .catch(() => {
              (this.walletsListCache = null),
                (this.walletsListCacheCreationTimestamp = null);
            })),
        this.walletsListCache
      );
    });
  }
  getEmbeddedWallet() {
    return Ae(this, void 0, void 0, function* () {
      const n = (yield this.getWallets()).filter(_4);
      return n.length !== 1 ? null : n[0];
    });
  }
  fetchWalletsList() {
    return Ae(this, void 0, void 0, function* () {
      let t = [];
      try {
        if (
          ((t = yield (yield fetch(this.walletsListSource)).json()),
          !Array.isArray(t))
        )
          throw new Z6(
            "Wrong wallets list format, wallets list must be an array."
          );
        const i = t.filter((s) => !this.isCorrectWalletConfigDTO(s));
        i.length &&
          (K2(
            `Wallet(s) ${i
              .map((s) => s.name)
              .join(
                ", "
              )} config format is wrong. They were removed from the wallets list.`
          ),
          (t = t.filter((s) => this.isCorrectWalletConfigDTO(s))));
      } catch (r) {
        K2(r), (t = PL);
      }
      let n = [];
      try {
        n = $r.getCurrentlyInjectedWallets();
      } catch (r) {
        K2(r);
      }
      return this.mergeWalletsLists(
        this.walletConfigDTOListToWalletConfigList(t),
        n
      );
    });
  }
  walletConfigDTOListToWalletConfigList(t) {
    return t.map((n) => {
      const i = {
        name: n.name,
        appName: n.app_name,
        imageUrl: n.image,
        aboutUrl: n.about_url,
        tondns: n.tondns,
        platforms: n.platforms,
      };
      return (
        n.bridge.forEach((s) => {
          if (
            (s.type === "sse" &&
              ((i.bridgeUrl = s.url),
              (i.universalLink = n.universal_url),
              (i.deepLink = n.deepLink)),
            s.type === "js")
          ) {
            const o = s.key;
            (i.jsBridgeKey = o),
              (i.injected = $r.isWalletInjected(o)),
              (i.embedded = $r.isInsideWalletBrowser(o));
          }
        }),
        i
      );
    });
  }
  mergeWalletsLists(t, n) {
    return [...new Set(t.concat(n).map((i) => i.name)).values()].map((i) => {
      const s = t.find((l) => l.name === i),
        o = n.find((l) => l.name === i);
      return Object.assign(
        Object.assign({}, s && Object.assign({}, s)),
        o && Object.assign({}, o)
      );
    });
  }
  isCorrectWalletConfigDTO(t) {
    if (!t || typeof t != "object") return !1;
    const n = "name" in t,
      r = "app_name" in t,
      i = "image" in t,
      s = "about_url" in t,
      o = "platforms" in t;
    if (
      !n ||
      !i ||
      !s ||
      !o ||
      !r ||
      !t.platforms ||
      !Array.isArray(t.platforms) ||
      !t.platforms.length ||
      !("bridge" in t) ||
      !Array.isArray(t.bridge) ||
      !t.bridge.length
    )
      return !1;
    const l = t.bridge;
    if (l.some((d) => !d || typeof d != "object" || !("type" in d))) return !1;
    const c = l.find((d) => d.type === "sse");
    if (c && (!("url" in c) || !c.url || !t.universal_url)) return !1;
    const f = l.find((d) => d.type === "js");
    return !(f && (!("key" in f) || !f.key));
  }
}
class Id extends ze {
  get info() {
    return "Wallet doesn't support requested feature method.";
  }
  constructor(...t) {
    super(...t), Object.setPrototypeOf(this, Id.prototype);
  }
}
function ML(e, t) {
  const n = e.includes("SendTransaction"),
    r = e.find(
      (i) => i && typeof i == "object" && i.name === "SendTransaction"
    );
  if (!n && !r) throw new Id("Wallet doesn't support SendTransaction feature.");
  if (r && r.maxMessages !== void 0) {
    if (r.maxMessages < t.requiredMessagesNumber)
      throw new Id(
        `Wallet is not able to handle such SendTransaction request. Max support messages number is ${r.maxMessages}, but ${t.requiredMessagesNumber} is required.`
      );
    return;
  }
  mL(
    "Connected wallet didn't provide information about max allowed messages in the SendTransaction request. Request may be rejected by the wallet."
  );
}
function MC() {
  return { type: "request-version" };
}
function RC(e) {
  return { type: "response-version", version: e };
}
function sa(e) {
  return {
    ton_connect_sdk_lib: e.ton_connect_sdk_lib,
    ton_connect_ui_lib: e.ton_connect_ui_lib,
  };
}
function k3(e, t) {
  var n, r, i, s, o, l, c, f;
  const p =
    ((n = t == null ? void 0 : t.connectItems) === null || n === void 0
      ? void 0
      : n.tonProof) && "proof" in t.connectItems.tonProof
      ? "ton_proof"
      : "ton_addr";
  return {
    wallet_address:
      (i =
        (r = t == null ? void 0 : t.account) === null || r === void 0
          ? void 0
          : r.address) !== null && i !== void 0
        ? i
        : null,
    wallet_type:
      (s = t == null ? void 0 : t.device.appName) !== null && s !== void 0
        ? s
        : null,
    wallet_version:
      (o = t == null ? void 0 : t.device.appVersion) !== null && o !== void 0
        ? o
        : null,
    auth_type: p,
    custom_data: Object.assign(
      {
        chain_id:
          (c =
            (l = t == null ? void 0 : t.account) === null || l === void 0
              ? void 0
              : l.chain) !== null && c !== void 0
            ? c
            : null,
        provider:
          (f = t == null ? void 0 : t.provider) !== null && f !== void 0
            ? f
            : null,
      },
      sa(e)
    ),
  };
}
function LC(e) {
  return { type: "connection-started", custom_data: sa(e) };
}
function IC(e, t) {
  return Object.assign(
    { type: "connection-completed", is_success: !0 },
    k3(e, t)
  );
}
function jC(e, t, n) {
  return {
    type: "connection-error",
    is_success: !1,
    error_message: t,
    error_code: n ?? null,
    custom_data: sa(e),
  };
}
function NC(e) {
  return { type: "connection-restoring-started", custom_data: sa(e) };
}
function OC(e, t) {
  return Object.assign(
    { type: "connection-restoring-completed", is_success: !0 },
    k3(e, t)
  );
}
function BC(e, t) {
  return {
    type: "connection-restoring-error",
    is_success: !1,
    error_message: t,
    custom_data: sa(e),
  };
}
function J6(e, t) {
  var n, r, i, s;
  return {
    valid_until: (n = String(t.validUntil)) !== null && n !== void 0 ? n : null,
    from:
      (s =
        (r = t.from) !== null && r !== void 0
          ? r
          : (i = e == null ? void 0 : e.account) === null || i === void 0
          ? void 0
          : i.address) !== null && s !== void 0
        ? s
        : null,
    messages: t.messages.map((o) => {
      var l, c;
      return {
        address: (l = o.address) !== null && l !== void 0 ? l : null,
        amount: (c = o.amount) !== null && c !== void 0 ? c : null,
      };
    }),
  };
}
function DC(e, t, n) {
  return Object.assign(
    Object.assign({ type: "transaction-sent-for-signature" }, k3(e, t)),
    J6(t, n)
  );
}
function FC(e, t, n, r) {
  return Object.assign(
    Object.assign(
      { type: "transaction-signed", is_success: !0, signed_transaction: r.boc },
      k3(e, t)
    ),
    J6(t, n)
  );
}
function UC(e, t, n, r, i) {
  return Object.assign(
    Object.assign(
      {
        type: "transaction-signing-failed",
        is_success: !1,
        error_message: r,
        error_code: i ?? null,
      },
      k3(e, t)
    ),
    J6(t, n)
  );
}
function $C(e, t, n) {
  return Object.assign({ type: "disconnection", scope: n }, k3(e, t));
}
class VC {
  constructor() {
    this.window = k4();
  }
  dispatchEvent(t, n) {
    var r;
    return Ae(this, void 0, void 0, function* () {
      const i = new CustomEvent(t, { detail: n });
      (r = this.window) === null || r === void 0 || r.dispatchEvent(i);
    });
  }
  addEventListener(t, n, r) {
    var i;
    return Ae(this, void 0, void 0, function* () {
      return (
        (i = this.window) === null ||
          i === void 0 ||
          i.addEventListener(t, n, r),
        () => {
          var s;
          return (s = this.window) === null || s === void 0
            ? void 0
            : s.removeEventListener(t, n);
        }
      );
    });
  }
}
class RL {
  constructor(t) {
    var n;
    (this.eventPrefix = "ton-connect-"),
      (this.tonConnectUiVersion = null),
      (this.eventDispatcher =
        (n = t == null ? void 0 : t.eventDispatcher) !== null && n !== void 0
          ? n
          : new VC()),
      (this.tonConnectSdkVersion = t.tonConnectSdkVersion),
      this.init().catch();
  }
  get version() {
    return sa({
      ton_connect_sdk_lib: this.tonConnectSdkVersion,
      ton_connect_ui_lib: this.tonConnectUiVersion,
    });
  }
  init() {
    return Ae(this, void 0, void 0, function* () {
      try {
        yield this.setRequestVersionHandler(),
          (this.tonConnectUiVersion = yield this.requestTonConnectUiVersion());
      } catch {}
    });
  }
  setRequestVersionHandler() {
    return Ae(this, void 0, void 0, function* () {
      yield this.eventDispatcher.addEventListener(
        "ton-connect-request-version",
        () =>
          Ae(this, void 0, void 0, function* () {
            yield this.eventDispatcher.dispatchEvent(
              "ton-connect-response-version",
              RC(this.tonConnectSdkVersion)
            );
          })
      );
    });
  }
  requestTonConnectUiVersion() {
    return Ae(this, void 0, void 0, function* () {
      return new Promise((t, n) =>
        Ae(this, void 0, void 0, function* () {
          try {
            yield this.eventDispatcher.addEventListener(
              "ton-connect-ui-response-version",
              (r) => {
                t(r.detail.version);
              },
              { once: !0 }
            ),
              yield this.eventDispatcher.dispatchEvent(
                "ton-connect-ui-request-version",
                MC()
              );
          } catch (r) {
            n(r);
          }
        })
      );
    });
  }
  dispatchUserActionEvent(t) {
    try {
      this.eventDispatcher
        .dispatchEvent(`${this.eventPrefix}${t.type}`, t)
        .catch();
    } catch {}
  }
  trackConnectionStarted(...t) {
    try {
      const n = LC(this.version, ...t);
      this.dispatchUserActionEvent(n);
    } catch {}
  }
  trackConnectionCompleted(...t) {
    try {
      const n = IC(this.version, ...t);
      this.dispatchUserActionEvent(n);
    } catch {}
  }
  trackConnectionError(...t) {
    try {
      const n = jC(this.version, ...t);
      this.dispatchUserActionEvent(n);
    } catch {}
  }
  trackConnectionRestoringStarted(...t) {
    try {
      const n = NC(this.version, ...t);
      this.dispatchUserActionEvent(n);
    } catch {}
  }
  trackConnectionRestoringCompleted(...t) {
    try {
      const n = OC(this.version, ...t);
      this.dispatchUserActionEvent(n);
    } catch {}
  }
  trackConnectionRestoringError(...t) {
    try {
      const n = BC(this.version, ...t);
      this.dispatchUserActionEvent(n);
    } catch {}
  }
  trackDisconnection(...t) {
    try {
      const n = $C(this.version, ...t);
      this.dispatchUserActionEvent(n);
    } catch {}
  }
  trackTransactionSentForSignature(...t) {
    try {
      const n = DC(this.version, ...t);
      this.dispatchUserActionEvent(n);
    } catch {}
  }
  trackTransactionSigned(...t) {
    try {
      const n = FC(this.version, ...t);
      this.dispatchUserActionEvent(n);
    } catch {}
  }
  trackTransactionSigningFailed(...t) {
    try {
      const n = UC(this.version, ...t);
      this.dispatchUserActionEvent(n);
    } catch {}
  }
}
const LL = "3.0.5";
class Xo {
  constructor(t) {
    if (
      ((this.walletsList = new P5()),
      (this._wallet = null),
      (this.provider = null),
      (this.statusChangeSubscriptions = []),
      (this.statusChangeErrorSubscriptions = []),
      (this.dappSettings = {
        manifestUrl: (t == null ? void 0 : t.manifestUrl) || SL(),
        storage: (t == null ? void 0 : t.storage) || new AL(),
      }),
      (this.walletsList = new P5({
        walletsListSource: t == null ? void 0 : t.walletsListSource,
        cacheTTLMs: t == null ? void 0 : t.walletsListCacheTTLMs,
      })),
      (this.tracker = new RL({
        eventDispatcher: t == null ? void 0 : t.eventDispatcher,
        tonConnectSdkVersion: LL,
      })),
      !this.dappSettings.manifestUrl)
    )
      throw new G6(
        "Dapp tonconnect-manifest.json must be specified if window.location.origin is undefined. See more https://github.com/ton-connect/docs/blob/main/requests-responses.md#app-manifest"
      );
    (this.bridgeConnectionStorage = new Ll(this.dappSettings.storage)),
      (t != null && t.disableAutoPauseConnection) ||
        this.addWindowFocusAndBlurSubscriptions();
  }
  static getWallets() {
    return this.walletsList.getWallets();
  }
  get connected() {
    return this._wallet !== null;
  }
  get account() {
    var t;
    return (
      ((t = this._wallet) === null || t === void 0 ? void 0 : t.account) || null
    );
  }
  get wallet() {
    return this._wallet;
  }
  set wallet(t) {
    (this._wallet = t),
      this.statusChangeSubscriptions.forEach((n) => n(this._wallet));
  }
  getWallets() {
    return this.walletsList.getWallets();
  }
  onStatusChange(t, n) {
    return (
      this.statusChangeSubscriptions.push(t),
      n && this.statusChangeErrorSubscriptions.push(n),
      () => {
        (this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(
          (r) => r !== t
        )),
          n &&
            (this.statusChangeErrorSubscriptions =
              this.statusChangeErrorSubscriptions.filter((r) => r !== n));
      }
    );
  }
  connect(t, n) {
    var r, i;
    const s = {};
    if (
      (typeof n == "object" && "tonProof" in n && (s.request = n),
      typeof n == "object" &&
        ("openingDeadlineMS" in n || "signal" in n || "request" in n) &&
        ((s.request = n == null ? void 0 : n.request),
        (s.openingDeadlineMS = n == null ? void 0 : n.openingDeadlineMS),
        (s.signal = n == null ? void 0 : n.signal)),
      this.connected)
    )
      throw new Y6();
    const o = Ni(s == null ? void 0 : s.signal);
    if (
      ((r = this.abortController) === null || r === void 0 || r.abort(),
      (this.abortController = o),
      o.signal.aborted)
    )
      throw new ze("Connection was aborted");
    return (
      (i = this.provider) === null || i === void 0 || i.closeConnection(),
      (this.provider = this.createProvider(t)),
      o.signal.addEventListener("abort", () => {
        var l;
        (l = this.provider) === null || l === void 0 || l.closeConnection(),
          (this.provider = null);
      }),
      this.tracker.trackConnectionStarted(),
      this.provider.connect(
        this.createConnectRequest(s == null ? void 0 : s.request),
        {
          openingDeadlineMS: s == null ? void 0 : s.openingDeadlineMS,
          signal: o.signal,
        }
      )
    );
  }
  restoreConnection(t) {
    var n, r;
    return Ae(this, void 0, void 0, function* () {
      this.tracker.trackConnectionRestoringStarted();
      const i = Ni(t == null ? void 0 : t.signal);
      if (
        ((n = this.abortController) === null || n === void 0 || n.abort(),
        (this.abortController = i),
        i.signal.aborted)
      ) {
        this.tracker.trackConnectionRestoringError(
          "Connection restoring was aborted"
        );
        return;
      }
      const [s, o] = yield Promise.all([
        this.bridgeConnectionStorage.storedConnectionType(),
        this.walletsList.getEmbeddedWallet(),
      ]);
      if (i.signal.aborted) {
        this.tracker.trackConnectionRestoringError(
          "Connection restoring was aborted"
        );
        return;
      }
      let l = null;
      try {
        switch (s) {
          case "http":
            l = yield Il.fromStorage(this.dappSettings.storage);
            break;
          case "injected":
            l = yield $r.fromStorage(this.dappSettings.storage);
            break;
          default:
            if (o) l = this.createProvider(o);
            else return;
        }
      } catch {
        this.tracker.trackConnectionRestoringError("Provider is not restored"),
          yield this.bridgeConnectionStorage.removeConnection(),
          l == null || l.closeConnection(),
          (l = null);
        return;
      }
      if (i.signal.aborted) {
        l == null || l.closeConnection(),
          this.tracker.trackConnectionRestoringError(
            "Connection restoring was aborted"
          );
        return;
      }
      if (!l) {
        K2("Provider is not restored"),
          this.tracker.trackConnectionRestoringError(
            "Provider is not restored"
          );
        return;
      }
      (r = this.provider) === null || r === void 0 || r.closeConnection(),
        (this.provider = l),
        l.listen(this.walletEventsListener.bind(this));
      const c = () => {
        this.tracker.trackConnectionRestoringError(
          "Connection restoring was aborted"
        ),
          l == null || l.closeConnection(),
          (l = null);
      };
      i.signal.addEventListener("abort", c);
      const f = fl(
          (p) =>
            Ae(this, void 0, void 0, function* () {
              yield l == null
                ? void 0
                : l.restoreConnection({
                    openingDeadlineMS: t == null ? void 0 : t.openingDeadlineMS,
                    signal: p.signal,
                  }),
                i.signal.removeEventListener("abort", c),
                this.connected
                  ? this.tracker.trackConnectionRestoringCompleted(this.wallet)
                  : this.tracker.trackConnectionRestoringError(
                      "Connection restoring failed"
                    );
            }),
          {
            attempts: Number.MAX_SAFE_INTEGER,
            delayMs: 2e3,
            signal: t == null ? void 0 : t.signal,
          }
        ),
        d = new Promise((p) => setTimeout(() => p(), 12e3));
      return Promise.race([f, d]);
    });
  }
  sendTransaction(t, n) {
    return Ae(this, void 0, void 0, function* () {
      const r = {};
      typeof n == "function"
        ? (r.onRequestSent = n)
        : ((r.onRequestSent = n == null ? void 0 : n.onRequestSent),
          (r.signal = n == null ? void 0 : n.signal));
      const i = Ni(r == null ? void 0 : r.signal);
      if (i.signal.aborted) throw new ze("Transaction sending was aborted");
      this.checkConnection(),
        ML(this.wallet.device.features, {
          requiredMessagesNumber: t.messages.length,
        }),
        this.tracker.trackTransactionSentForSignature(this.wallet, t);
      const { validUntil: s } = t,
        o = aL(t, ["validUntil"]),
        l = t.from || this.account.address,
        c = t.network || this.account.chain,
        f = yield this.provider.sendRequest(
          Ic.convertToRpcRequest(
            Object.assign(Object.assign({}, o), {
              valid_until: s,
              from: l,
              network: c,
            })
          ),
          { onRequestSent: r.onRequestSent, signal: i.signal }
        );
      if (Ic.isError(f))
        return (
          this.tracker.trackTransactionSigningFailed(
            this.wallet,
            t,
            f.error.message,
            f.error.code
          ),
          Ic.parseAndThrowError(f)
        );
      const d = Ic.convertFromRpcResponse(f);
      return this.tracker.trackTransactionSigned(this.wallet, t, d), d;
    });
  }
  disconnect(t) {
    var n;
    return Ae(this, void 0, void 0, function* () {
      if (!this.connected) throw new Rd();
      const r = Ni(t == null ? void 0 : t.signal),
        i = this.abortController;
      if (((this.abortController = r), r.signal.aborted))
        throw new ze("Disconnect was aborted");
      this.onWalletDisconnected("dapp"),
        yield (n = this.provider) === null || n === void 0
          ? void 0
          : n.disconnect({ signal: r.signal }),
        i == null || i.abort();
    });
  }
  pauseConnection() {
    var t;
    ((t = this.provider) === null || t === void 0 ? void 0 : t.type) ===
      "http" && this.provider.pause();
  }
  unPauseConnection() {
    var t;
    return ((t = this.provider) === null || t === void 0 ? void 0 : t.type) !==
      "http"
      ? Promise.resolve()
      : this.provider.unPause();
  }
  addWindowFocusAndBlurSubscriptions() {
    const t = CL();
    if (t)
      try {
        t.addEventListener("visibilitychange", () => {
          t.hidden ? this.pauseConnection() : this.unPauseConnection().catch();
        });
      } catch (n) {
        K2("Cannot subscribe to the document.visibilitychange: ", n);
      }
  }
  createProvider(t) {
    let n;
    return (
      !Array.isArray(t) && lL(t)
        ? (n = new $r(this.dappSettings.storage, t.jsBridgeKey))
        : (n = new Il(this.dappSettings.storage, t)),
      n.listen(this.walletEventsListener.bind(this)),
      n
    );
  }
  walletEventsListener(t) {
    switch (t.event) {
      case "connect":
        this.onWalletConnected(t.payload);
        break;
      case "connect_error":
        this.onWalletConnectError(t.payload);
        break;
      case "disconnect":
        this.onWalletDisconnected("wallet");
    }
  }
  onWalletConnected(t) {
    const n = t.items.find((s) => s.name === "ton_addr"),
      r = t.items.find((s) => s.name === "ton_proof");
    if (!n) throw new ze("ton_addr connection item was not found");
    const i = {
      device: t.device,
      provider: this.provider.type,
      account: {
        address: n.address,
        chain: n.network,
        walletStateInit: n.walletStateInit,
        publicKey: n.publicKey,
      },
    };
    r && (i.connectItems = { tonProof: r }),
      (this.wallet = i),
      this.tracker.trackConnectionCompleted(i);
  }
  onWalletConnectError(t) {
    const n = cL.parseError(t);
    if (
      (this.statusChangeErrorSubscriptions.forEach((r) => r(n)),
      On(n),
      this.tracker.trackConnectionError(t.message, t.code),
      n instanceof x4 || n instanceof b4)
    )
      throw (K2(n), n);
  }
  onWalletDisconnected(t) {
    this.tracker.trackDisconnection(this.wallet, t), (this.wallet = null);
  }
  checkConnection() {
    if (!this.connected) throw new Rd();
  }
  createConnectRequest(t) {
    const n = [{ name: "ton_addr" }];
    return (
      t != null &&
        t.tonProof &&
        n.push({ name: "ton_proof", payload: t.tonProof }),
      { manifestUrl: this.dappSettings.manifestUrl, items: n }
    );
  }
}
Xo.walletsList = new P5();
Xo.isWalletInjected = (e) => $r.isWalletInjected(e);
Xo.isInsideWalletBrowser = (e) => $r.isInsideWalletBrowser(e);
const IL = 81,
  jL = 128;
function ep(e, t = !1) {
  const { wc: n, hex: r } = NL(e);
  let i = IL;
  t && (i |= jL);
  const s = new Int8Array(34);
  (s[0] = i), (s[1] = n), s.set(r, 2);
  const o = new Uint8Array(36);
  return (
    o.set(s),
    o.set(OL(s), 34),
    K6.encode(o).replace(/\+/g, "-").replace(/\//g, "_")
  );
}
function NL(e) {
  if (!e.includes(":"))
    throw new Ja(`Wrong address ${e}. Address must include ":".`);
  const t = e.split(":");
  if (t.length !== 2)
    throw new Ja(`Wrong address ${e}. Address must include ":" only once.`);
  const n = parseInt(t[0]);
  if (n !== 0 && n !== -1)
    throw new Ja(
      `Wrong address ${e}. WC must be eq 0 or -1, but ${n} received.`
    );
  const r = t[1];
  if ((r == null ? void 0 : r.length) !== 64)
    throw new Ja(
      `Wrong address ${e}. Hex part must be 64bytes length, but ${
        r == null ? void 0 : r.length
      } received.`
    );
  return { wc: n, hex: BL(r) };
}
function OL(e) {
  let n = 0;
  const r = new Uint8Array(e.length + 2);
  r.set(e);
  for (let i of r) {
    let s = 128;
    for (; s > 0; )
      (n <<= 1),
        i & s && (n += 1),
        (s >>= 1),
        n > 65535 && ((n &= 65535), (n ^= 4129));
  }
  return new Uint8Array([Math.floor(n / 256), n % 256]);
}
const M5 = {};
for (let e = 0; e <= 255; e++) {
  let t = e.toString(16);
  t.length < 2 && (t = "0" + t), (M5[t] = e);
}
function BL(e) {
  e = e.toLowerCase();
  const t = e.length;
  if (t % 2 !== 0)
    throw new Ld("Hex string must have length a multiple of 2: " + e);
  const n = t / 2,
    r = new Uint8Array(n);
  for (let i = 0; i < n; i++) {
    const s = i * 2,
      o = e.substring(s, s + 2);
    if (!M5.hasOwnProperty(o)) throw new Ld("Invalid hex character: " + o);
    r[i] = M5[o];
  }
  return r;
}
var nl = { exports: {} },
  DL = nl.exports,
  G8;
function FL() {
  return (
    G8 ||
      ((G8 = 1),
      (function (e, t) {
        (function (n, r) {
          var i = "1.0.40",
            s = "",
            o = "?",
            l = "function",
            c = "undefined",
            f = "object",
            d = "string",
            p = "major",
            m = "model",
            g = "name",
            w = "type",
            b = "vendor",
            x = "version",
            E = "architecture",
            P = "console",
            _ = "mobile",
            T = "tablet",
            M = "smarttv",
            L = "wearable",
            O = "embedded",
            U = 500,
            D = "Amazon",
            H = "Apple",
            $ = "ASUS",
            F = "BlackBerry",
            B = "Browser",
            j = "Chrome",
            G = "Edge",
            u1 = "Firefox",
            e1 = "Google",
            i1 = "Huawei",
            Z = "LG",
            b1 = "Microsoft",
            o1 = "Motorola",
            k1 = "Opera",
            Y1 = "Samsung",
            G1 = "Sharp",
            M1 = "Sony",
            Q1 = "Xiaomi",
            re = "Zebra",
            d1 = "Facebook",
            h1 = "Chromium OS",
            y1 = "Mac OS",
            A1 = " Browser",
            L1 = function (K, t1) {
              var r1 = {};
              for (var m1 in K)
                t1[m1] && t1[m1].length % 2 === 0
                  ? (r1[m1] = t1[m1].concat(K[m1]))
                  : (r1[m1] = K[m1]);
              return r1;
            },
            V1 = function (K) {
              for (var t1 = {}, r1 = 0; r1 < K.length; r1++)
                t1[K[r1].toUpperCase()] = K[r1];
              return t1;
            },
            ie = function (K, t1) {
              return typeof K === d ? ae(t1).indexOf(ae(K)) !== -1 : !1;
            },
            ae = function (K) {
              return K.toLowerCase();
            },
            Be = function (K) {
              return typeof K === d
                ? K.replace(/[^\d\.]/g, s).split(".")[0]
                : r;
            },
            Ve = function (K, t1) {
              if (typeof K === d)
                return (
                  (K = K.replace(/^\s\s*/, s)),
                  typeof t1 === c ? K : K.substring(0, U)
                );
            },
            ce = function (K, t1) {
              for (var r1 = 0, m1, R, C, k, q, s1; r1 < t1.length && !q; ) {
                var v1 = t1[r1],
                  w1 = t1[r1 + 1];
                for (m1 = R = 0; m1 < v1.length && !q && v1[m1]; )
                  if (((q = v1[m1++].exec(K)), q))
                    for (C = 0; C < w1.length; C++)
                      (s1 = q[++R]),
                        (k = w1[C]),
                        typeof k === f && k.length > 0
                          ? k.length === 2
                            ? typeof k[1] == l
                              ? (this[k[0]] = k[1].call(this, s1))
                              : (this[k[0]] = k[1])
                            : k.length === 3
                            ? typeof k[1] === l && !(k[1].exec && k[1].test)
                              ? (this[k[0]] = s1
                                  ? k[1].call(this, s1, k[2])
                                  : r)
                              : (this[k[0]] = s1 ? s1.replace(k[1], k[2]) : r)
                            : k.length === 4 &&
                              (this[k[0]] = s1
                                ? k[3].call(this, s1.replace(k[1], k[2]))
                                : r)
                          : (this[k] = s1 || r);
                r1 += 2;
              }
            },
            gt = function (K, t1) {
              for (var r1 in t1)
                if (typeof t1[r1] === f && t1[r1].length > 0) {
                  for (var m1 = 0; m1 < t1[r1].length; m1++)
                    if (ie(t1[r1][m1], K)) return r1 === o ? r : r1;
                } else if (ie(t1[r1], K)) return r1 === o ? r : r1;
              return t1.hasOwnProperty("*") ? t1["*"] : K;
            },
            qe = {
              "1.0": "/8",
              1.2: "/1",
              1.3: "/3",
              "2.0": "/412",
              "2.0.2": "/416",
              "2.0.3": "/417",
              "2.0.4": "/419",
              "?": "/",
            },
            je = {
              ME: "4.90",
              "NT 3.11": "NT3.51",
              "NT 4.0": "NT4.0",
              2e3: "NT 5.0",
              XP: ["NT 5.1", "NT 5.2"],
              Vista: "NT 6.0",
              7: "NT 6.1",
              8: "NT 6.2",
              8.1: "NT 6.3",
              10: ["NT 6.4", "NT 10.0"],
              RT: "ARM",
            },
            g1 = {
              browser: [
                [/\b(?:crmo|crios)\/([\w\.]+)/i],
                [x, [g, "Chrome"]],
                [/edg(?:e|ios|a)?\/([\w\.]+)/i],
                [x, [g, "Edge"]],
                [
                  /(opera mini)\/([-\w\.]+)/i,
                  /(opera [mobiletab]{3,6})\b.+version\/([-\w\.]+)/i,
                  /(opera)(?:.+version\/|[\/ ]+)([\w\.]+)/i,
                ],
                [g, x],
                [/opios[\/ ]+([\w\.]+)/i],
                [x, [g, k1 + " Mini"]],
                [/\bop(?:rg)?x\/([\w\.]+)/i],
                [x, [g, k1 + " GX"]],
                [/\bopr\/([\w\.]+)/i],
                [x, [g, k1]],
                [/\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\/ ]?([\w\.]+)/i],
                [x, [g, "Baidu"]],
                [/\b(?:mxbrowser|mxios|myie2)\/?([-\w\.]*)\b/i],
                [x, [g, "Maxthon"]],
                [
                  /(kindle)\/([\w\.]+)/i,
                  /(lunascape|maxthon|netfront|jasmine|blazer|sleipnir)[\/ ]?([\w\.]*)/i,
                  /(avant|iemobile|slim(?:browser|boat|jet))[\/ ]?([\d\.]*)/i,
                  /(?:ms|\()(ie) ([\w\.]+)/i,
                  /(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|duckduckgo|klar|helio|(?=comodo_)?dragon)\/([-\w\.]+)/i,
                  /(heytap|ovi|115)browser\/([\d\.]+)/i,
                  /(weibo)__([\d\.]+)/i,
                ],
                [g, x],
                [/quark(?:pc)?\/([-\w\.]+)/i],
                [x, [g, "Quark"]],
                [/\bddg\/([\w\.]+)/i],
                [x, [g, "DuckDuckGo"]],
                [/(?:\buc? ?browser|(?:juc.+)ucweb)[\/ ]?([\w\.]+)/i],
                [x, [g, "UC" + B]],
                [
                  /microm.+\bqbcore\/([\w\.]+)/i,
                  /\bqbcore\/([\w\.]+).+microm/i,
                  /micromessenger\/([\w\.]+)/i,
                ],
                [x, [g, "WeChat"]],
                [/konqueror\/([\w\.]+)/i],
                [x, [g, "Konqueror"]],
                [/trident.+rv[: ]([\w\.]{1,9})\b.+like gecko/i],
                [x, [g, "IE"]],
                [/ya(?:search)?browser\/([\w\.]+)/i],
                [x, [g, "Yandex"]],
                [/slbrowser\/([\w\.]+)/i],
                [x, [g, "Smart Lenovo " + B]],
                [/(avast|avg)\/([\w\.]+)/i],
                [[g, /(.+)/, "$1 Secure " + B], x],
                [/\bfocus\/([\w\.]+)/i],
                [x, [g, u1 + " Focus"]],
                [/\bopt\/([\w\.]+)/i],
                [x, [g, k1 + " Touch"]],
                [/coc_coc\w+\/([\w\.]+)/i],
                [x, [g, "Coc Coc"]],
                [/dolfin\/([\w\.]+)/i],
                [x, [g, "Dolphin"]],
                [/coast\/([\w\.]+)/i],
                [x, [g, k1 + " Coast"]],
                [/miuibrowser\/([\w\.]+)/i],
                [x, [g, "MIUI" + A1]],
                [/fxios\/([\w\.-]+)/i],
                [x, [g, u1]],
                [/\bqihoobrowser\/?([\w\.]*)/i],
                [x, [g, "360"]],
                [/\b(qq)\/([\w\.]+)/i],
                [[g, /(.+)/, "$1Browser"], x],
                [/(oculus|sailfish|huawei|vivo|pico)browser\/([\w\.]+)/i],
                [[g, /(.+)/, "$1" + A1], x],
                [/samsungbrowser\/([\w\.]+)/i],
                [x, [g, Y1 + " Internet"]],
                [/metasr[\/ ]?([\d\.]+)/i],
                [x, [g, "Sogou Explorer"]],
                [/(sogou)mo\w+\/([\d\.]+)/i],
                [[g, "Sogou Mobile"], x],
                [
                  /(electron)\/([\w\.]+) safari/i,
                  /(tesla)(?: qtcarbrowser|\/(20\d\d\.[-\w\.]+))/i,
                  /m?(qqbrowser|2345(?=browser|chrome|explorer))\w*[\/ ]?v?([\w\.]+)/i,
                ],
                [g, x],
                [/(lbbrowser|rekonq)/i, /\[(linkedin)app\]/i],
                [g],
                [
                  /ome\/([\w\.]+) \w* ?(iron) saf/i,
                  /ome\/([\w\.]+).+qihu (360)[es]e/i,
                ],
                [x, g],
                [/((?:fban\/fbios|fb_iab\/fb4a)(?!.+fbav)|;fbav\/([\w\.]+);)/i],
                [[g, d1], x],
                [
                  /(Klarna)\/([\w\.]+)/i,
                  /(kakao(?:talk|story))[\/ ]([\w\.]+)/i,
                  /(naver)\(.*?(\d+\.[\w\.]+).*\)/i,
                  /safari (line)\/([\w\.]+)/i,
                  /\b(line)\/([\w\.]+)\/iab/i,
                  /(alipay)client\/([\w\.]+)/i,
                  /(twitter)(?:and| f.+e\/([\w\.]+))/i,
                  /(chromium|instagram|snapchat)[\/ ]([-\w\.]+)/i,
                ],
                [g, x],
                [/\bgsa\/([\w\.]+) .*safari\//i],
                [x, [g, "GSA"]],
                [/musical_ly(?:.+app_?version\/|_)([\w\.]+)/i],
                [x, [g, "TikTok"]],
                [/headlesschrome(?:\/([\w\.]+)| )/i],
                [x, [g, j + " Headless"]],
                [/ wv\).+(chrome)\/([\w\.]+)/i],
                [[g, j + " WebView"], x],
                [/droid.+ version\/([\w\.]+)\b.+(?:mobile safari|safari)/i],
                [x, [g, "Android " + B]],
                [/(chrome|omniweb|arora|[tizenoka]{5} ?browser)\/v?([\w\.]+)/i],
                [g, x],
                [/version\/([\w\.\,]+) .*mobile\/\w+ (safari)/i],
                [x, [g, "Mobile Safari"]],
                [/version\/([\w(\.|\,)]+) .*(mobile ?safari|safari)/i],
                [x, g],
                [/webkit.+?(mobile ?safari|safari)(\/[\w\.]+)/i],
                [g, [x, gt, qe]],
                [/(webkit|khtml)\/([\w\.]+)/i],
                [g, x],
                [/(navigator|netscape\d?)\/([-\w\.]+)/i],
                [[g, "Netscape"], x],
                [/(wolvic|librewolf)\/([\w\.]+)/i],
                [g, x],
                [/mobile vr; rv:([\w\.]+)\).+firefox/i],
                [x, [g, u1 + " Reality"]],
                [
                  /ekiohf.+(flow)\/([\w\.]+)/i,
                  /(swiftfox)/i,
                  /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror)[\/ ]?([\w\.\+]+)/i,
                  /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\/([-\w\.]+)$/i,
                  /(firefox)\/([\w\.]+)/i,
                  /(mozilla)\/([\w\.]+) .+rv\:.+gecko\/\d+/i,
                  /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|obigo|mosaic|(?:go|ice|up)[\. ]?browser)[-\/ ]?v?([\w\.]+)/i,
                  /(links) \(([\w\.]+)/i,
                ],
                [g, [x, /_/g, "."]],
                [/(cobalt)\/([\w\.]+)/i],
                [g, [x, /master.|lts./, ""]],
              ],
              cpu: [
                [/(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\)]/i],
                [[E, "amd64"]],
                [/(ia32(?=;))/i],
                [[E, ae]],
                [/((?:i[346]|x)86)[;\)]/i],
                [[E, "ia32"]],
                [/\b(aarch64|arm(v?8e?l?|_?64))\b/i],
                [[E, "arm64"]],
                [/\b(arm(?:v[67])?ht?n?[fl]p?)\b/i],
                [[E, "armhf"]],
                [/windows (ce|mobile); ppc;/i],
                [[E, "arm"]],
                [/((?:ppc|powerpc)(?:64)?)(?: mac|;|\))/i],
                [[E, /ower/, s, ae]],
                [/(sun4\w)[;\)]/i],
                [[E, "sparc"]],
                [
                  /((?:avr32|ia64(?=;))|68k(?=\))|\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\b|pa-risc)/i,
                ],
                [[E, ae]],
              ],
              device: [
                [
                  /\b(sch-i[89]0\d|shw-m380s|sm-[ptx]\w{2,4}|gt-[pn]\d{2,4}|sgh-t8[56]9|nexus 10)/i,
                ],
                [m, [b, Y1], [w, T]],
                [
                  /\b((?:s[cgp]h|gt|sm)-(?![lr])\w+|sc[g-]?[\d]+a?|galaxy nexus)/i,
                  /samsung[- ]((?!sm-[lr])[-\w]+)/i,
                  /sec-(sgh\w+)/i,
                ],
                [m, [b, Y1], [w, _]],
                [/(?:\/|\()(ip(?:hone|od)[\w, ]*)(?:\/|;)/i],
                [m, [b, H], [w, _]],
                [
                  /\((ipad);[-\w\),; ]+apple/i,
                  /applecoremedia\/[\w\.]+ \((ipad)/i,
                  /\b(ipad)\d\d?,\d\d?[;\]].+ios/i,
                ],
                [m, [b, H], [w, T]],
                [/(macintosh);/i],
                [m, [b, H]],
                [/\b(sh-?[altvz]?\d\d[a-ekm]?)/i],
                [m, [b, G1], [w, _]],
                [/(?:honor)([-\w ]+)[;\)]/i],
                [m, [b, "Honor"], [w, _]],
                [/\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\d{2})\b(?!.+d\/s)/i],
                [m, [b, i1], [w, T]],
                [
                  /(?:huawei)([-\w ]+)[;\)]/i,
                  /\b(nexus 6p|\w{2,4}e?-[atu]?[ln][\dx][012359c][adn]?)\b(?!.+d\/s)/i,
                ],
                [m, [b, i1], [w, _]],
                [
                  /\b(poco[\w ]+|m2\d{3}j\d\d[a-z]{2})(?: bui|\))/i,
                  /\b; (\w+) build\/hm\1/i,
                  /\b(hm[-_ ]?note?[_ ]?(?:\d\w)?) bui/i,
                  /\b(redmi[\-_ ]?(?:note|k)?[\w_ ]+)(?: bui|\))/i,
                  /oid[^\)]+; (m?[12][0-389][01]\w{3,6}[c-y])( bui|; wv|\))/i,
                  /\b(mi[-_ ]?(?:a\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\d?\w?)[_ ]?(?:plus|se|lite|pro)?)(?: bui|\))/i,
                ],
                [
                  [m, /_/g, " "],
                  [b, Q1],
                  [w, _],
                ],
                [
                  /oid[^\)]+; (2\d{4}(283|rpbf)[cgl])( bui|\))/i,
                  /\b(mi[-_ ]?(?:pad)(?:[\w_ ]+))(?: bui|\))/i,
                ],
                [
                  [m, /_/g, " "],
                  [b, Q1],
                  [w, T],
                ],
                [
                  /; (\w+) bui.+ oppo/i,
                  /\b(cph[12]\d{3}|p(?:af|c[al]|d\w|e[ar])[mt]\d0|x9007|a101op)\b/i,
                ],
                [m, [b, "OPPO"], [w, _]],
                [/\b(opd2\d{3}a?) bui/i],
                [m, [b, "OPPO"], [w, T]],
                [/vivo (\w+)(?: bui|\))/i, /\b(v[12]\d{3}\w?[at])(?: bui|;)/i],
                [m, [b, "Vivo"], [w, _]],
                [/\b(rmx[1-3]\d{3})(?: bui|;|\))/i],
                [m, [b, "Realme"], [w, _]],
                [
                  /\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\b[\w ]+build\//i,
                  /\bmot(?:orola)?[- ](\w*)/i,
                  /((?:moto[\w\(\) ]+|xt\d{3,4}|nexus 6)(?= bui|\)))/i,
                ],
                [m, [b, o1], [w, _]],
                [/\b(mz60\d|xoom[2 ]{0,2}) build\//i],
                [m, [b, o1], [w, T]],
                [
                  /((?=lg)?[vl]k\-?\d{3}) bui| 3\.[-\w; ]{10}lg?-([06cv9]{3,4})/i,
                ],
                [m, [b, Z], [w, T]],
                [
                  /(lm(?:-?f100[nv]?|-[\w\.]+)(?= bui|\))|nexus [45])/i,
                  /\blg[-e;\/ ]+((?!browser|netcast|android tv)\w+)/i,
                  /\blg-?([\d\w]+) bui/i,
                ],
                [m, [b, Z], [w, _]],
                [
                  /(ideatab[-\w ]+)/i,
                  /lenovo ?(s[56]000[-\w]+|tab(?:[\w ]+)|yt[-\d\w]{6}|tb[-\d\w]{6})/i,
                ],
                [m, [b, "Lenovo"], [w, T]],
                [
                  /(?:maemo|nokia).*(n900|lumia \d+)/i,
                  /nokia[-_ ]?([-\w\.]*)/i,
                ],
                [
                  [m, /_/g, " "],
                  [b, "Nokia"],
                  [w, _],
                ],
                [/(pixel c)\b/i],
                [m, [b, e1], [w, T]],
                [/droid.+; (pixel[\daxl ]{0,6})(?: bui|\))/i],
                [m, [b, e1], [w, _]],
                [
                  /droid.+; (a?\d[0-2]{2}so|[c-g]\d{4}|so[-gl]\w+|xq-a\w[4-7][12])(?= bui|\).+chrome\/(?![1-6]{0,1}\d\.))/i,
                ],
                [m, [b, M1], [w, _]],
                [/sony tablet [ps]/i, /\b(?:sony)?sgp\w+(?: bui|\))/i],
                [
                  [m, "Xperia Tablet"],
                  [b, M1],
                  [w, T],
                ],
                [
                  / (kb2005|in20[12]5|be20[12][59])\b/i,
                  /(?:one)?(?:plus)? (a\d0\d\d)(?: b|\))/i,
                ],
                [m, [b, "OnePlus"], [w, _]],
                [
                  /(alexa)webm/i,
                  /(kf[a-z]{2}wi|aeo(?!bc)\w\w)( bui|\))/i,
                  /(kf[a-z]+)( bui|\)).+silk\//i,
                ],
                [m, [b, D], [w, T]],
                [/((?:sd|kf)[0349hijorstuw]+)( bui|\)).+silk\//i],
                [
                  [m, /(.+)/g, "Fire Phone $1"],
                  [b, D],
                  [w, _],
                ],
                [/(playbook);[-\w\),; ]+(rim)/i],
                [m, b, [w, T]],
                [/\b((?:bb[a-f]|st[hv])100-\d)/i, /\(bb10; (\w+)/i],
                [m, [b, F], [w, _]],
                [
                  /(?:\b|asus_)(transfo[prime ]{4,10} \w+|eeepc|slider \w+|nexus 7|padfone|p00[cj])/i,
                ],
                [m, [b, $], [w, T]],
                [/ (z[bes]6[027][012][km][ls]|zenfone \d\w?)\b/i],
                [m, [b, $], [w, _]],
                [/(nexus 9)/i],
                [m, [b, "HTC"], [w, T]],
                [
                  /(htc)[-;_ ]{1,2}([\w ]+(?=\)| bui)|\w+)/i,
                  /(zte)[- ]([\w ]+?)(?: bui|\/|\))/i,
                  /(alcatel|geeksphone|nexian|panasonic(?!(?:;|\.))|sony(?!-bra))[-_ ]?([-\w]*)/i,
                ],
                [b, [m, /_/g, " "], [w, _]],
                [
                  /droid [\w\.]+; ((?:8[14]9[16]|9(?:0(?:48|60|8[01])|1(?:3[27]|66)|2(?:6[69]|9[56])|466))[gqswx])\w*(\)| bui)/i,
                ],
                [m, [b, "TCL"], [w, T]],
                [/(itel) ((\w+))/i],
                [
                  [b, ae],
                  m,
                  [w, gt, { tablet: ["p10001l", "w7001"], "*": "mobile" }],
                ],
                [/droid.+; ([ab][1-7]-?[0178a]\d\d?)/i],
                [m, [b, "Acer"], [w, T]],
                [/droid.+; (m[1-5] note) bui/i, /\bmz-([-\w]{2,})/i],
                [m, [b, "Meizu"], [w, _]],
                [/; ((?:power )?armor(?:[\w ]{0,8}))(?: bui|\))/i],
                [m, [b, "Ulefone"], [w, _]],
                [
                  /; (energy ?\w+)(?: bui|\))/i,
                  /; energizer ([\w ]+)(?: bui|\))/i,
                ],
                [m, [b, "Energizer"], [w, _]],
                [
                  /; cat (b35);/i,
                  /; (b15q?|s22 flip|s48c|s62 pro)(?: bui|\))/i,
                ],
                [m, [b, "Cat"], [w, _]],
                [/((?:new )?andromax[\w- ]+)(?: bui|\))/i],
                [m, [b, "Smartfren"], [w, _]],
                [/droid.+; (a(?:015|06[35]|142p?))/i],
                [m, [b, "Nothing"], [w, _]],
                [
                  /(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno|micromax|advan)[-_ ]?([-\w]*)/i,
                  /; (imo) ((?!tab)[\w ]+?)(?: bui|\))/i,
                  /(hp) ([\w ]+\w)/i,
                  /(asus)-?(\w+)/i,
                  /(microsoft); (lumia[\w ]+)/i,
                  /(lenovo)[-_ ]?([-\w]+)/i,
                  /(jolla)/i,
                  /(oppo) ?([\w ]+) bui/i,
                ],
                [b, m, [w, _]],
                [
                  /(imo) (tab \w+)/i,
                  /(kobo)\s(ereader|touch)/i,
                  /(archos) (gamepad2?)/i,
                  /(hp).+(touchpad(?!.+tablet)|tablet)/i,
                  /(kindle)\/([\w\.]+)/i,
                  /(nook)[\w ]+build\/(\w+)/i,
                  /(dell) (strea[kpr\d ]*[\dko])/i,
                  /(le[- ]+pan)[- ]+(\w{1,9}) bui/i,
                  /(trinity)[- ]*(t\d{3}) bui/i,
                  /(gigaset)[- ]+(q\w{1,9}) bui/i,
                  /(vodafone) ([\w ]+)(?:\)| bui)/i,
                ],
                [b, m, [w, T]],
                [/(surface duo)/i],
                [m, [b, b1], [w, T]],
                [/droid [\d\.]+; (fp\du?)(?: b|\))/i],
                [m, [b, "Fairphone"], [w, _]],
                [/(u304aa)/i],
                [m, [b, "AT&T"], [w, _]],
                [/\bsie-(\w*)/i],
                [m, [b, "Siemens"], [w, _]],
                [/\b(rct\w+) b/i],
                [m, [b, "RCA"], [w, T]],
                [/\b(venue[\d ]{2,7}) b/i],
                [m, [b, "Dell"], [w, T]],
                [/\b(q(?:mv|ta)\w+) b/i],
                [m, [b, "Verizon"], [w, T]],
                [/\b(?:barnes[& ]+noble |bn[rt])([\w\+ ]*) b/i],
                [m, [b, "Barnes & Noble"], [w, T]],
                [/\b(tm\d{3}\w+) b/i],
                [m, [b, "NuVision"], [w, T]],
                [/\b(k88) b/i],
                [m, [b, "ZTE"], [w, T]],
                [/\b(nx\d{3}j) b/i],
                [m, [b, "ZTE"], [w, _]],
                [/\b(gen\d{3}) b.+49h/i],
                [m, [b, "Swiss"], [w, _]],
                [/\b(zur\d{3}) b/i],
                [m, [b, "Swiss"], [w, T]],
                [/\b((zeki)?tb.*\b) b/i],
                [m, [b, "Zeki"], [w, T]],
                [/\b([yr]\d{2}) b/i, /\b(dragon[- ]+touch |dt)(\w{5}) b/i],
                [[b, "Dragon Touch"], m, [w, T]],
                [/\b(ns-?\w{0,9}) b/i],
                [m, [b, "Insignia"], [w, T]],
                [/\b((nxa|next)-?\w{0,9}) b/i],
                [m, [b, "NextBook"], [w, T]],
                [/\b(xtreme\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i],
                [[b, "Voice"], m, [w, _]],
                [/\b(lvtel\-)?(v1[12]) b/i],
                [[b, "LvTel"], m, [w, _]],
                [/\b(ph-1) /i],
                [m, [b, "Essential"], [w, _]],
                [/\b(v(100md|700na|7011|917g).*\b) b/i],
                [m, [b, "Envizen"], [w, T]],
                [/\b(trio[-\w\. ]+) b/i],
                [m, [b, "MachSpeed"], [w, T]],
                [/\btu_(1491) b/i],
                [m, [b, "Rotor"], [w, T]],
                [/(shield[\w ]+) b/i],
                [m, [b, "Nvidia"], [w, T]],
                [/(sprint) (\w+)/i],
                [b, m, [w, _]],
                [/(kin\.[onetw]{3})/i],
                [
                  [m, /\./g, " "],
                  [b, b1],
                  [w, _],
                ],
                [/droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\)/i],
                [m, [b, re], [w, T]],
                [/droid.+; (ec30|ps20|tc[2-8]\d[kx])\)/i],
                [m, [b, re], [w, _]],
                [/smart-tv.+(samsung)/i],
                [b, [w, M]],
                [/hbbtv.+maple;(\d+)/i],
                [
                  [m, /^/, "SmartTV"],
                  [b, Y1],
                  [w, M],
                ],
                [/(nux; netcast.+smarttv|lg (netcast\.tv-201\d|android tv))/i],
                [
                  [b, Z],
                  [w, M],
                ],
                [/(apple) ?tv/i],
                [b, [m, H + " TV"], [w, M]],
                [/crkey/i],
                [
                  [m, j + "cast"],
                  [b, e1],
                  [w, M],
                ],
                [/droid.+aft(\w+)( bui|\))/i],
                [m, [b, D], [w, M]],
                [/\(dtv[\);].+(aquos)/i, /(aquos-tv[\w ]+)\)/i],
                [m, [b, G1], [w, M]],
                [/(bravia[\w ]+)( bui|\))/i],
                [m, [b, M1], [w, M]],
                [/(mitv-\w{5}) bui/i],
                [m, [b, Q1], [w, M]],
                [/Hbbtv.*(technisat) (.*);/i],
                [b, m, [w, M]],
                [
                  /\b(roku)[\dx]*[\)\/]((?:dvp-)?[\d\.]*)/i,
                  /hbbtv\/\d+\.\d+\.\d+ +\([\w\+ ]*; *([\w\d][^;]*);([^;]*)/i,
                ],
                [
                  [b, Ve],
                  [m, Ve],
                  [w, M],
                ],
                [/\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\b/i],
                [[w, M]],
                [/(ouya)/i, /(nintendo) ([wids3utch]+)/i],
                [b, m, [w, P]],
                [/droid.+; (shield) bui/i],
                [m, [b, "Nvidia"], [w, P]],
                [/(playstation [345portablevi]+)/i],
                [m, [b, M1], [w, P]],
                [/\b(xbox(?: one)?(?!; xbox))[\); ]/i],
                [m, [b, b1], [w, P]],
                [/\b(sm-[lr]\d\d[05][fnuw]?s?)\b/i],
                [m, [b, Y1], [w, L]],
                [/((pebble))app/i],
                [b, m, [w, L]],
                [/(watch)(?: ?os[,\/]|\d,\d\/)[\d\.]+/i],
                [m, [b, H], [w, L]],
                [/droid.+; (glass) \d/i],
                [m, [b, e1], [w, L]],
                [/droid.+; (wt63?0{2,3})\)/i],
                [m, [b, re], [w, L]],
                [/droid.+; (glass) \d/i],
                [m, [b, e1], [w, L]],
                [/(pico) (4|neo3(?: link|pro)?)/i],
                [b, m, [w, L]],
                [/; (quest( \d| pro)?)/i],
                [m, [b, d1], [w, L]],
                [/(tesla)(?: qtcarbrowser|\/[-\w\.]+)/i],
                [b, [w, O]],
                [/(aeobc)\b/i],
                [m, [b, D], [w, O]],
                [
                  /droid .+?; ([^;]+?)(?: bui|; wv\)|\) applew).+? mobile safari/i,
                ],
                [m, [w, _]],
                [/droid .+?; ([^;]+?)(?: bui|\) applew).+?(?! mobile) safari/i],
                [m, [w, T]],
                [/\b((tablet|tab)[;\/]|focus\/\d(?!.+mobile))/i],
                [[w, T]],
                [
                  /(phone|mobile(?:[;\/]| [ \w\/\.]*safari)|pda(?=.+windows ce))/i,
                ],
                [[w, _]],
                [/(android[-\w\. ]{0,9});.+buil/i],
                [m, [b, "Generic"]],
              ],
              engine: [
                [/windows.+ edge\/([\w\.]+)/i],
                [x, [g, G + "HTML"]],
                [/(arkweb)\/([\w\.]+)/i],
                [g, x],
                [/webkit\/537\.36.+chrome\/(?!27)([\w\.]+)/i],
                [x, [g, "Blink"]],
                [
                  /(presto)\/([\w\.]+)/i,
                  /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna|servo)\/([\w\.]+)/i,
                  /ekioh(flow)\/([\w\.]+)/i,
                  /(khtml|tasman|links)[\/ ]\(?([\w\.]+)/i,
                  /(icab)[\/ ]([23]\.[\d\.]+)/i,
                  /\b(libweb)/i,
                ],
                [g, x],
                [/rv\:([\w\.]{1,9})\b.+(gecko)/i],
                [x, g],
              ],
              os: [
                [/microsoft (windows) (vista|xp)/i],
                [g, x],
                [/(windows (?:phone(?: os)?|mobile))[\/ ]?([\d\.\w ]*)/i],
                [g, [x, gt, je]],
                [
                  /windows nt 6\.2; (arm)/i,
                  /windows[\/ ]?([ntce\d\. ]+\w)(?!.+xbox)/i,
                  /(?:win(?=3|9|n)|win 9x )([nt\d\.]+)/i,
                ],
                [
                  [x, gt, je],
                  [g, "Windows"],
                ],
                [
                  /ip[honead]{2,4}\b(?:.*os ([\w]+) like mac|; opera)/i,
                  /(?:ios;fbsv\/|iphone.+ios[\/ ])([\d\.]+)/i,
                  /cfnetwork\/.+darwin/i,
                ],
                [
                  [x, /_/g, "."],
                  [g, "iOS"],
                ],
                [
                  /(mac os x) ?([\w\. ]*)/i,
                  /(macintosh|mac_powerpc\b)(?!.+haiku)/i,
                ],
                [
                  [g, y1],
                  [x, /_/g, "."],
                ],
                [/droid ([\w\.]+)\b.+(android[- ]x86|harmonyos)/i],
                [x, g],
                [
                  /(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish|openharmony)[-\/ ]?([\w\.]*)/i,
                  /(blackberry)\w*\/([\w\.]*)/i,
                  /(tizen|kaios)[\/ ]([\w\.]+)/i,
                  /\((series40);/i,
                ],
                [g, x],
                [/\(bb(10);/i],
                [x, [g, F]],
                [/(?:symbian ?os|symbos|s60(?=;)|series60)[-\/ ]?([\w\.]*)/i],
                [x, [g, "Symbian"]],
                [
                  /mozilla\/[\d\.]+ \((?:mobile|tablet|tv|mobile; [\w ]+); rv:.+ gecko\/([\w\.]+)/i,
                ],
                [x, [g, u1 + " OS"]],
                [/web0s;.+rt(tv)/i, /\b(?:hp)?wos(?:browser)?\/([\w\.]+)/i],
                [x, [g, "webOS"]],
                [/watch(?: ?os[,\/]|\d,\d\/)([\d\.]+)/i],
                [x, [g, "watchOS"]],
                [/crkey\/([\d\.]+)/i],
                [x, [g, j + "cast"]],
                [/(cros) [\w]+(?:\)| ([\w\.]+)\b)/i],
                [[g, h1], x],
                [
                  /panasonic;(viera)/i,
                  /(netrange)mmh/i,
                  /(nettv)\/(\d+\.[\w\.]+)/i,
                  /(nintendo|playstation) ([wids345portablevuch]+)/i,
                  /(xbox); +xbox ([^\);]+)/i,
                  /\b(joli|palm)\b ?(?:os)?\/?([\w\.]*)/i,
                  /(mint)[\/\(\) ]?(\w*)/i,
                  /(mageia|vectorlinux)[; ]/i,
                  /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\/ ]?(?!chrom|package)([-\w\.]*)/i,
                  /(hurd|linux) ?([\w\.]*)/i,
                  /(gnu) ?([\w\.]*)/i,
                  /\b([-frentopcghs]{0,5}bsd|dragonfly)[\/ ]?(?!amd|[ix346]{1,2}86)([\w\.]*)/i,
                  /(haiku) (\w+)/i,
                ],
                [g, x],
                [/(sunos) ?([\w\.\d]*)/i],
                [[g, "Solaris"], x],
                [
                  /((?:open)?solaris)[-\/ ]?([\w\.]*)/i,
                  /(aix) ((\d)(?=\.|\)| )[\w\.])*/i,
                  /\b(beos|os\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i,
                  /(unix) ?([\w\.]*)/i,
                ],
                [g, x],
              ],
            },
            E1 = function (K, t1) {
              if (
                (typeof K === f && ((t1 = K), (K = r)), !(this instanceof E1))
              )
                return new E1(K, t1).getResult();
              var r1 = typeof n !== c && n.navigator ? n.navigator : r,
                m1 = K || (r1 && r1.userAgent ? r1.userAgent : s),
                R = r1 && r1.userAgentData ? r1.userAgentData : r,
                C = t1 ? L1(g1, t1) : g1,
                k = r1 && r1.userAgent == m1;
              return (
                (this.getBrowser = function () {
                  var q = {};
                  return (
                    (q[g] = r),
                    (q[x] = r),
                    ce.call(q, m1, C.browser),
                    (q[p] = Be(q[x])),
                    k &&
                      r1 &&
                      r1.brave &&
                      typeof r1.brave.isBrave == l &&
                      (q[g] = "Brave"),
                    q
                  );
                }),
                (this.getCPU = function () {
                  var q = {};
                  return (q[E] = r), ce.call(q, m1, C.cpu), q;
                }),
                (this.getDevice = function () {
                  var q = {};
                  return (
                    (q[b] = r),
                    (q[m] = r),
                    (q[w] = r),
                    ce.call(q, m1, C.device),
                    k && !q[w] && R && R.mobile && (q[w] = _),
                    k &&
                      q[m] == "Macintosh" &&
                      r1 &&
                      typeof r1.standalone !== c &&
                      r1.maxTouchPoints &&
                      r1.maxTouchPoints > 2 &&
                      ((q[m] = "iPad"), (q[w] = T)),
                    q
                  );
                }),
                (this.getEngine = function () {
                  var q = {};
                  return (q[g] = r), (q[x] = r), ce.call(q, m1, C.engine), q;
                }),
                (this.getOS = function () {
                  var q = {};
                  return (
                    (q[g] = r),
                    (q[x] = r),
                    ce.call(q, m1, C.os),
                    k &&
                      !q[g] &&
                      R &&
                      R.platform &&
                      R.platform != "Unknown" &&
                      (q[g] = R.platform
                        .replace(/chrome os/i, h1)
                        .replace(/macos/i, y1)),
                    q
                  );
                }),
                (this.getResult = function () {
                  return {
                    ua: this.getUA(),
                    browser: this.getBrowser(),
                    engine: this.getEngine(),
                    os: this.getOS(),
                    device: this.getDevice(),
                    cpu: this.getCPU(),
                  };
                }),
                (this.getUA = function () {
                  return m1;
                }),
                (this.setUA = function (q) {
                  return (
                    (m1 = typeof q === d && q.length > U ? Ve(q, U) : q), this
                  );
                }),
                this.setUA(m1),
                this
              );
            };
          (E1.VERSION = i),
            (E1.BROWSER = V1([g, x, p])),
            (E1.CPU = V1([E])),
            (E1.DEVICE = V1([m, b, w, P, _, M, T, L, O])),
            (E1.ENGINE = E1.OS = V1([g, x])),
            e.exports && (t = e.exports = E1),
            (t.UAParser = E1);
          var j1 = typeof n !== c && (n.jQuery || n.Zepto);
          if (j1 && !j1.ua) {
            var a1 = new E1();
            (j1.ua = a1.getResult()),
              (j1.ua.get = function () {
                return a1.getUA();
              }),
              (j1.ua.set = function (K) {
                a1.setUA(K);
                var t1 = a1.getResult();
                for (var r1 in t1) j1.ua[r1] = t1[r1];
              });
          }
        })(typeof window == "object" ? window : DL);
      })(nl, nl.exports)),
    nl.exports
  );
}
var UL = FL();
const $L = qs(UL);
var a9, Y8;
function VL() {
  if (Y8) return a9;
  Y8 = 1;
  var e = function (P) {
    return t(P) && !n(P);
  };
  function t(E) {
    return !!E && typeof E == "object";
  }
  function n(E) {
    var P = Object.prototype.toString.call(E);
    return P === "[object RegExp]" || P === "[object Date]" || s(E);
  }
  var r = typeof Symbol == "function" && Symbol.for,
    i = r ? Symbol.for("react.element") : 60103;
  function s(E) {
    return E.$$typeof === i;
  }
  function o(E) {
    return Array.isArray(E) ? [] : {};
  }
  function l(E, P) {
    return P.clone !== !1 && P.isMergeableObject(E) ? b(o(E), E, P) : E;
  }
  function c(E, P, _) {
    return E.concat(P).map(function (T) {
      return l(T, _);
    });
  }
  function f(E, P) {
    if (!P.customMerge) return b;
    var _ = P.customMerge(E);
    return typeof _ == "function" ? _ : b;
  }
  function d(E) {
    return Object.getOwnPropertySymbols
      ? Object.getOwnPropertySymbols(E).filter(function (P) {
          return Object.propertyIsEnumerable.call(E, P);
        })
      : [];
  }
  function p(E) {
    return Object.keys(E).concat(d(E));
  }
  function m(E, P) {
    try {
      return P in E;
    } catch {
      return !1;
    }
  }
  function g(E, P) {
    return (
      m(E, P) &&
      !(
        Object.hasOwnProperty.call(E, P) &&
        Object.propertyIsEnumerable.call(E, P)
      )
    );
  }
  function w(E, P, _) {
    var T = {};
    return (
      _.isMergeableObject(E) &&
        p(E).forEach(function (M) {
          T[M] = l(E[M], _);
        }),
      p(P).forEach(function (M) {
        g(E, M) ||
          (m(E, M) && _.isMergeableObject(P[M])
            ? (T[M] = f(M, _)(E[M], P[M], _))
            : (T[M] = l(P[M], _)));
      }),
      T
    );
  }
  function b(E, P, _) {
    (_ = _ || {}),
      (_.arrayMerge = _.arrayMerge || c),
      (_.isMergeableObject = _.isMergeableObject || e),
      (_.cloneUnlessOtherwiseSpecified = l);
    var T = Array.isArray(P),
      M = Array.isArray(E),
      L = T === M;
    return L ? (T ? _.arrayMerge(E, P, _) : w(E, P, _)) : l(P, _);
  }
  b.all = function (P, _) {
    if (!Array.isArray(P)) throw new Error("first argument should be an array");
    return P.reduce(function (T, M) {
      return b(T, M, _);
    }, {});
  };
  var x = b;
  return (a9 = x), a9;
}
var WL = VL();
const zL = qs(WL);
var l9 = { exports: {} };
/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/ var Q8;
function HL() {
  return (
    Q8 ||
      ((Q8 = 1),
      (function (e) {
        (function () {
          var t = {}.hasOwnProperty;
          function n() {
            for (var s = "", o = 0; o < arguments.length; o++) {
              var l = arguments[o];
              l && (s = i(s, r(l)));
            }
            return s;
          }
          function r(s) {
            if (typeof s == "string" || typeof s == "number") return s;
            if (typeof s != "object") return "";
            if (Array.isArray(s)) return n.apply(null, s);
            if (
              s.toString !== Object.prototype.toString &&
              !s.toString.toString().includes("[native code]")
            )
              return s.toString();
            var o = "";
            for (var l in s) t.call(s, l) && s[l] && (o = i(o, l));
            return o;
          }
          function i(s, o) {
            return o ? (s ? s + " " + o : s + o) : s;
          }
          e.exports
            ? ((n.default = n), (e.exports = n))
            : (window.classNames = n);
        })();
      })(l9)),
    l9.exports
  );
}
var qL = HL();
const ld = qs(qL);
var KL = Object.defineProperty,
  GL = Object.defineProperties,
  YL = Object.getOwnPropertyDescriptors,
  Z8 = Object.getOwnPropertySymbols,
  QL = Object.prototype.hasOwnProperty,
  ZL = Object.prototype.propertyIsEnumerable,
  R5 = (e, t, n) =>
    t in e
      ? KL(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n })
      : (e[t] = n),
  Ft = (e, t) => {
    for (var n in t || (t = {})) QL.call(t, n) && R5(e, n, t[n]);
    if (Z8) for (var n of Z8(t)) ZL.call(t, n) && R5(e, n, t[n]);
    return e;
  },
  Jr = (e, t) => GL(e, YL(t)),
  Ke = (e, t, n) => (R5(e, typeof t != "symbol" ? t + "" : t, n), n),
  Dt = (e, t, n) =>
    new Promise((r, i) => {
      var s = (c) => {
          try {
            l(n.next(c));
          } catch (f) {
            i(f);
          }
        },
        o = (c) => {
          try {
            l(n.throw(c));
          } catch (f) {
            i(f);
          }
        },
        l = (c) => (c.done ? r(c.value) : Promise.resolve(c.value).then(s, o));
      l((n = n.apply(e, t)).next());
    }),
  X8,
  J8,
  ey,
  ty,
  ny,
  ry,
  iy,
  sy;
const dn = {};
function XL(e) {
  dn.context = e;
}
const JL = (e, t) => e === t,
  Di = Symbol("solid-proxy"),
  L5 = Symbol("solid-track"),
  jd = { equals: JL };
let WC = QC;
const ns = 1,
  Nd = 2,
  zC = { owned: null, cleanups: null, context: null, owner: null },
  u9 = {};
var Bn = null;
let Ko = null,
  vn = null,
  vr = null,
  G2 = null,
  tp = 0;
function pl(e, t) {
  const n = vn,
    r = Bn,
    i = e.length === 0,
    s = i
      ? zC
      : {
          owned: null,
          cleanups: null,
          context: null,
          owner: t === void 0 ? r : t,
        },
    o = i ? e : () => e(() => Yn(() => M4(s)));
  (Bn = s), (vn = null);
  try {
    return Fs(o, !0);
  } finally {
    (vn = n), (Bn = r);
  }
}
function et(e, t) {
  t = t ? Object.assign({}, jd, t) : jd;
  const n = {
      value: e,
      observers: null,
      observerSlots: null,
      comparator: t.equals || void 0,
    },
    r = (i) => (typeof i == "function" && (i = i(n.value)), YC(n, i));
  return [GC.bind(n), r];
}
function np(e, t, n) {
  const r = P4(e, t, !0, ns);
  _3(r);
}
function xt(e, t, n) {
  const r = P4(e, t, !1, ns);
  _3(r);
}
function Dn(e, t, n) {
  WC = oI;
  const r = P4(e, t, !1, ns);
  (r.user = !0), G2 ? G2.push(r) : _3(r);
}
function ke(e, t, n) {
  n = n ? Object.assign({}, jd, n) : jd;
  const r = P4(e, t, !0, 0);
  return (
    (r.observers = null),
    (r.observerSlots = null),
    (r.comparator = n.equals || void 0),
    _3(r),
    GC.bind(r)
  );
}
function eI(e, t, n) {
  let r, i, s;
  arguments.length === 1
    ? ((r = !0), (i = e), (s = {}))
    : ((r = e), (i = t), (s = {}));
  let o = null,
    l = u9,
    c = null,
    f = !1,
    d = "initialValue" in s,
    p = typeof r == "function" && ke(r);
  const m = new Set(),
    [g, w] = (s.storage || et)(s.initialValue),
    [b, x] = et(void 0),
    [E, P] = et(void 0, { equals: !1 }),
    [_, T] = et(d ? "ready" : "unresolved");
  if (dn.context) {
    c = `${dn.context.id}${dn.context.count++}`;
    let D;
    s.ssrLoadFrom === "initial"
      ? (l = s.initialValue)
      : dn.load && (D = dn.load(c)) && (l = D[0]);
  }
  function M(D, H, $, F) {
    return (
      o === D &&
        ((o = null),
        (d = !0),
        (D === l || H === l) &&
          s.onHydrated &&
          queueMicrotask(() => s.onHydrated(F, { value: H })),
        (l = u9),
        L(H, $)),
      H
    );
  }
  function L(D, H) {
    Fs(() => {
      H === void 0 && w(() => D), T(H !== void 0 ? "errored" : "ready"), x(H);
      for (const $ of m.keys()) $.decrement();
      m.clear();
    }, !1);
  }
  function O() {
    const D = rI,
      H = g(),
      $ = b();
    if ($ !== void 0 && !o) throw $;
    return vn && vn.user, H;
  }
  function U(D = !0) {
    if (D !== !1 && f) return;
    f = !1;
    const H = p ? p() : r;
    if (H == null || H === !1) {
      M(o, Yn(g));
      return;
    }
    const $ = l !== u9 ? l : Yn(() => i(H, { value: g(), refetching: D }));
    return typeof $ != "object" || !($ && "then" in $)
      ? (M(o, $, void 0, H), $)
      : ((o = $),
        (f = !0),
        queueMicrotask(() => (f = !1)),
        Fs(() => {
          T(d ? "refreshing" : "pending"), P();
        }, !1),
        $.then(
          (F) => M($, F, void 0, H),
          (F) => M($, void 0, XC(F), H)
        ));
  }
  return (
    Object.defineProperties(O, {
      state: { get: () => _() },
      error: { get: () => b() },
      loading: {
        get() {
          const D = _();
          return D === "pending" || D === "refreshing";
        },
      },
      latest: {
        get() {
          if (!d) return O();
          const D = b();
          if (D && !o) throw D;
          return g();
        },
      },
    }),
    p ? np(() => U(!1)) : U(!1),
    [O, { refetch: U, mutate: w }]
  );
}
function HC(e) {
  return Fs(e, !1);
}
function Yn(e) {
  if (vn === null) return e();
  const t = vn;
  vn = null;
  try {
    return e();
  } finally {
    vn = t;
  }
}
function tI(e, t, n) {
  const r = Array.isArray(e);
  let i;
  return (s) => {
    let o;
    if (r) {
      o = Array(e.length);
      for (let c = 0; c < e.length; c++) o[c] = e[c]();
    } else o = e();
    const l = Yn(() => t(o, i, s));
    return (i = o), l;
  };
}
function qC(e) {
  Dn(() => Yn(e));
}
function Pr(e) {
  return (
    Bn === null ||
      (Bn.cleanups === null ? (Bn.cleanups = [e]) : Bn.cleanups.push(e)),
    e
  );
}
function KC() {
  return vn;
}
function nI() {
  return Bn;
}
function A4(e, t) {
  const n = Symbol("context");
  return { id: n, Provider: aI(n), defaultValue: e };
}
function Mr(e) {
  let t;
  return (t = eS(Bn, e.id)) !== void 0 ? t : e.defaultValue;
}
function T4(e) {
  const t = ke(e),
    n = ke(() => I5(t()));
  return (
    (n.toArray = () => {
      const r = n();
      return Array.isArray(r) ? r : r != null ? [r] : [];
    }),
    n
  );
}
let rI;
function GC() {
  const e = Ko;
  if (this.sources && (this.state || e))
    if (this.state === ns || e) _3(this);
    else {
      const t = vr;
      (vr = null), Fs(() => Bd(this), !1), (vr = t);
    }
  if (vn) {
    const t = this.observers ? this.observers.length : 0;
    vn.sources
      ? (vn.sources.push(this), vn.sourceSlots.push(t))
      : ((vn.sources = [this]), (vn.sourceSlots = [t])),
      this.observers
        ? (this.observers.push(vn),
          this.observerSlots.push(vn.sources.length - 1))
        : ((this.observers = [vn]),
          (this.observerSlots = [vn.sources.length - 1]));
  }
  return this.value;
}
function YC(e, t, n) {
  let r = e.value;
  return (
    (!e.comparator || !e.comparator(r, t)) &&
      ((e.value = t),
      e.observers &&
        e.observers.length &&
        Fs(() => {
          for (let i = 0; i < e.observers.length; i += 1) {
            const s = e.observers[i],
              o = Ko && Ko.running;
            o && Ko.disposed.has(s),
              ((o && !s.tState) || (!o && !s.state)) &&
                (s.pure ? vr.push(s) : G2.push(s), s.observers && ZC(s)),
              o || (s.state = ns);
          }
          if (vr.length > 1e6) throw ((vr = []), new Error());
        }, !1)),
    t
  );
}
function _3(e) {
  if (!e.fn) return;
  M4(e);
  const t = Bn,
    n = vn,
    r = tp;
  (vn = Bn = e), iI(e, e.value, r), (vn = n), (Bn = t);
}
function iI(e, t, n) {
  let r;
  try {
    r = e.fn(t);
  } catch (i) {
    e.pure &&
      ((e.state = ns), e.owned && e.owned.forEach(M4), (e.owned = null)),
      JC(i);
  }
  (!e.updatedAt || e.updatedAt <= n) &&
    (e.updatedAt != null && "observers" in e ? YC(e, r) : (e.value = r),
    (e.updatedAt = n));
}
function P4(e, t, n, r = ns, i) {
  const s = {
    fn: e,
    state: r,
    updatedAt: null,
    owned: null,
    sources: null,
    sourceSlots: null,
    cleanups: null,
    value: t,
    owner: Bn,
    context: null,
    pure: n,
  };
  return (
    Bn === null ||
      (Bn !== zC && (Bn.owned ? Bn.owned.push(s) : (Bn.owned = [s]))),
    s
  );
}
function Od(e) {
  const t = Ko;
  if (e.state === 0 || t) return;
  if (e.state === Nd || t) return Bd(e);
  if (e.suspense && Yn(e.suspense.inFallback))
    return e.suspense.effects.push(e);
  const n = [e];
  for (; (e = e.owner) && (!e.updatedAt || e.updatedAt < tp); )
    (e.state || t) && n.push(e);
  for (let r = n.length - 1; r >= 0; r--)
    if (((e = n[r]), e.state === ns || t)) _3(e);
    else if (e.state === Nd || t) {
      const i = vr;
      (vr = null), Fs(() => Bd(e, n[0]), !1), (vr = i);
    }
}
function Fs(e, t) {
  if (vr) return e();
  let n = !1;
  t || (vr = []), G2 ? (n = !0) : (G2 = []), tp++;
  try {
    const r = e();
    return sI(n), r;
  } catch (r) {
    n || (G2 = null), (vr = null), JC(r);
  }
}
function sI(e) {
  if ((vr && (QC(vr), (vr = null)), e)) return;
  const t = G2;
  (G2 = null), t.length && Fs(() => WC(t), !1);
}
function QC(e) {
  for (let t = 0; t < e.length; t++) Od(e[t]);
}
function oI(e) {
  let t,
    n = 0;
  for (t = 0; t < e.length; t++) {
    const r = e[t];
    r.user ? (e[n++] = r) : Od(r);
  }
  for (dn.context && XL(), t = 0; t < n; t++) Od(e[t]);
}
function Bd(e, t) {
  const n = Ko;
  e.state = 0;
  for (let r = 0; r < e.sources.length; r += 1) {
    const i = e.sources[r];
    i.sources &&
      (i.state === ns || n
        ? i !== t && Od(i)
        : (i.state === Nd || n) && Bd(i, t));
  }
}
function ZC(e) {
  const t = Ko;
  for (let n = 0; n < e.observers.length; n += 1) {
    const r = e.observers[n];
    (!r.state || t) &&
      ((r.state = Nd), r.pure ? vr.push(r) : G2.push(r), r.observers && ZC(r));
  }
}
function M4(e) {
  let t;
  if (e.sources)
    for (; e.sources.length; ) {
      const n = e.sources.pop(),
        r = e.sourceSlots.pop(),
        i = n.observers;
      if (i && i.length) {
        const s = i.pop(),
          o = n.observerSlots.pop();
        r < i.length &&
          ((s.sourceSlots[o] = r), (i[r] = s), (n.observerSlots[r] = o));
      }
    }
  if (e.owned) {
    for (t = 0; t < e.owned.length; t++) M4(e.owned[t]);
    e.owned = null;
  }
  if (e.cleanups) {
    for (t = 0; t < e.cleanups.length; t++) e.cleanups[t]();
    e.cleanups = null;
  }
  (e.state = 0), (e.context = null);
}
function XC(e) {
  return e instanceof Error || typeof e == "string"
    ? e
    : new Error("Unknown error");
}
function JC(e) {
  throw ((e = XC(e)), e);
}
function eS(e, t) {
  return e
    ? e.context && e.context[t] !== void 0
      ? e.context[t]
      : eS(e.owner, t)
    : void 0;
}
function I5(e) {
  if (typeof e == "function" && !e.length) return I5(e());
  if (Array.isArray(e)) {
    const t = [];
    for (let n = 0; n < e.length; n++) {
      const r = I5(e[n]);
      Array.isArray(r) ? t.push.apply(t, r) : t.push(r);
    }
    return t;
  }
  return e;
}
function aI(e, t) {
  return function (r) {
    let i;
    return (
      xt(
        () =>
          (i = Yn(
            () => ((Bn.context = { [e]: r.value }), T4(() => r.children))
          )),
        void 0
      ),
      i
    );
  };
}
const lI = Symbol("fallback");
function oy(e) {
  for (let t = 0; t < e.length; t++) e[t]();
}
function uI(e, t, n = {}) {
  let r = [],
    i = [],
    s = [],
    o = 0,
    l = t.length > 1 ? [] : null;
  return (
    Pr(() => oy(s)),
    () => {
      let c = e() || [],
        f,
        d;
      return (
        c[L5],
        Yn(() => {
          let m = c.length,
            g,
            w,
            b,
            x,
            E,
            P,
            _,
            T,
            M;
          if (m === 0)
            o !== 0 &&
              (oy(s), (s = []), (r = []), (i = []), (o = 0), l && (l = [])),
              n.fallback &&
                ((r = [lI]),
                (i[0] = pl((L) => ((s[0] = L), n.fallback()))),
                (o = 1));
          else if (o === 0) {
            for (i = new Array(m), d = 0; d < m; d++)
              (r[d] = c[d]), (i[d] = pl(p));
            o = m;
          } else {
            for (
              b = new Array(m),
                x = new Array(m),
                l && (E = new Array(m)),
                P = 0,
                _ = Math.min(o, m);
              P < _ && r[P] === c[P];
              P++
            );
            for (
              _ = o - 1, T = m - 1;
              _ >= P && T >= P && r[_] === c[T];
              _--, T--
            )
              (b[T] = i[_]), (x[T] = s[_]), l && (E[T] = l[_]);
            for (g = new Map(), w = new Array(T + 1), d = T; d >= P; d--)
              (M = c[d]),
                (f = g.get(M)),
                (w[d] = f === void 0 ? -1 : f),
                g.set(M, d);
            for (f = P; f <= _; f++)
              (M = r[f]),
                (d = g.get(M)),
                d !== void 0 && d !== -1
                  ? ((b[d] = i[f]),
                    (x[d] = s[f]),
                    l && (E[d] = l[f]),
                    (d = w[d]),
                    g.set(M, d))
                  : s[f]();
            for (d = P; d < m; d++)
              d in b
                ? ((i[d] = b[d]), (s[d] = x[d]), l && ((l[d] = E[d]), l[d](d)))
                : (i[d] = pl(p));
            (i = i.slice(0, (o = m))), (r = c.slice(0));
          }
          return i;
        })
      );
      function p(m) {
        if (((s[d] = m), l)) {
          const [g, w] = et(d);
          return (l[d] = w), t(c[d], g);
        }
        return t(c[d]);
      }
    }
  );
}
function J(e, t) {
  return Yn(() => e(t || {}));
}
function jc() {
  return !0;
}
const j5 = {
  get(e, t, n) {
    return t === Di ? n : e.get(t);
  },
  has(e, t) {
    return t === Di ? !0 : e.has(t);
  },
  set: jc,
  deleteProperty: jc,
  getOwnPropertyDescriptor(e, t) {
    return {
      configurable: !0,
      enumerable: !0,
      get() {
        return e.get(t);
      },
      set: jc,
      deleteProperty: jc,
    };
  },
  ownKeys(e) {
    return e.keys();
  },
};
function c9(e) {
  return (e = typeof e == "function" ? e() : e) ? e : {};
}
function a2(...e) {
  let t = !1;
  for (let r = 0; r < e.length; r++) {
    const i = e[r];
    (t = t || (!!i && Di in i)),
      (e[r] = typeof i == "function" ? ((t = !0), ke(i)) : i);
  }
  if (t)
    return new Proxy(
      {
        get(r) {
          for (let i = e.length - 1; i >= 0; i--) {
            const s = c9(e[i])[r];
            if (s !== void 0) return s;
          }
        },
        has(r) {
          for (let i = e.length - 1; i >= 0; i--) if (r in c9(e[i])) return !0;
          return !1;
        },
        keys() {
          const r = [];
          for (let i = 0; i < e.length; i++) r.push(...Object.keys(c9(e[i])));
          return [...new Set(r)];
        },
      },
      j5
    );
  const n = {};
  for (let r = e.length - 1; r >= 0; r--)
    if (e[r]) {
      const i = Object.getOwnPropertyDescriptors(e[r]);
      for (const s in i)
        s in n ||
          Object.defineProperty(n, s, {
            enumerable: !0,
            get() {
              for (let o = e.length - 1; o >= 0; o--) {
                const l = (e[o] || {})[s];
                if (l !== void 0) return l;
              }
            },
          });
    }
  return n;
}
function rp(e, ...t) {
  const n = new Set(t.flat());
  if (Di in e) {
    const i = t.map(
      (s) =>
        new Proxy(
          {
            get(o) {
              return s.includes(o) ? e[o] : void 0;
            },
            has(o) {
              return s.includes(o) && o in e;
            },
            keys() {
              return s.filter((o) => o in e);
            },
          },
          j5
        )
    );
    return (
      i.push(
        new Proxy(
          {
            get(s) {
              return n.has(s) ? void 0 : e[s];
            },
            has(s) {
              return n.has(s) ? !1 : s in e;
            },
            keys() {
              return Object.keys(e).filter((s) => !n.has(s));
            },
          },
          j5
        )
      ),
      i
    );
  }
  const r = Object.getOwnPropertyDescriptors(e);
  return (
    t.push(Object.keys(r).filter((i) => !n.has(i))),
    t.map((i) => {
      const s = {};
      for (let o = 0; o < i.length; o++) {
        const l = i[o];
        l in e &&
          Object.defineProperty(
            s,
            l,
            r[l]
              ? r[l]
              : {
                  get() {
                    return e[l];
                  },
                  set() {
                    return !0;
                  },
                  enumerable: !0,
                }
          );
      }
      return s;
    })
  );
}
function nu(e) {
  const t = "fallback" in e && { fallback: () => e.fallback };
  return ke(uI(() => e.each, e.children, t || void 0));
}
function dt(e) {
  let t = !1;
  const n = e.keyed,
    r = ke(() => e.when, void 0, {
      equals: (i, s) => (t ? i === s : !i == !s),
    });
  return ke(
    () => {
      const i = r();
      if (i) {
        const s = e.children,
          o = typeof s == "function" && s.length > 0;
        return (t = n || o), o ? Yn(() => s(i)) : s;
      }
      return e.fallback;
    },
    void 0,
    void 0
  );
}
function ru(e) {
  let t = !1,
    n = !1;
  const r = (o, l) =>
      o[0] === l[0] && (t ? o[1] === l[1] : !o[1] == !l[1]) && o[2] === l[2],
    i = T4(() => e.children),
    s = ke(
      () => {
        let o = i();
        Array.isArray(o) || (o = [o]);
        for (let l = 0; l < o.length; l++) {
          const c = o[l].when;
          if (c) return (n = !!o[l].keyed), [l, c, o[l]];
        }
        return [-1];
      },
      void 0,
      { equals: r }
    );
  return ke(
    () => {
      const [o, l, c] = s();
      if (o < 0) return e.fallback;
      const f = c.children,
        d = typeof f == "function" && f.length > 0;
      return (t = n || d), d ? Yn(() => f(l)) : f;
    },
    void 0,
    void 0
  );
}
function rr(e) {
  return e;
}
const cI = [
    "allowfullscreen",
    "async",
    "autofocus",
    "autoplay",
    "checked",
    "controls",
    "default",
    "disabled",
    "formnovalidate",
    "hidden",
    "indeterminate",
    "ismap",
    "loop",
    "multiple",
    "muted",
    "nomodule",
    "novalidate",
    "open",
    "playsinline",
    "readonly",
    "required",
    "reversed",
    "seamless",
    "selected",
  ],
  dI = new Set([
    "className",
    "value",
    "readOnly",
    "formNoValidate",
    "isMap",
    "noModule",
    "playsInline",
    ...cI,
  ]),
  fI = new Set(["innerHTML", "textContent", "innerText", "children"]),
  hI = Object.assign(Object.create(null), {
    className: "class",
    htmlFor: "for",
  }),
  ay = Object.assign(Object.create(null), {
    class: "className",
    formnovalidate: "formNoValidate",
    ismap: "isMap",
    nomodule: "noModule",
    playsinline: "playsInline",
    readonly: "readOnly",
  }),
  pI = new Set([
    "beforeinput",
    "click",
    "dblclick",
    "contextmenu",
    "focusin",
    "focusout",
    "input",
    "keydown",
    "keyup",
    "mousedown",
    "mousemove",
    "mouseout",
    "mouseover",
    "mouseup",
    "pointerdown",
    "pointermove",
    "pointerout",
    "pointerover",
    "pointerup",
    "touchend",
    "touchmove",
    "touchstart",
  ]),
  mI = new Set([
    "altGlyph",
    "altGlyphDef",
    "altGlyphItem",
    "animate",
    "animateColor",
    "animateMotion",
    "animateTransform",
    "circle",
    "clipPath",
    "color-profile",
    "cursor",
    "defs",
    "desc",
    "ellipse",
    "feBlend",
    "feColorMatrix",
    "feComponentTransfer",
    "feComposite",
    "feConvolveMatrix",
    "feDiffuseLighting",
    "feDisplacementMap",
    "feDistantLight",
    "feFlood",
    "feFuncA",
    "feFuncB",
    "feFuncG",
    "feFuncR",
    "feGaussianBlur",
    "feImage",
    "feMerge",
    "feMergeNode",
    "feMorphology",
    "feOffset",
    "fePointLight",
    "feSpecularLighting",
    "feSpotLight",
    "feTile",
    "feTurbulence",
    "filter",
    "font",
    "font-face",
    "font-face-format",
    "font-face-name",
    "font-face-src",
    "font-face-uri",
    "foreignObject",
    "g",
    "glyph",
    "glyphRef",
    "hkern",
    "image",
    "line",
    "linearGradient",
    "marker",
    "mask",
    "metadata",
    "missing-glyph",
    "mpath",
    "path",
    "pattern",
    "polygon",
    "polyline",
    "radialGradient",
    "rect",
    "set",
    "stop",
    "svg",
    "switch",
    "symbol",
    "text",
    "textPath",
    "tref",
    "tspan",
    "use",
    "view",
    "vkern",
  ]),
  gI = {
    xlink: "http://www.w3.org/1999/xlink",
    xml: "http://www.w3.org/XML/1998/namespace",
  };
function yI(e, t, n) {
  let r = n.length,
    i = t.length,
    s = r,
    o = 0,
    l = 0,
    c = t[i - 1].nextSibling,
    f = null;
  for (; o < i || l < s; ) {
    if (t[o] === n[l]) {
      o++, l++;
      continue;
    }
    for (; t[i - 1] === n[s - 1]; ) i--, s--;
    if (i === o) {
      const d = s < r ? (l ? n[l - 1].nextSibling : n[s - l]) : c;
      for (; l < s; ) e.insertBefore(n[l++], d);
    } else if (s === l)
      for (; o < i; ) (!f || !f.has(t[o])) && t[o].remove(), o++;
    else if (t[o] === n[s - 1] && n[l] === t[i - 1]) {
      const d = t[--i].nextSibling;
      e.insertBefore(n[l++], t[o++].nextSibling),
        e.insertBefore(n[--s], d),
        (t[i] = n[s]);
    } else {
      if (!f) {
        f = new Map();
        let p = l;
        for (; p < s; ) f.set(n[p], p++);
      }
      const d = f.get(t[o]);
      if (d != null)
        if (l < d && d < s) {
          let p = o,
            m = 1,
            g;
          for (
            ;
            ++p < i && p < s && !((g = f.get(t[p])) == null || g !== d + m);

          )
            m++;
          if (m > d - l) {
            const w = t[o];
            for (; l < d; ) e.insertBefore(n[l++], w);
          } else e.replaceChild(n[l++], t[o++]);
        } else o++;
      else t[o++].remove();
    }
  }
}
const ly = "_$DX_DELEGATE";
function vI(e, t, n, r = {}) {
  let i;
  return (
    pl((s) => {
      (i = s),
        t === document ? e() : ir(t, e(), t.firstChild ? null : void 0, n);
    }, r.owner),
    () => {
      i(), (t.textContent = "");
    }
  );
}
function Ct(e, t, n) {
  if (typeof window > "u") return null;
  const r = document.createElement("template");
  r.innerHTML = e;
  let i = r.content.firstChild;
  return n && (i = i.firstChild), i;
}
function wI(e, t = window.document) {
  const n = t[ly] || (t[ly] = new Set());
  for (let r = 0, i = e.length; r < i; r++) {
    const s = e[r];
    n.has(s) || (n.add(s), t.addEventListener(s, AI));
  }
}
function We(e, t, n) {
  n == null ? e.removeAttribute(t) : e.setAttribute(t, n);
}
function bI(e, t, n, r) {
  r == null ? e.removeAttributeNS(t, n) : e.setAttributeNS(t, n, r);
}
function ip(e, t) {
  t == null ? e.removeAttribute("class") : (e.className = t);
}
function xI(e, t, n, r) {
  if (r)
    Array.isArray(n)
      ? ((e[`$$${t}`] = n[0]), (e[`$$${t}Data`] = n[1]))
      : (e[`$$${t}`] = n);
  else if (Array.isArray(n)) {
    const i = n[0];
    e.addEventListener(t, (n[0] = (s) => i.call(e, n[1], s)));
  } else e.addEventListener(t, n);
}
function CI(e, t, n = {}) {
  const r = Object.keys(t || {}),
    i = Object.keys(n);
  let s, o;
  for (s = 0, o = i.length; s < o; s++) {
    const l = i[s];
    !l || l === "undefined" || t[l] || (uy(e, l, !1), delete n[l]);
  }
  for (s = 0, o = r.length; s < o; s++) {
    const l = r[s],
      c = !!t[l];
    !l || l === "undefined" || n[l] === c || !c || (uy(e, l, !0), (n[l] = c));
  }
  return n;
}
function SI(e, t, n) {
  if (!t) return n ? We(e, "style") : t;
  const r = e.style;
  if (typeof t == "string") return (r.cssText = t);
  typeof n == "string" && (r.cssText = n = void 0),
    n || (n = {}),
    t || (t = {});
  let i, s;
  for (s in n) t[s] == null && r.removeProperty(s), delete n[s];
  for (s in t) (i = t[s]), i !== n[s] && (r.setProperty(s, i), (n[s] = i));
  return n;
}
function tS(e, t = {}, n, r) {
  const i = {};
  return (
    xt(() => (i.children = jl(e, t.children, i.children))),
    xt(() => t.ref && t.ref(e)),
    xt(() => EI(e, t, n, !0, i, !0)),
    i
  );
}
function c3(e, t, n) {
  return Yn(() => e(t, n));
}
function ir(e, t, n, r) {
  if ((n !== void 0 && !r && (r = []), typeof t != "function"))
    return jl(e, t, r, n);
  xt((i) => jl(e, t(), i, n), r);
}
function EI(e, t, n, r, i = {}, s = !1) {
  t || (t = {});
  for (const o in i)
    if (!(o in t)) {
      if (o === "children") continue;
      i[o] = cy(e, o, null, i[o], n, s);
    }
  for (const o in t) {
    if (o === "children") continue;
    const l = t[o];
    i[o] = cy(e, o, l, i[o], n, s);
  }
}
function kI(e) {
  let t, n;
  return !dn.context || !(t = dn.registry.get((n = TI())))
    ? e.cloneNode(!0)
    : (dn.completed && dn.completed.add(t), dn.registry.delete(n), t);
}
function _I(e) {
  return e.toLowerCase().replace(/-([a-z])/g, (t, n) => n.toUpperCase());
}
function uy(e, t, n) {
  const r = t.trim().split(/\s+/);
  for (let i = 0, s = r.length; i < s; i++) e.classList.toggle(r[i], n);
}
function cy(e, t, n, r, i, s) {
  let o, l, c;
  if (t === "style") return SI(e, n, r);
  if (t === "classList") return CI(e, n, r);
  if (n === r) return r;
  if (t === "ref") s || n(e);
  else if (t.slice(0, 3) === "on:") {
    const f = t.slice(3);
    r && e.removeEventListener(f, r), n && e.addEventListener(f, n);
  } else if (t.slice(0, 10) === "oncapture:") {
    const f = t.slice(10);
    r && e.removeEventListener(f, r, !0), n && e.addEventListener(f, n, !0);
  } else if (t.slice(0, 2) === "on") {
    const f = t.slice(2).toLowerCase(),
      d = pI.has(f);
    if (!d && r) {
      const p = Array.isArray(r) ? r[0] : r;
      e.removeEventListener(f, p);
    }
    (d || n) && (xI(e, f, n, d), d && wI([f]));
  } else if (
    (c = fI.has(t)) ||
    (!i && (ay[t] || (l = dI.has(t)))) ||
    (o = e.nodeName.includes("-"))
  )
    t === "class" || t === "className"
      ? ip(e, n)
      : o && !l && !c
      ? (e[_I(t)] = n)
      : (e[ay[t] || t] = n);
  else {
    const f = i && t.indexOf(":") > -1 && gI[t.split(":")[0]];
    f ? bI(e, f, t, n) : We(e, hI[t] || t, n);
  }
  return n;
}
function AI(e) {
  const t = `$$${e.type}`;
  let n = (e.composedPath && e.composedPath()[0]) || e.target;
  for (
    e.target !== n &&
      Object.defineProperty(e, "target", { configurable: !0, value: n }),
      Object.defineProperty(e, "currentTarget", {
        configurable: !0,
        get() {
          return n || document;
        },
      }),
      dn.registry &&
        !dn.done &&
        ((dn.done = !0),
        document.querySelectorAll("[id^=pl-]").forEach((r) => {
          for (; r && r.nodeType !== 8 && r.nodeValue !== "pl-" + e; ) {
            let i = r.nextSibling;
            r.remove(), (r = i);
          }
          r && r.remove();
        }));
    n;

  ) {
    const r = n[t];
    if (r && !n.disabled) {
      const i = n[`${t}Data`];
      if ((i !== void 0 ? r.call(n, i, e) : r.call(n, e), e.cancelBubble))
        return;
    }
    n = n._$host || n.parentNode || n.host;
  }
}
function jl(e, t, n, r, i) {
  for (dn.context && !n && (n = [...e.childNodes]); typeof n == "function"; )
    n = n();
  if (t === n) return n;
  const s = typeof t,
    o = r !== void 0;
  if (
    ((e = (o && n[0] && n[0].parentNode) || e),
    s === "string" || s === "number")
  ) {
    if (dn.context) return n;
    if ((s === "number" && (t = t.toString()), o)) {
      let l = n[0];
      l && l.nodeType === 3 ? (l.data = t) : (l = document.createTextNode(t)),
        (n = $a(e, n, r, l));
    } else
      n !== "" && typeof n == "string"
        ? (n = e.firstChild.data = t)
        : (n = e.textContent = t);
  } else if (t == null || s === "boolean") {
    if (dn.context) return n;
    n = $a(e, n, r);
  } else {
    if (s === "function")
      return (
        xt(() => {
          let l = t();
          for (; typeof l == "function"; ) l = l();
          n = jl(e, l, n, r);
        }),
        () => n
      );
    if (Array.isArray(t)) {
      const l = [],
        c = n && Array.isArray(n);
      if (N5(l, t, n, i)) return xt(() => (n = jl(e, l, n, r, !0))), () => n;
      if (dn.context) {
        if (!l.length) return n;
        for (let f = 0; f < l.length; f++) if (l[f].parentNode) return (n = l);
      }
      if (l.length === 0) {
        if (((n = $a(e, n, r)), o)) return n;
      } else
        c
          ? n.length === 0
            ? dy(e, l, r)
            : yI(e, n, l)
          : (n && $a(e), dy(e, l));
      n = l;
    } else if (t instanceof Node) {
      if (dn.context && t.parentNode) return (n = o ? [t] : t);
      if (Array.isArray(n)) {
        if (o) return (n = $a(e, n, r, t));
        $a(e, n, null, t);
      } else
        n == null || n === "" || !e.firstChild
          ? e.appendChild(t)
          : e.replaceChild(t, e.firstChild);
      n = t;
    }
  }
  return n;
}
function N5(e, t, n, r) {
  let i = !1;
  for (let s = 0, o = t.length; s < o; s++) {
    let l = t[s],
      c = n && n[s];
    if (l instanceof Node) e.push(l);
    else if (!(l == null || l === !0 || l === !1))
      if (Array.isArray(l)) i = N5(e, l, c) || i;
      else if (typeof l == "function")
        if (r) {
          for (; typeof l == "function"; ) l = l();
          i =
            N5(e, Array.isArray(l) ? l : [l], Array.isArray(c) ? c : [c]) || i;
        } else e.push(l), (i = !0);
      else {
        const f = String(l);
        c && c.nodeType === 3 && c.data === f
          ? e.push(c)
          : e.push(document.createTextNode(f));
      }
  }
  return i;
}
function dy(e, t, n = null) {
  for (let r = 0, i = t.length; r < i; r++) e.insertBefore(t[r], n);
}
function $a(e, t, n, r) {
  if (n === void 0) return (e.textContent = "");
  const i = r || document.createTextNode("");
  if (t.length) {
    let s = !1;
    for (let o = t.length - 1; o >= 0; o--) {
      const l = t[o];
      if (i !== l) {
        const c = l.parentNode === e;
        !s && !o
          ? c
            ? e.replaceChild(i, l)
            : e.insertBefore(i, n)
          : c && l.remove();
      } else s = !0;
    }
  } else e.insertBefore(i, n);
  return [i];
}
function TI() {
  const e = dn.context;
  return `${e.id}${e.count++}`;
}
const PI = "http://www.w3.org/2000/svg";
function nS(e, t = !1) {
  return t ? document.createElementNS(PI, e) : document.createElement(e);
}
function rS(e) {
  const { useShadow: t } = e,
    n = document.createTextNode(""),
    r = e.mount || document.body;
  function i() {
    if (dn.context) {
      const [s, o] = et(!1);
      return queueMicrotask(() => o(!0)), () => s() && e.children;
    } else return () => e.children;
  }
  if (r instanceof HTMLHeadElement) {
    const [s, o] = et(!1),
      l = () => o(!0);
    pl((c) => ir(r, () => (s() ? c() : i()()), null)),
      Pr(() => {
        dn.context ? queueMicrotask(l) : l();
      });
  } else {
    const s = nS(e.isSVG ? "g" : "div", e.isSVG),
      o = t && s.attachShadow ? s.attachShadow({ mode: "open" }) : s;
    Object.defineProperty(s, "_$host", {
      get() {
        return n.parentNode;
      },
      configurable: !0,
    }),
      ir(o, i()),
      r.appendChild(s),
      e.ref && e.ref(s),
      Pr(() => r.removeChild(s));
  }
  return n;
}
function m3(e) {
  const [t, n] = rp(e, ["component"]),
    r = ke(() => t.component);
  return ke(() => {
    const i = r();
    switch (typeof i) {
      case "function":
        return Yn(() => i(n));
      case "string":
        const s = mI.has(i),
          o = dn.context ? kI() : nS(i, s);
        return tS(o, n, s), o;
    }
  });
}
var cn = ((e) => ((e.DARK = "DARK"), (e.LIGHT = "LIGHT"), e))(cn || {});
let MI = { data: "" },
  RI = (e) =>
    typeof window == "object"
      ? (
          (e ? e.querySelector("#_goober") : window._goober) ||
          Object.assign(
            (e || document.head).appendChild(document.createElement("style")),
            { innerHTML: " ", id: "_goober" }
          )
        ).firstChild
      : e || MI,
  LI = /(?:([\u0080-\uFFFF\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\s*)/g,
  II = /\/\*[^]*?\*\/|  +/g,
  fy = /\n+/g,
  Bo = (e, t) => {
    let n = "",
      r = "",
      i = "";
    for (let s in e) {
      let o = e[s];
      s[0] == "@"
        ? s[1] == "i"
          ? (n = s + " " + o + ";")
          : (r +=
              s[1] == "f"
                ? Bo(o, s)
                : s + "{" + Bo(o, s[1] == "k" ? "" : t) + "}")
        : typeof o == "object"
        ? (r += Bo(
            o,
            t
              ? t.replace(/([^,])+/g, (l) =>
                  s.replace(/(^:.*)|([^,])+/g, (c) =>
                    /&/.test(c) ? c.replace(/&/g, l) : l ? l + " " + c : c
                  )
                )
              : s
          ))
        : o != null &&
          ((s = /^--/.test(s) ? s : s.replace(/[A-Z]/g, "-$&").toLowerCase()),
          (i += Bo.p ? Bo.p(s, o) : s + ":" + o + ";"));
    }
    return n + (t && i ? t + "{" + i + "}" : i) + r;
  },
  R2 = {},
  iS = (e) => {
    if (typeof e == "object") {
      let t = "";
      for (let n in e) t += n + iS(e[n]);
      return t;
    }
    return e;
  },
  jI = (e, t, n, r, i) => {
    let s = iS(e),
      o =
        R2[s] ||
        (R2[s] = ((c) => {
          let f = 0,
            d = 11;
          for (; f < c.length; ) d = (101 * d + c.charCodeAt(f++)) >>> 0;
          return "go" + d;
        })(s));
    if (!R2[o]) {
      let c =
        s !== e
          ? e
          : ((f) => {
              let d,
                p,
                m = [{}];
              for (; (d = LI.exec(f.replace(II, ""))); )
                d[4]
                  ? m.shift()
                  : d[3]
                  ? ((p = d[3].replace(fy, " ").trim()),
                    m.unshift((m[0][p] = m[0][p] || {})))
                  : (m[0][d[1]] = d[2].replace(fy, " ").trim());
              return m[0];
            })(e);
      R2[o] = Bo(i ? { ["@keyframes " + o]: c } : c, n ? "" : "." + o);
    }
    let l = n && R2.g ? R2.g : null;
    return (
      n && (R2.g = R2[o]),
      ((c, f, d, p) => {
        p
          ? (f.data = f.data.replace(p, c))
          : f.data.indexOf(c) === -1 && (f.data = d ? c + f.data : f.data + c);
      })(R2[o], t, r, l),
      o
    );
  },
  NI = (e, t, n) =>
    e.reduce((r, i, s) => {
      let o = t[s];
      if (o && o.call) {
        let l = o(n),
          c = (l && l.props && l.props.className) || (/^go/.test(l) && l);
        o = c
          ? "." + c
          : l && typeof l == "object"
          ? l.props
            ? ""
            : Bo(l, "")
          : l === !1
          ? ""
          : l;
      }
      return r + i + (o ?? "");
    }, "");
function Z2(e) {
  let t = this || {},
    n = e.call ? e(t.p) : e;
  return jI(
    n.unshift
      ? n.raw
        ? NI(n, [].slice.call(arguments, 1), t.p)
        : n.reduce((r, i) => Object.assign(r, i && i.call ? i(t.p) : i), {})
      : n,
    RI(t.target),
    t.g,
    t.o,
    t.k
  );
}
Z2.bind({ g: 1 });
let OI = Z2.bind({ k: 1 });
const sp = A4();
function BI(e) {
  return J(sp.Provider, {
    value: e.theme,
    get children() {
      return e.children;
    },
  });
}
function Gt() {
  return Mr(sp);
}
function sS(e) {
  let t = this || {};
  return (...n) => {
    const r = (i) => {
      const s = Mr(sp),
        o = a2(i, { theme: s }),
        l = a2(o, {
          get class() {
            const g = o.class,
              w = "class" in o && /^go[0-9]+/.test(g);
            let b = Z2.apply({ target: t.target, o: w, p: o, g: t.g }, n);
            return [g, b].filter(Boolean).join(" ");
          },
        }),
        [c, f] = rp(l, ["as", "theme"]),
        d = f,
        p = c.as || e;
      let m;
      return (
        typeof p == "function"
          ? (m = p(d))
          : t.g == 1
          ? ((m = document.createElement(p)), tS(m, d))
          : (m = m3(a2({ component: p }, d))),
        m
      );
    };
    return (
      (r.class = (i) =>
        Yn(() => Z2.apply({ target: t.target, p: i, g: t.g }, n))),
      r
    );
  };
}
const F1 = new Proxy(sS, {
  get(e, t) {
    return e(t);
  },
});
function DI() {
  const e = sS.call({ g: 1 }, "div").apply(null, arguments);
  return function (n) {
    return e(n), null;
  };
}
const z2 = "tc-root",
  op = "tc-disable-scroll",
  d9 = "tc-using-mouse",
  FI = () => {
    document.body.addEventListener("mousedown", () =>
      document.body.classList.add(d9)
    ),
      document.body.addEventListener("keydown", (t) => {
        t.key === "Tab" && document.body.classList.remove(d9);
      });
    const e = DI`
    ${z2} * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        
        font-family: -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', Arial, Tahoma, Verdana, sans-serif;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;        
        -webkit-tap-highlight-color: transparent;
    }
    
    ${z2} img {
      -webkit-user-select: none;
      -webkit-touch-callout: none;
    }   
 
    ${z2} *:focus {
        outline: #08f auto 2px;
    }
    
    ${z2} li {
        list-style: none;
    }
    
    ${z2} button {
        outline: none;
    }
    
    body.${op} {
        position: fixed; 
        overflow-y: scroll;
        right: 0;
        left: 0;
    }
    
    body.${d9} ${z2} *:focus {
        outline: none;
    }
`;
    return J(e, {});
  };
function UI(e) {
  e[0] === "#" && (e = e.slice(1));
  const t = parseInt(e, 16),
    n = (t >> 16) & 255,
    r = (t >> 8) & 255,
    i = t & 255;
  return [n, r, i].join(",");
}
function iu(e, t) {
  return e[0] === "#" && (e = UI(e)), `rgba(${e}, ${t})`;
}
function l2(e) {
  return e.toString() + "px";
}
const rl = class {
  constructor() {
    Ke(this, "storage", {});
  }
  static getInstance() {
    return rl.instance || (rl.instance = new rl()), rl.instance;
  }
  get length() {
    return Object.keys(this.storage).length;
  }
  clear() {
    this.storage = {};
  }
  getItem(e) {
    var t;
    return (t = this.storage[e]) != null ? t : null;
  }
  key(e) {
    var t;
    const n = Object.keys(this.storage);
    return e < 0 || e >= n.length ? null : (t = n[e]) != null ? t : null;
  }
  removeItem(e) {
    delete this.storage[e];
  }
  setItem(e, t) {
    this.storage[e] = t;
  }
};
let oS = rl;
Ke(oS, "instance");
class Tn extends ze {
  constructor(...t) {
    super(...t), Object.setPrototypeOf(this, Tn.prototype);
  }
}
function ud(...e) {
  try {
    console.debug("[TON_CONNECT_UI]", ...e);
  } catch {}
}
function $I(...e) {
  try {
    console.error("[TON_CONNECT_UI]", ...e);
  } catch {}
}
function VI(...e) {
  try {
    console.warn("[TON_CONNECT_UI]", ...e);
  } catch {}
}
function ml(e, t = "_self") {
  ud("openLink", e, t), window.open(e, t, "noopener noreferrer");
}
function Qt(e) {
  ml(e, "_blank");
}
function Is(e, t) {
  const n = () => {
      vt("safari") || (Ii("android") && vt("firefox")) || t();
    },
    r = setTimeout(() => n(), 200);
  window.addEventListener("blur", () => clearTimeout(r), { once: !0 }),
    ml(e, "_self");
}
function WI() {
  return window.matchMedia &&
    window.matchMedia("(prefers-color-scheme: light)").matches
    ? cn.LIGHT
    : cn.DARK;
}
function zI(e) {
  const t = (n) => e(n.matches ? cn.DARK : cn.LIGHT);
  return (
    window
      .matchMedia("(prefers-color-scheme: dark)")
      .addEventListener("change", t),
    () =>
      window
        .matchMedia("(prefers-color-scheme: dark)")
        .removeEventListener("change", t)
  );
}
function HI() {
  document.documentElement.scrollHeight !==
    document.documentElement.clientHeight &&
    ((document.body.style.top = l2(-document.documentElement.scrollTop)),
    document.body.classList.add(op));
}
function qI() {
  document.body.classList.remove(op),
    document.documentElement.scrollTo({
      top: -parseFloat(getComputedStyle(document.body).top),
    }),
    (document.body.style.top = "auto");
}
function KI() {
  document.body.hasAttribute("ontouchstart") ||
    document.body.setAttribute("ontouchstart", "");
}
function GI() {
  customElements.define(z2, class extends HTMLElement {});
}
function aS(e) {
  return Dt(this, null, function* () {
    yield new Promise((t) => requestAnimationFrame(t)), e();
  });
}
function YI(e) {
  return Dt(this, null, function* () {
    return yield new Promise((t) => requestAnimationFrame(t)), e();
  });
}
function lS(e) {
  document.readyState !== "complete"
    ? window.addEventListener("load", () => aS(() => lS(e)), { once: !0 })
    : e.forEach((t) => {
        const n = new window.Image();
        n.src = t;
      });
}
function w2() {
  if (typeof window < "u") return window;
}
function ap() {
  if (QI()) return localStorage;
  if (ZI())
    throw new Tn(
      "`localStorage` is unavailable, but it is required for TonConnect. For more details, see https://github.com/ton-connect/sdk/tree/main/packages/sdk#init-connector"
    );
  return oS.getInstance();
}
function QI() {
  try {
    return typeof localStorage < "u";
  } catch {
    return !1;
  }
}
function ZI() {
  return (
    typeof process < "u" &&
    process.versions != null &&
    process.versions.node != null
  );
}
function lp() {
  var e, t, n;
  const r = new $L().getResult(),
    i = (e = r.os.name) == null ? void 0 : e.toLowerCase(),
    s = (t = r.device.model) == null ? void 0 : t.toLowerCase();
  let o;
  switch (!0) {
    case s === "ipad":
      o = "ipad";
      break;
    case i === "ios":
      o = "ios";
      break;
    case i === "android":
      o = "android";
      break;
    case i === "mac os":
      o = "macos";
      break;
    case i === "linux":
      o = "linux";
      break;
    case i == null ? void 0 : i.includes("windows"):
      o = "windows";
      break;
  }
  const l = (n = r.browser.name) == null ? void 0 : n.toLowerCase();
  let c;
  switch (!0) {
    case l === "chrome":
      c = "chrome";
      break;
    case l === "firefox":
      c = "firefox";
      break;
    case l == null ? void 0 : l.includes("safari"):
      c = "safari";
      break;
    case l == null ? void 0 : l.includes("opera"):
      c = "opera";
      break;
  }
  return { os: o, browser: c };
}
function Ii(...e) {
  return e.includes(lp().os);
}
function vt(...e) {
  return e.includes(lp().browser);
}
function Nc(e, t) {
  const n = new URL(e);
  return t + n.search;
}
class XI {
  constructor() {
    Ke(this, "localStorage"),
      Ke(this, "storageKey", "ton-connect-ui_wallet-info"),
      (this.localStorage = ap());
  }
  setWalletInfo(t) {
    this.localStorage.setItem(this.storageKey, JSON.stringify(t));
  }
  getWalletInfo() {
    const t = this.localStorage.getItem(this.storageKey);
    return t ? JSON.parse(t) : null;
  }
  removeWalletInfo() {
    this.localStorage.removeItem(this.storageKey);
  }
}
class JI {
  constructor() {
    Ke(this, "localStorage"),
      Ke(this, "storageKey", "ton-connect-ui_preferred-wallet"),
      (this.localStorage = ap());
  }
  setPreferredWalletAppName(t) {
    this.localStorage.setItem(this.storageKey, t);
  }
  getPreferredWalletAppName() {
    return this.localStorage.getItem(this.storageKey) || void 0;
  }
}
class uS {
  constructor() {
    Ke(this, "localStorage"),
      Ke(this, "storageKey", "ton-connect-ui_last-selected-wallet-info"),
      (this.localStorage = ap());
  }
  setLastSelectedWalletInfo(t) {
    this.localStorage.setItem(this.storageKey, JSON.stringify(t));
  }
  getLastSelectedWalletInfo() {
    const t = this.localStorage.getItem(this.storageKey);
    return t ? JSON.parse(t) : null;
  }
  removeLastSelectedWalletInfo() {
    this.localStorage.removeItem(this.storageKey);
  }
}
const [O5, hy] = et({ status: "closed", closeReason: null }),
  py = ke(() => O5().status === "opened"),
  [Dd, my] = et({ status: "closed", closeReason: null }),
  gy = ke(() => Dd().status === "opened"),
  ej = ke(() => {
    const e = Dd();
    return e.status === "opened" ? e.walletInfo : null;
  });
let e3 = typeof window < "u" ? new uS() : void 0;
const [tj, nj] = et(
    (e3 == null ? void 0 : e3.getLastSelectedWalletInfo()) || null
  ),
  sr = (e) => {
    e3 || (e3 = new uS()),
      e ? e3.setLastSelectedWalletInfo(e) : e3.removeLastSelectedWalletInfo(),
      nj(e);
  },
  [H2, t3] = et(null),
  rj = {
    close: "Close",
    openWallet: "Open wallet",
    copyLink: "Copy Link",
    linkCopied: "Link Copied",
    copied: "Copied",
    yourWallet: "Your Wallet",
    retry: "Retry",
    get: "GET",
    mobile: "Mobile",
    browserExtension: "Browser Extension",
    desktop: "Desktop",
  },
  ij = {
    connectWallet: "Connect Wallet",
    dropdown: {
      copy: "Copy address",
      copied: "Address copied!",
      disconnect: "Disconnect",
    },
  },
  sj = {
    confirm: { header: "Open {{ name }} to confirm the transaction." },
    transactionSent: {
      header: "Transaction sent",
      text: "Your transaction will be processed in a few seconds.",
    },
    transactionCanceled: {
      header: "Transaction canceled",
      text: "There will be no changes to your account.",
    },
  },
  oj = {
    walletOn: "Wallet On",
    recent: "Recent",
    installed: "Installed",
    popular: "Popular",
  },
  aj = {
    loading: "Loading wallets",
    wallets: "Wallets",
    mobileUniversalModal: {
      connectYourWallet: "Connect your wallet",
      openWalletOnTelegramOrSelect:
        "Open Wallet in Telegram or select your wallet to connect",
      openWalletOnTelegram: "Open Wallet in Telegram",
      openLink: "Open Link",
      scan: "Scan with your mobile wallet",
    },
    desktopUniversalModal: {
      connectYourWallet: "Connect your wallet",
      scan: "Scan with your mobile wallet",
      availableWallets: "Available wallets",
    },
    mobileConnectionModal: {
      showQR: "Show QR Code",
      scanQR: "Scan the QR code below with your phone’s or {{ name }}’s camera",
      continueIn: "Continue in {{ name }}…",
      connectionDeclined: "Connection declined",
    },
    desktopConnectionModal: {
      scanQR: "Scan the QR code below with your phone’s or {{ name }}’s camera",
      continueInExtension: "Continue in {{ name }} browser extension…",
      dontHaveExtension:
        "Seems you don't have installed {{ name }} browser extension",
      getWallet: "Get {{ name }}",
      continueOnDesktop: "Continue in {{ name }} on desktop…",
      openWalletOnTelegram: "Open Wallet in Telegram on desktop",
      connectionDeclined: "Connection declined",
    },
    infoModal: {
      whatIsAWallet: "What is a wallet",
      secureDigitalAssets: "Secure digital assets storage",
      walletProtects:
        "A wallet protects and manages your digital assets including TON, tokens and collectables.",
      controlIdentity: "Control your Web3 identity",
      manageIdentity:
        "Manage your digital identity and access decentralized applications with ease. Maintain control over your data and engage securely in the blockchain ecosystem.",
      effortlessCryptoTransactions: "Effortless crypto transactions",
      easilySend:
        "Easily send, receive, monitor your cryptocurrencies. Streamline your operations with decentralized applications.",
      getAWallet: "Get a Wallet",
    },
  },
  lj = {
    confirmTransaction: {
      header: "Confirm the transaction in {{ name }}",
      text: "It will only take a moment.",
    },
    transactionSent: "$notifications.transactionSent",
    transactionCanceled: "$notifications.transactionCanceled",
  },
  uj = {
    common: rj,
    button: ij,
    notifications: sj,
    walletItem: oj,
    walletModal: aj,
    actionModal: lj,
  },
  cj = {
    close: "Закрыть",
    openWallet: "Открыть кошелёк",
    copyLink: "Копировать ссылку",
    linkCopied: "Ссылка скопирована",
    copied: "Ссылка скопирована",
    yourWallet: "Ваш кошелёк",
    retry: "Повторить",
    get: "Скачать",
    mobile: "Мобильный",
    browserExtension: "Расширение",
    desktop: "Десктоп",
  },
  dj = {
    connectWallet: "Подключить кошелёк",
    dropdown: {
      copy: "Скопировать адрес",
      copied: "Адрес скопирован!",
      disconnect: "Отключить кошелёк",
    },
  },
  fj = {
    confirm: { header: "Откройте {{ name }}, чтобы подтвердить транзакцию." },
    transactionSent: {
      header: "Транзакция отправлена",
      text: "Ваша транзакция будет обработана через несколько секунд.",
    },
    transactionCanceled: {
      header: "Транзакция отменена",
      text: "Состояние вашего счёта не изменится.",
    },
  },
  hj = {
    walletOn: "Wallet в",
    recent: "Недавний",
    installed: "Установлен",
    popular: "Популярен",
  },
  pj = {
    loading: "Кошельки загружаются",
    wallets: "Кошельки",
    mobileUniversalModal: {
      connectYourWallet: "Подключите кошелёк",
      openWalletOnTelegramOrSelect:
        "Подключите Wallet в Telegram или выберете кошелёк для подключения",
      openWalletOnTelegram: "Открыть Wallet в Telegram",
      openLink: "Открыть ссылку",
      scan: "Отсканируйте камерой вашего телефона",
    },
    desktopUniversalModal: {
      connectYourWallet: "Подключите кошелёк",
      scan: "Отсканируйте QR-код камерой вашего телефона",
      availableWallets: "Доступные кошельки",
    },
    mobileConnectionModal: {
      showQR: "Показать QR-код",
      scanQR:
        "Отсканируйте QR-код ниже камерой в приложении {{ name }}, или камерой телефона",
      continueIn: "Продолжите в {{ name }}…",
      connectionDeclined: "Подключение отклонено",
    },
    desktopConnectionModal: {
      scanQR:
        "Отсканируйте QR-код ниже камерой в приложении {{ name }}, или камерой телефона",
      continueInExtension: "Откройте браузерное расширение {{ name }}",
      dontHaveExtension:
        "Похоже, у вас не установлено браузерное расширение {{ name }}",
      getWallet: "Скачать {{ name }}",
      continueOnDesktop: "Откройте {{ name }} на компьютере…",
      openWalletOnTelegram: "Открыть Wallet в Telegram",
      connectionDeclined: "Подключение отклонено",
    },
    infoModal: {
      whatIsAWallet: "Что такое кошелёк?",
      secureDigitalAssets: "Надежное хранилище цифровых активов",
      walletProtects:
        "Кошелёк защищает ваши цифровые активы, включая TON, токены и предметы коллекционирования, и управляет ими.",
      controlIdentity: "Контроль своей личности Web3",
      manageIdentity:
        "Управляйте своей цифровой идентификацией и с легкостью получайте доступ к децентрализованным приложениям. Сохраняйте контроль над своими данными и безопасно участвуйте в экосистеме блокчейна.",
      effortlessCryptoTransactions: "Простые криптотранзакции",
      easilySend:
        "Легко отправляйте, получайте и отслеживайте свои криптовалюты. Оптимизируйте свои операции с помощью децентрализованных приложений.",
      getAWallet: "Скачать кошелёк",
    },
  },
  mj = {
    confirmTransaction: {
      header: "Подтвердите действие в {{ name }}",
      text: "Это займет пару секунд.",
    },
    transactionSent: "$notifications.transactionSent",
    transactionCanceled: "$notifications.transactionCanceled",
  },
  gj = {
    common: cj,
    button: dj,
    notifications: fj,
    walletItem: hj,
    walletModal: pj,
    actionModal: mj,
  },
  yj = { en: yy(uj), ru: yy(gj) };
function yy(e) {
  const t = "$",
    n = (r) => {
      Object.entries(r).forEach(([i, s]) => {
        if (typeof s == "object" && s) return n(s);
        if (typeof s == "string") {
          if (s[0] === t) {
            const o = s.slice(1).split(".");
            let l = e;
            o.forEach((c) => {
              if (c in l) l = l[c];
              else
                throw new Error(
                  `Cannot parse translations: there is no property ${c} in translation`
                );
            }),
              (r[i] = l);
          }
          s.slice(0, 2) === `\\${t}` && (r[i] = s.slice(1));
        }
      });
    };
  return n(e), e;
}
const A3 = A4(),
  B5 = Symbol("store-raw"),
  Nl = Symbol("store-node"),
  vj = Symbol("store-name");
function cS(e, t) {
  let n = e[Di];
  if (
    !n &&
    (Object.defineProperty(e, Di, { value: (n = new Proxy(e, xj)) }),
    !Array.isArray(e))
  ) {
    const r = Object.keys(e),
      i = Object.getOwnPropertyDescriptors(e);
    for (let s = 0, o = r.length; s < o; s++) {
      const l = r[s];
      i[l].get &&
        Object.defineProperty(e, l, {
          enumerable: i[l].enumerable,
          get: i[l].get.bind(n),
        });
    }
  }
  return n;
}
function Fd(e) {
  let t;
  return (
    e != null &&
    typeof e == "object" &&
    (e[Di] ||
      !(t = Object.getPrototypeOf(e)) ||
      t === Object.prototype ||
      Array.isArray(e))
  );
}
function g3(e, t = new Set()) {
  let n, r, i, s;
  if ((n = e != null && e[B5])) return n;
  if (!Fd(e) || t.has(e)) return e;
  if (Array.isArray(e)) {
    Object.isFrozen(e) ? (e = e.slice(0)) : t.add(e);
    for (let o = 0, l = e.length; o < l; o++)
      (i = e[o]), (r = g3(i, t)) !== i && (e[o] = r);
  } else {
    Object.isFrozen(e) ? (e = Object.assign({}, e)) : t.add(e);
    const o = Object.keys(e),
      l = Object.getOwnPropertyDescriptors(e);
    for (let c = 0, f = o.length; c < f; c++)
      (s = o[c]), !l[s].get && ((i = e[s]), (r = g3(i, t)) !== i && (e[s] = r));
  }
  return e;
}
function up(e) {
  let t = e[Nl];
  return t || Object.defineProperty(e, Nl, { value: (t = {}) }), t;
}
function D5(e, t, n) {
  return e[t] || (e[t] = fS(n));
}
function wj(e, t) {
  const n = Reflect.getOwnPropertyDescriptor(e, t);
  return (
    !n ||
      n.get ||
      !n.configurable ||
      t === Di ||
      t === Nl ||
      t === vj ||
      (delete n.value, delete n.writable, (n.get = () => e[Di][t])),
    n
  );
}
function dS(e) {
  if (KC()) {
    const t = up(e);
    (t._ || (t._ = fS()))();
  }
}
function bj(e) {
  return dS(e), Reflect.ownKeys(e);
}
function fS(e) {
  const [t, n] = et(e, { equals: !1, internal: !0 });
  return (t.$ = n), t;
}
const xj = {
  get(e, t, n) {
    if (t === B5) return e;
    if (t === Di) return n;
    if (t === L5) return dS(e), n;
    const r = up(e),
      i = r.hasOwnProperty(t);
    let s = i ? r[t]() : e[t];
    if (t === Nl || t === "__proto__") return s;
    if (!i) {
      const o = Object.getOwnPropertyDescriptor(e, t);
      KC() &&
        (typeof s != "function" || e.hasOwnProperty(t)) &&
        !(o && o.get) &&
        (s = D5(r, t, s)());
    }
    return Fd(s) ? cS(s) : s;
  },
  has(e, t) {
    return t === B5 || t === Di || t === L5 || t === Nl || t === "__proto__"
      ? !0
      : (this.get(e, t, e), t in e);
  },
  set() {
    return !0;
  },
  deleteProperty() {
    return !0;
  },
  ownKeys: bj,
  getOwnPropertyDescriptor: wj,
};
function Ud(e, t, n, r = !1) {
  if (!r && e[t] === n) return;
  const i = e[t],
    s = e.length;
  n === void 0 ? delete e[t] : (e[t] = n);
  let o = up(e),
    l;
  (l = D5(o, t, i)) && l.$(() => n),
    Array.isArray(e) &&
      e.length !== s &&
      (l = D5(o, "length", s)) &&
      l.$(e.length),
    (l = o._) && l.$();
}
function hS(e, t) {
  const n = Object.keys(t);
  for (let r = 0; r < n.length; r += 1) {
    const i = n[r];
    Ud(e, i, t[i]);
  }
}
function Cj(e, t) {
  if ((typeof t == "function" && (t = t(e)), (t = g3(t)), Array.isArray(t))) {
    if (e === t) return;
    let n = 0,
      r = t.length;
    for (; n < r; n++) {
      const i = t[n];
      e[n] !== i && Ud(e, n, i);
    }
    Ud(e, "length", r);
  } else hS(e, t);
}
function il(e, t, n = []) {
  let r,
    i = e;
  if (t.length > 1) {
    r = t.shift();
    const o = typeof r,
      l = Array.isArray(e);
    if (Array.isArray(r)) {
      for (let c = 0; c < r.length; c++) il(e, [r[c]].concat(t), n);
      return;
    } else if (l && o === "function") {
      for (let c = 0; c < e.length; c++) r(e[c], c) && il(e, [c].concat(t), n);
      return;
    } else if (l && o === "object") {
      const { from: c = 0, to: f = e.length - 1, by: d = 1 } = r;
      for (let p = c; p <= f; p += d) il(e, [p].concat(t), n);
      return;
    } else if (t.length > 1) {
      il(e[r], t, [r].concat(n));
      return;
    }
    (i = e[r]), (n = [r].concat(n));
  }
  let s = t[0];
  (typeof s == "function" && ((s = s(i, n)), s === i)) ||
    (r === void 0 && s == null) ||
    ((s = g3(s)),
    r === void 0 || (Fd(i) && Fd(s) && !Array.isArray(s))
      ? hS(i, s)
      : Ud(e, r, s));
}
function cp(...[e, t]) {
  const n = g3(e || {}),
    r = Array.isArray(n),
    i = cS(n);
  function s(...o) {
    HC(() => {
      r && o.length === 1 ? Cj(n, o[0]) : il(n, o);
    });
  }
  return [i, s];
}
const pS = {
    constant: { black: "#000000", white: "#FFFFFF" },
    connectButton: { background: "#0098EA", foreground: "#FFFFFF" },
    accent: "#0098EA",
    telegramButton: "#0098EA",
    icon: {
      primary: "#0F0F0F",
      secondary: "#7A8999",
      tertiary: "#C1CAD2",
      success: "#29CC6A",
      error: "#F5A73B",
    },
    background: {
      primary: "#FFFFFF",
      secondary: "#F1F3F5",
      segment: "#FFFFFF",
      tint: "#F1F3F5",
      qr: "#F1F3F5",
    },
    text: { primary: "#0F0F0F", secondary: "#6A7785" },
  },
  Sj = {
    constant: { black: "#000000", white: "#FFFFFF" },
    connectButton: { background: "#0098EA", foreground: "#FFFFFF" },
    accent: "#E5E5EA",
    telegramButton: "#31A6F5",
    icon: {
      primary: "#E5E5EA",
      secondary: "#909099",
      tertiary: "#434347",
      success: "#29CC6A",
      error: "#F5A73B",
    },
    background: {
      primary: "#121214",
      secondary: "#18181A",
      segment: "#262629",
      tint: "#222224",
      qr: "#FFFFFF",
    },
    text: { primary: "#E5E5EA", secondary: "#7D7D85" },
  };
/*!
 * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */ function vy(e) {
  return Object.prototype.toString.call(e) === "[object Object]";
}
function Ej(e) {
  var t, n;
  return vy(e) === !1
    ? !1
    : ((t = e.constructor),
      t === void 0
        ? !0
        : ((n = t.prototype),
          !(vy(n) === !1 || n.hasOwnProperty("isPrototypeOf") === !1)));
}
function Ns(e, t) {
  return e
    ? zL(t, e, { arrayMerge: (r, i, s) => i, isMergeableObject: Ej })
    : t;
}
const [kj, dp] = cp({ theme: cn.LIGHT, colors: pS, borderRadius: "m" }),
  mS = { [cn.LIGHT]: pS, [cn.DARK]: Sj },
  t2 = { [cn.LIGHT]: void 0, [cn.DARK]: void 0 };
function f9(e, t) {
  t &&
    ((t2[cn.DARK] = Ns(t[cn.DARK], t2[cn.DARK])),
    (t2[cn.LIGHT] = Ns(t[cn.LIGHT], t2[cn.LIGHT]))),
    dp({ theme: e, colors: Ns(t2[e], mS[e]) });
}
function _j(e) {
  dp({ borderRadius: e });
}
function Aj(e) {
  (t2[cn.DARK] = Ns(e[cn.DARK], t2[cn.DARK])),
    (t2[cn.LIGHT] = Ns(e[cn.LIGHT], t2[cn.LIGHT])),
    dp((t) => ({ colors: Ns(t2[t.theme], mS[t.theme]) }));
}
const Tj = F1.div`
    background-color: ${(e) => e.theme.colors.background.secondary};
`,
  oa = (e) => {
    let t;
    const [n, r] = et(null);
    return (
      Dn(() => {
        const i = new window.Image();
        return (
          (i.src = e.src),
          (i.alt = e.alt || ""),
          i.setAttribute("draggable", "false"),
          e.class && i.classList.add(e.class),
          i.complete
            ? r(i)
            : (i.addEventListener("load", () => r(i)),
              () => i.removeEventListener("load", () => r(i)))
        );
      }),
      [
        J(dt, {
          get when() {
            return n();
          },
          get children() {
            return n();
          },
        }),
        J(dt, {
          get when() {
            return !n();
          },
          get children() {
            return J(Tj, {
              get class() {
                return e.class;
              },
              ref(i) {
                const s = t;
                typeof s == "function" ? s(i) : (t = i);
              },
            });
          },
        }),
      ]
    );
  };
let Go = {};
try {
  let e = location.hash.toString();
  Go = Pj(e);
} catch {}
let y3 = "unknown";
Go != null &&
  Go.tgWebAppPlatform &&
  (y3 = (X8 = Go.tgWebAppPlatform) != null ? X8 : "unknown");
if (y3 === "unknown") {
  const e = w2();
  y3 =
    (ty =
      (ey =
        (J8 = e == null ? void 0 : e.Telegram) == null ? void 0 : J8.WebApp) ==
      null
        ? void 0
        : ey.platform) != null
      ? ty
      : "unknown";
}
let $d = "6.0";
Go != null && Go.tgWebAppVersion && ($d = Go.tgWebAppVersion);
if (!$d) {
  const e = w2();
  $d =
    (iy =
      (ry =
        (ny = e == null ? void 0 : e.Telegram) == null ? void 0 : ny.WebApp) ==
      null
        ? void 0
        : ry.version) != null
      ? iy
      : "6.0";
}
function Uo(...e) {
  return e.includes(y3);
}
function p2() {
  var e;
  return y3 !== "unknown" || !!((e = w2()) != null && e.TelegramWebviewProxy);
}
function gS() {
  var e;
  const t = !!((e = w2()) != null && e.TelegramWebview);
  return (p2() || t) && y3 === "unknown";
}
function fp() {
  vS("web_app_expand", {});
}
function F5(e, t) {
  const n = new URL(e);
  if (n.protocol !== "http:" && n.protocol !== "https:") {
    if (t) return t();
    throw new Tn(`Url protocol is not supported: ${n}`);
  }
  if (n.hostname !== "t.me") {
    if (t) return t();
    throw new Tn(`Url host is not supported: ${n}`);
  }
  const r = n.pathname + n.search;
  yS() || Lj("6.1")
    ? vS("web_app_open_tg_link", { path_full: r })
    : Qt("https://t.me" + r);
}
function yS() {
  try {
    const e = w2();
    return e ? e.parent != null && e !== e.parent : !1;
  } catch {
    return !1;
  }
}
function vS(e, t) {
  try {
    const n = w2();
    if (!n)
      throw new Tn("Can't post event to parent window: window is not defined");
    if (n.TelegramWebviewProxy !== void 0)
      ud("postEvent", e, t),
        n.TelegramWebviewProxy.postEvent(e, JSON.stringify(t));
    else if (n.external && "notify" in n.external)
      ud("postEvent", e, t),
        n.external.notify(JSON.stringify({ eventType: e, eventData: t }));
    else if (yS()) {
      const r = "*",
        i = JSON.stringify({ eventType: e, eventData: t });
      ud("postEvent", e, t), n.parent.postMessage(i, r);
    } else throw new Tn("Can't post event to TMA");
  } catch (n) {
    $I(`Can't post event to parent window: ${n}`);
  }
}
function Pj(e) {
  e = e.replace(/^#/, "");
  let t = {};
  if (!e.length) return t;
  if (e.indexOf("=") < 0 && e.indexOf("?") < 0) return (t._path = Vd(e)), t;
  let n = e.indexOf("?");
  if (n >= 0) {
    let i = e.substr(0, n);
    (t._path = Vd(i)), (e = e.substr(n + 1));
  }
  let r = Mj(e);
  for (let i in r) t[i] = r[i];
  return t;
}
function Vd(e) {
  try {
    return (e = e.replace(/\+/g, "%20")), decodeURIComponent(e);
  } catch {
    return e;
  }
}
function Mj(e) {
  let t = {};
  if (!e.length) return t;
  let n = e.split("&"),
    r,
    i,
    s,
    o;
  for (r = 0; r < n.length; r++)
    (i = n[r].split("=")),
      (s = Vd(i[0])),
      (o = i[1] == null ? null : Vd(i[1])),
      (t[s] = o);
  return t;
}
function Rj(e, t) {
  typeof e != "string" && (e = "");
  let n = e.replace(/^\s+|\s+$/g, "").split("."),
    r = t.replace(/^\s+|\s+$/g, "").split("."),
    i,
    s,
    o,
    l;
  for (i = Math.max(n.length, r.length), s = 0; s < i; s++)
    if (((o = parseInt(n[s]) || 0), (l = parseInt(r[s]) || 0), o !== l))
      return o > l ? 1 : -1;
  return 0;
}
function Lj(e) {
  return Rj($d, e) >= 0;
}
const $o = { mobile: 440, tablet: 1020 };
function n3(e) {
  const t = w2();
  if (!t) return e === "desktop";
  if (Uo("weba")) return !0;
  const n = t.innerWidth;
  switch (e) {
    case "desktop":
      return n > $o.tablet;
    case "tablet":
      return n > $o.mobile;
    default:
    case "mobile":
      return n <= $o.mobile || Ii("ios", "android", "ipad");
  }
}
function ri(e) {
  switch (e) {
    case "mobile":
      return `@media (max-width: ${$o.mobile}px)`;
    case "tablet":
      return `@media (max-width: ${$o.tablet}px) (min-width: ${$o.mobile}px)`;
    default:
    case "desktop":
      return `@media (min-width: ${$o.tablet}px)`;
  }
}
const su = "@media (hover: none)",
  ou = "@media not all and (hover: none)",
  Ij = { m: "100vh", s: "8px", none: "0" },
  h9 = { s: 0.02, m: 0.04 },
  jj = F1.button`
    display: ${(e) => (e.leftIcon || e.rightIcon ? "flex" : "inline-block")};
    gap: ${(e) => (e.leftIcon || e.rightIcon ? "6px" : "unset")};
    align-items: ${(e) => (e.leftIcon || e.rightIcon ? "center" : "unset")};
    justify-content: ${(e) =>
      e.leftIcon || e.rightIcon ? "space-between" : "unset"};
    background-color: ${(e) =>
      e.appearance === "flat"
        ? "transparent"
        : e.appearance === "secondary"
        ? e.theme.colors.background.tint
        : iu(e.theme.colors.accent, 0.12)};
    color: ${(e) =>
      e.appearance === "secondary"
        ? e.theme.colors.text.primary
        : e.theme.colors.accent};

    padding: ${(e) => (e.appearance === "flat" ? "0" : "9px 16px")};
    padding-left: ${(e) =>
      e.leftIcon && e.appearance !== "flat" ? "12px" : "16px"};
    padding-right: ${(e) =>
      e.rightIcon && e.appearance !== "flat" ? "12px" : "16px"};
    border: none;
    border-radius: ${(e) => Ij[e.theme.borderRadius]};
    cursor: ${(e) => (e.disabled ? "not-allowed" : "pointer")};

    font-size: 14px;
    font-weight: 510;
    line-height: 18px;

    transition: transform 0.125s ease-in-out;

    ${ou} {
        &:hover {
            transform: ${(e) =>
              e.disabled ? "unset" : `scale(${1 + h9[e.scale]})`};
        }
    }

    &:active {
        transform: ${(e) =>
          e.disabled ? "unset" : `scale(${1 - h9[e.scale]})`};
    }

    ${su} {
        &:active {
            transform: ${(e) =>
              e.disabled ? "unset" : `scale(${1 - h9[e.scale] * 2})`};
        }
    }
`;
function au(e) {
  const t = Yn(() => Object.keys(e).filter((r) => r.startsWith("data-"))),
    [n] = rp(e, t);
  return n;
}
const Pn = (e) => {
  const t = au(e);
  return J(
    jj,
    a2(
      {
        get appearance() {
          return e.appearance || "primary";
        },
        get class() {
          return e.class;
        },
        onClick: (n) => {
          var r;
          return (r = e.onClick) == null ? void 0 : r.call(e, n);
        },
        onMouseEnter: (n) => {
          var r;
          return (r = e.onMouseEnter) == null ? void 0 : r.call(e, n);
        },
        onMouseLeave: (n) => {
          var r;
          return (r = e.onMouseLeave) == null ? void 0 : r.call(e, n);
        },
        ref(n) {
          const r = e.ref;
          typeof r == "function" ? r(n) : (e.ref = n);
        },
        get disabled() {
          return e.disabled;
        },
        get scale() {
          return e.scale || "m";
        },
        get leftIcon() {
          return !!e.leftIcon;
        },
        get rightIcon() {
          return !!e.rightIcon;
        },
        "data-tc-button": "true",
      },
      t,
      {
        get children() {
          return [
            ke(() => e.leftIcon),
            ke(() => e.children),
            ke(() => e.rightIcon),
          ];
        },
      }
    )
  );
};
function Wd(e) {
  requestAnimationFrame(() => {
    requestAnimationFrame(e);
  });
}
const hp = (e) => {
  let t,
    n = !0;
  const [r, i] = et(),
    [s, o] = et(),
    l = T4(() => e.children),
    {
      onBeforeEnter: c,
      onEnter: f,
      onAfterEnter: d,
      onBeforeExit: p,
      onExit: m,
      onAfterExit: g,
    } = e,
    w = ke(() => {
      const E = e.name || "s";
      return {
        enterActiveClass: e.enterActiveClass || E + "-enter-active",
        enterClass: e.enterClass || E + "-enter",
        enterToClass: e.enterToClass || E + "-enter-to",
        exitActiveClass: e.exitActiveClass || E + "-exit-active",
        exitClass: e.exitClass || E + "-exit",
        exitToClass: e.exitToClass || E + "-exit-to",
      };
    });
  function b(E, P) {
    if (!n || e.appear) {
      let _ = function (O) {
        E &&
          (!O || O.target === E) &&
          (E.removeEventListener("transitionend", _),
          E.removeEventListener("animationend", _),
          E.classList.remove(...M),
          E.classList.remove(...L),
          HC(() => {
            r() !== E && i(E), s() === E && o(void 0);
          }),
          d && d(E),
          e.mode === "inout" && x(E, P));
      };
      const T = w().enterClass.split(" "),
        M = w().enterActiveClass.split(" "),
        L = w().enterToClass.split(" ");
      c && c(E),
        E.classList.add(...T),
        E.classList.add(...M),
        Wd(() => {
          E.classList.remove(...T),
            E.classList.add(...L),
            f && f(E, () => _()),
            (!f || f.length < 2) &&
              (E.addEventListener("transitionend", _),
              E.addEventListener("animationend", _));
        });
    }
    P && !e.mode ? o(E) : i(E);
  }
  function x(E, P) {
    const _ = w().exitClass.split(" "),
      T = w().exitActiveClass.split(" "),
      M = w().exitToClass.split(" ");
    if (!P.parentNode) return L();
    p && p(P),
      P.classList.add(..._),
      P.classList.add(...T),
      Wd(() => {
        P.classList.remove(..._), P.classList.add(...M);
      }),
      m && m(P, () => L()),
      (!m || m.length < 2) &&
        (P.addEventListener("transitionend", L),
        P.addEventListener("animationend", L));
    function L(O) {
      (!O || O.target === P) &&
        (P.removeEventListener("transitionend", L),
        P.removeEventListener("animationend", L),
        P.classList.remove(...T),
        P.classList.remove(...M),
        r() === P && i(void 0),
        g && g(P),
        e.mode === "outin" && b(E, P));
    }
  }
  return (
    np((E) => {
      for (t = l(); typeof t == "function"; ) t = t();
      return Yn(
        () => (
          t && t !== E && (e.mode !== "outin" ? b(t, E) : n && i(t)),
          E && E !== t && e.mode !== "inout" && x(t, E),
          (n = !1),
          t
        )
      );
    }),
    [r, s]
  );
};
function Oc(e) {
  const {
      top: t,
      bottom: n,
      left: r,
      right: i,
      width: s,
      height: o,
    } = e.getBoundingClientRect(),
    l = e.parentNode.getBoundingClientRect();
  return {
    top: t - l.top,
    bottom: n,
    left: r - l.left,
    right: i,
    width: s,
    height: o,
  };
}
const Nj = (e) => {
  const t = T4(() => e.children),
    n = ke(() => {
      const g = e.name || "s";
      return {
        enterActiveClass: e.enterActiveClass || g + "-enter-active",
        enterClass: e.enterClass || g + "-enter",
        enterToClass: e.enterToClass || g + "-enter-to",
        exitActiveClass: e.exitActiveClass || g + "-exit-active",
        exitClass: e.exitClass || g + "-exit",
        exitToClass: e.exitToClass || g + "-exit-to",
        moveClass: e.moveClass || g + "-move",
      };
    }),
    {
      onBeforeEnter: r,
      onEnter: i,
      onAfterEnter: s,
      onBeforeExit: o,
      onExit: l,
      onAfterExit: c,
    } = e,
    [f, d] = et();
  let p = [],
    m = !0;
  return (
    np(() => {
      const g = t(),
        w = [...g],
        b = new Set(g),
        x = new Set(p),
        E = n().enterClass.split(" "),
        P = n().enterActiveClass.split(" "),
        _ = n().enterToClass.split(" "),
        T = n().exitClass.split(" "),
        M = n().exitActiveClass.split(" "),
        L = n().exitToClass.split(" ");
      for (let O = 0; O < g.length; O++) {
        const U = g[O];
        if (!m && !x.has(U)) {
          let D = function (H) {
            U &&
              (!H || H.target === U) &&
              (U.removeEventListener("transitionend", D),
              U.removeEventListener("animationend", D),
              U.classList.remove(...P),
              U.classList.remove(..._),
              s && s(U));
          };
          r && r(U),
            U.classList.add(...E),
            U.classList.add(...P),
            Wd(() => {
              U.classList.remove(...E),
                U.classList.add(..._),
                i && i(U, () => D()),
                (!i || i.length < 2) &&
                  (U.addEventListener("transitionend", D),
                  U.addEventListener("animationend", D));
            });
        }
      }
      for (let O = 0; O < p.length; O++) {
        const U = p[O];
        if (!b.has(U) && U.parentNode) {
          let D = function (H) {
            (!H || H.target === U) &&
              (U.removeEventListener("transitionend", D),
              U.removeEventListener("animationend", D),
              U.classList.remove(...M),
              U.classList.remove(...L),
              c && c(U),
              (p = p.filter(($) => $ !== U)),
              d(p));
          };
          w.splice(O, 0, U),
            o && o(U),
            U.classList.add(...T),
            U.classList.add(...M),
            Wd(() => {
              U.classList.remove(...T), U.classList.add(...L);
            }),
            l && l(U, () => D()),
            (!l || l.length < 2) &&
              (U.addEventListener("transitionend", D),
              U.addEventListener("animationend", D));
        }
      }
      (p = w), d(w);
    }),
    Dn((g) => {
      const w = f();
      return (
        w.forEach((b) => {
          let x;
          (x = g.get(b))
            ? x.new && ((x.new = !1), (x.newPos = Oc(b)))
            : g.set(b, (x = { pos: Oc(b), new: !m })),
            x.new &&
              b.addEventListener(
                "transitionend",
                () => {
                  (x.new = !1), b.parentNode && (x.newPos = Oc(b));
                },
                { once: !0 }
              ),
            x.newPos && (x.pos = x.newPos),
            (x.newPos = Oc(b));
        }),
        m
          ? ((m = !1), g)
          : (w.forEach((b) => {
              const x = g.get(b),
                E = x.pos,
                P = x.newPos,
                _ = E.left - P.left,
                T = E.top - P.top;
              if (_ || T) {
                x.moved = !0;
                const M = b.style;
                (M.transform = `translate(${_}px,${T}px)`),
                  (M.transitionDuration = "0s");
              }
            }),
            document.body.offsetHeight,
            w.forEach((b) => {
              const x = g.get(b);
              if (x.moved) {
                let E = function (T) {
                  (T && T.target !== b) ||
                    !b.parentNode ||
                    ((!T || /transform$/.test(T.propertyName)) &&
                      (b.removeEventListener("transitionend", E),
                      b.classList.remove(..._)));
                };
                x.moved = !1;
                const P = b.style,
                  _ = n().moveClass.split(" ");
                b.classList.add(..._),
                  (P.transform = P.transitionDuration = ""),
                  b.addEventListener("transitionend", E);
              }
            }),
            g)
      );
    }, new Map()),
    f
  );
};
function Oj(e, t) {
  const n = (r) => {
    var i;
    return !e.contains(r.target) && ((i = t()) == null ? void 0 : i());
  };
  document.body.addEventListener("click", n),
    Pr(() => document.body.removeEventListener("click", n));
}
function Bj(e, t) {
  const n = (r) => {
    var i, s;
    r.key === "Escape" &&
      ((i = document.activeElement) == null || i.blur(),
      (s = t()) == null || s());
  };
  document.body.addEventListener("keydown", n),
    Pr(() => document.body.removeEventListener("keydown", n));
}
function Dj(e, t) {
  const { isEnabled: n, onClose: r } = t();
  if (!n || !(lp().os === "android")) return;
  window.history.pushState(Fj, "");
  const s = (o) => {
    o.preventDefault(), r();
  };
  window.addEventListener("popstate", s, { once: !0 }),
    Pr(() => {
      window.removeEventListener("popstate", s),
        aS(() => {
          var o;
          ((o = window.history.state) == null ? void 0 : o[wS]) === !0 &&
            window.history.back();
        });
    });
}
const wS = "androidBackHandler",
  Fj = { [wS]: !0 },
  Uj = Ct(
    '<svg><path fill-rule="evenodd" clip-rule="evenodd" d="M10.2122 14.3407C10.5384 14.0854 10.5959 13.614 10.3406 13.2878L6.20237 8.00003L10.3406 2.71227C10.5959 2.38607 10.5384 1.91469 10.2122 1.6594C9.88604 1.40412 9.41465 1.46161 9.15937 1.7878L4.65937 7.5378C4.44688 7.80932 4.44688 8.19074 4.65937 8.46226L9.15937 14.2123C9.41465 14.5385 9.88604 14.5959 10.2122 14.3407Z"></path></svg>',
    4,
    !0
  ),
  $j = { left: 0, top: 90, right: 180, bottom: 270 },
  bS = (e) => {
    const t = Gt(),
      n = () => e.fill || t.colors.icon.secondary,
      r = () => e.direction || "left",
      i = F1("svg")`
        transform: rotate(${(s) => $j[s.svgDirection]}deg);
        transition: transform 0.1s ease-in-out;
    `;
    return J(i, {
      xmlns: "http://www.w3.org/2000/svg",
      width: "16",
      height: "16",
      viewBox: "0 0 16 16",
      fill: "none",
      get svgDirection() {
        return r();
      },
      get children() {
        const s = Uj.cloneNode(!0);
        return xt(() => We(s, "fill", n())), s;
      },
    });
  },
  Vj = Ct(
    '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M2.71966 2.71968C3.01255 2.42678 3.48743 2.42677 3.78032 2.71966L8.00002 6.93925L12.2197 2.71967C12.5126 2.42677 12.9874 2.42678 13.2803 2.71967C13.5732 3.01257 13.5732 3.48744 13.2803 3.78033L9.06068 7.99991L13.2803 12.2197C13.5732 12.5126 13.5732 12.9874 13.2803 13.2803C12.9874 13.5732 12.5126 13.5732 12.2197 13.2803L8.00002 9.06057L3.78033 13.2803C3.48744 13.5732 3.01257 13.5732 2.71967 13.2803C2.42678 12.9874 2.42677 12.5126 2.71967 12.2197L6.93936 7.99991L2.71968 3.78034C2.42678 3.48745 2.42677 3.01257 2.71966 2.71968Z"></path></svg>'
  ),
  Wj = (e) => {
    const t = Gt(),
      n = () => e.fill || t.colors.icon.secondary;
    return (() => {
      const r = Vj.cloneNode(!0),
        i = r.firstChild;
      return xt(() => We(i, "fill", n())), r;
    })();
  },
  zj = F1.button`
    padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 32px;
    height: 32px;
    border-radius: 50%;
    background-color: ${(e) => e.theme.colors.background.tint};
    border: none;
    cursor: pointer;

    transition: transform 0.125s ease-in-out;

    ${ou} {
        &:hover {
            transform: scale(1.04);
        }
    }

    &:active {
        transform: scale(0.96);
    }

    ${su} {
        &:active {
            transform: scale(0.92);
        }
    }
`,
  aa = (e) => {
    const t = au(e),
      n = () => e.icon || "close";
    return J(
      zj,
      a2(
        {
          get class() {
            return e.class;
          },
          onClick: () => e.onClick(),
          "data-tc-icon-button": "true",
        },
        t,
        {
          get children() {
            return [
              J(dt, {
                get when() {
                  return !!e.children;
                },
                get children() {
                  return e.children;
                },
              }),
              J(dt, {
                get when() {
                  return !e.children;
                },
                get children() {
                  return J(ru, {
                    get children() {
                      return [
                        J(rr, {
                          get when() {
                            return n() === "close";
                          },
                          get children() {
                            return J(Wj, {
                              get fill() {
                                return e.fill;
                              },
                            });
                          },
                        }),
                        J(rr, {
                          get when() {
                            return n() === "arrow";
                          },
                          get children() {
                            return J(bS, {
                              get fill() {
                                return e.fill;
                              },
                            });
                          },
                        }),
                        J(rr, {
                          get when() {
                            return n() === "question";
                          },
                          get children() {
                            return J(YN, {
                              get fill() {
                                return e.fill;
                              },
                            });
                          },
                        }),
                        J(rr, {
                          get when() {
                            return typeof n() != "string";
                          },
                          get children() {
                            return n();
                          },
                        }),
                      ];
                    },
                  });
                },
              }),
            ];
          },
        }
      )
    );
  },
  d3 = { m: "24px", s: "16px", none: "0" },
  Hj = F1.div`
    display: flex;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.4);
    padding: 20px 0;
    overflow-y: auto;

    ${ri("mobile")} {
        padding-bottom: 0;
    }
`,
  qj = Z2`
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08), 0 16px 64px rgba(0, 0, 0, 0.16);
    width: fit-content;
    margin: auto;

    ${ri("mobile")} {
        width: 100%;
        height: fit-content;
        margin: auto 0 0 0;
    }
`,
  Kj = F1.div`
    position: relative;
    min-height: 100px;
    width: 416px;
    padding: 44px 56px 24px;

    box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.04);

    background-color: ${(e) => e.theme.colors.background.primary};
    border-radius: ${(e) => d3[e.theme.borderRadius]};

    ${ri("mobile")} {
        width: 100%;
    }
`,
  Gj = F1(aa)`
    position: absolute;
    right: 16px;
    top: 16px;
`,
  Yj = F1.div`
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 16px 16px 16px 18px;
    border-radius: 0 0 ${(e) => d3[e.theme.borderRadius]}
        ${(e) => d3[e.theme.borderRadius]};
`,
  Qj = F1(aa)`
    background-color: ${(e) => iu(e.theme.colors.icon.secondary, 0.12)};
`;
class Zj {
  constructor() {
    Ke(this, "currentTime", 0);
  }
}
const sl = class {
  constructor() {
    Ke(this, "currentTime", 0),
      Ke(this, "playbackRate", 1),
      Ke(this, "startTime", null),
      Ke(this, "timeline", new Zj()),
      Ke(this, "finished", Promise.resolve(this)),
      Ke(this, "effect", null),
      Ke(this, "id", ""),
      Ke(this, "pending", !1),
      Ke(this, "playState", "finished"),
      Ke(this, "replaceState", "active"),
      Ke(this, "ready", Promise.resolve(this)),
      Ke(this, "oncancel", null),
      Ke(this, "onfinish", null),
      Ke(this, "onremove", null);
  }
  static create() {
    return (
      sl._instance ||
        (VI(
          "Animation is not supported in this environment: please consider using the `web-animations-js` polyfill to provide a fallback implementation of the Web Animations API."
        ),
        (sl._instance = new sl())),
      sl._instance
    );
  }
  cancel() {}
  finish() {}
  pause() {}
  play() {}
  reverse() {}
  addEventListener(e, t, n) {}
  dispatchEvent(e) {
    return !1;
  }
  removeEventListener(e, t, n) {}
  updatePlaybackRate(e) {}
  commitStyles() {}
  persist() {}
};
let xS = sl;
Ke(xS, "_instance", null);
function r2(e, t, n) {
  return "animate" in e ? e.animate(t, n) : xS.create();
}
const Xj = Ct("<div></div>"),
  Jj = Oj,
  eN = Bj,
  tN = Dj,
  CS = (e) => {
    const t = Gt(),
      n = au(e);
    return (
      Dn(() => {
        e.opened ? HI() : qI();
      }),
      J(hp, {
        onBeforeEnter: (r) => {
          const i = n3("mobile") ? 200 : 100;
          r2(r, [{ opacity: 0 }, { opacity: 1 }], { duration: i }),
            n3("mobile") &&
              r2(
                r.firstElementChild,
                [
                  { transform: "translateY(390px)" },
                  { transform: "translateY(0)" },
                ],
                { duration: i }
              );
        },
        onExit: (r, i) => {
          const s = n3("mobile") ? 200 : 100,
            o = r2(r, [{ opacity: 1 }, { opacity: 0 }], { duration: s });
          if (n3("mobile")) {
            const l = r2(
              r.firstElementChild,
              [
                { transform: "translateY(0)" },
                { transform: "translateY(390px)" },
              ],
              { duration: s }
            );
            Promise.all([o.finished, l.finished]).then(i);
          } else o.finished.then(i);
        },
        get children() {
          return J(dt, {
            get when() {
              return e.opened;
            },
            get children() {
              return J(
                Hj,
                a2({ "data-tc-modal": "true" }, n, {
                  get children() {
                    const r = Xj.cloneNode(!0);
                    return (
                      c3(tN, r, () => ({
                        isEnabled: e.enableAndroidBackHandler,
                        onClose: () => e.onClose(),
                      })),
                      c3(eN, r, () => () => e.onClose()),
                      c3(Jj, r, () => () => e.onClose()),
                      ir(
                        r,
                        J(Kj, {
                          get class() {
                            return e.class;
                          },
                          get children() {
                            return [
                              J(Gj, {
                                icon: "close",
                                onClick: () => e.onClose(),
                              }),
                              ke(() => e.children),
                            ];
                          },
                        }),
                        null
                      ),
                      ir(
                        r,
                        J(dt, {
                          get when() {
                            return e.onClickQuestion;
                          },
                          get children() {
                            return J(Yj, {
                              get children() {
                                return [
                                  J(KN, {}),
                                  J(Qj, {
                                    get onClick() {
                                      return e.onClickQuestion;
                                    },
                                    icon: "question",
                                  }),
                                ];
                              },
                            });
                          },
                        }),
                        null
                      ),
                      xt(() =>
                        ip(
                          r,
                          ld(
                            qj,
                            Z2`
                                border-radius: ${d3[t.borderRadius]};
                                background-color: ${t.colors.background.tint};

                                ${ri("mobile")} {
                                    border-radius: ${d3[t.borderRadius]}
                                        ${d3[t.borderRadius]} 0 0;
                                }
                            `
                          )
                        )
                      ),
                      r
                    );
                  },
                })
              );
            },
          });
        },
      })
    );
  },
  nN = { m: "22px", s: "12px", none: "0" },
  rN = { m: "18px", s: "8px", none: "0" },
  iN = F1.div`
    display: grid;
    grid-template: 1fr / 1fr 1fr;
    width: fit-content;
    justify-items: center;
    gap: 4px;

    position: relative;
    padding: 4px;
    border-radius: ${(e) => nN[e.theme.borderRadius]};

    background-color: ${(e) => e.theme.colors.background.secondary};
`,
  sN = F1.div`
    position: absolute;
    top: 4px;
    left: 4px;

    height: calc(100% - 8px);
    width: calc(50% - 4px);

    border-radius: ${(e) => rN[e.theme.borderRadius]};
    background-color: ${(e) => e.theme.colors.background.segment};

    transform: ${(e) => (e.right ? "translateX(100%)" : "translateX(0)")};

    transition: transform 0.13s ease-in-out;
`,
  wy = F1.input`
    display: none;
`,
  by = F1.label`
    padding: 9px 12px;
    z-index: 1;

    cursor: ${(e) => (e.isActive ? "default" : "pointer")};

    transition: transform 0.13s ease-in-out;

    &:hover {
        transform: ${(e) => (e.isActive ? "none" : "scale(1.025)")};
    }

    > * {
        ${(e) => (e.isActive ? "" : `color: ${e.theme.colors.text.secondary};`)}
    }
`,
  oN = (e) => {
    const t = "tabBar" + Math.floor(Math.random() * 1e4);
    return J(iN, {
      get class() {
        return e.class;
      },
      "data-tc-tab-bar": "true",
      get children() {
        return [
          J(sN, {
            get right() {
              return e.selectedTabIndex === 1;
            },
          }),
          J(by, {
            get isActive() {
              return e.selectedTabIndex === 0;
            },
            get children() {
              return [
                J(wy, {
                  type: "radio",
                  name: t,
                  get checked() {
                    return e.selectedTabIndex === 0;
                  },
                  onInput: () => {
                    var n;
                    return (n = e.onSelectedTabIndexChange) == null
                      ? void 0
                      : n.call(e, 0);
                  },
                }),
                ke(() => e.tab1),
              ];
            },
          }),
          J(by, {
            get isActive() {
              return e.selectedTabIndex === 1;
            },
            get children() {
              return [
                J(wy, {
                  type: "radio",
                  get checked() {
                    return e.selectedTabIndex === 1;
                  },
                  name: t,
                  onInput: () => {
                    var n;
                    return (n = e.onSelectedTabIndexChange) == null
                      ? void 0
                      : n.call(e, 1);
                  },
                }),
                ke(() => e.tab2),
              ];
            },
          }),
        ];
      },
    });
  },
  aN = { m: "16px", s: "12px", none: "0" },
  lN = { m: "12px", s: "8px", none: "0" },
  SS = 256,
  U5 = 60,
  xy = 48,
  Cy = 24,
  cd = F1.div`
    width: 52px;
    height: 52px;
    background: transparent;
    position: absolute;
    right: 0;
    bottom: 0;

    display: flex;
    align-items: center;
    justify-content: center;
    transition: transform 0.125s ease-in-out;
`,
  uN = F1.button`
    display: flex;
    align-items: center;
    position: relative;
    background-color: ${(e) => e.theme.colors.background.qr};
    border-radius: ${(e) => aN[e.theme.borderRadius]};
    padding: ${l2(Cy)} 0;
    height: ${l2(SS + Cy * 2)};
    width: 100%;

    overflow: hidden;
    cursor: pointer;
    border: none;

    ${ou} {
        &:hover {
            ${cd.class} {
                transform: scale(1.04);
            }
        }
    }

    &:active {
        ${cd.class} {
            transform: scale(0.96);
        }
    }

    ${su} {
        &:active {
            ${cd.class} {
                transform: scale(0.92);
            }
        }
    }
`,
  cN = F1.div`
    position: relative;

    width: fit-content;
    margin: 0 auto;

    > div:first-child {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    rect {
        fill: transparent;
    }

    path {
        fill: ${(e) => e.theme.colors.constant.black};
    }
`,
  dN = F1.div`
    position: absolute;
    width: ${l2(U5)};
    height: ${l2(U5)};
    background: ${(e) => e.theme.colors.background.qr};

    display: flex;
    align-items: center;
    justify-content: center;
`,
  fN = F1(oa)`
    width: ${(e) => l2(e.size)};
    height: ${(e) => l2(e.size)};
    border-radius: ${(e) => lN[e.theme.borderRadius]};
    background-color: ${(e) => e.theme.colors.background.qr};
`,
  hN = F1.div`
    position: absolute;
    bottom: 14px;
    left: 50%;
    transform: translate(-50%, 0);

    display: flex;
    gap: 6px;
    align-items: center;
    border-radius: 18px;
    min-width: 126px;
    padding: 9px 16px 9px 10px;

    filter: drop-shadow(0px 2px 8px rgba(0, 0, 0, 0.08));
    background-color: ${(e) => e.theme.colors.background.segment};
`;
var ES = { exports: {} };
(function (e, t) {
  var n = (function () {
    var r = function (M, L) {
      var O = 236,
        U = 17,
        D = M,
        H = s[L],
        $ = null,
        F = 0,
        B = null,
        j = [],
        G = {},
        u1 = function (d1, h1) {
          (F = D * 4 + 17),
            ($ = (function (y1) {
              for (var A1 = new Array(y1), L1 = 0; L1 < y1; L1 += 1) {
                A1[L1] = new Array(y1);
                for (var V1 = 0; V1 < y1; V1 += 1) A1[L1][V1] = null;
              }
              return A1;
            })(F)),
            e1(0, 0),
            e1(F - 7, 0),
            e1(0, F - 7),
            b1(),
            Z(),
            k1(d1, h1),
            D >= 7 && o1(d1),
            B == null && (B = M1(D, H, j)),
            Y1(B, h1);
        },
        e1 = function (d1, h1) {
          for (var y1 = -1; y1 <= 7; y1 += 1)
            if (!(d1 + y1 <= -1 || F <= d1 + y1))
              for (var A1 = -1; A1 <= 7; A1 += 1)
                h1 + A1 <= -1 ||
                  F <= h1 + A1 ||
                  ((0 <= y1 && y1 <= 6 && (A1 == 0 || A1 == 6)) ||
                  (0 <= A1 && A1 <= 6 && (y1 == 0 || y1 == 6)) ||
                  (2 <= y1 && y1 <= 4 && 2 <= A1 && A1 <= 4)
                    ? ($[d1 + y1][h1 + A1] = !0)
                    : ($[d1 + y1][h1 + A1] = !1));
        },
        i1 = function () {
          for (var d1 = 0, h1 = 0, y1 = 0; y1 < 8; y1 += 1) {
            u1(!0, y1);
            var A1 = l.getLostPoint(G);
            (y1 == 0 || d1 > A1) && ((d1 = A1), (h1 = y1));
          }
          return h1;
        },
        Z = function () {
          for (var d1 = 8; d1 < F - 8; d1 += 1)
            $[d1][6] == null && ($[d1][6] = d1 % 2 == 0);
          for (var h1 = 8; h1 < F - 8; h1 += 1)
            $[6][h1] == null && ($[6][h1] = h1 % 2 == 0);
        },
        b1 = function () {
          for (
            var d1 = l.getPatternPosition(D), h1 = 0;
            h1 < d1.length;
            h1 += 1
          )
            for (var y1 = 0; y1 < d1.length; y1 += 1) {
              var A1 = d1[h1],
                L1 = d1[y1];
              if ($[A1][L1] == null)
                for (var V1 = -2; V1 <= 2; V1 += 1)
                  for (var ie = -2; ie <= 2; ie += 1)
                    V1 == -2 ||
                    V1 == 2 ||
                    ie == -2 ||
                    ie == 2 ||
                    (V1 == 0 && ie == 0)
                      ? ($[A1 + V1][L1 + ie] = !0)
                      : ($[A1 + V1][L1 + ie] = !1);
            }
        },
        o1 = function (d1) {
          for (var h1 = l.getBCHTypeNumber(D), y1 = 0; y1 < 18; y1 += 1) {
            var A1 = !d1 && ((h1 >> y1) & 1) == 1;
            $[Math.floor(y1 / 3)][(y1 % 3) + F - 8 - 3] = A1;
          }
          for (var y1 = 0; y1 < 18; y1 += 1) {
            var A1 = !d1 && ((h1 >> y1) & 1) == 1;
            $[(y1 % 3) + F - 8 - 3][Math.floor(y1 / 3)] = A1;
          }
        },
        k1 = function (d1, h1) {
          for (
            var y1 = (H << 3) | h1, A1 = l.getBCHTypeInfo(y1), L1 = 0;
            L1 < 15;
            L1 += 1
          ) {
            var V1 = !d1 && ((A1 >> L1) & 1) == 1;
            L1 < 6
              ? ($[L1][8] = V1)
              : L1 < 8
              ? ($[L1 + 1][8] = V1)
              : ($[F - 15 + L1][8] = V1);
          }
          for (var L1 = 0; L1 < 15; L1 += 1) {
            var V1 = !d1 && ((A1 >> L1) & 1) == 1;
            L1 < 8
              ? ($[8][F - L1 - 1] = V1)
              : L1 < 9
              ? ($[8][15 - L1 - 1 + 1] = V1)
              : ($[8][15 - L1 - 1] = V1);
          }
          $[F - 8][8] = !d1;
        },
        Y1 = function (d1, h1) {
          for (
            var y1 = -1,
              A1 = F - 1,
              L1 = 7,
              V1 = 0,
              ie = l.getMaskFunction(h1),
              ae = F - 1;
            ae > 0;
            ae -= 2
          )
            for (ae == 6 && (ae -= 1); ; ) {
              for (var Be = 0; Be < 2; Be += 1)
                if ($[A1][ae - Be] == null) {
                  var Ve = !1;
                  V1 < d1.length && (Ve = ((d1[V1] >>> L1) & 1) == 1);
                  var ce = ie(A1, ae - Be);
                  ce && (Ve = !Ve),
                    ($[A1][ae - Be] = Ve),
                    (L1 -= 1),
                    L1 == -1 && ((V1 += 1), (L1 = 7));
                }
              if (((A1 += y1), A1 < 0 || F <= A1)) {
                (A1 -= y1), (y1 = -y1);
                break;
              }
            }
        },
        G1 = function (d1, h1) {
          for (
            var y1 = 0,
              A1 = 0,
              L1 = 0,
              V1 = new Array(h1.length),
              ie = new Array(h1.length),
              ae = 0;
            ae < h1.length;
            ae += 1
          ) {
            var Be = h1[ae].dataCount,
              Ve = h1[ae].totalCount - Be;
            (A1 = Math.max(A1, Be)),
              (L1 = Math.max(L1, Ve)),
              (V1[ae] = new Array(Be));
            for (var ce = 0; ce < V1[ae].length; ce += 1)
              V1[ae][ce] = 255 & d1.getBuffer()[ce + y1];
            y1 += Be;
            var gt = l.getErrorCorrectPolynomial(Ve),
              qe = f(V1[ae], gt.getLength() - 1),
              je = qe.mod(gt);
            ie[ae] = new Array(gt.getLength() - 1);
            for (var ce = 0; ce < ie[ae].length; ce += 1) {
              var g1 = ce + je.getLength() - ie[ae].length;
              ie[ae][ce] = g1 >= 0 ? je.getAt(g1) : 0;
            }
          }
          for (var E1 = 0, ce = 0; ce < h1.length; ce += 1)
            E1 += h1[ce].totalCount;
          for (var j1 = new Array(E1), a1 = 0, ce = 0; ce < A1; ce += 1)
            for (var ae = 0; ae < h1.length; ae += 1)
              ce < V1[ae].length && ((j1[a1] = V1[ae][ce]), (a1 += 1));
          for (var ce = 0; ce < L1; ce += 1)
            for (var ae = 0; ae < h1.length; ae += 1)
              ce < ie[ae].length && ((j1[a1] = ie[ae][ce]), (a1 += 1));
          return j1;
        },
        M1 = function (d1, h1, y1) {
          for (
            var A1 = d.getRSBlocks(d1, h1), L1 = p(), V1 = 0;
            V1 < y1.length;
            V1 += 1
          ) {
            var ie = y1[V1];
            L1.put(ie.getMode(), 4),
              L1.put(ie.getLength(), l.getLengthInBits(ie.getMode(), d1)),
              ie.write(L1);
          }
          for (var ae = 0, V1 = 0; V1 < A1.length; V1 += 1)
            ae += A1[V1].dataCount;
          if (L1.getLengthInBits() > ae * 8)
            throw (
              "code length overflow. (" +
              L1.getLengthInBits() +
              ">" +
              ae * 8 +
              ")"
            );
          for (
            L1.getLengthInBits() + 4 <= ae * 8 && L1.put(0, 4);
            L1.getLengthInBits() % 8 != 0;

          )
            L1.putBit(!1);
          for (
            ;
            !(
              L1.getLengthInBits() >= ae * 8 ||
              (L1.put(O, 8), L1.getLengthInBits() >= ae * 8)
            );

          )
            L1.put(U, 8);
          return G1(L1, A1);
        };
      (G.addData = function (d1, h1) {
        h1 = h1 || "Byte";
        var y1 = null;
        switch (h1) {
          case "Numeric":
            y1 = m(d1);
            break;
          case "Alphanumeric":
            y1 = g(d1);
            break;
          case "Byte":
            y1 = w(d1);
            break;
          case "Kanji":
            y1 = b(d1);
            break;
          default:
            throw "mode:" + h1;
        }
        j.push(y1), (B = null);
      }),
        (G.isDark = function (d1, h1) {
          if (d1 < 0 || F <= d1 || h1 < 0 || F <= h1) throw d1 + "," + h1;
          return $[d1][h1];
        }),
        (G.getModuleCount = function () {
          return F;
        }),
        (G.make = function () {
          if (D < 1) {
            for (var d1 = 1; d1 < 40; d1++) {
              for (
                var h1 = d.getRSBlocks(d1, H), y1 = p(), A1 = 0;
                A1 < j.length;
                A1++
              ) {
                var L1 = j[A1];
                y1.put(L1.getMode(), 4),
                  y1.put(L1.getLength(), l.getLengthInBits(L1.getMode(), d1)),
                  L1.write(y1);
              }
              for (var V1 = 0, A1 = 0; A1 < h1.length; A1++)
                V1 += h1[A1].dataCount;
              if (y1.getLengthInBits() <= V1 * 8) break;
            }
            D = d1;
          }
          u1(!1, i1());
        }),
        (G.createTableTag = function (d1, h1) {
          (d1 = d1 || 2), (h1 = typeof h1 > "u" ? d1 * 4 : h1);
          var y1 = "";
          (y1 += '<table style="'),
            (y1 += " border-width: 0px; border-style: none;"),
            (y1 += " border-collapse: collapse;"),
            (y1 += " padding: 0px; margin: " + h1 + "px;"),
            (y1 += '">'),
            (y1 += "<tbody>");
          for (var A1 = 0; A1 < G.getModuleCount(); A1 += 1) {
            y1 += "<tr>";
            for (var L1 = 0; L1 < G.getModuleCount(); L1 += 1)
              (y1 += '<td style="'),
                (y1 += " border-width: 0px; border-style: none;"),
                (y1 += " border-collapse: collapse;"),
                (y1 += " padding: 0px; margin: 0px;"),
                (y1 += " width: " + d1 + "px;"),
                (y1 += " height: " + d1 + "px;"),
                (y1 += " background-color: "),
                (y1 += G.isDark(A1, L1) ? "#000000" : "#ffffff"),
                (y1 += ";"),
                (y1 += '"/>');
            y1 += "</tr>";
          }
          return (y1 += "</tbody>"), (y1 += "</table>"), y1;
        }),
        (G.createSvgTag = function (d1, h1, y1, A1) {
          var L1 = {};
          typeof arguments[0] == "object" &&
            ((L1 = arguments[0]),
            (d1 = L1.cellSize),
            (h1 = L1.margin),
            (y1 = L1.alt),
            (A1 = L1.title)),
            (d1 = d1 || 2),
            (h1 = typeof h1 > "u" ? d1 * 4 : h1),
            (y1 = typeof y1 == "string" ? { text: y1 } : y1 || {}),
            (y1.text = y1.text || null),
            (y1.id = y1.text ? y1.id || "qrcode-description" : null),
            (A1 = typeof A1 == "string" ? { text: A1 } : A1 || {}),
            (A1.text = A1.text || null),
            (A1.id = A1.text ? A1.id || "qrcode-title" : null);
          var V1 = G.getModuleCount() * d1 + h1 * 2,
            ie,
            ae,
            Be,
            Ve,
            ce = "",
            gt;
          for (
            gt = "l" + d1 + ",0 0," + d1 + " -" + d1 + ",0 0,-" + d1 + "z ",
              ce += '<svg version="1.1" xmlns="http://www.w3.org/2000/svg"',
              ce += L1.scalable
                ? ""
                : ' width="' + V1 + 'px" height="' + V1 + 'px"',
              ce += ' viewBox="0 0 ' + V1 + " " + V1 + '" ',
              ce += ' preserveAspectRatio="xMinYMin meet"',
              ce +=
                A1.text || y1.text
                  ? ' role="img" aria-labelledby="' +
                    Q1([A1.id, y1.id].join(" ").trim()) +
                    '"'
                  : "",
              ce += ">",
              ce += A1.text
                ? '<title id="' + Q1(A1.id) + '">' + Q1(A1.text) + "</title>"
                : "",
              ce += y1.text
                ? '<description id="' +
                  Q1(y1.id) +
                  '">' +
                  Q1(y1.text) +
                  "</description>"
                : "",
              ce +=
                '<rect width="100%" height="100%" fill="white" cx="0" cy="0"/>',
              ce += '<path d="',
              Be = 0;
            Be < G.getModuleCount();
            Be += 1
          )
            for (Ve = Be * d1 + h1, ie = 0; ie < G.getModuleCount(); ie += 1)
              G.isDark(Be, ie) &&
                ((ae = ie * d1 + h1), (ce += "M" + ae + "," + Ve + gt));
          return (
            (ce += '" stroke="transparent" fill="black"/>'),
            (ce += "</svg>"),
            ce
          );
        }),
        (G.createDataURL = function (d1, h1) {
          (d1 = d1 || 2), (h1 = typeof h1 > "u" ? d1 * 4 : h1);
          var y1 = G.getModuleCount() * d1 + h1 * 2,
            A1 = h1,
            L1 = y1 - h1;
          return T(y1, y1, function (V1, ie) {
            if (A1 <= V1 && V1 < L1 && A1 <= ie && ie < L1) {
              var ae = Math.floor((V1 - A1) / d1),
                Be = Math.floor((ie - A1) / d1);
              return G.isDark(Be, ae) ? 0 : 1;
            } else return 1;
          });
        }),
        (G.createImgTag = function (d1, h1, y1) {
          (d1 = d1 || 2), (h1 = typeof h1 > "u" ? d1 * 4 : h1);
          var A1 = G.getModuleCount() * d1 + h1 * 2,
            L1 = "";
          return (
            (L1 += "<img"),
            (L1 += ' src="'),
            (L1 += G.createDataURL(d1, h1)),
            (L1 += '"'),
            (L1 += ' width="'),
            (L1 += A1),
            (L1 += '"'),
            (L1 += ' height="'),
            (L1 += A1),
            (L1 += '"'),
            y1 && ((L1 += ' alt="'), (L1 += Q1(y1)), (L1 += '"')),
            (L1 += "/>"),
            L1
          );
        });
      var Q1 = function (d1) {
          for (var h1 = "", y1 = 0; y1 < d1.length; y1 += 1) {
            var A1 = d1.charAt(y1);
            switch (A1) {
              case "<":
                h1 += "&lt;";
                break;
              case ">":
                h1 += "&gt;";
                break;
              case "&":
                h1 += "&amp;";
                break;
              case '"':
                h1 += "&quot;";
                break;
              default:
                h1 += A1;
                break;
            }
          }
          return h1;
        },
        re = function (d1) {
          var h1 = 1;
          d1 = typeof d1 > "u" ? h1 * 2 : d1;
          var y1 = G.getModuleCount() * h1 + d1 * 2,
            A1 = d1,
            L1 = y1 - d1,
            V1,
            ie,
            ae,
            Be,
            Ve,
            ce = { "██": "█", "█ ": "▀", " █": "▄", "  ": " " },
            gt = { "██": "▀", "█ ": "▀", " █": " ", "  ": " " },
            qe = "";
          for (V1 = 0; V1 < y1; V1 += 2) {
            for (
              ae = Math.floor((V1 - A1) / h1),
                Be = Math.floor((V1 + 1 - A1) / h1),
                ie = 0;
              ie < y1;
              ie += 1
            )
              (Ve = "█"),
                A1 <= ie &&
                  ie < L1 &&
                  A1 <= V1 &&
                  V1 < L1 &&
                  G.isDark(ae, Math.floor((ie - A1) / h1)) &&
                  (Ve = " "),
                A1 <= ie &&
                ie < L1 &&
                A1 <= V1 + 1 &&
                V1 + 1 < L1 &&
                G.isDark(Be, Math.floor((ie - A1) / h1))
                  ? (Ve += " ")
                  : (Ve += "█"),
                (qe += d1 < 1 && V1 + 1 >= L1 ? gt[Ve] : ce[Ve]);
            qe += `
`;
          }
          return y1 % 2 && d1 > 0
            ? qe.substring(0, qe.length - y1 - 1) + Array(y1 + 1).join("▀")
            : qe.substring(0, qe.length - 1);
        };
      return (
        (G.createASCII = function (d1, h1) {
          if (((d1 = d1 || 1), d1 < 2)) return re(h1);
          (d1 -= 1), (h1 = typeof h1 > "u" ? d1 * 2 : h1);
          var y1 = G.getModuleCount() * d1 + h1 * 2,
            A1 = h1,
            L1 = y1 - h1,
            V1,
            ie,
            ae,
            Be,
            Ve = Array(d1 + 1).join("██"),
            ce = Array(d1 + 1).join("  "),
            gt = "",
            qe = "";
          for (V1 = 0; V1 < y1; V1 += 1) {
            for (
              ae = Math.floor((V1 - A1) / d1), qe = "", ie = 0;
              ie < y1;
              ie += 1
            )
              (Be = 1),
                A1 <= ie &&
                  ie < L1 &&
                  A1 <= V1 &&
                  V1 < L1 &&
                  G.isDark(ae, Math.floor((ie - A1) / d1)) &&
                  (Be = 0),
                (qe += Be ? Ve : ce);
            for (ae = 0; ae < d1; ae += 1)
              gt +=
                qe +
                `
`;
          }
          return gt.substring(0, gt.length - 1);
        }),
        (G.renderTo2dContext = function (d1, h1) {
          h1 = h1 || 2;
          for (var y1 = G.getModuleCount(), A1 = 0; A1 < y1; A1++)
            for (var L1 = 0; L1 < y1; L1++)
              (d1.fillStyle = G.isDark(A1, L1) ? "black" : "white"),
                d1.fillRect(A1 * h1, L1 * h1, h1, h1);
        }),
        G
      );
    };
    (r.stringToBytesFuncs = {
      default: function (M) {
        for (var L = [], O = 0; O < M.length; O += 1) {
          var U = M.charCodeAt(O);
          L.push(U & 255);
        }
        return L;
      },
    }),
      (r.stringToBytes = r.stringToBytesFuncs.default),
      (r.createStringToBytes = function (M, L) {
        var O = (function () {
            for (
              var D = P(M),
                H = function () {
                  var Z = D.read();
                  if (Z == -1) throw "eof";
                  return Z;
                },
                $ = 0,
                F = {};
              ;

            ) {
              var B = D.read();
              if (B == -1) break;
              var j = H(),
                G = H(),
                u1 = H(),
                e1 = String.fromCharCode((B << 8) | j),
                i1 = (G << 8) | u1;
              (F[e1] = i1), ($ += 1);
            }
            if ($ != L) throw $ + " != " + L;
            return F;
          })(),
          U = 63;
        return function (D) {
          for (var H = [], $ = 0; $ < D.length; $ += 1) {
            var F = D.charCodeAt($);
            if (F < 128) H.push(F);
            else {
              var B = O[D.charAt($)];
              typeof B == "number"
                ? (B & 255) == B
                  ? H.push(B)
                  : (H.push(B >>> 8), H.push(B & 255))
                : H.push(U);
            }
          }
          return H;
        };
      });
    var i = {
        MODE_NUMBER: 1,
        MODE_ALPHA_NUM: 2,
        MODE_8BIT_BYTE: 4,
        MODE_KANJI: 8,
      },
      s = { L: 1, M: 0, Q: 3, H: 2 },
      o = {
        PATTERN000: 0,
        PATTERN001: 1,
        PATTERN010: 2,
        PATTERN011: 3,
        PATTERN100: 4,
        PATTERN101: 5,
        PATTERN110: 6,
        PATTERN111: 7,
      },
      l = (function () {
        var M = [
            [],
            [6, 18],
            [6, 22],
            [6, 26],
            [6, 30],
            [6, 34],
            [6, 22, 38],
            [6, 24, 42],
            [6, 26, 46],
            [6, 28, 50],
            [6, 30, 54],
            [6, 32, 58],
            [6, 34, 62],
            [6, 26, 46, 66],
            [6, 26, 48, 70],
            [6, 26, 50, 74],
            [6, 30, 54, 78],
            [6, 30, 56, 82],
            [6, 30, 58, 86],
            [6, 34, 62, 90],
            [6, 28, 50, 72, 94],
            [6, 26, 50, 74, 98],
            [6, 30, 54, 78, 102],
            [6, 28, 54, 80, 106],
            [6, 32, 58, 84, 110],
            [6, 30, 58, 86, 114],
            [6, 34, 62, 90, 118],
            [6, 26, 50, 74, 98, 122],
            [6, 30, 54, 78, 102, 126],
            [6, 26, 52, 78, 104, 130],
            [6, 30, 56, 82, 108, 134],
            [6, 34, 60, 86, 112, 138],
            [6, 30, 58, 86, 114, 142],
            [6, 34, 62, 90, 118, 146],
            [6, 30, 54, 78, 102, 126, 150],
            [6, 24, 50, 76, 102, 128, 154],
            [6, 28, 54, 80, 106, 132, 158],
            [6, 32, 58, 84, 110, 136, 162],
            [6, 26, 54, 82, 110, 138, 166],
            [6, 30, 58, 86, 114, 142, 170],
          ],
          L = 1335,
          O = 7973,
          U = 21522,
          D = {},
          H = function ($) {
            for (var F = 0; $ != 0; ) (F += 1), ($ >>>= 1);
            return F;
          };
        return (
          (D.getBCHTypeInfo = function ($) {
            for (var F = $ << 10; H(F) - H(L) >= 0; ) F ^= L << (H(F) - H(L));
            return (($ << 10) | F) ^ U;
          }),
          (D.getBCHTypeNumber = function ($) {
            for (var F = $ << 12; H(F) - H(O) >= 0; ) F ^= O << (H(F) - H(O));
            return ($ << 12) | F;
          }),
          (D.getPatternPosition = function ($) {
            return M[$ - 1];
          }),
          (D.getMaskFunction = function ($) {
            switch ($) {
              case o.PATTERN000:
                return function (F, B) {
                  return (F + B) % 2 == 0;
                };
              case o.PATTERN001:
                return function (F, B) {
                  return F % 2 == 0;
                };
              case o.PATTERN010:
                return function (F, B) {
                  return B % 3 == 0;
                };
              case o.PATTERN011:
                return function (F, B) {
                  return (F + B) % 3 == 0;
                };
              case o.PATTERN100:
                return function (F, B) {
                  return (Math.floor(F / 2) + Math.floor(B / 3)) % 2 == 0;
                };
              case o.PATTERN101:
                return function (F, B) {
                  return ((F * B) % 2) + ((F * B) % 3) == 0;
                };
              case o.PATTERN110:
                return function (F, B) {
                  return (((F * B) % 2) + ((F * B) % 3)) % 2 == 0;
                };
              case o.PATTERN111:
                return function (F, B) {
                  return (((F * B) % 3) + ((F + B) % 2)) % 2 == 0;
                };
              default:
                throw "bad maskPattern:" + $;
            }
          }),
          (D.getErrorCorrectPolynomial = function ($) {
            for (var F = f([1], 0), B = 0; B < $; B += 1)
              F = F.multiply(f([1, c.gexp(B)], 0));
            return F;
          }),
          (D.getLengthInBits = function ($, F) {
            if (1 <= F && F < 10)
              switch ($) {
                case i.MODE_NUMBER:
                  return 10;
                case i.MODE_ALPHA_NUM:
                  return 9;
                case i.MODE_8BIT_BYTE:
                  return 8;
                case i.MODE_KANJI:
                  return 8;
                default:
                  throw "mode:" + $;
              }
            else if (F < 27)
              switch ($) {
                case i.MODE_NUMBER:
                  return 12;
                case i.MODE_ALPHA_NUM:
                  return 11;
                case i.MODE_8BIT_BYTE:
                  return 16;
                case i.MODE_KANJI:
                  return 10;
                default:
                  throw "mode:" + $;
              }
            else if (F < 41)
              switch ($) {
                case i.MODE_NUMBER:
                  return 14;
                case i.MODE_ALPHA_NUM:
                  return 13;
                case i.MODE_8BIT_BYTE:
                  return 16;
                case i.MODE_KANJI:
                  return 12;
                default:
                  throw "mode:" + $;
              }
            else throw "type:" + F;
          }),
          (D.getLostPoint = function ($) {
            for (var F = $.getModuleCount(), B = 0, j = 0; j < F; j += 1)
              for (var G = 0; G < F; G += 1) {
                for (var u1 = 0, e1 = $.isDark(j, G), i1 = -1; i1 <= 1; i1 += 1)
                  if (!(j + i1 < 0 || F <= j + i1))
                    for (var Z = -1; Z <= 1; Z += 1)
                      G + Z < 0 ||
                        F <= G + Z ||
                        (i1 == 0 && Z == 0) ||
                        (e1 == $.isDark(j + i1, G + Z) && (u1 += 1));
                u1 > 5 && (B += 3 + u1 - 5);
              }
            for (var j = 0; j < F - 1; j += 1)
              for (var G = 0; G < F - 1; G += 1) {
                var b1 = 0;
                $.isDark(j, G) && (b1 += 1),
                  $.isDark(j + 1, G) && (b1 += 1),
                  $.isDark(j, G + 1) && (b1 += 1),
                  $.isDark(j + 1, G + 1) && (b1 += 1),
                  (b1 == 0 || b1 == 4) && (B += 3);
              }
            for (var j = 0; j < F; j += 1)
              for (var G = 0; G < F - 6; G += 1)
                $.isDark(j, G) &&
                  !$.isDark(j, G + 1) &&
                  $.isDark(j, G + 2) &&
                  $.isDark(j, G + 3) &&
                  $.isDark(j, G + 4) &&
                  !$.isDark(j, G + 5) &&
                  $.isDark(j, G + 6) &&
                  (B += 40);
            for (var G = 0; G < F; G += 1)
              for (var j = 0; j < F - 6; j += 1)
                $.isDark(j, G) &&
                  !$.isDark(j + 1, G) &&
                  $.isDark(j + 2, G) &&
                  $.isDark(j + 3, G) &&
                  $.isDark(j + 4, G) &&
                  !$.isDark(j + 5, G) &&
                  $.isDark(j + 6, G) &&
                  (B += 40);
            for (var o1 = 0, G = 0; G < F; G += 1)
              for (var j = 0; j < F; j += 1) $.isDark(j, G) && (o1 += 1);
            var k1 = Math.abs((100 * o1) / F / F - 50) / 5;
            return (B += k1 * 10), B;
          }),
          D
        );
      })(),
      c = (function () {
        for (var M = new Array(256), L = new Array(256), O = 0; O < 8; O += 1)
          M[O] = 1 << O;
        for (var O = 8; O < 256; O += 1)
          M[O] = M[O - 4] ^ M[O - 5] ^ M[O - 6] ^ M[O - 8];
        for (var O = 0; O < 255; O += 1) L[M[O]] = O;
        var U = {};
        return (
          (U.glog = function (D) {
            if (D < 1) throw "glog(" + D + ")";
            return L[D];
          }),
          (U.gexp = function (D) {
            for (; D < 0; ) D += 255;
            for (; D >= 256; ) D -= 255;
            return M[D];
          }),
          U
        );
      })();
    function f(M, L) {
      if (typeof M.length > "u") throw M.length + "/" + L;
      var O = (function () {
          for (var D = 0; D < M.length && M[D] == 0; ) D += 1;
          for (
            var H = new Array(M.length - D + L), $ = 0;
            $ < M.length - D;
            $ += 1
          )
            H[$] = M[$ + D];
          return H;
        })(),
        U = {};
      return (
        (U.getAt = function (D) {
          return O[D];
        }),
        (U.getLength = function () {
          return O.length;
        }),
        (U.multiply = function (D) {
          for (
            var H = new Array(U.getLength() + D.getLength() - 1), $ = 0;
            $ < U.getLength();
            $ += 1
          )
            for (var F = 0; F < D.getLength(); F += 1)
              H[$ + F] ^= c.gexp(c.glog(U.getAt($)) + c.glog(D.getAt(F)));
          return f(H, 0);
        }),
        (U.mod = function (D) {
          if (U.getLength() - D.getLength() < 0) return U;
          for (
            var H = c.glog(U.getAt(0)) - c.glog(D.getAt(0)),
              $ = new Array(U.getLength()),
              F = 0;
            F < U.getLength();
            F += 1
          )
            $[F] = U.getAt(F);
          for (var F = 0; F < D.getLength(); F += 1)
            $[F] ^= c.gexp(c.glog(D.getAt(F)) + H);
          return f($, 0).mod(D);
        }),
        U
      );
    }
    var d = (function () {
        var M = [
            [1, 26, 19],
            [1, 26, 16],
            [1, 26, 13],
            [1, 26, 9],
            [1, 44, 34],
            [1, 44, 28],
            [1, 44, 22],
            [1, 44, 16],
            [1, 70, 55],
            [1, 70, 44],
            [2, 35, 17],
            [2, 35, 13],
            [1, 100, 80],
            [2, 50, 32],
            [2, 50, 24],
            [4, 25, 9],
            [1, 134, 108],
            [2, 67, 43],
            [2, 33, 15, 2, 34, 16],
            [2, 33, 11, 2, 34, 12],
            [2, 86, 68],
            [4, 43, 27],
            [4, 43, 19],
            [4, 43, 15],
            [2, 98, 78],
            [4, 49, 31],
            [2, 32, 14, 4, 33, 15],
            [4, 39, 13, 1, 40, 14],
            [2, 121, 97],
            [2, 60, 38, 2, 61, 39],
            [4, 40, 18, 2, 41, 19],
            [4, 40, 14, 2, 41, 15],
            [2, 146, 116],
            [3, 58, 36, 2, 59, 37],
            [4, 36, 16, 4, 37, 17],
            [4, 36, 12, 4, 37, 13],
            [2, 86, 68, 2, 87, 69],
            [4, 69, 43, 1, 70, 44],
            [6, 43, 19, 2, 44, 20],
            [6, 43, 15, 2, 44, 16],
            [4, 101, 81],
            [1, 80, 50, 4, 81, 51],
            [4, 50, 22, 4, 51, 23],
            [3, 36, 12, 8, 37, 13],
            [2, 116, 92, 2, 117, 93],
            [6, 58, 36, 2, 59, 37],
            [4, 46, 20, 6, 47, 21],
            [7, 42, 14, 4, 43, 15],
            [4, 133, 107],
            [8, 59, 37, 1, 60, 38],
            [8, 44, 20, 4, 45, 21],
            [12, 33, 11, 4, 34, 12],
            [3, 145, 115, 1, 146, 116],
            [4, 64, 40, 5, 65, 41],
            [11, 36, 16, 5, 37, 17],
            [11, 36, 12, 5, 37, 13],
            [5, 109, 87, 1, 110, 88],
            [5, 65, 41, 5, 66, 42],
            [5, 54, 24, 7, 55, 25],
            [11, 36, 12, 7, 37, 13],
            [5, 122, 98, 1, 123, 99],
            [7, 73, 45, 3, 74, 46],
            [15, 43, 19, 2, 44, 20],
            [3, 45, 15, 13, 46, 16],
            [1, 135, 107, 5, 136, 108],
            [10, 74, 46, 1, 75, 47],
            [1, 50, 22, 15, 51, 23],
            [2, 42, 14, 17, 43, 15],
            [5, 150, 120, 1, 151, 121],
            [9, 69, 43, 4, 70, 44],
            [17, 50, 22, 1, 51, 23],
            [2, 42, 14, 19, 43, 15],
            [3, 141, 113, 4, 142, 114],
            [3, 70, 44, 11, 71, 45],
            [17, 47, 21, 4, 48, 22],
            [9, 39, 13, 16, 40, 14],
            [3, 135, 107, 5, 136, 108],
            [3, 67, 41, 13, 68, 42],
            [15, 54, 24, 5, 55, 25],
            [15, 43, 15, 10, 44, 16],
            [4, 144, 116, 4, 145, 117],
            [17, 68, 42],
            [17, 50, 22, 6, 51, 23],
            [19, 46, 16, 6, 47, 17],
            [2, 139, 111, 7, 140, 112],
            [17, 74, 46],
            [7, 54, 24, 16, 55, 25],
            [34, 37, 13],
            [4, 151, 121, 5, 152, 122],
            [4, 75, 47, 14, 76, 48],
            [11, 54, 24, 14, 55, 25],
            [16, 45, 15, 14, 46, 16],
            [6, 147, 117, 4, 148, 118],
            [6, 73, 45, 14, 74, 46],
            [11, 54, 24, 16, 55, 25],
            [30, 46, 16, 2, 47, 17],
            [8, 132, 106, 4, 133, 107],
            [8, 75, 47, 13, 76, 48],
            [7, 54, 24, 22, 55, 25],
            [22, 45, 15, 13, 46, 16],
            [10, 142, 114, 2, 143, 115],
            [19, 74, 46, 4, 75, 47],
            [28, 50, 22, 6, 51, 23],
            [33, 46, 16, 4, 47, 17],
            [8, 152, 122, 4, 153, 123],
            [22, 73, 45, 3, 74, 46],
            [8, 53, 23, 26, 54, 24],
            [12, 45, 15, 28, 46, 16],
            [3, 147, 117, 10, 148, 118],
            [3, 73, 45, 23, 74, 46],
            [4, 54, 24, 31, 55, 25],
            [11, 45, 15, 31, 46, 16],
            [7, 146, 116, 7, 147, 117],
            [21, 73, 45, 7, 74, 46],
            [1, 53, 23, 37, 54, 24],
            [19, 45, 15, 26, 46, 16],
            [5, 145, 115, 10, 146, 116],
            [19, 75, 47, 10, 76, 48],
            [15, 54, 24, 25, 55, 25],
            [23, 45, 15, 25, 46, 16],
            [13, 145, 115, 3, 146, 116],
            [2, 74, 46, 29, 75, 47],
            [42, 54, 24, 1, 55, 25],
            [23, 45, 15, 28, 46, 16],
            [17, 145, 115],
            [10, 74, 46, 23, 75, 47],
            [10, 54, 24, 35, 55, 25],
            [19, 45, 15, 35, 46, 16],
            [17, 145, 115, 1, 146, 116],
            [14, 74, 46, 21, 75, 47],
            [29, 54, 24, 19, 55, 25],
            [11, 45, 15, 46, 46, 16],
            [13, 145, 115, 6, 146, 116],
            [14, 74, 46, 23, 75, 47],
            [44, 54, 24, 7, 55, 25],
            [59, 46, 16, 1, 47, 17],
            [12, 151, 121, 7, 152, 122],
            [12, 75, 47, 26, 76, 48],
            [39, 54, 24, 14, 55, 25],
            [22, 45, 15, 41, 46, 16],
            [6, 151, 121, 14, 152, 122],
            [6, 75, 47, 34, 76, 48],
            [46, 54, 24, 10, 55, 25],
            [2, 45, 15, 64, 46, 16],
            [17, 152, 122, 4, 153, 123],
            [29, 74, 46, 14, 75, 47],
            [49, 54, 24, 10, 55, 25],
            [24, 45, 15, 46, 46, 16],
            [4, 152, 122, 18, 153, 123],
            [13, 74, 46, 32, 75, 47],
            [48, 54, 24, 14, 55, 25],
            [42, 45, 15, 32, 46, 16],
            [20, 147, 117, 4, 148, 118],
            [40, 75, 47, 7, 76, 48],
            [43, 54, 24, 22, 55, 25],
            [10, 45, 15, 67, 46, 16],
            [19, 148, 118, 6, 149, 119],
            [18, 75, 47, 31, 76, 48],
            [34, 54, 24, 34, 55, 25],
            [20, 45, 15, 61, 46, 16],
          ],
          L = function (D, H) {
            var $ = {};
            return ($.totalCount = D), ($.dataCount = H), $;
          },
          O = {},
          U = function (D, H) {
            switch (H) {
              case s.L:
                return M[(D - 1) * 4 + 0];
              case s.M:
                return M[(D - 1) * 4 + 1];
              case s.Q:
                return M[(D - 1) * 4 + 2];
              case s.H:
                return M[(D - 1) * 4 + 3];
              default:
                return;
            }
          };
        return (
          (O.getRSBlocks = function (D, H) {
            var $ = U(D, H);
            if (typeof $ > "u")
              throw (
                "bad rs block @ typeNumber:" + D + "/errorCorrectionLevel:" + H
              );
            for (var F = $.length / 3, B = [], j = 0; j < F; j += 1)
              for (
                var G = $[j * 3 + 0],
                  u1 = $[j * 3 + 1],
                  e1 = $[j * 3 + 2],
                  i1 = 0;
                i1 < G;
                i1 += 1
              )
                B.push(L(u1, e1));
            return B;
          }),
          O
        );
      })(),
      p = function () {
        var M = [],
          L = 0,
          O = {};
        return (
          (O.getBuffer = function () {
            return M;
          }),
          (O.getAt = function (U) {
            var D = Math.floor(U / 8);
            return ((M[D] >>> (7 - (U % 8))) & 1) == 1;
          }),
          (O.put = function (U, D) {
            for (var H = 0; H < D; H += 1)
              O.putBit(((U >>> (D - H - 1)) & 1) == 1);
          }),
          (O.getLengthInBits = function () {
            return L;
          }),
          (O.putBit = function (U) {
            var D = Math.floor(L / 8);
            M.length <= D && M.push(0), U && (M[D] |= 128 >>> L % 8), (L += 1);
          }),
          O
        );
      },
      m = function (M) {
        var L = i.MODE_NUMBER,
          O = M,
          U = {};
        (U.getMode = function () {
          return L;
        }),
          (U.getLength = function ($) {
            return O.length;
          }),
          (U.write = function ($) {
            for (var F = O, B = 0; B + 2 < F.length; )
              $.put(D(F.substring(B, B + 3)), 10), (B += 3);
            B < F.length &&
              (F.length - B == 1
                ? $.put(D(F.substring(B, B + 1)), 4)
                : F.length - B == 2 && $.put(D(F.substring(B, B + 2)), 7));
          });
        var D = function ($) {
            for (var F = 0, B = 0; B < $.length; B += 1)
              F = F * 10 + H($.charAt(B));
            return F;
          },
          H = function ($) {
            if ("0" <= $ && $ <= "9") return $.charCodeAt(0) - 48;
            throw "illegal char :" + $;
          };
        return U;
      },
      g = function (M) {
        var L = i.MODE_ALPHA_NUM,
          O = M,
          U = {};
        (U.getMode = function () {
          return L;
        }),
          (U.getLength = function (H) {
            return O.length;
          }),
          (U.write = function (H) {
            for (var $ = O, F = 0; F + 1 < $.length; )
              H.put(D($.charAt(F)) * 45 + D($.charAt(F + 1)), 11), (F += 2);
            F < $.length && H.put(D($.charAt(F)), 6);
          });
        var D = function (H) {
          if ("0" <= H && H <= "9") return H.charCodeAt(0) - 48;
          if ("A" <= H && H <= "Z") return H.charCodeAt(0) - 65 + 10;
          switch (H) {
            case " ":
              return 36;
            case "$":
              return 37;
            case "%":
              return 38;
            case "*":
              return 39;
            case "+":
              return 40;
            case "-":
              return 41;
            case ".":
              return 42;
            case "/":
              return 43;
            case ":":
              return 44;
            default:
              throw "illegal char :" + H;
          }
        };
        return U;
      },
      w = function (M) {
        var L = i.MODE_8BIT_BYTE,
          O = r.stringToBytes(M),
          U = {};
        return (
          (U.getMode = function () {
            return L;
          }),
          (U.getLength = function (D) {
            return O.length;
          }),
          (U.write = function (D) {
            for (var H = 0; H < O.length; H += 1) D.put(O[H], 8);
          }),
          U
        );
      },
      b = function (M) {
        var L = i.MODE_KANJI,
          O = r.stringToBytesFuncs.SJIS;
        if (!O) throw "sjis not supported.";
        (function (H, $) {
          var F = O(H);
          if (F.length != 2 || ((F[0] << 8) | F[1]) != $)
            throw "sjis not supported.";
        })("友", 38726);
        var U = O(M),
          D = {};
        return (
          (D.getMode = function () {
            return L;
          }),
          (D.getLength = function (H) {
            return ~~(U.length / 2);
          }),
          (D.write = function (H) {
            for (var $ = U, F = 0; F + 1 < $.length; ) {
              var B = ((255 & $[F]) << 8) | (255 & $[F + 1]);
              if (33088 <= B && B <= 40956) B -= 33088;
              else if (57408 <= B && B <= 60351) B -= 49472;
              else throw "illegal char at " + (F + 1) + "/" + B;
              (B = ((B >>> 8) & 255) * 192 + (B & 255)), H.put(B, 13), (F += 2);
            }
            if (F < $.length) throw "illegal char at " + (F + 1);
          }),
          D
        );
      },
      x = function () {
        var M = [],
          L = {};
        return (
          (L.writeByte = function (O) {
            M.push(O & 255);
          }),
          (L.writeShort = function (O) {
            L.writeByte(O), L.writeByte(O >>> 8);
          }),
          (L.writeBytes = function (O, U, D) {
            (U = U || 0), (D = D || O.length);
            for (var H = 0; H < D; H += 1) L.writeByte(O[H + U]);
          }),
          (L.writeString = function (O) {
            for (var U = 0; U < O.length; U += 1) L.writeByte(O.charCodeAt(U));
          }),
          (L.toByteArray = function () {
            return M;
          }),
          (L.toString = function () {
            var O = "";
            O += "[";
            for (var U = 0; U < M.length; U += 1)
              U > 0 && (O += ","), (O += M[U]);
            return (O += "]"), O;
          }),
          L
        );
      },
      E = function () {
        var M = 0,
          L = 0,
          O = 0,
          U = "",
          D = {},
          H = function (F) {
            U += String.fromCharCode($(F & 63));
          },
          $ = function (F) {
            if (!(F < 0)) {
              if (F < 26) return 65 + F;
              if (F < 52) return 97 + (F - 26);
              if (F < 62) return 48 + (F - 52);
              if (F == 62) return 43;
              if (F == 63) return 47;
            }
            throw "n:" + F;
          };
        return (
          (D.writeByte = function (F) {
            for (M = (M << 8) | (F & 255), L += 8, O += 1; L >= 6; )
              H(M >>> (L - 6)), (L -= 6);
          }),
          (D.flush = function () {
            if ((L > 0 && (H(M << (6 - L)), (M = 0), (L = 0)), O % 3 != 0))
              for (var F = 3 - (O % 3), B = 0; B < F; B += 1) U += "=";
          }),
          (D.toString = function () {
            return U;
          }),
          D
        );
      },
      P = function (M) {
        var L = M,
          O = 0,
          U = 0,
          D = 0,
          H = {};
        H.read = function () {
          for (; D < 8; ) {
            if (O >= L.length) {
              if (D == 0) return -1;
              throw "unexpected end of file./" + D;
            }
            var F = L.charAt(O);
            if (((O += 1), F == "=")) return (D = 0), -1;
            if (F.match(/^\s$/)) continue;
            (U = (U << 6) | $(F.charCodeAt(0))), (D += 6);
          }
          var B = (U >>> (D - 8)) & 255;
          return (D -= 8), B;
        };
        var $ = function (F) {
          if (65 <= F && F <= 90) return F - 65;
          if (97 <= F && F <= 122) return F - 97 + 26;
          if (48 <= F && F <= 57) return F - 48 + 52;
          if (F == 43) return 62;
          if (F == 47) return 63;
          throw "c:" + F;
        };
        return H;
      },
      _ = function (M, L) {
        var O = M,
          U = L,
          D = new Array(M * L),
          H = {};
        (H.setPixel = function (j, G, u1) {
          D[G * O + j] = u1;
        }),
          (H.write = function (j) {
            j.writeString("GIF87a"),
              j.writeShort(O),
              j.writeShort(U),
              j.writeByte(128),
              j.writeByte(0),
              j.writeByte(0),
              j.writeByte(0),
              j.writeByte(0),
              j.writeByte(0),
              j.writeByte(255),
              j.writeByte(255),
              j.writeByte(255),
              j.writeString(","),
              j.writeShort(0),
              j.writeShort(0),
              j.writeShort(O),
              j.writeShort(U),
              j.writeByte(0);
            var G = 2,
              u1 = F(G);
            j.writeByte(G);
            for (var e1 = 0; u1.length - e1 > 255; )
              j.writeByte(255), j.writeBytes(u1, e1, 255), (e1 += 255);
            j.writeByte(u1.length - e1),
              j.writeBytes(u1, e1, u1.length - e1),
              j.writeByte(0),
              j.writeString(";");
          });
        var $ = function (j) {
            var G = j,
              u1 = 0,
              e1 = 0,
              i1 = {};
            return (
              (i1.write = function (Z, b1) {
                if (Z >>> b1) throw "length over";
                for (; u1 + b1 >= 8; )
                  G.writeByte(255 & ((Z << u1) | e1)),
                    (b1 -= 8 - u1),
                    (Z >>>= 8 - u1),
                    (e1 = 0),
                    (u1 = 0);
                (e1 = (Z << u1) | e1), (u1 = u1 + b1);
              }),
              (i1.flush = function () {
                u1 > 0 && G.writeByte(e1);
              }),
              i1
            );
          },
          F = function (j) {
            for (
              var G = 1 << j, u1 = (1 << j) + 1, e1 = j + 1, i1 = B(), Z = 0;
              Z < G;
              Z += 1
            )
              i1.add(String.fromCharCode(Z));
            i1.add(String.fromCharCode(G)), i1.add(String.fromCharCode(u1));
            var b1 = x(),
              o1 = $(b1);
            o1.write(G, e1);
            var k1 = 0,
              Y1 = String.fromCharCode(D[k1]);
            for (k1 += 1; k1 < D.length; ) {
              var G1 = String.fromCharCode(D[k1]);
              (k1 += 1),
                i1.contains(Y1 + G1)
                  ? (Y1 = Y1 + G1)
                  : (o1.write(i1.indexOf(Y1), e1),
                    i1.size() < 4095 &&
                      (i1.size() == 1 << e1 && (e1 += 1), i1.add(Y1 + G1)),
                    (Y1 = G1));
            }
            return (
              o1.write(i1.indexOf(Y1), e1),
              o1.write(u1, e1),
              o1.flush(),
              b1.toByteArray()
            );
          },
          B = function () {
            var j = {},
              G = 0,
              u1 = {};
            return (
              (u1.add = function (e1) {
                if (u1.contains(e1)) throw "dup key:" + e1;
                (j[e1] = G), (G += 1);
              }),
              (u1.size = function () {
                return G;
              }),
              (u1.indexOf = function (e1) {
                return j[e1];
              }),
              (u1.contains = function (e1) {
                return typeof j[e1] < "u";
              }),
              u1
            );
          };
        return H;
      },
      T = function (M, L, O) {
        for (var U = _(M, L), D = 0; D < L; D += 1)
          for (var H = 0; H < M; H += 1) U.setPixel(H, D, O(H, D));
        var $ = x();
        U.write($);
        for (var F = E(), B = $.toByteArray(), j = 0; j < B.length; j += 1)
          F.writeByte(B[j]);
        return F.flush(), "data:image/gif;base64," + F;
      };
    return r;
  })();
  (function () {
    n.stringToBytesFuncs["UTF-8"] = function (r) {
      function i(s) {
        for (var o = [], l = 0; l < s.length; l++) {
          var c = s.charCodeAt(l);
          c < 128
            ? o.push(c)
            : c < 2048
            ? o.push(192 | (c >> 6), 128 | (c & 63))
            : c < 55296 || c >= 57344
            ? o.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63))
            : (l++,
              (c = 65536 + (((c & 1023) << 10) | (s.charCodeAt(l) & 1023))),
              o.push(
                240 | (c >> 18),
                128 | ((c >> 12) & 63),
                128 | ((c >> 6) & 63),
                128 | (c & 63)
              ));
        }
        return o;
      }
      return i(r);
    };
  })(),
    (function (r) {
      e.exports = r();
    })(function () {
      return n;
    });
})(ES);
const pN = ES.exports;
function pp(e) {
  return Dt(this, null, function* () {
    try {
      if (!(navigator != null && navigator.clipboard))
        throw new Tn("Clipboard API not available");
      return yield navigator.clipboard.writeText(e);
    } catch {}
    mN(e);
  });
}
function mN(e) {
  const t = document.createElement("textarea");
  (t.value = e),
    (t.style.top = "0"),
    (t.style.left = "0"),
    (t.style.position = "fixed"),
    document.body.appendChild(t),
    t.focus(),
    t.select();
  try {
    document.execCommand("copy");
  } finally {
    document.body.removeChild(t);
  }
}
const gN = Ct("<div></div>"),
  R4 = (e) => {
    let t, n, r;
    const [i, s] = et(!1),
      [o, l] = et(xy);
    Dn(() => {
      const m = pN(0, "L");
      m.addData(e.sourceUrl), m.make(), (t.innerHTML = m.createSvgTag(4, 0));
      const g = t.firstElementChild.clientWidth,
        w = Math.round((SS / g) * 1e5) / 1e5;
      if (r) {
        const b = Math.ceil(U5 / (w * 4)) * 4,
          x = l2(Math.ceil((g - b) / (2 * 4)) * 4);
        (r.style.top = x),
          (r.style.left = x),
          (r.style.height = l2(b)),
          (r.style.width = l2(b)),
          l(Math.round(xy / w));
      }
      n.style.transform = `scale(${w})`;
    });
    let c = null;
    return J(uN, {
      get class() {
        return e.class;
      },
      onClick: () => {
        s(!0),
          pp(e.sourceUrl),
          c != null && clearTimeout(c),
          (c = setTimeout(() => s(!1), 1500));
      },
      get children() {
        return [
          J(cN, {
            ref(d) {
              const p = n;
              typeof p == "function" ? p(d) : (n = d);
            },
            get children() {
              return [
                (() => {
                  const d = gN.cloneNode(!0),
                    p = t;
                  return typeof p == "function" ? c3(p, d) : (t = d), d;
                })(),
                J(dt, {
                  get when() {
                    return e.imageUrl;
                  },
                  get children() {
                    return J(dN, {
                      ref(d) {
                        const p = r;
                        typeof p == "function" ? p(d) : (r = d);
                      },
                      get children() {
                        return J(fN, {
                          get src() {
                            return e.imageUrl;
                          },
                          alt: "",
                          get size() {
                            return o();
                          },
                        });
                      },
                    });
                  },
                }),
              ];
            },
          }),
          J(hp, {
            onBeforeEnter: (d) => {
              r2(
                d,
                [
                  { opacity: 0, transform: "translate(-50%, 44px)" },
                  { opacity: 1, transform: "translate(-50%, 0)" },
                ],
                { duration: 150, easing: "ease-out" }
              );
            },
            onExit: (d, p) => {
              r2(
                d,
                [
                  { opacity: 1, transform: "translate(-50%, 0)" },
                  { opacity: 0, transform: "translate(-50%, 44px)" },
                ],
                { duration: 150, easing: "ease-out" }
              ).finished.then(() => {
                p();
              });
            },
            get children() {
              return J(dt, {
                get when() {
                  return i() && !e.disableCopy;
                },
                get children() {
                  return J(hN, {
                    get children() {
                      return [
                        J(gp, { size: "xs" }),
                        J(ti, {
                          translationKey: "common.linkCopied",
                          children: "Link Copied",
                        }),
                      ];
                    },
                  });
                },
              });
            },
          }),
          J(dt, {
            get when() {
              return !e.disableCopy;
            },
            get children() {
              return J(cd, {
                get children() {
                  return J(AS, {});
                },
              });
            },
          }),
        ];
      },
    });
  };
var $5 = (e, t, n) => {
    const r = t
      .trim()
      .split(".")
      .reduce((i, s) => (i ? i[s] : void 0), e);
    return r !== void 0 ? r : n;
  },
  yN = (e, t, n = /{{(.*?)}}/g) => e.replace(n, (r, i) => $5(t, i, "")),
  vN = (
    e = {},
    t = navigator.language in e ? navigator.language : Object.keys(e)[0]
  ) => {
    const [n, r] = et(t),
      [i, s] = cp(e);
    return [
      (c, f, d) => {
        const p = $5(i[n()], c, d || "");
        return typeof p == "function"
          ? p(f)
          : typeof p == "string"
          ? yN(p, f || {})
          : p;
      },
      {
        add(c, f) {
          s(c, (d) => Object.assign(d || {}, f));
        },
        locale: (c) => (c ? r(c) : n()),
        dict: (c) => $5(i, c),
      },
    ];
  },
  kS = A4({}),
  b2 = () => Mr(kS);
const wN = F1.div`
    font-style: normal;
    font-weight: ${(e) => e.fontWeight};
    font-size: ${(e) => e.fontSize};
    line-height: ${(e) => e.lineHeight};

    color: ${(e) => e.color};
`,
  ti = (e) => {
    const t = Gt(),
      [n] = b2();
    let r;
    const i = () => e.color || t.colors.text.primary,
      s = a2({ fontSize: "14px", fontWeight: "510", lineHeight: "130%" }, e);
    return (
      Dn(() => {
        r &&
          s.cursor !== "unset" &&
          getComputedStyle(r).cursor !== "pointer" &&
          (r.style.cursor = "default");
      }),
      J(wN, {
        get fontSize() {
          return s.fontSize;
        },
        get fontWeight() {
          return s.fontWeight;
        },
        get lineHeight() {
          return s.lineHeight;
        },
        get color() {
          return i();
        },
        get class() {
          return s.class;
        },
        ref(o) {
          const l = r;
          typeof l == "function" ? l(o) : (r = o);
        },
        "data-tc-text": "true",
        get children() {
          var o;
          return ke(() => !!s.translationKey)()
            ? n(
                s.translationKey,
                s.translationValues,
                (o = s.children) == null ? void 0 : o.toString()
              )
            : s.children;
        },
      })
    );
  },
  bN = F1.div`
    position: relative;

    &::after {
        content: '';
        display: block;
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        border: 0.5px solid rgba(0, 0, 0, 0.08);

        border-radius: inherit;
    }
`,
  xN = F1(oa)`
    width: 100%;
    height: 100%;
    border-radius: inherit;
`,
  _S = (e) =>
    J(bN, {
      get class() {
        return e.class;
      },
      get children() {
        return J(xN, {
          get src() {
            return e.src;
          },
        });
      },
    }),
  CN = { m: "16px", s: "12px", none: "0" },
  SN = { m: "6px", s: "6px", none: "0" },
  EN = F1.button`
    position: relative;
    cursor: pointer;
    border: none;
    background-color: unset;
    padding: 8px 4px;
    width: 92px;
    display: flex;
    flex-direction: column;
    align-items: center;

    transition: transform 0.125s ease-in-out;

    ${ou} {
        &:hover {
            transform: scale(1.04);
        }
    }

    &:active {
        transform: scale(0.96);
    }

    ${ri("mobile")} {
        padding: 8px 4px;
        width: 82px;
    }

    ${su} {
        &:active {
            transform: scale(0.92);
        }
    }
`,
  kN = F1(_S)`
    width: 60px;
    height: 60px;
    border-radius: ${(e) => CN[e.theme.borderRadius]};

    margin-bottom: 8px;
`,
  _N = F1(oa)`
    position: absolute;
    right: 10px;
    top: 50px;
    width: 24px;
    height: 24px;
    border-radius: ${(e) => SN[e.theme.borderRadius]};
    box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.08);
`,
  AN = F1(ti)`
    max-width: 90px;
    font-weight: 510;
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;

    ${ri("mobile")} {
        max-width: 80px;
    }
`,
  TN = F1(ti)`
    font-weight: ${(e) => (e.colorPrimary ? "510" : "400")};
    max-width: 90px;
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
    color: ${(e) =>
      e.colorPrimary
        ? e.theme.colors.text.primary
        : e.theme.colors.text.secondary};

    ${ri("mobile")} {
        max-width: 80px;
    }
`,
  PN = Ct("<div></div>"),
  zd = (e) => {
    let t = null;
    const n = () => {
      const r = t == null ? void 0 : t.querySelector("div");
      if (r && r.scrollWidth > r.clientWidth) {
        let i = 0;
        const s = -0.4,
          o = 0.05;
        for (; r.scrollWidth > r.clientWidth && i >= s; )
          (i -= o), (r.style.letterSpacing = `${i}px`);
        i !== 0 && ((i -= o), (r.style.letterSpacing = `${i}px`));
      }
    };
    return (
      qC(() => n()),
      Dn(() => {
        n();
      }),
      J(EN, {
        get class() {
          return e.class;
        },
        onClick: () => e.onClick(),
        "data-tc-wallet-item": "true",
        get children() {
          return [
            ke(() =>
              ke(() => typeof e.icon == "string")()
                ? J(kN, {
                    get src() {
                      return e.icon;
                    },
                  })
                : e.icon
            ),
            ke(
              () =>
                ke(() => !!e.badgeUrl)() &&
                J(_N, {
                  get src() {
                    return e.badgeUrl;
                  },
                })
            ),
            (() => {
              const r = PN.cloneNode(!0);
              return (
                c3((i) => (t = i), r),
                ir(
                  r,
                  J(AN, {
                    get children() {
                      return e.name;
                    },
                  })
                ),
                r
              );
            })(),
            ke(
              () =>
                ke(() => !!e.secondLine)() &&
                J(TN, {
                  get colorPrimary() {
                    var r;
                    return (r = e.secondLineColorPrimary) != null ? r : !0;
                  },
                  get children() {
                    return e.secondLine;
                  },
                })
            ),
          ];
        },
      })
    );
  },
  MN = F1.h1`
    font-style: normal;
    font-weight: 590;
    font-size: 20px;
    line-height: 28px;

    text-align: center;

    color: ${(e) => e.theme.colors.text.primary};

    margin-top: 0;
    margin-bottom: 0;

    cursor: default;
`,
  x2 = (e) => {
    const [t] = b2();
    return J(MN, {
      get class() {
        return e.class;
      },
      "data-tc-h1": "true",
      get children() {
        var n;
        return ke(() => !!e.translationKey)()
          ? t(
              e.translationKey,
              e.translationValues,
              (n = e.children) == null ? void 0 : n.toString()
            )
          : e.children;
      },
    });
  },
  RN = F1.h2`
    font-style: normal;
    font-weight: 400;
    font-size: 16px;
    line-height: 22px;

    text-align: center;

    color: ${(e) => e.theme.colors.text.secondary};

    margin-top: 0;
    margin-bottom: 32px;

    cursor: default;
`,
  Gs = (e) => {
    const [t] = b2();
    return J(RN, {
      get class() {
        return e.class;
      },
      "data-tc-h2": "true",
      get children() {
        var n;
        return ke(() => !!e.translationKey)()
          ? t(
              e.translationKey,
              e.translationValues,
              (n = e.children) == null ? void 0 : n.toString()
            )
          : e.children;
      },
    });
  },
  LN = F1.h3`
    font-style: normal;
    font-weight: 510;
    font-size: 16px;
    line-height: 20px;

    color: ${(e) => e.theme.colors.text.primary};

    margin-top: 0;
    margin-bottom: 0;

    cursor: default;
`,
  mp = (e) => {
    const [t] = b2();
    return J(LN, {
      "data-tc-h3": "true",
      get class() {
        return e.class;
      },
      get children() {
        var n;
        return ke(() => !!e.translationKey)()
          ? t(
              e.translationKey,
              e.translationValues,
              (n = e.children) == null ? void 0 : n.toString()
            )
          : e.children;
      },
    });
  },
  IN = Ct(
    '<svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 28 28"><path fill-rule="evenodd" clip-rule="evenodd" d="M9.75 7.5C9.33579 7.5 9 7.16421 9 6.75C9 6.33579 9.33579 6 9.75 6H21.25C21.6642 6 22 6.33579 22 6.75V18.25C22 18.6642 21.6642 19 21.25 19C20.8358 19 20.5 18.6642 20.5 18.25V8.56066L6.28033 22.7803C5.98744 23.0732 5.51256 23.0732 5.21967 22.7803C4.92678 22.4874 4.92678 22.0126 5.21967 21.7197L19.4393 7.5H9.75Z"></path></svg>'
  ),
  jN = (e) => {
    const t = Gt(),
      n = () => e.fill || t.colors.icon.secondary;
    return (() => {
      const r = IN.cloneNode(!0),
        i = r.firstChild;
      return (
        xt(
          (s) => {
            const o = n(),
              l = n();
            return (
              o !== s._v$ && We(r, "fill", (s._v$ = o)),
              l !== s._v$2 && We(i, "fill", (s._v$2 = l)),
              s
            );
          },
          { _v$: void 0, _v$2: void 0 }
        ),
        r
      );
    })();
  },
  NN = Ct(
    '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.1839 17.7069C13.6405 18.6507 13.3688 19.1226 13.0591 19.348C12.4278 19.8074 11.5723 19.8074 10.941 19.348C10.6312 19.1226 10.3595 18.6507 9.81613 17.7069L5.52066 10.2464C4.76864 8.94024 4.39263 8.28717 4.33762 7.75894C4.2255 6.68236 4.81894 5.65591 5.80788 5.21589C6.29309 5 7.04667 5 8.55383 5H15.4462C16.9534 5 17.7069 5 18.1922 5.21589C19.1811 5.65591 19.7745 6.68236 19.6624 7.75894C19.6074 8.28717 19.2314 8.94024 18.4794 10.2464L14.1839 17.7069ZM11.1 16.3412L6.56139 8.48002C6.31995 8.06185 6.19924 7.85276 6.18146 7.68365C6.14523 7.33896 6.33507 7.01015 6.65169 6.86919C6.80703 6.80002 7.04847 6.80002 7.53133 6.80002H7.53134L11.1 6.80002V16.3412ZM12.9 16.3412L17.4387 8.48002C17.6801 8.06185 17.8008 7.85276 17.8186 7.68365C17.8548 7.33896 17.665 7.01015 17.3484 6.86919C17.193 6.80002 16.9516 6.80002 16.4687 6.80002L12.9 6.80002V16.3412Z"></path></svg>'
  ),
  ON = (e) => {
    const t = Gt(),
      n = () => e.fill || t.colors.icon.primary;
    return (() => {
      const r = NN.cloneNode(!0),
        i = r.firstChild;
      return xt(() => We(i, "fill", n())), r;
    })();
  },
  BN = Ct(
    '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none"><g clip-path="url(#clip0_3783_2045)"><circle cx="8" cy="8.00098" r="8"></circle><path d="M4.75 8.50098L7 10.751L11.75 6.00098" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path></g><defs><clipPath id="clip0_3783_2045"><rect width="16" height="16" fill="white" transform="translate(0 0.000976562)"></rect></clipPath></defs></svg>'
  ),
  DN = Ct(
    '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><circle cx="12" cy="12" r="11"></circle><path d="M17.1364 9.6364C17.4879 9.28493 17.4879 8.71508 17.1364 8.36361C16.7849 8.01214 16.2151 8.01214 15.8636 8.36361L10 14.2272L8.1364 12.3636C7.78493 12.0121 7.21508 12.0121 6.86361 12.3636C6.51214 12.7151 6.51214 13.2849 6.86361 13.6364L9.36361 16.1364C9.71508 16.4879 10.2849 16.4879 10.6364 16.1364L17.1364 9.6364Z"></path></svg>'
  ),
  FN = Ct(
    '<svg width="72" height="72" viewBox="0 0 72 72" fill="none" xmlns="http://www.w3.org/2000/svg"><circle cx="36" cy="36" r="33"></circle><path d="M50.9142 28.4142C51.6953 27.6332 51.6953 26.3668 50.9142 25.5858C50.1332 24.8047 48.8668 24.8047 48.0858 25.5858L30 43.6716L23.9142 37.5858C23.1332 36.8047 21.8668 36.8047 21.0858 37.5858C20.3047 38.3668 20.3047 39.6332 21.0858 40.4142L28.5858 47.9142C29.3668 48.6953 30.6332 48.6953 31.4142 47.9142L50.9142 28.4142Z"></path></svg>'
  ),
  gp = (e) => {
    const t = Gt(),
      n = () => e.size || "s",
      r = () => e.fill || t.colors.icon.success;
    return ke(
      (() => {
        const i = ke(() => n() === "xs");
        return () =>
          i()
            ? (() => {
                const s = BN.cloneNode(!0),
                  o = s.firstChild,
                  l = o.firstChild,
                  c = l.nextSibling;
                return (
                  xt(
                    (f) => {
                      const d = e.class,
                        p = r(),
                        m = t.colors.constant.white;
                      return (
                        d !== f._v$ && We(s, "class", (f._v$ = d)),
                        p !== f._v$2 && We(l, "fill", (f._v$2 = p)),
                        m !== f._v$3 && We(c, "stroke", (f._v$3 = m)),
                        f
                      );
                    },
                    { _v$: void 0, _v$2: void 0, _v$3: void 0 }
                  ),
                  s
                );
              })()
            : (() => {
                const s = ke(() => n() === "s");
                return () =>
                  s()
                    ? (() => {
                        const o = DN.cloneNode(!0),
                          l = o.firstChild,
                          c = l.nextSibling;
                        return (
                          xt(
                            (f) => {
                              const d = e.class,
                                p = r(),
                                m = t.colors.constant.white;
                              return (
                                d !== f._v$4 && We(o, "class", (f._v$4 = d)),
                                p !== f._v$5 && We(l, "fill", (f._v$5 = p)),
                                m !== f._v$6 && We(c, "fill", (f._v$6 = m)),
                                f
                              );
                            },
                            { _v$4: void 0, _v$5: void 0, _v$6: void 0 }
                          ),
                          o
                        );
                      })()
                    : (() => {
                        const o = FN.cloneNode(!0),
                          l = o.firstChild,
                          c = l.nextSibling;
                        return (
                          xt(
                            (f) => {
                              const d = e.class,
                                p = r(),
                                m = t.colors.constant.white;
                              return (
                                d !== f._v$7 && We(o, "class", (f._v$7 = d)),
                                p !== f._v$8 && We(l, "fill", (f._v$8 = p)),
                                m !== f._v$9 && We(c, "fill", (f._v$9 = m)),
                                f
                              );
                            },
                            { _v$7: void 0, _v$8: void 0, _v$9: void 0 }
                          ),
                          o
                        );
                      })();
              })();
      })()
    );
  },
  UN = Ct(
    '<svg width="72" height="72" viewBox="0 0 72 72" fill="none" xmlns="http://www.w3.org/2000/svg"><circle cx="36" cy="36" r="33"></circle><path d="M24.0858 26.9142C23.3047 26.1332 23.3047 24.8668 24.0858 24.0858C24.8668 23.3047 26.1332 23.3047 26.9142 24.0858L36 33.1716L45.0858 24.0858C45.8668 23.3047 47.1332 23.3047 47.9142 24.0858C48.6953 24.8668 48.6953 26.1332 47.9142 26.9142L38.8284 36L47.9142 45.0858C48.6953 45.8668 48.6953 47.1332 47.9142 47.9142C47.1332 48.6953 45.8668 48.6953 45.0858 47.9142L36 38.8284L26.9142 47.9142C26.1332 48.6953 24.8668 48.6953 24.0858 47.9142C23.3047 47.1332 23.3047 45.8668 24.0858 45.0858L33.1716 36L24.0858 26.9142Z"></path></svg>'
  ),
  $N = Ct(
    '<svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 48 48" fill="none"><circle cx="24" cy="24.001" r="22"></circle><path d="M24 24.001L31.5 16.501M24 24.001L16.5 16.501M24 24.001L16.5 31.501M24 24.001L31.5 31.501" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"></path></svg>'
  ),
  VN = Ct(
    '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><circle cx="12" cy="12" r="11"></circle><path d="M7.86361 9.1364C7.51214 8.78493 7.51214 8.21508 7.86361 7.86361C8.21508 7.51214 8.78493 7.51214 9.1364 7.86361L12 10.7272L14.8636 7.86361C15.2151 7.51214 15.7849 7.51214 16.1364 7.86361C16.4879 8.21508 16.4879 8.78493 16.1364 9.1364L13.2728 12L16.1364 14.8636C16.4879 15.2151 16.4879 15.7849 16.1364 16.1364C15.7849 16.4879 15.2151 16.4879 14.8636 16.1364L12 13.2728L9.1364 16.1364C8.78493 16.4879 8.21508 16.4879 7.86361 16.1364C7.51214 15.7849 7.51214 15.2151 7.86361 14.8636L10.7272 12L7.86361 9.1364Z"></path></svg>'
  ),
  L4 = (e) => {
    const t = Gt(),
      n = () => e.size || "m",
      r = () => e.fill || t.colors.icon.error;
    return ke(
      (() => {
        const i = ke(() => n() === "m");
        return () =>
          i()
            ? (() => {
                const s = UN.cloneNode(!0),
                  o = s.firstChild,
                  l = o.nextSibling;
                return (
                  xt(
                    (c) => {
                      const f = e.class,
                        d = r(),
                        p = t.colors.constant.white;
                      return (
                        f !== c._v$ && We(s, "class", (c._v$ = f)),
                        d !== c._v$2 && We(o, "fill", (c._v$2 = d)),
                        p !== c._v$3 && We(l, "fill", (c._v$3 = p)),
                        c
                      );
                    },
                    { _v$: void 0, _v$2: void 0, _v$3: void 0 }
                  ),
                  s
                );
              })()
            : (() => {
                const s = ke(() => n() === "s");
                return () =>
                  s()
                    ? (() => {
                        const o = $N.cloneNode(!0),
                          l = o.firstChild,
                          c = l.nextSibling;
                        return (
                          xt(
                            (f) => {
                              const d = e.class,
                                p = r(),
                                m = t.colors.constant.white;
                              return (
                                d !== f._v$4 && We(o, "class", (f._v$4 = d)),
                                p !== f._v$5 && We(l, "fill", (f._v$5 = p)),
                                m !== f._v$6 && We(c, "stroke", (f._v$6 = m)),
                                f
                              );
                            },
                            { _v$4: void 0, _v$5: void 0, _v$6: void 0 }
                          ),
                          o
                        );
                      })()
                    : (() => {
                        const o = VN.cloneNode(!0),
                          l = o.firstChild,
                          c = l.nextSibling;
                        return (
                          xt(
                            (f) => {
                              const d = e.class,
                                p = r(),
                                m = t.colors.constant.white;
                              return (
                                d !== f._v$7 && We(o, "class", (f._v$7 = d)),
                                p !== f._v$8 && We(l, "fill", (f._v$8 = p)),
                                m !== f._v$9 && We(c, "fill", (f._v$9 = m)),
                                f
                              );
                            },
                            { _v$7: void 0, _v$8: void 0, _v$9: void 0 }
                          ),
                          o
                        );
                      })();
              })();
      })()
    );
  },
  WN = Ct(
    '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M15.55 5.85123C18.9459 7.81184 20.1094 12.1541 18.1488 15.55C16.1882 18.9459 11.8459 20.1094 8.44998 18.1488C8.01952 17.9003 7.46909 18.0478 7.22056 18.4782C6.97203 18.9087 7.11952 19.4591 7.54998 19.7076C11.8068 22.1653 17.2499 20.7068 19.7076 16.45C22.1653 12.1932 20.7068 6.75005 16.45 4.29239C12.1932 1.83472 6.75003 3.29321 4.29236 7.55001C4.04383 7.98047 4.19132 8.53091 4.62178 8.77943C5.05224 9.02796 5.60268 8.88048 5.8512 8.45001C7.81181 5.05413 12.1541 3.89062 15.55 5.85123Z"></path></svg>'
  ),
  zN = Ct(
    '<svg xmlns="http://www.w3.org/2000/svg" width="44" height="44" viewBox="0 0 44 44" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M22 2.99951C11.5066 2.99951 3 11.5061 3 21.9995C3 32.4929 11.5066 40.9995 22 40.9995C22.8284 40.9995 23.5 41.6711 23.5 42.4995C23.5 43.3279 22.8284 43.9995 22 43.9995C9.84974 43.9995 0 34.1498 0 21.9995C0 9.84925 9.84974 -0.000488281 22 -0.000488281C34.1503 -0.000488281 44 9.84925 44 21.9995C44 22.8279 43.3284 23.4995 42.5 23.4995C41.6716 23.4995 41 22.8279 41 21.9995C41 11.5061 32.4934 2.99951 22 2.99951Z"></path></svg>'
  ),
  HN = Ct(
    '<svg width="72" height="72" viewBox="0 0 72 72" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M24 56.7846C35.479 63.412 50.1572 59.479 56.7846 47.9999C63.412 36.5209 59.479 21.8427 48 15.2153C36.521 8.58791 21.8428 12.5209 15.2154 23.9999" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"></path></svg>'
  ),
  rs = (e) => {
    const t = Gt(),
      n = () => e.size || "xs",
      r = () => e.fill || t.colors.icon.tertiary,
      i = OI`
        0% {
          transform: rotate(0deg);
        }
        100% {
          transform: rotate(360deg);
        }
    `,
      s = Z2`
        animation: ${i} 1s linear infinite;
    `;
    return ke(
      (() => {
        const o = ke(() => n() === "xs");
        return () =>
          o()
            ? (() => {
                const l = WN.cloneNode(!0),
                  c = l.firstChild;
                return (
                  xt(
                    (f) => {
                      const d = ld(s, e.class),
                        p = r();
                      return (
                        d !== f._v$ && We(l, "class", (f._v$ = d)),
                        p !== f._v$2 && We(c, "fill", (f._v$2 = p)),
                        f
                      );
                    },
                    { _v$: void 0, _v$2: void 0 }
                  ),
                  l
                );
              })()
            : (() => {
                const l = ke(() => n() === "s");
                return () =>
                  l()
                    ? (() => {
                        const c = zN.cloneNode(!0),
                          f = c.firstChild;
                        return (
                          xt(
                            (d) => {
                              const p = ld(s, e.class),
                                m = r();
                              return (
                                p !== d._v$3 && We(c, "class", (d._v$3 = p)),
                                m !== d._v$4 && We(f, "fill", (d._v$4 = m)),
                                d
                              );
                            },
                            { _v$3: void 0, _v$4: void 0 }
                          ),
                          c
                        );
                      })()
                    : (() => {
                        const c = HN.cloneNode(!0),
                          f = c.firstChild;
                        return (
                          xt(
                            (d) => {
                              const p = ld(s, e.class),
                                m = r();
                              return (
                                p !== d._v$5 && We(c, "class", (d._v$5 = p)),
                                m !== d._v$6 && We(f, "stroke", (d._v$6 = m)),
                                d
                              );
                            },
                            { _v$5: void 0, _v$6: void 0 }
                          ),
                          c
                        );
                      })();
              })();
      })()
    );
  },
  qN = Ct(
    '<svg width="158" height="28" viewBox="0 0 158 28" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M28 14.001C28 21.733 21.732 28.001 14 28.001C6.26801 28.001 0 21.733 0 14.001C0 6.26899 6.26801 0.000976562 14 0.000976562C21.732 0.000976562 28 6.26899 28 14.001ZM9.21931 8.00098H18.7801H18.7813C20.538 8.00098 21.6522 9.89966 20.7691 11.4302L14.8672 21.6576C14.4822 22.3254 13.5172 22.3254 13.1322 21.6576L7.23158 11.4302C6.34721 9.89726 7.4614 8.00098 9.21931 8.00098ZM13.1262 18.5882V9.74806H9.21811C8.78976 9.74806 8.53708 10.2029 8.74163 10.5578L11.8423 16.1035L13.1262 18.5882ZM16.1559 16.1047L19.2554 10.5566C19.4599 10.2017 19.2073 9.74685 18.7789 9.74685H14.8709V18.5906L16.1559 16.1047Z" fill="#0098EA"></path><path d="M18.7802 8.00098H9.21936C7.46145 8.00098 6.34727 9.89726 7.23164 11.4302L13.1322 21.6576C13.5173 22.3254 14.4823 22.3254 14.8673 21.6576L20.7691 11.4302C21.6523 9.89966 20.5381 8.00098 18.7814 8.00098H18.7802ZM13.1274 18.5906L11.8424 16.1035L8.74168 10.5578C8.53714 10.2029 8.78981 9.74806 9.21816 9.74806H13.1262V18.5918L13.1274 18.5906ZM19.2555 10.5566L16.156 16.1047L14.8709 18.5906V9.74685H18.779C19.2073 9.74685 19.46 10.2017 19.2555 10.5566Z" fill="white"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M51.7483 22.1967C55.7182 22.1967 58.9609 18.954 58.9609 14.9841C58.9609 11.0142 55.7182 7.77148 51.7483 7.77148C47.7588 7.77148 44.5357 11.0142 44.5357 14.9841C44.5357 18.954 47.7588 22.1967 51.7483 22.1967ZM51.7483 19.1702C49.4686 19.1702 47.6802 17.2442 47.6802 14.9841C47.6802 12.724 49.4686 10.798 51.7483 10.798C54.0084 10.798 55.7968 12.724 55.7968 14.9841C55.7968 17.2442 54.0084 19.1702 51.7483 19.1702ZM37.0698 21.9609H40.2142V10.9946H44.2843V8.00732H33V10.9946H37.0698V21.9609ZM69.9379 8.00732H73.0823V21.9609H70.3899L63.59 13.3333V21.9609H60.4652V8.00732H63.1576L69.9379 16.6153V8.00732ZM79.2259 14.9887C79.2259 10.9202 82.351 7.77539 86.4982 7.77539C89.8592 7.77539 92.5519 9.95709 93.2202 12.6891H90.7437C90.154 11.0971 88.4637 9.9964 86.4982 9.9964C83.5893 9.9964 81.5452 12.1781 81.5452 14.9887C81.5452 17.7994 83.5893 19.9811 86.4982 19.9811C88.4637 19.9811 90.154 18.8804 90.7437 17.2884H93.2202C92.5519 20.0204 89.8592 22.2021 86.4982 22.2021C82.351 22.2021 79.2259 19.0573 79.2259 14.9887ZM104.584 17.0525C104.584 19.9025 102.343 22.1628 99.4342 22.1628C96.5253 22.1628 94.2846 19.9025 94.2846 17.0525C94.2846 14.2025 96.5253 11.9422 99.4342 11.9422C102.343 11.9422 104.584 14.2025 104.584 17.0525ZM96.4663 17.0525C96.4663 18.8018 97.6849 20.158 99.4342 20.158C101.164 20.158 102.382 18.8018 102.382 17.0525C102.382 15.3032 101.164 13.947 99.4342 13.947C97.6849 13.947 96.4663 15.3032 96.4663 17.0525ZM108.626 12.1388H106.463V21.9662H108.626V17.1311C108.626 15.0281 109.726 13.9077 111.161 13.9077C112.419 13.9077 113.205 14.8512 113.205 16.4039V21.9662H115.367V16.0501C115.367 13.5539 113.893 11.9422 111.613 11.9422C110.335 11.9422 109.215 12.4926 108.626 13.4753V12.1388ZM117.839 12.1388H120.001V13.4753C120.59 12.4926 121.711 11.9422 122.988 11.9422C125.268 11.9422 126.742 13.5539 126.742 16.0501V21.9662H124.58V16.4039C124.58 14.8512 123.794 13.9077 122.536 13.9077C121.101 13.9077 120.001 15.0281 120.001 17.1311V21.9662H117.839V12.1388ZM133.558 22.1628C136.054 22.1628 137.823 20.728 138.373 18.8804H136.113C135.661 19.8238 134.717 20.2563 133.636 20.2563C131.887 20.2563 130.747 19.077 130.668 17.5832H138.491C138.688 14.2419 136.585 11.9422 133.577 11.9422C130.551 11.9422 128.526 14.1436 128.526 17.0525C128.526 20.0007 130.629 22.1628 133.558 22.1628ZM130.747 16.0501C131.042 14.5367 132.162 13.7505 133.518 13.7505C134.717 13.7505 135.838 14.4581 136.172 16.0501H130.747ZM149.851 18.3694C149.32 20.5511 147.453 22.1628 144.859 22.1628C141.871 22.1628 139.709 19.8828 139.709 17.0525C139.709 14.2222 141.871 11.9422 144.859 11.9422C147.453 11.9422 149.32 13.5539 149.851 15.7356H147.571C147.178 14.6743 146.215 13.9077 144.859 13.9077C143.109 13.9077 141.91 15.2246 141.91 17.0525C141.91 18.8804 143.109 20.1973 144.859 20.1973C146.215 20.1973 147.178 19.4307 147.571 18.3694H149.851ZM155.75 22.0645C156.418 22.0645 156.929 21.9859 157.362 21.8483V19.9221C157.047 20.0401 156.615 20.1187 156.202 20.1187C155.082 20.1187 154.551 19.6666 154.551 18.448V14.065H157.362V12.1388H154.551V9.40675H152.389V12.1388H150.345V14.065H152.389V18.8018C152.389 21.0228 153.863 22.0645 155.75 22.0645Z"></path></svg>'
  ),
  KN = () => {
    const e = Gt(),
      t = () =>
        e.theme === cn.DARK ? e.colors.constant.white : e.colors.constant.black;
    return (() => {
      const n = qN.cloneNode(!0),
        r = n.firstChild,
        i = r.nextSibling,
        s = i.nextSibling;
      return xt(() => We(s, "fill", t())), n;
    })();
  },
  GN = Ct(
    '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.56608 4.42584C5.82527 3.32158 6.8176 2.5 8.00001 2.5C9.38072 2.5 10.5 3.61929 10.5 5C10.5 5.63026 10.3391 6.0386 10.1264 6.34455C9.90018 6.66993 9.58561 6.92478 9.18864 7.20877C9.12579 7.25372 9.05873 7.30025 8.9887 7.34883C8.27392 7.84472 7.25001 8.55507 7.25001 10V10.25C7.25001 10.6642 7.5858 11 8.00001 11C8.41422 11 8.75001 10.6642 8.75001 10.25V10C8.75001 9.36502 9.10777 9.1096 9.94554 8.51149L10.0614 8.42873C10.4769 8.13147 10.9748 7.75194 11.358 7.20076C11.7547 6.63015 12 5.91973 12 5C12 2.79086 10.2091 1 8.00001 1C6.10564 1 4.5205 2.31615 4.10577 4.08308C4.01112 4.48634 4.26129 4.88997 4.66454 4.98462C5.0678 5.07927 5.47143 4.8291 5.56608 4.42584ZM8.00001 15C8.60752 15 9.10001 14.5075 9.10001 13.9C9.10001 13.2925 8.60752 12.8 8.00001 12.8C7.39249 12.8 6.90001 13.2925 6.90001 13.9C6.90001 14.5075 7.39249 15 8.00001 15Z"></path></svg>'
  ),
  YN = (e) => {
    const t = Gt(),
      n = () => e.fill || t.colors.icon.secondary;
    return (() => {
      const r = GN.cloneNode(!0),
        i = r.firstChild;
      return xt(() => We(i, "fill", n())), r;
    })();
  },
  QN = Ct(
    '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M9.98156 8.75C9.84854 11.4328 9.01206 13.5 8 13.5C6.98794 13.5 6.15146 11.4328 6.01844 8.75H9.98156ZM11.4832 8.75C11.4217 10.1155 11.1929 11.3869 10.8239 12.4017C10.7734 12.5405 10.7188 12.6789 10.6595 12.8154C12.1454 11.993 13.2103 10.5029 13.4493 8.75H11.4832ZM13.4493 7.25H11.4832C11.4217 5.88453 11.1929 4.61314 10.8239 3.5983C10.7734 3.4595 10.7188 3.32111 10.6595 3.18459C12.1454 4.00697 13.2103 5.49709 13.4493 7.25ZM9.98156 7.25H6.01844C6.15144 4.56764 6.98769 2.50062 7.99955 2.5H8C9.01206 2.5 9.84854 4.56724 9.98156 7.25ZM4.51678 7.25C4.57826 5.88453 4.80706 4.61314 5.1761 3.5983C5.22657 3.4595 5.28124 3.32111 5.3405 3.18459C3.85463 4.00697 2.78972 5.49709 2.55071 7.25H4.51678ZM2.55071 8.75C2.78972 10.5029 3.85463 11.993 5.3405 12.8154C5.28124 12.6789 5.22657 12.5405 5.1761 12.4017C4.80706 11.3869 4.57826 10.1155 4.51678 8.75H2.55071ZM15 8C15 11.866 11.866 15 8 15C4.13401 15 1 11.866 1 8C1 4.13401 4.13401 1 8 1C11.866 1 15 4.13401 15 8Z"></path></svg>'
  ),
  ZN = (e) => {
    const t = Gt(),
      n = () => e.fill || t.colors.icon.primary;
    return (() => {
      const r = QN.cloneNode(!0),
        i = r.firstChild;
      return xt(() => We(i, "fill", n())), r;
    })();
  },
  XN = Ct(
    '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M2.5 4.8C2.5 3.11984 2.5 2.27976 2.82698 1.63803C3.1146 1.07354 3.57354 0.614601 4.13803 0.32698C4.77976 0 5.61984 0 7.3 0H8.7C10.3802 0 11.2202 0 11.862 0.32698C12.4265 0.614601 12.8854 1.07354 13.173 1.63803C13.5 2.27976 13.5 3.11984 13.5 4.8V11.2C13.5 12.8802 13.5 13.7202 13.173 14.362C12.8854 14.9265 12.4265 15.3854 11.862 15.673C11.2202 16 10.3802 16 8.7 16H7.3C5.61984 16 4.77976 16 4.13803 15.673C3.57354 15.3854 3.1146 14.9265 2.82698 14.362C2.5 13.7202 2.5 12.8802 2.5 11.2V4.8ZM4 3.9C4 3.05992 4 2.63988 4.16349 2.31901C4.3073 2.03677 4.53677 1.8073 4.81901 1.66349C5.13988 1.5 5.55992 1.5 6.4 1.5H9.6C10.4401 1.5 10.8601 1.5 11.181 1.66349C11.4632 1.8073 11.6927 2.03677 11.8365 2.31901C12 2.63988 12 3.05992 12 3.9V12.1C12 12.9401 12 13.3601 11.8365 13.681C11.6927 13.9632 11.4632 14.1927 11.181 14.3365C10.8601 14.5 10.4401 14.5 9.6 14.5H6.4C5.55992 14.5 5.13988 14.5 4.81901 14.3365C4.53677 14.1927 4.3073 13.9632 4.16349 13.681C4 13.3601 4 12.9401 4 12.1V3.9ZM7 2.5C6.58579 2.5 6.25 2.83579 6.25 3.25C6.25 3.66421 6.58579 4 7 4H9C9.41421 4 9.75 3.66421 9.75 3.25C9.75 2.83579 9.41421 2.5 9 2.5H7Z"></path></svg>'
  ),
  JN = (e) => {
    const t = Gt(),
      n = () => e.fill || t.colors.icon.primary;
    return (() => {
      const r = XN.cloneNode(!0),
        i = r.firstChild;
      return xt(() => We(i, "fill", n())), r;
    })();
  },
  eO = Ct(
    '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M1.5 6.8C1.5 5.11984 1.5 4.27976 1.82698 3.63803C2.1146 3.07354 2.57354 2.6146 3.13803 2.32698C3.77976 2 4.61984 2 6.3 2H9.7C11.3802 2 12.2202 2 12.862 2.32698C13.4265 2.6146 13.8854 3.07354 14.173 3.63803C14.5 4.27976 14.5 5.11984 14.5 6.8V11.5H15.25C15.6642 11.5 16 11.8358 16 12.25C16 12.6642 15.6642 13 15.25 13H0.75C0.335786 13 0 12.6642 0 12.25C0 11.8358 0.335786 11.5 0.75 11.5H1.5V6.8ZM3 11.5H13V5.9C13 5.05992 13 4.63988 12.8365 4.31901C12.6927 4.03677 12.4632 3.8073 12.181 3.66349C11.8601 3.5 11.4401 3.5 10.6 3.5H5.4C4.55992 3.5 4.13988 3.5 3.81901 3.66349C3.53677 3.8073 3.3073 4.03677 3.16349 4.31901C3 4.63988 3 5.05992 3 5.9V11.5Z"></path></svg>'
  ),
  tO = (e) => {
    const t = Gt(),
      n = () => e.fill || t.colors.icon.primary;
    return (() => {
      const r = eO.cloneNode(!0),
        i = r.firstChild;
      return xt(() => We(i, "fill", n())), r;
    })();
  },
  nO = Ct(
    '<svg xmlns="http://www.w3.org/2000/svg" width="17" height="16" viewBox="0 0 17 16" fill="none"><g clip-path="url(#clip0_3676_1603)"><path fill-rule="evenodd" clip-rule="evenodd" d="M15.5 1.25049C15.5 0.836275 15.1642 0.500488 14.75 0.500488C14.3358 0.500488 14 0.836275 14 1.25049V3.67012C12.7187 2.04487 10.7318 1.00049 8.5 1.00049C4.63401 1.00049 1.5 4.1345 1.5 8.00049C1.5 11.8665 4.63401 15.0005 8.5 15.0005C11.6844 15.0005 14.3703 12.8748 15.2199 9.96661C15.3361 9.56902 15.1079 9.15254 14.7103 9.03638C14.3127 8.92023 13.8962 9.14838 13.7801 9.54597C13.1123 11.8319 11 13.5005 8.5 13.5005C5.46243 13.5005 3 11.0381 3 8.00049C3 4.96292 5.46243 2.50049 8.5 2.50049C10.321 2.50049 11.9363 3.3855 12.9377 4.75049H10.5C10.0858 4.75049 9.75 5.08627 9.75 5.50049C9.75 5.9147 10.0858 6.25049 10.5 6.25049H14.75C15.1642 6.25049 15.5 5.9147 15.5 5.50049V1.25049Z"></path></g><defs><clipPath id="clip0_3676_1603"><rect width="16" height="16" fill="white" transform="translate(0.5 0.000488281)"></rect></clipPath></defs></svg>'
  ),
  gl = (e) => {
    const t = Gt(),
      n = () => e.fill || t.colors.accent;
    return (() => {
      const r = nO.cloneNode(!0),
        i = r.firstChild,
        s = i.firstChild;
      return xt(() => We(s, "fill", n())), r;
    })();
  },
  rO = Ct(
    '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M13 4.06119V6.75053C13 7.16474 13.3358 7.50053 13.75 7.50053C14.1642 7.50053 14.5 7.16474 14.5 6.75053V2.75053L14.5 2.72807C14.5001 2.63191 14.5003 2.49627 14.4842 2.37627C14.4638 2.22503 14.4063 1.99261 14.2071 1.79342C14.0079 1.59423 13.7755 1.5367 13.6243 1.51637C13.5043 1.50023 13.3686 1.50039 13.2725 1.50051L13.25 1.50053H9.25C8.83579 1.50053 8.5 1.83631 8.5 2.25053C8.5 2.66474 8.83579 3.00053 9.25 3.00053H11.9393L7.21967 7.7202C6.92678 8.01309 6.92678 8.48796 7.21967 8.78086C7.51256 9.07375 7.98744 9.07375 8.28033 8.78086L13 4.06119ZM5.85 1.50053H5.81903H5.81899C5.21528 1.50052 4.71702 1.50051 4.31113 1.53367C3.88956 1.56812 3.50203 1.64204 3.13803 1.82751C2.57354 2.11513 2.1146 2.57407 1.82698 3.13856C1.64151 3.50256 1.56759 3.89009 1.53315 4.31166C1.49998 4.71755 1.49999 5.21581 1.5 5.81953V5.81955V5.85053V10.1505V10.1815V10.1815C1.49999 10.7852 1.49998 11.2835 1.53315 11.6894C1.56759 12.111 1.64151 12.4985 1.82698 12.8625C2.1146 13.427 2.57354 13.8859 3.13803 14.1735C3.50203 14.359 3.88956 14.4329 4.31113 14.4674C4.71702 14.5005 5.21527 14.5005 5.81897 14.5005H5.81901H5.85H10.15H10.181H10.181C10.7847 14.5005 11.283 14.5005 11.6889 14.4674C12.1104 14.4329 12.498 14.359 12.862 14.1735C13.4265 13.8859 13.8854 13.427 14.173 12.8625C14.3585 12.4985 14.4324 12.111 14.4669 11.6894C14.5 11.2835 14.5 10.7853 14.5 10.1816V10.1815V10.1505V9.75053C14.5 9.33631 14.1642 9.00053 13.75 9.00053C13.3358 9.00053 13 9.33631 13 9.75053V10.1505C13 10.793 12.9994 11.2297 12.9718 11.5672C12.945 11.8961 12.8963 12.0642 12.8365 12.1815C12.6927 12.4638 12.4632 12.6932 12.181 12.837C12.0637 12.8968 11.8955 12.9455 11.5667 12.9724C11.2292 12.9999 10.7924 13.0005 10.15 13.0005H5.85C5.20757 13.0005 4.77085 12.9999 4.43328 12.9724C4.10447 12.9455 3.93632 12.8968 3.81902 12.837C3.53677 12.6932 3.3073 12.4638 3.16349 12.1815C3.10372 12.0642 3.05503 11.8961 3.02816 11.5672C3.00058 11.2297 3 10.793 3 10.1505V5.85053C3 5.20809 3.00058 4.77137 3.02816 4.43381C3.05503 4.10499 3.10372 3.93684 3.16349 3.81954C3.3073 3.5373 3.53677 3.30783 3.81902 3.16402C3.93632 3.10425 4.10447 3.05556 4.43328 3.02869C4.77085 3.00111 5.20757 3.00053 5.85 3.00053H6.25C6.66422 3.00053 7 2.66474 7 2.25053C7 1.83631 6.66422 1.50053 6.25 1.50053H5.85Z"></path></svg>'
  ),
  Sy = (e) => {
    const t = Gt(),
      n = () => e.fill || t.colors.accent;
    return (() => {
      const r = rO.cloneNode(!0),
        i = r.firstChild;
      return xt(() => We(i, "fill", n())), r;
    })();
  },
  iO = Ct(
    '<svg xmlns="http://www.w3.org/2000/svg" width="17" height="16" viewBox="0 0 17 16" fill="none"><g clip-path="url(#clip0_3676_1274)"><path fill-rule="evenodd" clip-rule="evenodd" d="M1.82698 2.63901C1.5 3.28074 1.5 4.12082 1.5 5.80098V8.80098V9.00098V10.201C1.5 11.8811 1.5 12.7212 1.82698 13.3629C2.1146 13.9274 2.57354 14.3864 3.13803 14.674C3.77976 15.001 4.61984 15.001 6.3 15.001H11.7C13.3802 15.001 14.2202 15.001 14.862 14.674C15.4265 14.3864 15.8854 13.9274 16.173 13.3629C16.5 12.7212 16.5 11.8811 16.5 10.201V8.80098C16.5 7.12082 16.5 6.28074 16.173 5.63901C15.8854 5.07452 15.4265 4.61558 14.862 4.32796C14.743 4.26733 14.6172 4.21795 14.4805 4.17772C14.4501 3.49449 14.3722 3.02994 14.173 2.63901C13.8854 2.07452 13.4265 1.61558 12.862 1.32796C12.2202 1.00098 11.3802 1.00098 9.7 1.00098H6.3C4.61984 1.00098 3.77976 1.00098 3.13803 1.32796C2.57354 1.61558 2.1146 2.07452 1.82698 2.63901ZM12.9861 4.00942C12.9684 3.7108 12.9281 3.49982 12.8365 3.31999C12.6927 3.03775 12.4632 2.80828 12.181 2.66447C11.8601 2.50098 11.4401 2.50098 10.6 2.50098H5.4C4.55992 2.50098 4.13988 2.50098 3.81901 2.66447C3.53677 2.80828 3.3073 3.03775 3.16349 3.31999C3.03615 3.56991 3.00799 3.88 3.00177 4.40188C3.04646 4.37612 3.09189 4.35146 3.13803 4.32796C3.77976 4.00098 4.61984 4.00098 6.3 4.00098H11.7C12.1966 4.00098 12.6197 4.00098 12.9861 4.00942ZM3 7.90098V8.10098C3 8.47468 3 8.76527 3.01439 9.00098H3V11.101C3 11.9411 3 12.3611 3.16349 12.682C3.3073 12.9642 3.53677 13.1937 3.81901 13.3375C4.13988 13.501 4.55992 13.501 5.4 13.501H12.6C13.4401 13.501 13.8601 13.501 14.181 13.3375C14.4632 13.1937 14.6927 12.9642 14.8365 12.682C15 12.3611 15 11.9411 15 11.101V7.90098C15 7.0609 15 6.64086 14.8365 6.31999C14.6927 6.03775 14.4632 5.80828 14.181 5.66447C13.8601 5.50098 13.4401 5.50098 12.6 5.50098H5.4C4.55992 5.50098 4.13988 5.50098 3.81901 5.66447C3.53677 5.80828 3.3073 6.03775 3.16349 6.31999C3 6.64086 3 7.0609 3 7.90098ZM10.5 9.75098C10.5 9.33676 10.8358 9.00098 11.25 9.00098H12.75C13.1642 9.00098 13.5 9.33676 13.5 9.75098C13.5 10.1652 13.1642 10.501 12.75 10.501H11.25C10.8358 10.501 10.5 10.1652 10.5 9.75098Z"></path></g><defs><clipPath id="clip0_3676_1274"><rect width="16" height="16" fill="white" transform="translate(0.5 0.000976562)"></rect></clipPath></defs></svg>'
  ),
  sO = (e) => {
    const t = Gt(),
      n = () => e.fill || t.colors.accent;
    return (() => {
      const r = iO.cloneNode(!0),
        i = r.firstChild,
        s = i.firstChild;
      return xt(() => We(s, "fill", n())), r;
    })();
  },
  oO = Ct(
    '<svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 48 48" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M39.6319 16.8719C38.3212 16.2041 36.7002 16.0478 34 16.0112V11C34 5.47715 29.5228 1 24 1C18.4772 1 14 5.47715 14 11V16.0112C11.2998 16.0478 9.6788 16.2041 8.36808 16.8719C6.86278 17.6389 5.63893 18.8628 4.87195 20.3681C4 22.0794 4 24.3196 4 28.8V32.2C4 36.6804 4 38.9206 4.87195 40.6319C5.63893 42.1372 6.86278 43.3611 8.36808 44.1281C10.0794 45 12.3196 45 16.8 45H31.2C35.6804 45 37.9206 45 39.6319 44.1281C41.1372 43.3611 42.3611 42.1372 43.1281 40.6319C44 38.9206 44 36.6804 44 32.2V28.8C44 24.3196 44 22.0794 43.1281 20.3681C42.3611 18.8628 41.1372 17.6389 39.6319 16.8719ZM31 11V16H17V11C17 7.13401 20.134 4 24 4C27.866 4 31 7.13401 31 11ZM7.54497 21.73C7 22.7996 7 24.1997 7 27V34C7 36.8003 7 38.2004 7.54497 39.27C8.02433 40.2108 8.78924 40.9757 9.73005 41.455C10.7996 42 12.1997 42 15 42H33C35.8003 42 37.2004 42 38.27 41.455C39.2108 40.9757 39.9757 40.2108 40.455 39.27C41 38.2004 41 36.8003 41 34V27C41 24.1997 41 22.7996 40.455 21.73C39.9757 20.7892 39.2108 20.0243 38.27 19.545C37.2004 19 35.8003 19 33 19H15C12.1997 19 10.7996 19 9.73005 19.545C8.78924 20.0243 8.02433 20.7892 7.54497 21.73ZM24 24C23.1716 24 22.5 24.6716 22.5 25.5V29.5C22.5 30.3284 23.1716 31 24 31C24.8284 31 25.5 30.3284 25.5 29.5V25.5C25.5 24.6716 24.8284 24 24 24Z"></path></svg>'
  ),
  aO = (e) => {
    const t = Gt(),
      n = () => e.fill || t.colors.icon.secondary;
    return (() => {
      const r = oO.cloneNode(!0),
        i = r.firstChild;
      return (
        xt(
          (s) => {
            const o = e.class,
              l = n();
            return (
              o !== s._v$ && We(r, "class", (s._v$ = o)),
              l !== s._v$2 && We(i, "fill", (s._v$2 = l)),
              s
            );
          },
          { _v$: void 0, _v$2: void 0 }
        ),
        r
      );
    })();
  },
  lO = Ct(
    '<svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 48 48" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M37.485 37.3849C40.894 33.9506 43 29.2212 43 24C43 13.5066 34.4934 5 24 5C13.5066 5 5 13.5066 5 24C5 29.2213 7.1061 33.9507 10.5151 37.385C13.3583 32.9438 18.3354 30 24.0001 30C29.6647 30 34.6418 32.9437 37.485 37.3849ZM35.1809 39.3635C32.9143 35.5532 28.7554 33 24.0001 33C19.2448 33 15.0858 35.5533 12.8193 39.3636C15.9564 41.6506 19.8206 43 24 43C28.1795 43 32.0437 41.6505 35.1809 39.3635ZM24 46C36.1503 46 46 36.1503 46 24C46 11.8497 36.1503 2 24 2C11.8497 2 2 11.8497 2 24C2 36.1503 11.8497 46 24 46ZM24 24C26.7614 24 29 21.7614 29 19C29 16.2386 26.7614 14 24 14C21.2386 14 19 16.2386 19 19C19 21.7614 21.2386 24 24 24ZM24 27C28.4183 27 32 23.4183 32 19C32 14.5817 28.4183 11 24 11C19.5817 11 16 14.5817 16 19C16 23.4183 19.5817 27 24 27Z"></path></svg>'
  ),
  uO = (e) => {
    const t = Gt(),
      n = () => e.fill || t.colors.icon.secondary;
    return (() => {
      const r = lO.cloneNode(!0),
        i = r.firstChild;
      return (
        xt(
          (s) => {
            const o = e.class,
              l = n();
            return (
              o !== s._v$ && We(r, "class", (s._v$ = o)),
              l !== s._v$2 && We(i, "fill", (s._v$2 = l)),
              s
            );
          },
          { _v$: void 0, _v$2: void 0 }
        ),
        r
      );
    })();
  },
  cO = Ct(
    '<svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 48 48" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M34.5607 4.43934C33.9749 3.85355 33.0251 3.85355 32.4393 4.43934C31.8536 5.02513 31.8536 5.97487 32.4393 6.56066L37.8787 12H10.5C9.67157 12 9 12.6716 9 13.5C9 14.3284 9.67157 15 10.5 15H37.8787L32.4393 20.4393C31.8536 21.0251 31.8536 21.9749 32.4393 22.5607C33.0251 23.1464 33.9749 23.1464 34.5607 22.5607L42.5607 14.5607C43.1464 13.9749 43.1464 13.0251 42.5607 12.4393L34.5607 4.43934ZM13.4393 25.4393C14.0251 24.8536 14.9749 24.8536 15.5607 25.4393C16.1464 26.0251 16.1464 26.9749 15.5607 27.5607L10.1213 33H37.5C38.3284 33 39 33.6716 39 34.5C39 35.3284 38.3284 36 37.5 36H10.1213L15.5607 41.4393C16.1464 42.0251 16.1464 42.9749 15.5607 43.5607C14.9749 44.1464 14.0251 44.1464 13.4393 43.5607L5.43934 35.5607C4.85355 34.9749 4.85355 34.0251 5.43934 33.4393L13.4393 25.4393Z"></path></svg>'
  ),
  dO = (e) => {
    const t = Gt(),
      n = () => e.fill || t.colors.icon.secondary;
    return (() => {
      const r = cO.cloneNode(!0),
        i = r.firstChild;
      return (
        xt(
          (s) => {
            const o = e.class,
              l = n();
            return (
              o !== s._v$ && We(r, "class", (s._v$ = o)),
              l !== s._v$2 && We(i, "fill", (s._v$2 = l)),
              s
            );
          },
          { _v$: void 0, _v$2: void 0 }
        ),
        r
      );
    })();
  },
  fO = Ct(
    '<svg xmlns="http://www.w3.org/2000/svg" width="28" height="29" viewBox="0 0 28 29" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M1.75 12.002C1.75 9.20169 1.75 7.80156 2.29497 6.732C2.77433 5.79119 3.53924 5.02629 4.48005 4.54692C5.54961 4.00195 6.94974 4.00195 9.75 4.00195H17.25C20.0503 4.00195 21.4504 4.00195 22.52 4.54692C23.4608 5.02629 24.2257 5.79119 24.705 6.732C24.8256 6.96861 24.9195 7.2214 24.9926 7.50195H21.5C19.6377 7.50195 18.7065 7.50195 17.9609 7.77334C16.711 8.22828 15.7263 9.21291 15.2714 10.4629C15 11.2085 15 12.1396 15 14.002C15 15.8643 15 16.7954 15.2714 17.541C15.7263 18.791 16.711 19.7756 17.9609 20.2306C18.7065 20.502 19.6377 20.502 21.5 20.502H24.9926C24.9195 20.7825 24.8256 21.0353 24.705 21.2719C24.2257 22.2127 23.4608 22.9776 22.52 23.457C21.4504 24.002 20.0503 24.002 17.25 24.002H9.75C6.94974 24.002 5.54961 24.002 4.48005 23.457C3.53924 22.9776 2.77433 22.2127 2.29497 21.2719C1.75 20.2023 1.75 18.8022 1.75 16.002V12.002ZM16.4999 13.802C16.4999 12.1218 16.4999 11.2817 16.8269 10.64C17.1145 10.0755 17.5735 9.61656 18.138 9.32894C18.7797 9.00196 19.6198 9.00196 21.2999 9.00196H23.1999C24.8801 9.00196 25.7202 9.00196 26.3619 9.32894C26.9264 9.61656 27.3853 10.0755 27.673 10.64C27.9999 11.2817 27.9999 12.1218 27.9999 13.802V14.202C27.9999 15.8821 27.9999 16.7222 27.673 17.3639C27.3853 17.9284 26.9264 18.3874 26.3619 18.675C25.7202 19.002 24.8801 19.002 23.1999 19.002H21.2999C19.6198 19.002 18.7797 19.002 18.138 18.675C17.5735 18.3874 17.1145 17.9284 16.8269 17.3639C16.4999 16.7222 16.4999 15.8821 16.4999 14.202V13.802ZM22.4999 14.002C22.4999 14.9685 21.7164 15.752 20.7499 15.752C19.7834 15.752 18.9999 14.9685 18.9999 14.002C18.9999 13.0355 19.7834 12.252 20.7499 12.252C21.7164 12.252 22.4999 13.0355 22.4999 14.002Z"></path></svg>'
  ),
  hO = (e) => {
    const t = Gt(),
      n = () => e.fill || t.colors.constant.white;
    return (() => {
      const r = fO.cloneNode(!0),
        i = r.firstChild;
      return (
        xt(
          (s) => {
            const o = e.class,
              l = n();
            return (
              o !== s._v$ && We(r, "class", (s._v$ = o)),
              l !== s._v$2 && We(i, "fill", (s._v$2 = l)),
              s
            );
          },
          { _v$: void 0, _v$2: void 0 }
        ),
        r
      );
    })();
  },
  pO = Ct(
    '<svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 28 28" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M24.7803 7.21967C25.0732 7.51256 25.0732 7.98744 24.7803 8.28033L11.5303 21.5303C11.2374 21.8232 10.7626 21.8232 10.4697 21.5303L4.21967 15.2803C3.92678 14.9874 3.92678 14.5126 4.21967 14.2197C4.51256 13.9268 4.98744 13.9268 5.28033 14.2197L11 19.9393L23.7197 7.21967C24.0126 6.92678 24.4874 6.92678 24.7803 7.21967Z"></path></svg>'
  ),
  mO = (e) => {
    const t = Gt(),
      n = () => e.fill || t.colors.icon.secondary;
    return (() => {
      const r = pO.cloneNode(!0),
        i = r.firstChild;
      return (
        xt(
          (s) => {
            const o = e.class,
              l = n();
            return (
              o !== s._v$ && We(r, "class", (s._v$ = o)),
              l !== s._v$2 && We(i, "fill", (s._v$2 = l)),
              s
            );
          },
          { _v$: void 0, _v$2: void 0 }
        ),
        r
      );
    })();
  },
  gO = Ct(
    '<svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 28 28"><path fill-rule="evenodd" clip-rule="evenodd" d="M10.0001 10.0001C10.0016 8.02333 10.0267 6.98719 10.436 6.18404C10.8195 5.43139 11.4314 4.81947 12.184 4.43597C13.0397 4 14.1598 4 16.4 4H17.6C19.8402 4 20.9603 4 21.816 4.43597C22.5686 4.81947 23.1805 5.43139 23.564 6.18404C24 7.03969 24 8.15979 24 10.4V11.6C24 13.8402 24 14.9603 23.564 15.816C23.1805 16.5686 22.5686 17.1805 21.816 17.564C21.0128 17.9733 19.9767 17.9984 17.9999 17.9999C17.9984 19.9767 17.9733 21.0128 17.564 21.816C17.1805 22.5686 16.5686 23.1805 15.816 23.564C14.9603 24 13.8402 24 11.6 24H10.4C8.15979 24 7.03969 24 6.18404 23.564C5.43139 23.1805 4.81947 22.5686 4.43597 21.816C4 20.9603 4 19.8402 4 17.6V16.4C4 14.1598 4 13.0397 4.43597 12.184C4.81947 11.4314 5.43139 10.8195 6.18404 10.436C6.98719 10.0267 8.02333 10.0016 10.0001 10.0001ZM10 11.5H9.5C8.09987 11.5 7.3998 11.5 6.86502 11.7725C6.39462 12.0122 6.01217 12.3946 5.77248 12.865C5.5 13.3998 5.5 14.0999 5.5 15.5V18.5C5.5 19.9001 5.5 20.6002 5.77248 21.135C6.01217 21.6054 6.39462 21.9878 6.86502 22.2275C7.3998 22.5 8.09987 22.5 9.5 22.5H12.5C13.9001 22.5 14.6002 22.5 15.135 22.2275C15.6054 21.9878 15.9878 21.6054 16.2275 21.135C16.5 20.6002 16.5 19.9001 16.5 18.5V18H16.4C14.1598 18 13.0397 18 12.184 17.564C11.4314 17.1805 10.8195 16.5686 10.436 15.816C10 14.9603 10 13.8402 10 11.6V11.5ZM11.5 9.5C11.5 8.09987 11.5 7.3998 11.7725 6.86502C12.0122 6.39462 12.3946 6.01217 12.865 5.77248C13.3998 5.5 14.0999 5.5 15.5 5.5H18.5C19.9001 5.5 20.6002 5.5 21.135 5.77248C21.6054 6.01217 21.9878 6.39462 22.2275 6.86502C22.5 7.3998 22.5 8.09987 22.5 9.5V12.5C22.5 13.9001 22.5 14.6002 22.2275 15.135C21.9878 15.6054 21.6054 15.9878 21.135 16.2275C20.6002 16.5 19.9001 16.5 18.5 16.5H15.5C14.0999 16.5 13.3998 16.5 12.865 16.2275C12.3946 15.9878 12.0122 15.6054 11.7725 15.135C11.5 14.6002 11.5 13.9001 11.5 12.5V9.5Z"></path></svg>'
  ),
  AS = (e) => {
    const t = Gt(),
      n = () => e.fill || t.colors.icon.secondary;
    return (() => {
      const r = gO.cloneNode(!0),
        i = r.firstChild;
      return (
        xt(
          (s) => {
            const o = n(),
              l = n();
            return (
              o !== s._v$ && We(r, "fill", (s._v$ = o)),
              l !== s._v$2 && We(i, "fill", (s._v$2 = l)),
              s
            );
          },
          { _v$: void 0, _v$2: void 0 }
        ),
        r
      );
    })();
  },
  yO = Ct(
    '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="17" viewBox="0 0 16 17" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M1 4.12695C1 3.07754 1 2.55284 1.19202 2.14684C1.38986 1.72856 1.7266 1.39181 2.14489 1.19397C2.55088 1.00195 3.07559 1.00195 4.125 1.00195C5.17441 1.00195 5.69912 1.00195 6.10511 1.19397C6.5234 1.39181 6.86014 1.72856 7.05798 2.14684C7.25 2.55284 7.25 3.07754 7.25 4.12695C7.25 5.17636 7.25 5.70107 7.05798 6.10706C6.86014 6.52535 6.5234 6.8621 6.10511 7.05993C5.69912 7.25195 5.17441 7.25195 4.125 7.25195C3.07559 7.25195 2.55088 7.25195 2.14489 7.05993C1.7266 6.8621 1.38986 6.52535 1.19202 6.10706C1 5.70107 1 5.17636 1 4.12695ZM2.5 3.30195C2.5 3.02193 2.5 2.88191 2.5545 2.77496C2.60243 2.68088 2.67892 2.60439 2.773 2.55645C2.87996 2.50195 3.01997 2.50195 3.3 2.50195H4.95C5.23003 2.50195 5.37004 2.50195 5.477 2.55645C5.57108 2.60439 5.64757 2.68088 5.6955 2.77496C5.75 2.88191 5.75 3.02193 5.75 3.30195V4.95195C5.75 5.23198 5.75 5.37199 5.6955 5.47895C5.64757 5.57303 5.57108 5.64952 5.477 5.69746C5.37004 5.75195 5.23003 5.75195 4.95 5.75195H3.3C3.01997 5.75195 2.87996 5.75195 2.773 5.69746C2.67892 5.64952 2.60243 5.57303 2.5545 5.47895C2.5 5.37199 2.5 5.23198 2.5 4.95195V3.30195ZM1 11.877C1 10.8275 1 10.3028 1.19202 9.89684C1.38986 9.47856 1.7266 9.14181 2.14489 8.94397C2.55088 8.75195 3.07559 8.75195 4.125 8.75195C5.17441 8.75195 5.69912 8.75195 6.10511 8.94397C6.5234 9.14181 6.86014 9.47856 7.05798 9.89684C7.25 10.3028 7.25 10.8275 7.25 11.877C7.25 12.9264 7.25 13.4511 7.05798 13.8571C6.86014 14.2753 6.5234 14.6121 6.10511 14.8099C5.69912 15.002 5.17441 15.002 4.125 15.002C3.07559 15.002 2.55088 15.002 2.14489 14.8099C1.7266 14.6121 1.38986 14.2753 1.19202 13.8571C1 13.4511 1 12.9264 1 11.877ZM2.5 11.052C2.5 10.7719 2.5 10.6319 2.5545 10.525C2.60243 10.4309 2.67892 10.3544 2.773 10.3064C2.87996 10.252 3.01997 10.252 3.3 10.252H4.95C5.23003 10.252 5.37004 10.252 5.477 10.3064C5.57108 10.3544 5.64757 10.4309 5.6955 10.525C5.75 10.6319 5.75 10.7719 5.75 11.052V12.702C5.75 12.982 5.75 13.122 5.6955 13.2289C5.64757 13.323 5.57108 13.3995 5.477 13.4475C5.37004 13.502 5.23003 13.502 4.95 13.502H3.3C3.01997 13.502 2.87996 13.502 2.773 13.4475C2.67892 13.3995 2.60243 13.323 2.5545 13.2289C2.5 13.122 2.5 12.982 2.5 12.702V11.052ZM8.94202 2.14684C8.75 2.55284 8.75 3.07754 8.75 4.12695C8.75 5.17636 8.75 5.70107 8.94202 6.10706C9.13986 6.52535 9.4766 6.8621 9.89489 7.05993C10.3009 7.25195 10.8256 7.25195 11.875 7.25195C12.9244 7.25195 13.4491 7.25195 13.8551 7.05993C14.2734 6.8621 14.6101 6.52535 14.808 6.10706C15 5.70107 15 5.17636 15 4.12695C15 3.07754 15 2.55284 14.808 2.14684C14.6101 1.72856 14.2734 1.39181 13.8551 1.19397C13.4491 1.00195 12.9244 1.00195 11.875 1.00195C10.8256 1.00195 10.3009 1.00195 9.89489 1.19397C9.4766 1.39181 9.13986 1.72856 8.94202 2.14684ZM10.3045 2.77496C10.25 2.88191 10.25 3.02193 10.25 3.30195V4.95195C10.25 5.23198 10.25 5.37199 10.3045 5.47895C10.3524 5.57303 10.4289 5.64952 10.523 5.69746C10.63 5.75195 10.77 5.75195 11.05 5.75195H12.7C12.98 5.75195 13.12 5.75195 13.227 5.69746C13.3211 5.64952 13.3976 5.57303 13.4455 5.47895C13.5 5.37199 13.5 5.23198 13.5 4.95195V3.30195C13.5 3.02193 13.5 2.88191 13.4455 2.77496C13.3976 2.68088 13.3211 2.60439 13.227 2.55645C13.12 2.50195 12.98 2.50195 12.7 2.50195H11.05C10.77 2.50195 10.63 2.50195 10.523 2.55645C10.4289 2.60439 10.3524 2.68088 10.3045 2.77496ZM8.80727 9.13518C8.75 9.26242 8.75 9.4256 8.75 9.75195C8.75 10.0783 8.75 10.2415 8.80727 10.3687C8.87245 10.5136 8.9884 10.6295 9.13323 10.6947C9.26047 10.752 9.42365 10.752 9.75 10.752C10.0764 10.752 10.2395 10.752 10.3668 10.6947C10.5116 10.6295 10.6276 10.5136 10.6927 10.3687C10.75 10.2415 10.75 10.0783 10.75 9.75195C10.75 9.4256 10.75 9.26242 10.6927 9.13518C10.6276 8.99035 10.5116 8.8744 10.3668 8.80922C10.2395 8.75195 10.0764 8.75195 9.75 8.75195C9.42365 8.75195 9.26047 8.75195 9.13323 8.80922C8.9884 8.8744 8.87245 8.99035 8.80727 9.13518ZM10.87 11.8771C10.87 11.546 10.87 11.3805 10.9289 11.2517C10.9938 11.1098 11.1077 10.9959 11.2497 10.931C11.3784 10.8721 11.5439 10.8721 11.875 10.8721C12.2061 10.8721 12.3716 10.8721 12.5003 10.931C12.6423 10.9959 12.7562 11.1098 12.8211 11.2517C12.88 11.3805 12.88 11.546 12.88 11.8771C12.88 12.2081 12.88 12.3737 12.8211 12.5024C12.7562 12.6444 12.6423 12.7583 12.5003 12.8232C12.3716 12.8821 12.2061 12.8821 11.875 12.8821C11.5439 12.8821 11.3784 12.8821 11.2497 12.8232C11.1077 12.7583 10.9938 12.6444 10.9289 12.5024C10.87 12.3737 10.87 12.2081 10.87 11.8771ZM8.80727 13.3852C8.75 13.5124 8.75 13.6756 8.75 14.002C8.75 14.3283 8.75 14.4915 8.80727 14.6187C8.87245 14.7636 8.9884 14.8795 9.13323 14.9447C9.26047 15.002 9.42365 15.002 9.75 15.002C10.0764 15.002 10.2395 15.002 10.3668 14.9447C10.5116 14.8795 10.6276 14.7636 10.6927 14.6187C10.75 14.4915 10.75 14.3283 10.75 14.002C10.75 13.6756 10.75 13.5124 10.6927 13.3852C10.6276 13.2404 10.5116 13.1244 10.3668 13.0592C10.2395 13.002 10.0764 13.002 9.75 13.002C9.42365 13.002 9.26047 13.002 9.13323 13.0592C8.9884 13.1244 8.87245 13.2404 8.80727 13.3852ZM13 9.75195C13 9.4256 13 9.26242 13.0573 9.13518C13.1224 8.99035 13.2384 8.8744 13.3832 8.80922C13.5105 8.75195 13.6736 8.75195 14 8.75195C14.3264 8.75195 14.4895 8.75195 14.6168 8.80922C14.7616 8.8744 14.8776 8.99035 14.9427 9.13518C15 9.26242 15 9.4256 15 9.75195C15 10.0783 15 10.2415 14.9427 10.3687C14.8776 10.5136 14.7616 10.6295 14.6168 10.6947C14.4895 10.752 14.3264 10.752 14 10.752C13.6736 10.752 13.5105 10.752 13.3832 10.6947C13.2384 10.6295 13.1224 10.5136 13.0573 10.3687C13 10.2415 13 10.0783 13 9.75195ZM13.0573 13.3852C13 13.5124 13 13.6756 13 14.002C13 14.3283 13 14.4915 13.0573 14.6187C13.1224 14.7636 13.2384 14.8795 13.3832 14.9447C13.5105 15.002 13.6736 15.002 14 15.002C14.3264 15.002 14.4895 15.002 14.6168 14.9447C14.7616 14.8795 14.8776 14.7636 14.9427 14.6187C15 14.4915 15 14.3283 15 14.002C15 13.6756 15 13.5124 14.9427 13.3852C14.8776 13.2404 14.7616 13.1244 14.6168 13.0592C14.4895 13.002 14.3264 13.002 14 13.002C13.6736 13.002 13.5105 13.002 13.3832 13.0592C13.2384 13.1244 13.1224 13.2404 13.0573 13.3852Z"></path></svg>'
  ),
  V5 = (e) => {
    const t = Gt(),
      n = () => e.fill || t.colors.icon.secondary;
    return (() => {
      const r = yO.cloneNode(!0),
        i = r.firstChild;
      return xt(() => We(i, "fill", n())), r;
    })();
  },
  vO = { m: "16px", s: "12px", none: "0" },
  wO = { m: "6px", s: "6px", none: "0" },
  bO = F1.div`
    width: 60px;
    height: 60px;
    padding: 8px;
    margin-bottom: 8px;
    border-radius: ${(e) => vO[e.theme.borderRadius]};
    background-color: ${(e) => e.theme.colors.background.tint};
    display: grid;
    grid-template: 1fr 1fr / 1fr 1fr;
    gap: 4px;
`,
  xO = F1(_S)`
    width: 20px;
    height: 20px;
    border-radius: ${(e) => wO[e.theme.borderRadius]};
`,
  TS = (e) =>
    J(zd, {
      get name() {
        return e.labelLine1;
      },
      get secondLine() {
        return e.labelLine2;
      },
      get icon() {
        return J(bO, {
          get children() {
            return J(nu, {
              each: [0, 1, 2, 3],
              children: (t) =>
                J(xO, {
                  get src() {
                    return e.images[t];
                  },
                }),
            });
          },
        });
      },
      onClick: () => e.onClick(),
    }),
  Y2 = "telegram-wallet",
  lu = {
    TON: "https://raw.githubusercontent.com/ton-connect/sdk/main/assets/ton-icon-48.png",
    TG: "https://raw.githubusercontent.com/ton-connect/sdk/main/assets/tg.png",
  },
  PS = (e) => {
    const [t] = b2(),
      n = () => {
        if (e.wallet.appName !== Y2) {
          if ("isPreferred" in e.wallet && e.wallet.isPreferred)
            return t("walletItem.recent", {}, "Recent");
          if (qo(e.wallet)) return t("walletItem.installed", {}, "Installed");
          if (e.wallet.name === "Tonkeeper")
            return t("walletItem.popular", {}, "Popular");
        }
      };
    return ke(
      (() => {
        const r = ke(() => e.wallet.appName === Y2);
        return () =>
          r()
            ? J(zd, {
                get icon() {
                  return e.wallet.imageUrl;
                },
                get name() {
                  return t("walletItem.walletOn", {}, "Wallet On");
                },
                secondLine: "Telegram",
                get badgeUrl() {
                  return lu.TG;
                },
                onClick: () => e.onClick(),
              })
            : J(zd, {
                get icon() {
                  return e.wallet.imageUrl;
                },
                get name() {
                  return e.wallet.name;
                },
                get secondLine() {
                  return n();
                },
                secondLineColorPrimary: !1,
                onClick: () => e.onClick(),
              });
      })()
    );
  },
  CO = F1.div`
    width: 100%;
    overflow-y: auto;
    max-height: ${(e) => e.maxHeight};

    scrollbar-width: none;
    &&::-webkit-scrollbar {
        display: none;
    }

    &&::-webkit-scrollbar-track {
        background: transparent;
    }

    &&::-webkit-scrollbar-thumb {
        display: none;
    }
`,
  SO = F1.div`
    height: 1px;
    margin: 0 -24px;
    width: calc(100% + 48px);
    opacity: 0.08;
    background: ${(e) =>
      e.isShown ? e.theme.colors.icon.secondary : "transparent"};
    transition: background 0.15s ease-in-out;

    ${ri("mobile")} {
        width: 100%;
        margin: 0;
    }
`,
  [EO, kO] = et(((sy = w2()) == null ? void 0 : sy.innerHeight) || 0);
w2() && window.addEventListener("resize", () => kO(window.innerHeight));
const [v3, _O] = et(n3("mobile")),
  Hd = () => _O(n3("mobile"));
w2() &&
  (window.addEventListener("resize", () => Hd()),
  window.addEventListener("load", () => Hd(), { once: !0 }));
const MS = (e) => {
    const [t, n] = et(!1),
      r = (o) => {
        n(o.target.scrollTop > 0);
      },
      i = () => (v3() ? 150 : 200),
      s = () =>
        e.maxHeight !== void 0 ? `${e.maxHeight}px` : `${EO() - i()}px`;
    return [
      J(SO, {
        get isShown() {
          return t();
        },
      }),
      J(CO, {
        get maxHeight() {
          return s();
        },
        onScroll: r,
        get class() {
          return e.class;
        },
        get children() {
          return e.children;
        },
      }),
    ];
  },
  AO = F1.a`
    display: block;
    text-decoration: unset;
`,
  qd = (e) =>
    J(
      AO,
      a2(
        {
          get href() {
            return e.href;
          },
          get target() {
            return e.blank ? "_blank" : "_self";
          },
          get class() {
            return e.class;
          },
        },
        () => (e.blank ? { rel: "noreferrer noopener" } : {}),
        {
          get children() {
            return e.children;
          },
        }
      )
    ),
  Ys = A4(),
  TO = Ct(
    '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M7.76228 2.09998H10.2378C11.0458 2.09997 11.7067 2.09996 12.2438 2.14384C12.7997 2.18926 13.3017 2.28614 13.7706 2.52505C14.5045 2.89896 15.1011 3.49558 15.475 4.22941C15.7139 4.6983 15.8108 5.20038 15.8562 5.75629C15.9001 6.29337 15.9001 6.95422 15.9001 7.76227V8.1H16.2377C17.0457 8.09999 17.7066 8.09998 18.2437 8.14386C18.7996 8.18928 19.3017 8.28616 19.7705 8.52507C20.5044 8.89898 21.101 9.4956 21.4749 10.2294C21.7138 10.6983 21.8107 11.2004 21.8561 11.7563C21.9 12.2934 21.9 12.9542 21.9 13.7623V16.2377C21.9 17.0458 21.9 17.7066 21.8561 18.2437C21.8107 18.7996 21.7138 19.3017 21.4749 19.7706C21.101 20.5044 20.5044 21.101 19.7705 21.4749C19.3017 21.7138 18.7996 21.8107 18.2437 21.8561C17.7066 21.9 17.0458 21.9 16.2378 21.9H13.7623C12.9543 21.9 12.2934 21.9 11.7563 21.8561C11.2004 21.8107 10.6983 21.7138 10.2294 21.4749C9.49561 21.101 8.89898 20.5044 8.52508 19.7706C8.28616 19.3017 8.18928 18.7996 8.14386 18.2437C8.09998 17.7066 8.09999 17.0458 8.1 16.2377V15.9H7.76227C6.95426 15.9 6.29335 15.9 5.75629 15.8561C5.20038 15.8107 4.6983 15.7138 4.22941 15.4749C3.49558 15.101 2.89896 14.5044 2.52505 13.7705C2.28614 13.3017 2.18926 12.7996 2.14384 12.2437C2.09996 11.7066 2.09997 11.0458 2.09998 10.2377V7.76228C2.09997 6.95424 2.09996 6.29336 2.14384 5.75629C2.18926 5.20038 2.28614 4.6983 2.52505 4.22941C2.89896 3.49558 3.49558 2.89896 4.22941 2.52505C4.6983 2.28614 5.20038 2.18926 5.75629 2.14384C6.29336 2.09996 6.95425 2.09997 7.76228 2.09998ZM8.1 14.1V13.7623C8.09999 12.9542 8.09998 12.2934 8.14386 11.7563C8.18928 11.2004 8.28616 10.6983 8.52508 10.2294C8.89898 9.4956 9.49561 8.89898 10.2294 8.52507C10.6983 8.28616 11.2004 8.18928 11.7563 8.14386C12.2934 8.09998 12.9542 8.09999 13.7623 8.1H14.1001V7.79998C14.1001 6.94505 14.0994 6.35798 14.0622 5.90287C14.0259 5.45827 13.9593 5.21944 13.8712 5.0466C13.6699 4.65146 13.3486 4.3302 12.9535 4.12886C12.7806 4.04079 12.5418 3.97419 12.0972 3.93786C11.6421 3.90068 11.055 3.89998 10.2001 3.89998H7.79998C6.94505 3.89998 6.35798 3.90068 5.90287 3.93786C5.45827 3.97419 5.21944 4.04079 5.0466 4.12886C4.65146 4.3302 4.3302 4.65146 4.12886 5.0466C4.04079 5.21944 3.97419 5.45827 3.93786 5.90287C3.90068 6.35798 3.89998 6.94505 3.89998 7.79998V10.2C3.89998 11.0549 3.90068 11.642 3.93786 12.0971C3.97419 12.5417 4.04079 12.7805 4.12886 12.9534C4.3302 13.3485 4.65146 13.6698 5.0466 13.8711C5.21944 13.9592 5.45827 14.0258 5.90287 14.0621C6.35798 14.0993 6.94505 14.1 7.79998 14.1H8.1ZM11.0466 10.1289C11.2195 10.0408 11.4583 9.97421 11.9029 9.93788C12.358 9.9007 12.9451 9.9 13.8 9.9H16.2C17.0549 9.9 17.642 9.9007 18.0971 9.93788C18.5417 9.97421 18.7805 10.0408 18.9534 10.1289C19.3485 10.3302 19.6698 10.6515 19.8711 11.0466C19.9592 11.2195 20.0258 11.4583 20.0621 11.9029C20.0993 12.358 20.1 12.9451 20.1 13.8V16.2C20.1 17.0549 20.0993 17.642 20.0621 18.0971C20.0258 18.5417 19.9592 18.7805 19.8711 18.9534C19.6698 19.3485 19.3485 19.6698 18.9534 19.8711C18.7805 19.9592 18.5417 20.0258 18.0971 20.0621C17.642 20.0993 17.0549 20.1 16.2 20.1H13.8C12.9451 20.1 12.358 20.0993 11.9029 20.0621C11.4583 20.0258 11.2195 19.9592 11.0466 19.8711C10.6515 19.6698 10.3302 19.3485 10.1289 18.9534C10.0408 18.7805 9.97421 18.5417 9.93788 18.0971C9.9007 17.642 9.9 17.0549 9.9 16.2V13.8C9.9 12.9451 9.9007 12.358 9.93788 11.9029C9.97421 11.4583 10.0408 11.2195 10.1289 11.0466C10.3302 10.6515 10.6515 10.3302 11.0466 10.1289Z"></path></svg>'
  ),
  PO = (e) => {
    const t = Gt(),
      n = () => e.fill || t.colors.icon.primary;
    return (() => {
      const r = TO.cloneNode(!0),
        i = r.firstChild;
      return (
        xt(
          (s) => {
            const o = e.class,
              l = n();
            return (
              o !== s._v$ && We(r, "class", (s._v$ = o)),
              l !== s._v$2 && We(i, "fill", (s._v$2 = l)),
              s
            );
          },
          { _v$: void 0, _v$2: void 0 }
        ),
        r
      );
    })();
  },
  MO = Ct(
    '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M8.7624 3.10001C7.95435 3.1 7.29349 3.09999 6.75642 3.14387C6.2005 3.18929 5.69842 3.28617 5.22954 3.52508C4.4957 3.89899 3.89908 4.49561 3.52517 5.22944C3.28626 5.69833 3.18938 6.20041 3.14396 6.75632C3.10008 7.2934 3.10009 7.95424 3.1001 8.76229V15.2377C3.10009 16.0458 3.10008 16.7066 3.14396 17.2437C3.18938 17.7996 3.28626 18.3017 3.52517 18.7706C3.89908 19.5044 4.4957 20.101 5.22954 20.4749C5.69842 20.7138 6.2005 20.8107 6.75642 20.8561C7.29349 20.9 7.95434 20.9 8.76239 20.9H12.0001C12.4972 20.9 12.9001 20.4971 12.9001 20C12.9001 19.503 12.4972 19.1 12.0001 19.1H8.8001C7.94517 19.1 7.3581 19.0993 6.90299 19.0621C6.45839 19.0258 6.21956 18.9592 6.04672 18.8711C5.65158 18.6698 5.33032 18.3485 5.12898 17.9534C5.04092 17.7805 4.97431 17.5417 4.93798 17.0971C4.9008 16.642 4.9001 16.0549 4.9001 15.2V8.80001C4.9001 7.94508 4.9008 7.35801 4.93798 6.9029C4.97431 6.4583 5.04092 6.21947 5.12898 6.04663C5.33032 5.65149 5.65158 5.33023 6.04672 5.12889C6.21956 5.04082 6.45839 4.97422 6.90299 4.93789C7.3581 4.90071 7.94517 4.90001 8.8001 4.90001H12.0001C12.4972 4.90001 12.9001 4.49706 12.9001 4.00001C12.9001 3.50295 12.4972 3.10001 12.0001 3.10001H8.7624Z"></path><path d="M17.6364 7.3636C17.2849 7.01212 16.7151 7.01212 16.3636 7.3636C16.0121 7.71507 16.0121 8.28492 16.3636 8.63639L18.8272 11.1H9.00001C8.50295 11.1 8.10001 11.5029 8.10001 12C8.10001 12.497 8.50295 12.9 9.00001 12.9H18.8272L16.3636 15.3636C16.0121 15.7151 16.0121 16.2849 16.3636 16.6364C16.7151 16.9879 17.2849 16.9879 17.6364 16.6364L21.6364 12.6364C21.9879 12.2849 21.9879 11.7151 21.6364 11.3636L17.6364 7.3636Z"></path></svg>'
  ),
  RO = (e) => {
    const t = Gt(),
      n = () => e.fill || t.colors.icon.primary;
    return (() => {
      const r = MO.cloneNode(!0),
        i = r.firstChild,
        s = i.nextSibling;
      return (
        xt(
          (o) => {
            const l = n(),
              c = n();
            return (
              l !== o._v$ && We(i, "fill", (o._v$ = l)),
              c !== o._v$2 && We(s, "fill", (o._v$2 = c)),
              o
            );
          },
          { _v$: void 0, _v$2: void 0 }
        ),
        r
      );
    })();
  },
  LO = { m: "8px", s: "4px", none: "0" },
  IO = { m: "16px", s: "8px", none: "0" },
  jO = F1.div`
    width: 256px;
    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.16);
    border-radius: ${(e) => IO[e.theme.borderRadius]};

    background-color: ${(e) => e.theme.colors.background.primary}
           
    color: ${(e) => e.theme.colors.text.primary}
`,
  NO = F1.ul`
    background-color: ${(e) => e.theme.colors.background.primary};
    padding: 8px;
`,
  Ey = F1.button`
    display: flex;
    align-items: center;
    gap: 8px;
    height: 40px;
    padding-left: 8px;
    width: 100%;

    background-color: ${(e) => e.theme.colors.background.primary};
    border: none;
    border-radius: ${(e) => LO[e.theme.borderRadius]};
    cursor: pointer;

    transition: background-color, transform 0.1s ease-in-out;

    &:hover {
        background-color: ${(e) => e.theme.colors.background.secondary};
    }

    &:active {
        transform: scale(0.96);
    }
`,
  ky = Ct("<li></li>"),
  p9 = (e) =>
    J(ti, {
      get translationKey() {
        return e.translationKey;
      },
      fontSize: "15px",
      fontWeight: "590",
      get children() {
        return e.children;
      },
    }),
  OO = (e) => {
    const t = Mr(Ys),
      [n, r] = et(!1),
      i = () =>
        Dt(void 0, null, function* () {
          const o = ep(t.account.address, t.account.chain === Rl.TESTNET);
          yield pp(o), r(!0), setTimeout(() => r(!1), 1e3);
        }),
      s = () => {
        t.disconnect(), e.onClose();
      };
    return J(jO, {
      ref(o) {
        const l = e.ref;
        typeof l == "function" ? l(o) : (e.ref = o);
      },
      get class() {
        return e.class;
      },
      "data-tc-dropdown": "true",
      get children() {
        return J(NO, {
          get children() {
            return [
              (() => {
                const o = ky.cloneNode(!0);
                return (
                  ir(
                    o,
                    J(Ey, {
                      onClick: () => i(),
                      get children() {
                        return [
                          J(PO, {}),
                          J(dt, {
                            get when() {
                              return !n();
                            },
                            get children() {
                              return J(p9, {
                                translationKey: "button.dropdown.copy",
                                children: "Copy address",
                              });
                            },
                          }),
                          J(dt, {
                            get when() {
                              return n();
                            },
                            get children() {
                              return J(p9, {
                                translationKey: "button.dropdown.copied",
                                children: "Address copied!",
                              });
                            },
                          }),
                        ];
                      },
                    })
                  ),
                  o
                );
              })(),
              (() => {
                const o = ky.cloneNode(!0);
                return (
                  ir(
                    o,
                    J(Ey, {
                      onClick: () => s(),
                      get children() {
                        return [
                          J(RO, {}),
                          J(p9, {
                            translationKey: "button.dropdown.disconnect",
                            children: "Disconnect",
                          }),
                        ];
                      },
                    })
                  ),
                  o
                );
              })(),
            ];
          },
        });
      },
    });
  },
  BO = { m: "16px", s: "8px", none: "0" },
  DO = F1.div`
    width: 256px;
    padding: 12px 16px;
    display: flex;
    gap: 9px;

    background-color: ${(e) => e.theme.colors.background.primary};
    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.16);
    border-radius: ${(e) => BO[e.theme.borderRadius]};
`,
  FO = F1.div`
    width: 192px;

    > h3 {
        font-size: 15px;
    }
`,
  UO = F1(ti)`
    margin-top: 4px;
    color: ${(e) => e.theme.colors.text.secondary};
`,
  yp = (e) => {
    const t = au(e);
    return J(
      DO,
      a2(
        {
          get class() {
            return e.class;
          },
          "data-tc-notification": "true",
        },
        t,
        {
          get children() {
            return [
              J(FO, {
                get children() {
                  return [
                    J(mp, {
                      get translationKey() {
                        return e.header.translationKey;
                      },
                      get translationValues() {
                        return e.header.translationValues;
                      },
                      get children() {
                        return e.children;
                      },
                    }),
                    J(dt, {
                      get when() {
                        return e.text;
                      },
                      get children() {
                        return J(UO, {
                          get translationKey() {
                            return e.text.translationKey;
                          },
                          get translationValues() {
                            return e.text.translationValues;
                          },
                        });
                      },
                    }),
                  ];
                },
              }),
              ke(() => e.icon),
            ];
          },
        }
      )
    );
  },
  $O = F1(rs)`
    align-self: center;
`,
  VO = (e) => {
    const t = Mr(Ys),
      [n] = b2(),
      r = () =>
        t.wallet && "name" in t.wallet
          ? t.wallet.name
          : n("common.yourWallet", {}, "Your wallet");
    return J(yp, {
      get header() {
        return {
          translationKey: "notifications.confirm.header",
          translationValues: { name: r() },
        };
      },
      get class() {
        return e.class;
      },
      get icon() {
        return J($O, {});
      },
      "data-tc-notification-confirm": "true",
      children: "Confirm operation in your wallet",
    });
  },
  WO = F1(L4)`
    margin-top: 2px;
`,
  zO = (e) =>
    J(yp, {
      header: { translationKey: "notifications.transactionCanceled.header" },
      text: { translationKey: "notifications.transactionCanceled.text" },
      get icon() {
        return J(WO, { size: "xs" });
      },
      get class() {
        return e.class;
      },
      "data-tc-notification-tx-cancelled": "true",
      children: "Transaction cancelled",
    }),
  HO = F1(gp)`
    margin-top: 2px;
`,
  qO = (e) =>
    J(yp, {
      header: { translationKey: "notifications.transactionSent.header" },
      text: { translationKey: "notifications.transactionSent.text" },
      get icon() {
        return J(HO, {});
      },
      get class() {
        return e.class;
      },
      "data-tc-notification-tx-sent": "true",
      children: "Transaction sent",
    }),
  m9 = Z2`
    transform: translateY(-8px);
    margin-bottom: 12px;
`,
  KO = { timeout: 4500 },
  [_y, GO] = et(null);
function YO(e) {
  const { timeout: t } = Ft(Ft({}, KO), e),
    [n, r] = et([]),
    [i, s] = et([]);
  return (
    Dn(
      tI(H2, (o) => {
        var l;
        if (
          !o ||
          !o.showNotification ||
          _y() === o ||
          (((l = _y()) == null ? void 0 : l.name) === "confirm-transaction" &&
            o.name === "confirm-transaction")
        )
          return;
        GO(o), r((d) => d.filter((p) => p.action !== "confirm-transaction"));
        const c = { action: o.name };
        r((d) => [...d, c]);
        const f = setTimeout(() => {
          r((d) => d.filter((p) => p !== c)),
            s((d) => d.filter((p) => p !== f));
        }, t);
        s((d) => [...d, f]);
      })
    ),
    Pr(() => {
      i().forEach((o) => clearTimeout(o));
    }),
    n
  );
}
const QO = Ct('<div data-tc-list-notifications="true"></div>'),
  ZO = (e) => {
    const t = YO();
    return (() => {
      const n = QO.cloneNode(!0);
      return (
        ir(
          n,
          J(Nj, {
            onBeforeEnter: (r) => {
              r2(
                r,
                [
                  { opacity: 0, transform: "translateY(0)" },
                  { opacity: 1, transform: "translateY(-8px)" },
                ],
                { duration: 200 }
              );
            },
            onExit: (r, i) => {
              r2(
                r,
                [
                  { opacity: 1, transform: "translateY(-8px)" },
                  { opacity: 0, transform: "translateY(-30px)" },
                ],
                { duration: 200 }
              ).finished.then(i);
            },
            get children() {
              return J(nu, {
                get each() {
                  return t();
                },
                children: (r) =>
                  J(ru, {
                    get children() {
                      return [
                        J(rr, {
                          get when() {
                            return r.action === "transaction-sent";
                          },
                          get children() {
                            return J(qO, { class: m9 });
                          },
                        }),
                        J(rr, {
                          get when() {
                            return r.action === "transaction-canceled";
                          },
                          get children() {
                            return J(zO, { class: m9 });
                          },
                        }),
                        J(rr, {
                          get when() {
                            return r.action === "confirm-transaction";
                          },
                          get children() {
                            return J(VO, { class: m9 });
                          },
                        }),
                      ];
                    },
                  }),
              });
            },
          })
        ),
        xt(() => ip(n, e.class)),
        n
      );
    })();
  },
  RS = F1(Pn)`
    background-color: ${(e) => e.theme.colors.connectButton.background};
    color: ${(e) => e.theme.colors.connectButton.foreground};
    box-shadow: ${(e) =>
      `0 4px 24px ${iu(e.theme.colors.constant.black, 0.16)}`};
    padding: 8px 16px 8px 12px;

    display: flex;
    align-items: center;
    gap: 4px;
    height: 40px;
`,
  XO = F1(RS)`
    padding: 12px 16px;
    min-width: 148px;
    justify-content: center;
    background-color: ${(e) => e.theme.colors.background.primary};
`,
  JO = F1(Pn)`
    min-width: 148px;
    height: 40px;

    background-color: ${(e) => e.theme.colors.background.primary};
    color: ${(e) => e.theme.colors.connectButton.foreground};
    box-shadow: ${(e) =>
      `0 4px 24px ${iu(e.theme.colors.constant.black, 0.16)}`};

    display: flex;
    align-items: center;
    justify-content: center;
`,
  eB = F1(rs)`
    height: 18px;
    width: 18px;
`,
  tB = F1.div`
    width: fit-content;
    display: flex;
    flex-direction: column;
    align-items: flex-end;
`,
  nB = F1(OO)`
    box-sizing: border-box;
    overflow: hidden;
    margin-top: 12px;
`,
  rB = F1(ZO)`
    > div:first-child {
        margin-top: 20px;
    }
`;
function LS(e) {
  return e.split("-")[0];
}
function iB(e) {
  return e.split("-")[1];
}
function sB(e) {
  return ["top", "bottom"].includes(LS(e)) ? "x" : "y";
}
function oB(e) {
  return e === "y" ? "height" : "width";
}
function Ay(e, t, n) {
  let { reference: r, floating: i } = e;
  const s = r.x + r.width / 2 - i.width / 2,
    o = r.y + r.height / 2 - i.height / 2,
    l = sB(t),
    c = oB(l),
    f = r[c] / 2 - i[c] / 2,
    d = LS(t),
    p = l === "x";
  let m;
  switch (d) {
    case "top":
      m = { x: s, y: r.y - i.height };
      break;
    case "bottom":
      m = { x: s, y: r.y + r.height };
      break;
    case "right":
      m = { x: r.x + r.width, y: o };
      break;
    case "left":
      m = { x: r.x - i.width, y: o };
      break;
    default:
      m = { x: r.x, y: r.y };
  }
  switch (iB(t)) {
    case "start":
      m[l] -= f * (n && p ? -1 : 1);
      break;
    case "end":
      m[l] += f * (n && p ? -1 : 1);
      break;
  }
  return m;
}
const aB = (e, t, n) =>
  Dt(void 0, null, function* () {
    const {
        placement: r = "bottom",
        strategy: i = "absolute",
        middleware: s = [],
        platform: o,
      } = n,
      l = s.filter(Boolean),
      c = yield o.isRTL == null ? void 0 : o.isRTL(t);
    if ({}.NODE_ENV !== "production") {
      if (
        (o == null &&
          console.error(
            [
              "Floating UI: `platform` property was not passed to config. If you",
              "want to use Floating UI on the web, install @floating-ui/dom",
              "instead of the /core package. Otherwise, you can create your own",
              "`platform`: https://floating-ui.com/docs/platform",
            ].join(" ")
          ),
        l.filter((b) => {
          let { name: x } = b;
          return x === "autoPlacement" || x === "flip";
        }).length > 1)
      )
        throw new Error(
          [
            "Floating UI: duplicate `flip` and/or `autoPlacement` middleware",
            "detected. This will lead to an infinite loop. Ensure only one of",
            "either has been passed to the `middleware` array.",
          ].join(" ")
        );
      (!e || !t) &&
        console.error(
          [
            "Floating UI: The reference and/or floating element was not defined",
            "when `computePosition()` was called. Ensure that both elements have",
            "been created and can be measured.",
          ].join(" ")
        );
    }
    let f = yield o.getElementRects({ reference: e, floating: t, strategy: i }),
      { x: d, y: p } = Ay(f, r, c),
      m = r,
      g = {},
      w = 0;
    for (let b = 0; b < l.length; b++) {
      const { name: x, fn: E } = l[b],
        {
          x: P,
          y: _,
          data: T,
          reset: M,
        } = yield E({
          x: d,
          y: p,
          initialPlacement: r,
          placement: m,
          strategy: i,
          middlewareData: g,
          rects: f,
          platform: o,
          elements: { reference: e, floating: t },
        });
      if (
        ((d = P ?? d),
        (p = _ ?? p),
        (g = Jr(Ft({}, g), { [x]: Ft(Ft({}, g[x]), T) })),
        {}.NODE_ENV !== "production" &&
          w > 50 &&
          console.warn(
            [
              "Floating UI: The middleware lifecycle appears to be running in an",
              "infinite loop. This is usually caused by a `reset` continually",
              "being returned without a break condition.",
            ].join(" ")
          ),
        M && w <= 50)
      ) {
        w++,
          typeof M == "object" &&
            (M.placement && (m = M.placement),
            M.rects &&
              (f =
                M.rects === !0
                  ? yield o.getElementRects({
                      reference: e,
                      floating: t,
                      strategy: i,
                    })
                  : M.rects),
            ({ x: d, y: p } = Ay(f, m, c))),
          (b = -1);
        continue;
      }
    }
    return { x: d, y: p, placement: m, strategy: i, middlewareData: g };
  });
function Ty(e) {
  return Jr(Ft({}, e), {
    top: e.y,
    left: e.x,
    right: e.x + e.width,
    bottom: e.y + e.height,
  });
}
function is(e) {
  var t;
  return ((t = e.ownerDocument) == null ? void 0 : t.defaultView) || window;
}
function m2(e) {
  return is(e).getComputedStyle(e);
}
function Us(e) {
  return jS(e) ? (e.nodeName || "").toLowerCase() : "";
}
let Bc;
function IS() {
  if (Bc) return Bc;
  const e = navigator.userAgentData;
  return e && Array.isArray(e.brands)
    ? ((Bc = e.brands.map((t) => t.brand + "/" + t.version).join(" ")), Bc)
    : navigator.userAgent;
}
function g2(e) {
  return e instanceof is(e).HTMLElement;
}
function wi(e) {
  return e instanceof is(e).Element;
}
function jS(e) {
  return e instanceof is(e).Node;
}
function Py(e) {
  if (typeof ShadowRoot > "u") return !1;
  const t = is(e).ShadowRoot;
  return e instanceof t || e instanceof ShadowRoot;
}
function I4(e) {
  const { overflow: t, overflowX: n, overflowY: r, display: i } = m2(e);
  return (
    /auto|scroll|overlay|hidden/.test(t + r + n) &&
    !["inline", "contents"].includes(i)
  );
}
function lB(e) {
  return ["table", "td", "th"].includes(Us(e));
}
function vp(e) {
  const t = /firefox/i.test(IS()),
    n = m2(e),
    r = n.backdropFilter || n.WebkitBackdropFilter;
  return (
    n.transform !== "none" ||
    n.perspective !== "none" ||
    (r ? r !== "none" : !1) ||
    (t && n.willChange === "filter") ||
    (t && (n.filter ? n.filter !== "none" : !1)) ||
    ["transform", "perspective"].some((i) => n.willChange.includes(i)) ||
    ["paint", "layout", "strict", "content"].some((i) => {
      const s = n.contain;
      return s != null ? s.includes(i) : !1;
    })
  );
}
function NS() {
  return !/^((?!chrome|android).)*safari/i.test(IS());
}
function wp(e) {
  return ["html", "body", "#document"].includes(Us(e));
}
const My = Math.min,
  yl = Math.max,
  Ry = Math.round,
  W5 = { x: 1, y: 1 };
function Ol(e) {
  const t = !wi(e) && e.contextElement ? e.contextElement : wi(e) ? e : null;
  if (!t) return W5;
  const n = t.getBoundingClientRect(),
    r = m2(t);
  if (r.boxSizing !== "border-box")
    return g2(t)
      ? {
          x: (t.offsetWidth > 0 && Ry(n.width) / t.offsetWidth) || 1,
          y: (t.offsetHeight > 0 && Ry(n.height) / t.offsetHeight) || 1,
        }
      : W5;
  let i = n.width / parseFloat(r.width),
    s = n.height / parseFloat(r.height);
  return (
    (!i || !Number.isFinite(i)) && (i = 1),
    (!s || !Number.isFinite(s)) && (s = 1),
    { x: i, y: s }
  );
}
function $s(e, t, n, r) {
  var i, s, o, l;
  t === void 0 && (t = !1), n === void 0 && (n = !1);
  const c = e.getBoundingClientRect();
  let f = W5;
  t && (r ? wi(r) && (f = Ol(r)) : (f = Ol(e)));
  const d = wi(e) ? is(e) : window,
    p = !NS() && n,
    m =
      (c.left +
        (p &&
        (i = (s = d.visualViewport) == null ? void 0 : s.offsetLeft) != null
          ? i
          : 0)) /
      f.x,
    g =
      (c.top +
        (p &&
        (o = (l = d.visualViewport) == null ? void 0 : l.offsetTop) != null
          ? o
          : 0)) /
      f.y,
    w = c.width / f.x,
    b = c.height / f.y;
  return {
    width: w,
    height: b,
    top: g,
    right: m + w,
    bottom: g + b,
    left: m,
    x: m,
    y: g,
  };
}
function Qs(e) {
  return ((jS(e) ? e.ownerDocument : e.document) || window.document)
    .documentElement;
}
function j4(e) {
  return wi(e)
    ? { scrollLeft: e.scrollLeft, scrollTop: e.scrollTop }
    : { scrollLeft: e.pageXOffset, scrollTop: e.pageYOffset };
}
function OS(e) {
  return $s(Qs(e)).left + j4(e).scrollLeft;
}
function uB(e, t, n) {
  const r = g2(t),
    i = Qs(t),
    s = $s(e, !0, n === "fixed", t);
  let o = { scrollLeft: 0, scrollTop: 0 };
  const l = { x: 0, y: 0 };
  if (r || (!r && n !== "fixed"))
    if (((Us(t) !== "body" || I4(i)) && (o = j4(t)), g2(t))) {
      const c = $s(t, !0);
      (l.x = c.x + t.clientLeft), (l.y = c.y + t.clientTop);
    } else i && (l.x = OS(i));
  return {
    x: s.left + o.scrollLeft - l.x,
    y: s.top + o.scrollTop - l.y,
    width: s.width,
    height: s.height,
  };
}
function Bl(e) {
  if (Us(e) === "html") return e;
  const t = e.assignedSlot || e.parentNode || (Py(e) ? e.host : null) || Qs(e);
  return Py(t) ? t.host : t;
}
function Ly(e) {
  return !g2(e) || m2(e).position === "fixed" ? null : e.offsetParent;
}
function cB(e) {
  let t = Bl(e);
  for (; g2(t) && !wp(t); ) {
    if (vp(t)) return t;
    t = Bl(t);
  }
  return null;
}
function Iy(e) {
  const t = is(e);
  let n = Ly(e);
  for (; n && lB(n) && m2(n).position === "static"; ) n = Ly(n);
  return n &&
    (Us(n) === "html" ||
      (Us(n) === "body" && m2(n).position === "static" && !vp(n)))
    ? t
    : n || cB(e) || t;
}
function dB(e) {
  if (g2(e)) return { width: e.offsetWidth, height: e.offsetHeight };
  const t = $s(e);
  return { width: t.width, height: t.height };
}
function fB(e) {
  let { rect: t, offsetParent: n, strategy: r } = e;
  const i = g2(n),
    s = Qs(n);
  if (n === s) return t;
  let o = { scrollLeft: 0, scrollTop: 0 },
    l = { x: 1, y: 1 };
  const c = { x: 0, y: 0 };
  if (
    (i || (!i && r !== "fixed")) &&
    ((Us(n) !== "body" || I4(s)) && (o = j4(n)), g2(n))
  ) {
    const f = $s(n);
    (l = Ol(n)), (c.x = f.x + n.clientLeft), (c.y = f.y + n.clientTop);
  }
  return {
    width: t.width * l.x,
    height: t.height * l.y,
    x: t.x * l.x - o.scrollLeft * l.x + c.x,
    y: t.y * l.y - o.scrollTop * l.y + c.y,
  };
}
function hB(e, t) {
  const n = is(e),
    r = Qs(e),
    i = n.visualViewport;
  let s = r.clientWidth,
    o = r.clientHeight,
    l = 0,
    c = 0;
  if (i) {
    (s = i.width), (o = i.height);
    const f = NS();
    (f || (!f && t === "fixed")) && ((l = i.offsetLeft), (c = i.offsetTop));
  }
  return { width: s, height: o, x: l, y: c };
}
function pB(e) {
  var t;
  const n = Qs(e),
    r = j4(e),
    i = (t = e.ownerDocument) == null ? void 0 : t.body,
    s = yl(
      n.scrollWidth,
      n.clientWidth,
      i ? i.scrollWidth : 0,
      i ? i.clientWidth : 0
    ),
    o = yl(
      n.scrollHeight,
      n.clientHeight,
      i ? i.scrollHeight : 0,
      i ? i.clientHeight : 0
    );
  let l = -r.scrollLeft + OS(e);
  const c = -r.scrollTop;
  return (
    m2(i || n).direction === "rtl" &&
      (l += yl(n.clientWidth, i ? i.clientWidth : 0) - s),
    { width: s, height: o, x: l, y: c }
  );
}
function BS(e) {
  const t = Bl(e);
  return wp(t) ? e.ownerDocument.body : g2(t) && I4(t) ? t : BS(t);
}
function vl(e, t) {
  var n;
  t === void 0 && (t = []);
  const r = BS(e),
    i = r === ((n = e.ownerDocument) == null ? void 0 : n.body),
    s = is(r);
  return i
    ? t.concat(s, s.visualViewport || [], I4(r) ? r : [])
    : t.concat(r, vl(r));
}
function mB(e, t) {
  const n = $s(e, !0, t === "fixed"),
    r = n.top + e.clientTop,
    i = n.left + e.clientLeft,
    s = g2(e) ? Ol(e) : { x: 1, y: 1 },
    o = e.clientWidth * s.x,
    l = e.clientHeight * s.y,
    c = i * s.x,
    f = r * s.y;
  return {
    top: f,
    left: c,
    right: c + o,
    bottom: f + l,
    x: c,
    y: f,
    width: o,
    height: l,
  };
}
function jy(e, t, n) {
  return t === "viewport" ? Ty(hB(e, n)) : wi(t) ? mB(t, n) : Ty(pB(Qs(e)));
}
function gB(e, t) {
  const n = t.get(e);
  if (n) return n;
  let r = vl(e).filter((l) => wi(l) && Us(l) !== "body"),
    i = null;
  const s = m2(e).position === "fixed";
  let o = s ? Bl(e) : e;
  for (; wi(o) && !wp(o); ) {
    const l = m2(o),
      c = vp(o);
    (
      s
        ? !c && !i
        : !c &&
          l.position === "static" &&
          !!i &&
          ["absolute", "fixed"].includes(i.position)
    )
      ? (r = r.filter((d) => d !== o))
      : (i = l),
      (o = Bl(o));
  }
  return t.set(e, r), r;
}
function yB(e) {
  let { element: t, boundary: n, rootBoundary: r, strategy: i } = e;
  const o = [...(n === "clippingAncestors" ? gB(t, this._c) : [].concat(n)), r],
    l = o[0],
    c = o.reduce((f, d) => {
      const p = jy(t, d, i);
      return (
        (f.top = yl(p.top, f.top)),
        (f.right = My(p.right, f.right)),
        (f.bottom = My(p.bottom, f.bottom)),
        (f.left = yl(p.left, f.left)),
        f
      );
    }, jy(t, l, i));
  return {
    width: c.right - c.left,
    height: c.bottom - c.top,
    x: c.left,
    y: c.top,
  };
}
const vB = {
  getClippingRect: yB,
  convertOffsetParentRelativeRectToViewportRelativeRect: fB,
  isElement: wi,
  getDimensions: dB,
  getOffsetParent: Iy,
  getDocumentElement: Qs,
  getScale: Ol,
  getElementRects(e) {
    return Dt(this, null, function* () {
      let { reference: t, floating: n, strategy: r } = e;
      const i = this.getOffsetParent || Iy,
        s = this.getDimensions;
      return {
        reference: uB(t, yield i(n), r),
        floating: Ft({ x: 0, y: 0 }, yield s(n)),
      };
    });
  },
  getClientRects: (e) => Array.from(e.getClientRects()),
  isRTL: (e) => m2(e).direction === "rtl",
};
function wB(e, t, n, r) {
  r === void 0 && (r = {});
  const {
      ancestorScroll: i = !0,
      ancestorResize: s = !0,
      elementResize: o = !0,
      animationFrame: l = !1,
    } = r,
    c = i && !l,
    f =
      c || s
        ? [
            ...(wi(e) ? vl(e) : e.contextElement ? vl(e.contextElement) : []),
            ...vl(t),
          ]
        : [];
  f.forEach((w) => {
    c && w.addEventListener("scroll", n, { passive: !0 }),
      s && w.addEventListener("resize", n);
  });
  let d = null;
  if (o) {
    let w = !0;
    (d = new ResizeObserver(() => {
      w || n(), (w = !1);
    })),
      wi(e) && !l && d.observe(e),
      !wi(e) && e.contextElement && !l && d.observe(e.contextElement),
      d.observe(t);
  }
  let p,
    m = l ? $s(e) : null;
  l && g();
  function g() {
    const w = $s(e);
    m &&
      (w.x !== m.x ||
        w.y !== m.y ||
        w.width !== m.width ||
        w.height !== m.height) &&
      n(),
      (m = w),
      (p = requestAnimationFrame(g));
  }
  return (
    n(),
    () => {
      var w;
      f.forEach((b) => {
        c && b.removeEventListener("scroll", n),
          s && b.removeEventListener("resize", n);
      }),
        (w = d) == null || w.disconnect(),
        (d = null),
        l && cancelAnimationFrame(p);
    }
  );
}
const bB = (e, t, n) => {
  const r = new Map(),
    i = Ft({ platform: vB }, n),
    s = Jr(Ft({}, i.platform), { _c: r });
  return aB(e, t, Jr(Ft({}, i), { platform: s }));
};
function xB(e, t, n) {
  let r = () => {
      var p;
      return (p = n == null ? void 0 : n.placement) != null ? p : "bottom";
    },
    i = () => {
      var p;
      return (p = n == null ? void 0 : n.strategy) != null ? p : "absolute";
    },
    [s, o] = et({
      x: null,
      y: null,
      placement: r(),
      strategy: i(),
      middlewareData: {},
    }),
    [l, c] = et();
  Dn(() => {
    let p = l();
    if (p) throw p.value;
  });
  let f = ke(() => (e(), t(), {}));
  function d() {
    let p = e(),
      m = t();
    if (p && m) {
      let g = f();
      bB(p, m, {
        middleware: n == null ? void 0 : n.middleware,
        placement: r(),
        strategy: i(),
      }).then(
        (w) => {
          g === f() && o(w);
        },
        (w) => {
          c(w);
        }
      );
    }
  }
  return (
    Dn(() => {
      let p = e(),
        m = t();
      if ((r(), i(), p && m))
        if (n != null && n.whileElementsMounted) {
          let g = n.whileElementsMounted(p, m, d);
          g && Pr(g);
        } else d();
    }),
    {
      get x() {
        return s().x;
      },
      get y() {
        return s().y;
      },
      get placement() {
        return s().placement;
      },
      get strategy() {
        return s().strategy;
      },
      get middlewareData() {
        return s().middlewareData;
      },
      update: d,
    }
  );
}
const CB = Ct('<tc-root data-tc-dropdown-container="true"></tc-root>'),
  SB = () => {
    const e = Gt(),
      t = Mr(A3),
      n = Mr(Ys),
      [r, i] = et(!1),
      [s, o] = et(t.account),
      [l, c] = et(!t.account);
    let f;
    const [d, p] = et(),
      [m, g] = et(),
      w = xB(m, d, { whileElementsMounted: wB, placement: "bottom-end" }),
      b = () => {
        const P = s();
        if (P) {
          const _ = ep(P.address, P.chain === Rl.TESTNET);
          return _.slice(0, 4) + "…" + _.slice(-4);
        }
        return "";
      };
    n.connectionRestored.then(() => c(!1));
    const x = t.onStatusChange((P) => {
        if (!P) {
          i(!1), o(null), c(!1);
          return;
        }
        o(P.account), c(!1);
      }),
      E = (P) => {
        if (!s() || !r()) return;
        const _ = m().contains(P.target),
          T = f.contains(P.target);
        !_ && !T && i(!1);
      };
    return (
      qC(() => {
        document.body.addEventListener("click", E);
      }),
      Pr(() => {
        document.body.removeEventListener("click", E), x();
      }),
      J(m3, {
        component: z2,
        get children() {
          return [
            J(dt, {
              get when() {
                return l();
              },
              get children() {
                return J(JO, {
                  disabled: !0,
                  "data-tc-connect-button-loading": "true",
                  get children() {
                    return J(eB, {});
                  },
                });
              },
            }),
            J(dt, {
              get when() {
                return !l();
              },
              get children() {
                return [
                  J(dt, {
                    get when() {
                      return !s();
                    },
                    get children() {
                      return J(RS, {
                        onClick: () => n.openModal(),
                        "data-tc-connect-button": "true",
                        scale: "s",
                        get children() {
                          return [
                            J(ON, {
                              get fill() {
                                return e.colors.connectButton.foreground;
                              },
                            }),
                            J(ti, {
                              translationKey: "button.connectWallet",
                              fontSize: "15px",
                              lineHeight: "18px",
                              fontWeight: "590",
                              get color() {
                                return e.colors.connectButton.foreground;
                              },
                              children: "Connect wallet",
                            }),
                          ];
                        },
                      });
                    },
                  }),
                  J(dt, {
                    get when() {
                      return s();
                    },
                    get children() {
                      return J(tB, {
                        get children() {
                          return [
                            J(XO, {
                              onClick: () => i((P) => !P),
                              ref: g,
                              "data-tc-dropdown-button": "true",
                              scale: "s",
                              get children() {
                                return [
                                  J(ti, {
                                    fontSize: "15px",
                                    fontWeight: "590",
                                    lineHeight: "18px",
                                    get children() {
                                      return b();
                                    },
                                  }),
                                  J(bS, { direction: "bottom" }),
                                ];
                              },
                            }),
                            J(rS, {
                              get children() {
                                const P = Yn(() => document.importNode(CB, !0));
                                return (
                                  c3(p, P),
                                  P.style.setProperty("z-index", "999"),
                                  (P._$owner = nI()),
                                  ir(
                                    P,
                                    J(hp, {
                                      onBeforeEnter: (_) => {
                                        r2(
                                          _,
                                          [
                                            {
                                              opacity: 0,
                                              transform: "translateY(-8px)",
                                            },
                                            {
                                              opacity: 1,
                                              transform: "translateY(0)",
                                            },
                                          ],
                                          { duration: 150 }
                                        );
                                      },
                                      onExit: (_, T) => {
                                        r2(
                                          _,
                                          [
                                            {
                                              opacity: 1,
                                              transform: "translateY(0)",
                                            },
                                            {
                                              opacity: 0,
                                              transform: "translateY(-8px)",
                                            },
                                          ],
                                          { duration: 150 }
                                        ).finished.then(T);
                                      },
                                      get children() {
                                        return J(dt, {
                                          get when() {
                                            return r();
                                          },
                                          get children() {
                                            return J(nB, {
                                              get hidden() {
                                                return !r();
                                              },
                                              onClose: () => i(!1),
                                              ref(_) {
                                                const T = f;
                                                typeof T == "function"
                                                  ? T(_)
                                                  : (f = _);
                                              },
                                            });
                                          },
                                        });
                                      },
                                    }),
                                    null
                                  ),
                                  ir(P, J(rB, {}), null),
                                  xt(
                                    (_) => {
                                      var T, M;
                                      const L = w.strategy,
                                        O = `${(T = w.y) != null ? T : 0}px`,
                                        U = `${(M = w.x) != null ? M : 0}px`;
                                      return (
                                        L !== _._v$ &&
                                          P.style.setProperty(
                                            "position",
                                            (_._v$ = L)
                                          ),
                                        O !== _._v$2 &&
                                          P.style.setProperty(
                                            "top",
                                            (_._v$2 = O)
                                          ),
                                        U !== _._v$3 &&
                                          P.style.setProperty(
                                            "left",
                                            (_._v$3 = U)
                                          ),
                                        _
                                      );
                                    },
                                    { _v$: void 0, _v$2: void 0, _v$3: void 0 }
                                  ),
                                  P
                                );
                              },
                            }),
                          ];
                        },
                      });
                    },
                  }),
                ];
              },
            }),
          ];
        },
      })
    );
  },
  DS = F1(CS)`
    padding-left: 24px;
    padding-right: 24px;
    padding-top: 18px;
    padding-bottom: 0;

    ${ri("mobile")} {
        padding-left: 0;
        padding-right: 0;

        min-height: 364px;
    }
`,
  FS = F1(x2)`
    margin-top: 12px;

    ${ri("mobile")} {
        padding: 0 10px;
    }
`,
  US = F1.div`
    margin: 30px 0;
    width: 100%;
    display: flex;
    justify-content: center;

    ${ri("mobile")} {
        height: 160px;
        align-items: center;
    }
`;
F1(ti)`
    min-width: 84px;
    text-align: center;
    font-weight: 590;
`;
F1(oN)`
    margin: 0 auto 22px;
`;
const [jt, Dc] = cp({
  buttonRootId: null,
  language: "en",
  returnStrategy: "back",
  twaReturnUrl: void 0,
  walletsListConfiguration: {},
  enableAndroidBackHandler: !0,
});
function EB(e) {
  return [...new Set(e)];
}
function kB(e, t, n) {
  return t
    .map((r) => {
      const i = n.find((s) => s[e] === r[e]);
      return (n = n.filter((s) => s[e] !== r[e])), i === void 0 ? r : i;
    })
    .concat(n);
}
function _B(e) {
  return "jsBridgeKey" in e
    ? Jr(Ft({}, e), {
        injected: Xo.isWalletInjected(e.jsBridgeKey),
        embedded: Xo.isInsideWalletBrowser(e.jsBridgeKey),
      })
    : e;
}
function bp(e, t) {
  var n;
  return (
    t &&
      (n = t.includeWallets) != null &&
      n.length &&
      (e = kB("name", e, t.includeWallets.map(_B))),
    e
  );
}
function Ny(e) {
  return e.platforms.some((t) => ["macos", "linux", "windows"].includes(t));
}
function wl(e) {
  return e.platforms.some((t) => ["ios", "android"].includes(t));
}
function Oy(e) {
  return e.platforms.some((t) => ["chrome", "firefox", "safari"].includes(t));
}
function Rs(e, t) {
  return t
    ? e.name.toLowerCase() === t.toLowerCase() ||
        e.appName.toLowerCase() === t.toLowerCase()
    : !1;
}
const AB = F1.div`
    display: flex;
    flex-direction: column;
    align-items: center;
`,
  TB = F1(x2)`
    margin-bottom: 18px;
`;
F1.div`
    height: 1px;
    margin: 0 -24px;
    width: calc(100% + 48px);
    opacity: 0.12;
    background: ${(e) =>
      e.isShown ? e.theme.colors.icon.secondary : "transparent"};
    transition: background 0.15s ease-in-out;

    ${ri("mobile")} {
        width: 100%;
    }
`;
const PB = F1.ul`
    display: grid;
    grid-template-columns: repeat(auto-fit, 92px);
    grid-template-rows: auto;
    align-content: flex-start;
    justify-content: center;
    row-gap: 8px;
    width: 100%;
    padding: 0 0 16px;
    align-self: flex-start;
    max-width: 400px;
    margin: 0 auto;

    > li {
        display: block;
        height: fit-content;
    }

    ${ri("mobile")} {
        grid-template-columns: repeat(auto-fit, 82px);
    }
`;
F1(Pn)`
    display: block;
    margin: 0 auto 1px;
    font-size: 15px;
`;
const MB = F1(aa)`
    position: absolute;
    top: 16px;
    left: 16px;
`,
  RB = F1(PS)`
    height: 100%;
`,
  LB = Ct("<li></li>"),
  IB = (e) => {
    const t = () => (v3() ? void 0 : 510),
      n = () => (v3() ? e.walletsList.filter(wl) : e.walletsList);
    return J(AB, {
      "data-tc-wallets-modal-list": "true",
      get children() {
        return [
          J(MB, { icon: "arrow", onClick: () => e.onBack() }),
          J(TB, { translationKey: "walletModal.wallets", children: "Wallets" }),
          J(MS, {
            get maxHeight() {
              return t();
            },
            get children() {
              return J(PB, {
                get children() {
                  return J(nu, {
                    get each() {
                      return n();
                    },
                    children: (r) =>
                      (() => {
                        const i = LB.cloneNode(!0);
                        return (
                          ir(
                            i,
                            J(RB, { wallet: r, onClick: () => e.onSelect(r) })
                          ),
                          i
                        );
                      })(),
                  });
                },
              });
            },
          }),
        ];
      },
    });
  },
  jB = { m: "16px", s: "12px", none: "0" },
  NB = { m: "6px", s: "6px", none: "0" },
  OB = F1.div`
    display: flex;
    flex-direction: column;
`,
  BB = F1.div`
    flex: 1;
    margin-top: ${(e) => (e.qr ? "0" : "18px")};
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 232px;
`,
  DB = F1(R4)`
    margin-bottom: 24px;
`,
  FB = F1(x2)`
    max-width: 288px;
    margin: 0 auto 2px;
`,
  UB = F1(Gs)`
    max-width: 288px;
    text-align: center;
    margin: 0 auto 20px;
`,
  $B = F1(aa)`
    position: absolute;
    top: 16px;
    left: 16px;
`,
  ol = F1.div`
    display: flex;
    justify-content: center;
    gap: 8px;
    padding-bottom: 16px;
`,
  VB = F1(ol)`
    padding-bottom: 0;
`,
  g9 = F1(Pn)`
    margin-bottom: 24px;
`,
  WB = F1(rs)`
    margin-bottom: 18px;
    margin-top: 2px;
`,
  zB = F1(L4)`
    margin-bottom: 16px;
`,
  Fc = F1(Gs)`
    color: ${(e) => e.theme.colors.text.secondary};
    text-align: center;
    margin-bottom: 20px;
`,
  HB = F1(Pn)`
    margin-top: -8px;
    margin-bottom: 24px;
    width: 100%;
    padding: 12px 12px 12px 20px;
    border-radius: ${(e) => jB[e.theme.borderRadius]};
    font-size: 16px;
    line-height: 20px;
`,
  qB = F1(oa)`
    width: 32px;
    height: 32px;
    border-radius: ${(e) => NB[e.theme.borderRadius]};
`,
  Kn = (e) => {
    const [t] = b2();
    return ke(() => {
      var n;
      return t(
        e.translationKey,
        e.translationValues,
        (n = e.children) == null ? void 0 : n.toString()
      );
    });
  };
function Wt(e, t) {
  let n;
  typeof t == "string"
    ? (n = t)
    : (n = p2() ? t.twaReturnUrl || t.returnStrategy : "none");
  const r = KB(e, "ret", n);
  if (!js(e)) return r;
  const i = r.slice(r.lastIndexOf("&") + 1);
  return r.slice(0, r.lastIndexOf("&")) + "-" + _C(i);
}
function uu(e, t) {
  t = Ft({}, t);
  const n = GB(e),
    r = new URL(n);
  if (
    (r.searchParams.has("startapp") ||
      r.searchParams.append("startapp", "tonconnect"),
    gS())
  ) {
    t.returnStrategy = "back";
    const i = Wt(r.toString(), t.returnStrategy);
    Qt(i);
  } else if (p2())
    if (Uo("ios", "android", "macos", "tdesktop", "web")) {
      t.returnStrategy = "back";
      const i = Wt(r.toString(), t.returnStrategy);
      F5(i);
    } else Uo("weba") ? F5(Wt(r.toString(), t)) : Qt(Wt(r.toString(), t));
  else if (Ii("ios")) {
    t.returnStrategy === "back" &&
      (vt("safari")
        ? (t.returnStrategy = "back")
        : vt("chrome")
        ? (t.returnStrategy = "googlechrome://")
        : vt("firefox")
        ? (t.returnStrategy = "firefox://")
        : vt("opera")
        ? (t.returnStrategy = "opera-http://")
        : (t.returnStrategy = location.href));
    const i = vt("chrome"),
      s = vt("firefox");
    if ((i || s) && !t.forceRedirect) {
      const l = Wt(r.toString(), t.returnStrategy),
        c = Uc(l);
      Is(c, () => Qt(l));
    } else {
      const l = Wt(r.toString(), t.returnStrategy);
      Qt(l);
    }
  } else if (Ii("android")) {
    t.returnStrategy = "back";
    const i = vt("chrome"),
      s = vt("firefox");
    if ((i || s) && !t.forceRedirect) {
      const l = Wt(r.toString(), t.returnStrategy),
        c = Uc(l);
      Is(c, () => Qt(l));
    } else {
      const l = Wt(r.toString(), t.returnStrategy);
      Qt(l);
    }
  } else if (Ii("ipad")) {
    t.returnStrategy === "back" &&
      (vt("safari")
        ? (t.returnStrategy = "back")
        : vt("chrome")
        ? (t.returnStrategy = "googlechrome://")
        : vt("firefox")
        ? (t.returnStrategy = "firefox://")
        : vt("opera")
        ? (t.returnStrategy = "opera-http://")
        : (t.returnStrategy = location.href));
    const i = vt("chrome"),
      s = vt("firefox"),
      o = (i || s) && !t.forceRedirect,
      l = Wt(r.toString(), t.returnStrategy);
    if (o) {
      const c = Uc(l);
      Is(c, () => Qt(l));
    } else Qt(l);
  } else if (Ii("macos", "windows", "linux")) {
    (t.returnStrategy = "back"), (t.twaReturnUrl = void 0);
    const i = Wt(r.toString(), t.returnStrategy);
    if (t.forceRedirect) Qt(i);
    else {
      const s = Uc(i);
      Is(s, () => Qt(i));
    }
  } else Qt(Wt(r.toString(), t));
}
function cu(e, t, n, r) {
  if (((n = Ft({}, n)), gS()))
    if (Ii("ios", "android"))
      n.returnStrategy === "back" && (n.returnStrategy = "tg://resolve"),
        r("universal-link"),
        ml(Wt(e, n.returnStrategy), "_self");
    else {
      r("universal-link");
      const i = Wt(e, n.returnStrategy);
      Qt(i);
    }
  else if (p2())
    if (Uo("ios", "android")) {
      n.returnStrategy === "back" && (n.returnStrategy = "tg://resolve"),
        r("universal-link");
      const i = Wt(e, n.returnStrategy);
      F5(i, () => {
        r("universal-link"), Qt(i);
      });
    } else if (Uo("macos", "tdesktop")) {
      n.returnStrategy === "back" && (n.returnStrategy = "tg://resolve");
      const i = Wt(e, n.returnStrategy);
      !!t && !n.forceRedirect
        ? (r("custom-deeplink"),
          Is(Nc(i, t), () => {
            r("universal-link"), Qt(i);
          }))
        : (r("universal-link"), Qt(i));
    } else if (Uo("weba")) {
      n.returnStrategy === "back" &&
        (vt("safari")
          ? (n.returnStrategy = location.href)
          : vt("chrome")
          ? (n.returnStrategy = "googlechrome://")
          : vt("firefox")
          ? (n.returnStrategy = "firefox://")
          : vt("opera")
          ? (n.returnStrategy = "opera-http://")
          : (n.returnStrategy = location.href));
      const i = Wt(e, n.returnStrategy);
      !!t && !n.forceRedirect
        ? (r("custom-deeplink"),
          Is(Nc(i, t), () => {
            r("universal-link"), Qt(i);
          }))
        : (r("universal-link"), Qt(i));
    } else if (Uo("web")) {
      n.returnStrategy === "back" &&
        (vt("safari")
          ? (n.returnStrategy = location.href)
          : vt("chrome")
          ? (n.returnStrategy = "googlechrome://")
          : vt("firefox")
          ? (n.returnStrategy = "firefox://")
          : vt("opera")
          ? (n.returnStrategy = "opera-http://")
          : (n.returnStrategy = location.href));
      const i = Wt(e, n.returnStrategy);
      !!t && !n.forceRedirect
        ? (r("custom-deeplink"),
          Is(Nc(i, t), () => {
            r("universal-link"), Qt(i);
          }))
        : (r("universal-link"), Qt(i));
    } else {
      r("universal-link");
      const i = Wt(e, n.returnStrategy);
      Qt(i);
    }
  else if (Ii("ios"))
    n.returnStrategy === "back" &&
      (vt("safari")
        ? (n.returnStrategy = "none")
        : vt("chrome")
        ? (n.returnStrategy = "googlechrome://")
        : vt("firefox")
        ? (n.returnStrategy = "firefox://")
        : vt("opera")
        ? (n.returnStrategy = "opera-http://")
        : (n.returnStrategy = location.href)),
      vt("chrome")
        ? (r("universal-link"), ml(Wt(e, n.returnStrategy), "_self"))
        : (r("universal-link"), Qt(Wt(e, n.returnStrategy)));
  else if (Ii("android"))
    n.returnStrategy === "back" &&
      (vt("chrome")
        ? (n.returnStrategy = "googlechrome://")
        : vt("firefox")
        ? (n.returnStrategy = "firefox://")
        : vt("opera")
        ? (n.returnStrategy = "opera-http://")
        : (n.returnStrategy = location.href)),
      r("universal-link"),
      Qt(Wt(e, n.returnStrategy));
  else if (Ii("ipad"))
    n.returnStrategy === "back" &&
      (vt("safari")
        ? (n.returnStrategy = "none")
        : vt("chrome")
        ? (n.returnStrategy = "googlechrome://")
        : vt("firefox")
        ? (n.returnStrategy = "firefox://")
        : vt("opera")
        ? (n.returnStrategy = "opera-http://")
        : (n.returnStrategy = location.href)),
      vt("chrome")
        ? (r("universal-link"), ml(Wt(e, n.returnStrategy), "_self"))
        : (r("universal-link"), Qt(Wt(e, n.returnStrategy)));
  else if (Ii("macos", "windows", "linux")) {
    n.returnStrategy === "back" &&
      (vt("safari")
        ? (n.returnStrategy = "none")
        : vt("chrome")
        ? (n.returnStrategy = "googlechrome://")
        : vt("firefox")
        ? (n.returnStrategy = "firefox://")
        : vt("opera")
        ? (n.returnStrategy = "opera-http://")
        : (n.returnStrategy = "none"));
    const i = Wt(e, n.returnStrategy);
    !!t && !n.forceRedirect
      ? (r("custom-deeplink"),
        Is(Nc(i, t), () => {
          r("universal-link"), Qt(i);
        }))
      : (r("universal-link"), Qt(i));
  } else r("universal-link"), Qt(Wt(e, n.returnStrategy));
}
function KB(e, t, n) {
  const r = new URL(e);
  return r.searchParams.append(t, n), r.toString();
}
function GB(e) {
  const t = new URL(e);
  return (
    t.searchParams.has("attach") &&
      (t.searchParams.delete("attach"), (t.pathname += "/start")),
    t.toString()
  );
}
function Uc(e) {
  const t = new URL(e),
    [, n, r] = t.pathname.split("/"),
    i = t.searchParams.get("startapp");
  return `tg://resolve?domain=${n}&appname=${r}&startapp=${i}`;
}
const $S = (e) => {
    const [t, n] = et("mobile"),
      [r, i] = et(!1),
      [s, o] = et(),
      [l, c] = et(!0),
      f = Mr(A3),
      d = f.onStatusChange(
        () => {},
        () => {
          e.wallet.appName !== Y2 && i(!0);
        }
      );
    Pr(d);
    const p = () => {
      try {
        const x = f.connect(
          {
            universalLink: e.wallet.universalLink,
            bridgeUrl: e.wallet.bridgeUrl,
          },
          e.additionalRequest
        );
        o(x);
      } catch {}
    };
    Dn(() => {
      Yn(t) !== "extension" && (wl(e.wallet) || Ny(e.wallet)) && p();
    });
    const m = () => {
        i(!1),
          t() === "extension" && p(),
          n("mobile"),
          sr(Jr(Ft({}, e.wallet), { openMethod: "qrcode" }));
      },
      g = () => {
        if ((i(!1), t() === "extension" && p(), n("desktop"), js(s()))) w();
        else {
          const x = !l();
          c(!1),
            cu(
              s(),
              e.wallet.deepLink,
              { returnStrategy: jt.returnStrategy, forceRedirect: x },
              (E) => {
                sr(Jr(Ft({}, e.wallet), { openMethod: E }));
              }
            );
        }
      },
      w = () => {
        const x = !l();
        c(!1),
          sr(Jr(Ft({}, e.wallet), { openMethod: "universal-link" })),
          uu(s(), {
            returnStrategy: jt.returnStrategy,
            twaReturnUrl: jt.twaReturnUrl,
            forceRedirect: x,
          });
      },
      b = () => {
        i(!1),
          n("extension"),
          qo(e.wallet) &&
            (sr(e.wallet),
            f.connect(
              { jsBridgeKey: e.wallet.jsBridgeKey },
              e.additionalRequest
            ));
      };
    return (
      wl(e.wallet) ? m() : Oy(e.wallet) ? b() : g(),
      J(OB, {
        "data-tc-wallets-modal-connection-desktop": "true",
        get children() {
          return [
            J(dt, {
              get when() {
                return !e.backDisabled;
              },
              get children() {
                return J($B, { icon: "arrow", onClick: () => e.onBackClick() });
              },
            }),
            J(FB, {
              get children() {
                return e.wallet.name;
              },
            }),
            J(dt, {
              get when() {
                return t() === "mobile";
              },
              get children() {
                return J(UB, {
                  translationKey: "walletModal.desktopConnectionModal.scanQR",
                  get translationValues() {
                    return { name: e.wallet.name };
                  },
                  get children() {
                    return [
                      "Scan the QR code below with your phone’s or ",
                      ke(() => e.wallet.name),
                      "’s camera",
                    ];
                  },
                });
              },
            }),
            J(BB, {
              get qr() {
                return t() === "mobile";
              },
              get children() {
                return J(ru, {
                  get children() {
                    return [
                      J(rr, {
                        get when() {
                          return t() === "mobile";
                        },
                        get children() {
                          return J(DB, {
                            disableCopy: !1,
                            get sourceUrl() {
                              return Wt(s(), "none");
                            },
                            get imageUrl() {
                              return e.wallet.imageUrl;
                            },
                          });
                        },
                      }),
                      J(rr, {
                        get when() {
                          return r();
                        },
                        get children() {
                          return [
                            J(zB, { size: "s" }),
                            J(Fc, {
                              translationKey:
                                "walletModal.desktopConnectionModal.connectionDeclined",
                              children: "Connection declined",
                            }),
                            J(ol, {
                              get children() {
                                return J(Pn, {
                                  get leftIcon() {
                                    return J(gl, {});
                                  },
                                  get onClick() {
                                    return t() === "extension" ? b : g;
                                  },
                                  get children() {
                                    return J(Kn, {
                                      translationKey: "common.retry",
                                      children: "Retry",
                                    });
                                  },
                                });
                              },
                            }),
                          ];
                        },
                      }),
                      J(rr, {
                        get when() {
                          return t() === "extension";
                        },
                        get children() {
                          return [
                            J(dt, {
                              get when() {
                                return qo(e.wallet);
                              },
                              get children() {
                                return [
                                  J(WB, { size: "s" }),
                                  J(Fc, {
                                    translationKey:
                                      "walletModal.desktopConnectionModal.continueInExtension",
                                    get translationValues() {
                                      return { name: e.wallet.name };
                                    },
                                    get children() {
                                      return [
                                        "Continue in ",
                                        ke(() => e.wallet.name),
                                        " browser extension…",
                                      ];
                                    },
                                  }),
                                  J(ol, {
                                    get children() {
                                      return J(Pn, {
                                        get leftIcon() {
                                          return J(gl, {});
                                        },
                                        onClick: b,
                                        get children() {
                                          return J(Kn, {
                                            translationKey: "common.retry",
                                            children: "Retry",
                                          });
                                        },
                                      });
                                    },
                                  }),
                                ];
                              },
                            }),
                            J(dt, {
                              get when() {
                                return !qo(e.wallet);
                              },
                              get children() {
                                return [
                                  J(Fc, {
                                    translationKey:
                                      "walletModal.desktopConnectionModal.dontHaveExtension",
                                    get translationValues() {
                                      return { name: e.wallet.name };
                                    },
                                    get children() {
                                      return [
                                        "Seems you don't have installed ",
                                        ke(() => e.wallet.name),
                                        " browser extension",
                                      ];
                                    },
                                  }),
                                  J(ol, {
                                    get children() {
                                      return J(qd, {
                                        get href() {
                                          return e.wallet.aboutUrl;
                                        },
                                        blank: !0,
                                        get children() {
                                          return J(Pn, {
                                            get rightIcon() {
                                              return J(Sy, {});
                                            },
                                            onClick: b,
                                            get children() {
                                              return J(Kn, {
                                                translationKey:
                                                  "walletModal.desktopConnectionModal.getWallet",
                                                get translationValues() {
                                                  return {
                                                    name: e.wallet.name,
                                                  };
                                                },
                                                get children() {
                                                  return [
                                                    "Get ",
                                                    ke(() => e.wallet.name),
                                                  ];
                                                },
                                              });
                                            },
                                          });
                                        },
                                      });
                                    },
                                  }),
                                ];
                              },
                            }),
                          ];
                        },
                      }),
                      J(rr, {
                        get when() {
                          return t() === "desktop";
                        },
                        get children() {
                          return [
                            J(rs, { size: "m" }),
                            J(Fc, {
                              translationKey:
                                "walletModal.desktopConnectionModal.continueOnDesktop",
                              get translationValues() {
                                return { name: e.wallet.name };
                              },
                              get children() {
                                return [
                                  "Continue in ",
                                  ke(() => e.wallet.name),
                                  " on desktop…",
                                ];
                              },
                            }),
                            J(ol, {
                              get children() {
                                return [
                                  J(Pn, {
                                    get leftIcon() {
                                      return J(gl, {});
                                    },
                                    onClick: g,
                                    get children() {
                                      return J(Kn, {
                                        translationKey: "common.retry",
                                        children: "Retry",
                                      });
                                    },
                                  }),
                                  J(qd, {
                                    get href() {
                                      return e.wallet.aboutUrl;
                                    },
                                    blank: !0,
                                    get children() {
                                      return J(Pn, {
                                        get rightIcon() {
                                          return J(Sy, {});
                                        },
                                        get children() {
                                          return J(Kn, {
                                            translationKey:
                                              "walletModal.desktopConnectionModal.getWallet",
                                            get translationValues() {
                                              return { name: e.wallet.name };
                                            },
                                            get children() {
                                              return [
                                                "Get ",
                                                ke(() => e.wallet.name),
                                              ];
                                            },
                                          });
                                        },
                                      });
                                    },
                                  }),
                                ];
                              },
                            }),
                          ];
                        },
                      }),
                    ];
                  },
                });
              },
            }),
            J(dt, {
              get when() {
                return e.wallet.appName === Y2;
              },
              get children() {
                return J(HB, {
                  get rightIcon() {
                    return J(qB, {
                      get src() {
                        return lu.TG;
                      },
                    });
                  },
                  scale: "s",
                  onClick: w,
                  get children() {
                    return J(Kn, {
                      translationKey:
                        "walletModal.desktopConnectionModal.openWalletOnTelegram",
                      children: "Open Wallet in Telegram on desktop",
                    });
                  },
                });
              },
            }),
            J(dt, {
              get when() {
                return e.wallet.appName !== Y2;
              },
              get children() {
                return J(VB, {
                  get children() {
                    return [
                      J(dt, {
                        get when() {
                          return ke(() => t() !== "mobile")() && wl(e.wallet);
                        },
                        get children() {
                          return J(g9, {
                            appearance: "secondary",
                            get leftIcon() {
                              return J(JN, {});
                            },
                            onClick: m,
                            get children() {
                              return J(Kn, {
                                translationKey: "common.mobile",
                                children: "Mobile",
                              });
                            },
                          });
                        },
                      }),
                      J(dt, {
                        get when() {
                          return (
                            ke(() => t() !== "extension")() && Oy(e.wallet)
                          );
                        },
                        get children() {
                          return J(g9, {
                            appearance: "secondary",
                            get leftIcon() {
                              return J(ZN, {});
                            },
                            onClick: b,
                            get children() {
                              return J(Kn, {
                                translationKey: "common.browserExtension",
                                children: "Browser Extension",
                              });
                            },
                          });
                        },
                      }),
                      J(dt, {
                        get when() {
                          return ke(() => t() !== "desktop")() && Ny(e.wallet);
                        },
                        get children() {
                          return J(g9, {
                            appearance: "secondary",
                            get leftIcon() {
                              return J(tO, {});
                            },
                            onClick: g,
                            get children() {
                              return J(Kn, {
                                translationKey: "common.desktop",
                                children: "Desktop",
                              });
                            },
                          });
                        },
                      }),
                    ];
                  },
                });
              },
            }),
          ];
        },
      })
    );
  },
  YB = F1.div``,
  QB = F1(aa)`
    position: absolute;
    top: 16px;
    left: 16px;
`,
  ZB = F1(x2)`
    margin-bottom: 18px;
`,
  y9 = F1.div`
    padding: 16px 0;
    display: flex;
    flex-direction: column;
    align-items: center;
`,
  v9 = Z2`
    margin-bottom: 12px;
`,
  w9 = F1(mp)`
    text-align: center;
    margin-bottom: 4px;
`,
  b9 = F1(ti)`
    text-align: center;
    max-width: 352px;
    color: ${(e) => e.theme.colors.text.secondary};
`,
  XB = F1.div`
    padding: 16px 24px 24px;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
`,
  JB = {
    GET_A_WALLET:
      "https://ton.org/wallets?filters[wallet_features][slug][$in]=dapp-auth&pagination[limit]=-1",
  },
  VS = (e) =>
    J(YB, {
      "data-tc-wallets-modal-info": "true",
      get children() {
        return [
          J(QB, { icon: "arrow", onClick: () => e.onBackClick() }),
          J(ZB, {
            translationKey: "walletModal.infoModal.whatIsAWallet",
            children: "What is a wallet",
          }),
          J(MS, {
            get children() {
              return [
                J(y9, {
                  get children() {
                    return [
                      J(aO, { class: v9 }),
                      J(w9, {
                        translationKey:
                          "walletModal.infoModal.secureDigitalAssets",
                        children: "Secure digital assets storage",
                      }),
                      J(b9, {
                        translationKey: "walletModal.infoModal.walletProtects",
                        children:
                          "A wallet protects and manages your digital assets including TON, tokens and collectables.",
                      }),
                    ];
                  },
                }),
                J(y9, {
                  get children() {
                    return [
                      J(uO, { class: v9 }),
                      J(w9, {
                        translationKey: "walletModal.infoModal.controlIdentity",
                        children: "Control your Web3 identity",
                      }),
                      J(b9, {
                        translationKey: "walletModal.infoModal.manageIdentity",
                        children:
                          "Manage your digital identity and access decentralized applications with ease. Maintain control over your data and engage securely in the blockchain ecosystem.",
                      }),
                    ];
                  },
                }),
                J(y9, {
                  get children() {
                    return [
                      J(dO, { class: v9 }),
                      J(w9, {
                        translationKey:
                          "walletModal.infoModal.effortlessCryptoTransactions",
                        children: "Effortless crypto transactions",
                      }),
                      J(b9, {
                        translationKey: "walletModal.infoModal.easilySend",
                        children:
                          "Easily send, receive, monitor your cryptocurrencies. Streamline your operations with decentralized applications.",
                      }),
                    ];
                  },
                }),
                J(XB, {
                  get children() {
                    return J(qd, {
                      get href() {
                        return JB.GET_A_WALLET;
                      },
                      blank: !0,
                      get children() {
                        return J(Pn, {
                          get rightIcon() {
                            return J(sO, {});
                          },
                          get children() {
                            return J(Kn, {
                              translationKey:
                                "walletModal.infoModal.getAWallet",
                              children: "Get a Wallet",
                            });
                          },
                        });
                      },
                    });
                  },
                }),
              ];
            },
          }),
        ];
      },
    }),
  eD = F1.div``,
  tD = F1.div`
    flex: 1;
    margin-top: 18px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 232px;
`,
  nD = F1(x2)`
    max-width: 262px;
    margin: 0 auto 8px;
`,
  rD = F1(aa)`
    position: absolute;
    top: 16px;
    left: 16px;
`,
  iD = F1.div`
    padding: 16px;
    display: flex;
    align-items: center;
    gap: 12px;
    border-top: 0.5px solid ${(e) => iu(e.theme.colors.icon.secondary, 0.2)};
`,
  sD = F1(oa)`
    width: 36px;
    height: 36px;
    border-radius: 10px;
`,
  oD = F1(qd)`
    margin-left: auto;
`,
  aD = F1(rs)`
    margin-bottom: 18px;
    margin-top: 2px;
`,
  lD = F1(L4)`
    margin-bottom: 16px;
`,
  By = F1(Gs)`
    color: ${(e) => e.theme.colors.text.secondary};
    text-align: center;
    margin-bottom: 20px;
`,
  Dy = F1.div`
    display: flex;
    justify-content: center;
    gap: 8px;
    padding-bottom: 16px;
`,
  uD = F1(x2)`
    margin-bottom: 2px;
    padding: 0 64px;
`,
  cD = F1(Gs)`
    margin-bottom: 20px;
    padding: 0 64px;
    min-height: 44px;
`,
  dD = F1.div`
    padding: 0 24px 24px;
`,
  fD = (e) => [
    J(uD, {
      get children() {
        return e.walletInfo.name;
      },
    }),
    J(cD, {
      translationKey: "walletModal.mobileConnectionModal.scanQR",
      get translationValues() {
        return { name: e.walletInfo.name };
      },
      get children() {
        return [
          "Scan the QR code below with your phone’s or ",
          ke(() => e.walletInfo.name),
          "’s camera",
        ];
      },
    }),
    J(dD, {
      get children() {
        return J(R4, {
          get imageUrl() {
            return e.walletInfo.imageUrl;
          },
          get sourceUrl() {
            return Wt(e.universalLink, "none");
          },
          disableCopy: !0,
        });
      },
    }),
  ],
  WS = (e) => {
    const t = Gt(),
      [n, r] = et(!0),
      [i, s] = et(!1),
      [o, l] = et(!1),
      c = Mr(A3),
      f = c.onStatusChange(
        () => {},
        () => {
          l(!0);
        }
      ),
      d = ke(() =>
        c.connect(
          {
            universalLink: e.wallet.universalLink,
            bridgeUrl: e.wallet.bridgeUrl,
          },
          e.additionalRequest
        )
      ),
      p = () => {
        sr(Jr(Ft({}, e.wallet), { openMethod: "universal-link" })),
          uu(d(), {
            returnStrategy: jt.returnStrategy,
            twaReturnUrl: jt.twaReturnUrl,
            forceRedirect: !0,
          });
      },
      m = () => {
        const x = d();
        if (js(x)) return p();
        l(!1);
        const E = !n();
        r(!1),
          cu(
            d(),
            e.wallet.deepLink,
            { returnStrategy: jt.returnStrategy, forceRedirect: E },
            (P) => {
              sr(Jr(Ft({}, e.wallet), { openMethod: P }));
            }
          );
      },
      g = () => {
        l(!1), s(!0), sr(Jr(Ft({}, e.wallet), { openMethod: "qrcode" }));
      },
      w = () => {
        s(!1), sr(Jr(Ft({}, e.wallet), { openMethod: "universal-link" }));
      },
      b = () => {
        i() ? w() : e.onBackClick();
      };
    return (
      Pr(f),
      m(),
      J(eD, {
        "data-tc-wallets-modal-connection-mobile": "true",
        get children() {
          return [
            J(dt, {
              get when() {
                return !e.backDisabled || i();
              },
              get children() {
                return J(rD, { icon: "arrow", onClick: b });
              },
            }),
            J(dt, {
              get when() {
                return i();
              },
              get children() {
                return J(fD, {
                  get universalLink() {
                    return d();
                  },
                  get walletInfo() {
                    return e.wallet;
                  },
                });
              },
            }),
            J(dt, {
              get when() {
                return !i();
              },
              get children() {
                return [
                  J(nD, {
                    get children() {
                      return e.wallet.name;
                    },
                  }),
                  J(tD, {
                    get children() {
                      return [
                        J(dt, {
                          get when() {
                            return o();
                          },
                          get children() {
                            return [
                              J(lD, { size: "s" }),
                              J(By, {
                                translationKey:
                                  "walletModal.mobileConnectionModal.connectionDeclined",
                                children: "Connection declined",
                              }),
                              J(Dy, {
                                get children() {
                                  return [
                                    J(Pn, {
                                      get leftIcon() {
                                        return J(gl, {});
                                      },
                                      onClick: m,
                                      get children() {
                                        return J(Kn, {
                                          translationKey: "common.retry",
                                          children: "Retry",
                                        });
                                      },
                                    }),
                                    J(Pn, {
                                      get leftIcon() {
                                        return J(V5, {
                                          get fill() {
                                            return t.colors.accent;
                                          },
                                        });
                                      },
                                      onClick: g,
                                      get children() {
                                        return J(Kn, {
                                          translationKey:
                                            "walletModal.mobileConnectionModal.showQR",
                                          children: "Show QR Code",
                                        });
                                      },
                                    }),
                                  ];
                                },
                              }),
                            ];
                          },
                        }),
                        J(dt, {
                          get when() {
                            return !o();
                          },
                          get children() {
                            return [
                              J(aD, { size: "s" }),
                              J(By, {
                                translationKey:
                                  "walletModal.mobileConnectionModal.continueIn",
                                get translationValues() {
                                  return { name: e.wallet.name };
                                },
                                get children() {
                                  return [
                                    "Continue in ",
                                    ke(() => e.wallet.name),
                                    "…",
                                  ];
                                },
                              }),
                              J(Dy, {
                                get children() {
                                  return [
                                    J(Pn, {
                                      get leftIcon() {
                                        return J(gl, {});
                                      },
                                      onClick: m,
                                      get children() {
                                        return J(Kn, {
                                          translationKey: "common.retry",
                                          children: "Retry",
                                        });
                                      },
                                    }),
                                    J(Pn, {
                                      get leftIcon() {
                                        return J(V5, {
                                          get fill() {
                                            return t.colors.accent;
                                          },
                                        });
                                      },
                                      onClick: g,
                                      get children() {
                                        return J(Kn, {
                                          translationKey:
                                            "walletModal.mobileConnectionModal.showQR",
                                          children: "Show QR Code",
                                        });
                                      },
                                    }),
                                  ];
                                },
                              }),
                            ];
                          },
                        }),
                      ];
                    },
                  }),
                  J(iD, {
                    get children() {
                      return [
                        J(sD, {
                          get src() {
                            return e.wallet.imageUrl;
                          },
                        }),
                        J(mp, {
                          get children() {
                            return e.wallet.name;
                          },
                        }),
                        J(oD, {
                          get href() {
                            return e.wallet.aboutUrl;
                          },
                          blank: !0,
                          get children() {
                            return J(Pn, {
                              get children() {
                                return J(Kn, {
                                  translationKey: "common.get",
                                  children: "GET",
                                });
                              },
                            });
                          },
                        }),
                      ];
                    },
                  }),
                ];
              },
            }),
          ];
        },
      })
    );
  },
  zS = { m: "16px", s: "12px", none: "0" },
  hD = { m: "6px", s: "6px", none: "0" },
  pD = F1.ul`
    display: flex;
    justify-content: space-between;
    margin: 0 auto;
    width: fit-content;
    max-width: 100%;
    min-width: 100%;
    height: fit-content;
    overflow-x: auto;
    overflow-y: hidden;
    padding: 0 13px 24px;

    &&::-webkit-scrollbar {
        display: none;
    }

    -ms-overflow-style: none;
    scrollbar-width: none;

    > li {
        height: fit-content;
    }
`,
  Fy = F1.li`
    width: 82px;
    min-width: 82px;
    height: 124px;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 8px 4px;

    text-align: center;
    cursor: pointer;

    transition: transform 0.1s ease-in-out;

    ${ou} {
        &:hover {
            transform: scale(1.04);
        }
    }

    &:active {
        transform: scale(0.96);
    }

    ${su} {
        &:active {
            transform: scale(0.92);
        }
    }
`,
  mD = F1.div`
    width: 1px;
    margin: 0 10px;
    height: 24px;
    position: relative;
    top: 26px;

    background-color: ${(e) => e.theme.colors.icon.secondary};
    opacity: 0.2;
`,
  Uy = F1.div`
    width: 60px;
    height: 60px;
    border-radius: ${(e) => zS[e.theme.borderRadius]};
    display: flex;
    align-items: center;
    justify-content: center;

    background-color: ${(e) => e.theme.colors.background.tint};
    margin-bottom: 8px;
`,
  gD = F1(x2)`
    margin-top: 38px;
    margin-bottom: 4px;
    padding: 0 24px;
`,
  yD = F1(Gs)`
    margin-bottom: 24px;
    padding: 0 24px;
    min-height: 44px;
    max-width: ${(e) => e.maxWidth}px;
    margin-left: ${(e) => (e.maxWidth ? "auto" : "0px")};
    margin-right: ${(e) => (e.maxWidth ? "auto" : "0px")};
`;
F1(Pn)`
    display: block;
    margin: 0 auto;
`;
const vD = F1(Pn)`
    margin: 0 24px 24px;
    width: calc(100% - 48px);
    border-radius: ${(e) => zS[e.theme.borderRadius]};
    padding: 14px 16px 14px 14px;
    background-color: ${(e) => e.theme.colors.telegramButton};

    color: ${(e) => e.theme.colors.constant.white};
    font-weight: 510;
    font-size: 16px;
    line-height: 20px;
`,
  wD = F1(oa)`
    background-color: transparent;
    border-radius: ${(e) => hD[e.theme.borderRadius]};
    width: 24px;
    height: 24px;
`,
  $y = F1(aa)`
    position: absolute;
    top: 16px;
    left: 16px;
`,
  bD = F1(x2)`
    margin-bottom: 2px;
    padding: 0 64px;
`,
  xD = F1(Gs)`
    margin-bottom: 20px;
    padding: 0 64px;
`,
  CD = F1.div`
    padding: 0 24px 24px;
`,
  SD = (e) => [
    J(bD, {
      translationKey: "walletModal.mobileUniversalModal.connectYourWallet",
      children: "Connect your wallet",
    }),
    J(xD, {
      translationKey: "walletModal.mobileUniversalModal.scan",
      children: "Scan with your mobile wallet",
    }),
    J(CD, {
      get children() {
        return J(R4, {
          get imageUrl() {
            return lu.TON;
          },
          get sourceUrl() {
            return Wt(e.universalLink, "none");
          },
          disableCopy: !0,
        });
      },
    }),
  ];
function HS(e) {
  const t = new Set(e.filter(X6).map((n) => n.bridgeUrl));
  return Array.from(t).map((n) => ({ bridgeUrl: n }));
}
function qS(e, t) {
  const n = new Set(e == null ? void 0 : e.map((i) => i.bridgeUrl)),
    r = new Set(t == null ? void 0 : t.map((i) => i.bridgeUrl));
  return n.size === r.size && [...n].every((i) => r.has(i));
}
const Vy = Ct("<li></li>"),
  ED = Ct('<div data-tc-wallets-modal-universal-mobile="true"></div>'),
  kD = (e) => {
    const [t, n] = et(!1),
      [r, i] = et(!0),
      [s, o] = et(null),
      l = jt.connector,
      c = () => e.walletsList.filter((_) => wl(_) && _.appName !== Y2),
      f = () => c().length > 7,
      d = ke(() => HS(e.walletsList), null, { equals: qS }),
      p = () => (s() || o(l.connect(d(), e.additionalRequest)), s());
    sr({ openMethod: "universal-link" });
    const [m, g] = et(void 0),
      w = () =>
        Dt(void 0, null, function* () {
          m() !== void 0 && clearTimeout(m()), yield pp(p());
          const _ = setTimeout(() => g(void 0), 1500);
          g(_);
        }),
      b = () => {
        const _ = !r();
        i(!1),
          cu(
            p(),
            void 0,
            { returnStrategy: jt.returnStrategy, forceRedirect: _ },
            (T) => {
              sr({ openMethod: T });
            }
          );
      },
      x = () => {
        o(null);
        const _ = e.walletsList.find((L) => L.appName === Y2);
        if (!_ || !X6(_))
          throw new Tn("@wallet bot not found in the wallets list");
        const T = l.connect(
            { bridgeUrl: _.bridgeUrl, universalLink: _.universalLink },
            e.additionalRequest
          ),
          M = !r();
        i(!1),
          uu(T, {
            returnStrategy: jt.returnStrategy,
            twaReturnUrl: jt.twaReturnUrl,
            forceRedirect: M,
          });
      },
      E = () => {
        n(!0), sr({ openMethod: "qrcode" });
      },
      P = () => {
        n(!1), sr({ openMethod: "universal-link" });
      };
    return (() => {
      const _ = ED.cloneNode(!0);
      return (
        ir(
          _,
          J(dt, {
            get when() {
              return t();
            },
            get children() {
              return [
                J($y, { icon: "arrow", onClick: P }),
                J(SD, {
                  get universalLink() {
                    return p();
                  },
                }),
              ];
            },
          }),
          null
        ),
        ir(
          _,
          J(dt, {
            get when() {
              return !t();
            },
            get children() {
              return [
                J($y, {
                  get icon() {
                    return J(V5, {});
                  },
                  onClick: E,
                }),
                J(gD, {
                  translationKey:
                    "walletModal.mobileUniversalModal.connectYourWallet",
                  children: "Connect your wallet",
                }),
                J(yD, {
                  translationKey:
                    "walletModal.mobileUniversalModal.openWalletOnTelegramOrSelect",
                  maxWidth: 342,
                  children:
                    "Open Wallet in Telegram or select your wallet to connect",
                }),
                J(vD, {
                  get leftIcon() {
                    return J(hO, {});
                  },
                  get rightIcon() {
                    return J(wD, {
                      get src() {
                        return lu.TG;
                      },
                    });
                  },
                  onClick: x,
                  scale: "s",
                  get children() {
                    return J(Kn, {
                      translationKey:
                        "walletModal.mobileUniversalModal.openWalletOnTelegram",
                      children: "Open Wallet in Telegram",
                    });
                  },
                }),
                J(pD, {
                  get children() {
                    return [
                      J(nu, {
                        get each() {
                          return ke(() => !!f())() ? c().slice(0, 4) : c();
                        },
                        children: (T) =>
                          (() => {
                            const M = Vy.cloneNode(!0);
                            return (
                              ir(
                                M,
                                J(zd, {
                                  get icon() {
                                    return T.imageUrl;
                                  },
                                  get name() {
                                    return T.name;
                                  },
                                  onClick: () => e.onSelect(T),
                                })
                              ),
                              M
                            );
                          })(),
                      }),
                      J(dt, {
                        get when() {
                          return f();
                        },
                        get children() {
                          const T = Vy.cloneNode(!0);
                          return (
                            ir(
                              T,
                              J(TS, {
                                labelLine1: "View all",
                                labelLine2: "wallets",
                                get images() {
                                  return c()
                                    .slice(3, 7)
                                    .map((M) => M.imageUrl);
                                },
                                onClick: () => e.onSelectAllWallets(),
                              })
                            ),
                            T
                          );
                        },
                      }),
                      J(mD, { children: " " }),
                      J(Fy, {
                        onClick: b,
                        get children() {
                          return [
                            J(Uy, {
                              get children() {
                                return J(jN, {});
                              },
                            }),
                            J(ti, {
                              fontWeight: 590,
                              translationKey:
                                "walletModal.mobileUniversalModal.openLink",
                              children: "Open Link",
                            }),
                          ];
                        },
                      }),
                      J(Fy, {
                        onClick: w,
                        get children() {
                          return [
                            J(Uy, {
                              get children() {
                                return ke(() => m() !== void 0)()
                                  ? J(mO, {})
                                  : J(AS, {});
                              },
                            }),
                            J(ti, {
                              fontWeight: 590,
                              get translationKey() {
                                return m() !== void 0
                                  ? "common.copied"
                                  : "common.copyLink";
                              },
                              get children() {
                                return m() !== void 0 ? "Copied" : "Copy Link";
                              },
                            }),
                          ];
                        },
                      }),
                    ];
                  },
                }),
              ];
            },
          }),
          null
        ),
        _
      );
    })();
  },
  KS = { m: "16px", s: "8px", none: "0" },
  _D = { m: "8px", s: "4px", none: "0" },
  AD = F1.div`
    display: flex;
    flex-direction: column;
    align-items: center;
    padding-bottom: 16px;
`,
  TD = F1(Gs)`
    max-width: 320px;
    margin-top: 2px;
    margin-bottom: 20px;
`,
  PD = F1(Gs)`
    margin-bottom: 16px;
`,
  MD = F1(R4)`
    margin-bottom: 24px;
`,
  RD = F1.ul`
    display: flex;
`;
F1.div`
    display: flex;
    gap: 16px;
    width: 100%;
`;
F1(Pn)`
    position: relative;
    font-size: 16px;
    line-height: 20px;
    width: 100%;
    padding: 0 16px;
    height: 56px;
    border-radius: ${(e) => KS[e.theme.borderRadius]};

    &:hover {
        ${(e) => (e.disableEventsAnimation ? "transform: unset;" : "")}
    }

    &:active {
        ${(e) => (e.disableEventsAnimation ? "transform: unset;" : "")}
    }
`;
F1.ul`
    position: absolute;
    bottom: 100%;
    left: 0;
    margin: 0;
    padding: 8px;
    width: 188px;
    transform: translateY(-16px);

    background-color: ${(e) => e.theme.colors.background.primary};
    border-radius: ${(e) => KS[e.theme.borderRadius]};
    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.16);
`;
F1.li`
    padding: 8px;

    display: flex;
    align-items: center;
    gap: 8px;

    cursor: pointer;
    border-radius: ${(e) => _D[e.theme.borderRadius]};

    transition: background-color, transform 0.1s ease-in-out;

    &:hover {
        background-color: ${(e) => e.theme.colors.background.secondary};
    }

    &:active {
        transform: scale(0.96);
    }
`;
F1(oa)`
    width: 24px;
    height: 24px;

    border-radius: 6px;
`;
F1.div`
    margin-top: 23px;
    margin-bottom: 1px;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
`;
F1(ti)`
    color: ${(e) => e.theme.colors.text.secondary};
    font-size: 16px;
`;
const LD = Ct("<li></li>"),
  ID = (e) => {
    const [t, n] = et(!1),
      r = jt.connector,
      i = ke(() => HS(e.walletsList), null, { equals: qS });
    sr({ openMethod: "qrcode" });
    const s = ke(() => r.connect(i(), e.additionalRequest));
    return J(AD, {
      onClick: () => n(!1),
      "data-tc-wallets-modal-universal-desktop": "true",
      get children() {
        return [
          J(x2, {
            translationKey:
              "walletModal.desktopUniversalModal.connectYourWallet",
            children: "Connect your wallet",
          }),
          J(TD, {
            translationKey: "walletModal.desktopUniversalModal.scan",
            children: "Scan with your mobile wallet",
          }),
          J(MD, {
            get sourceUrl() {
              return Wt(s(), "none");
            },
            get disableCopy() {
              return t();
            },
            get imageUrl() {
              return lu.TON;
            },
          }),
          J(PD, {
            translationKey:
              "walletModal.desktopUniversalModal.availableWallets",
            children: "Available wallets",
          }),
          J(RD, {
            get children() {
              return [
                J(nu, {
                  get each() {
                    return e.walletsList.slice(0, 3);
                  },
                  children: (o) =>
                    (() => {
                      const l = LD.cloneNode(!0);
                      return (
                        ir(
                          l,
                          J(PS, { wallet: o, onClick: () => e.onSelect(o) })
                        ),
                        l
                      );
                    })(),
                }),
                J(TS, {
                  labelLine1: "View all",
                  labelLine2: "wallets",
                  get images() {
                    return e.walletsList.slice(3, 7).map((o) => o.imageUrl);
                  },
                  onClick: () => e.onSelectAllWallets(),
                }),
              ];
            },
          }),
        ];
      },
    });
  },
  jD = () => {
    const { locale: e } = b2()[1];
    Dn(() => e(jt.language)),
      Dn(() => {
        py() ? Hd() : (s(null), l("universal"), f(!1));
      });
    const t = Mr(A3),
      n = Mr(Ys),
      [r] = eI(() => n.getWallets()),
      [i, s] = et(null),
      [o, l] = et("universal"),
      [c, f] = et(!1),
      d = ke(() => {
        if (r.state !== "ready") return null;
        let P = bp(r(), jt.walletsListConfiguration);
        const _ = P.filter(qo),
          T = P.filter((D) => !qo(D));
        P = (_ || []).concat(T);
        const M = jt.preferredWalletAppName,
          L = P.find((D) => Rs(D, M)),
          O = P.filter((D) => Rs(D, M)).length >= 2;
        M &&
          L &&
          !O &&
          (P = [Jr(Ft({}, L), { isPreferred: !0 })].concat(
            P.filter((D) => !Rs(D, M))
          ));
        const U = P.find((D) => Rs(D, Y2));
        return U && (P = [U].concat(P.filter((D) => !Rs(D, Y2)))), P;
      }),
      p = () => {
        var P;
        return (
          ((P = jt.connectRequestParameters) == null ? void 0 : P.state) ===
          "loading"
        );
      },
      m = ke(() => {
        var P;
        if (!p())
          return (P = jt.connectRequestParameters) == null ? void 0 : P.value;
      }),
      g = (P) => {
        n.closeModal(P);
      },
      w = t.onStatusChange((P) => {
        P && g("wallet-selected");
      }),
      b = () => {
        l("all-wallets");
      },
      x = () => {
        l("universal");
      },
      E = () => {
        s(null);
      };
    return (
      Pr(() => {
        s(null), f(!1);
      }),
      Pr(w),
      J(DS, {
        get opened() {
          return py();
        },
        get enableAndroidBackHandler() {
          return jt.enableAndroidBackHandler;
        },
        onClose: () => g("action-cancelled"),
        onClickQuestion: () => f((P) => !P),
        "data-tc-wallets-modal-container": "true",
        get children() {
          return [
            J(dt, {
              get when() {
                return c();
              },
              get children() {
                return J(VS, { onBackClick: () => f(!1) });
              },
            }),
            J(dt, {
              get when() {
                return !c();
              },
              get children() {
                return [
                  J(dt, {
                    get when() {
                      return p() || !d();
                    },
                    get children() {
                      return [
                        J(FS, {
                          translationKey: "walletModal.loading",
                          children: "Wallets list is loading",
                        }),
                        J(US, {
                          get children() {
                            return J(rs, { size: "m" });
                          },
                        }),
                      ];
                    },
                  }),
                  J(dt, {
                    get when() {
                      return ke(() => !p())() && d();
                    },
                    get children() {
                      return J(ru, {
                        get children() {
                          return [
                            J(rr, {
                              get when() {
                                return i();
                              },
                              get children() {
                                return J(m3, {
                                  get component() {
                                    return v3() ? WS : $S;
                                  },
                                  get wallet() {
                                    return i();
                                  },
                                  get additionalRequest() {
                                    return m();
                                  },
                                  onBackClick: E,
                                });
                              },
                            }),
                            J(rr, {
                              get when() {
                                return o() === "universal";
                              },
                              get children() {
                                return J(m3, {
                                  get component() {
                                    return v3() ? kD : ID;
                                  },
                                  onSelect: s,
                                  get walletsList() {
                                    return d();
                                  },
                                  get additionalRequest() {
                                    return m();
                                  },
                                  onSelectAllWallets: b,
                                });
                              },
                            }),
                            J(rr, {
                              get when() {
                                return o() === "all-wallets";
                              },
                              get children() {
                                return J(IB, {
                                  get walletsList() {
                                    return d();
                                  },
                                  onBack: x,
                                  onSelect: s,
                                });
                              },
                            }),
                          ];
                        },
                      });
                    },
                  }),
                ];
              },
            }),
          ];
        },
      })
    );
  },
  ND = F1.div`
    display: flex;
    flex-direction: column;
    align-items: center;
    padding-bottom: 8px;
`,
  OD = F1(x2)`
    margin-top: 16px;
`,
  BD = F1(ti)`
    font-weight: 510;
    font-size: 16px;
    line-height: 20px;
    text-align: center;
    max-width: 250px;

    color: ${(e) => e.theme.colors.text.secondary};
`,
  DD = F1(Pn)`
    min-width: 112px;
    margin-top: 32px;
`,
  FD = F1(rs)`
    height: 16px;
    width: 16px;
`,
  Wy = F1(Pn)`
    margin-top: 32px;
`,
  xp = (e) => {
    const t = au(e),
      n = Mr(Ys),
      [r, i] = et(!0),
      [s, o] = et(!1);
    Dn(() => {
      const d = H2();
      o(!!d && "sent" in d && d.sent);
    });
    let l;
    n != null &&
      n.wallet &&
      "universalLink" in n.wallet &&
      (n.wallet.openMethod === "universal-link" ||
        (js(n.wallet.universalLink) && p2())) &&
      (l = n.wallet.universalLink);
    let c;
    n != null &&
      n.wallet &&
      "deepLink" in n.wallet &&
      (n.wallet.openMethod === "custom-deeplink" ||
        (js(n.wallet.deepLink) && p2())) &&
      (c = n.wallet.deepLink);
    const f = () => {
      const d = H2(),
        p = "returnStrategy" in d ? d.returnStrategy : jt.returnStrategy,
        m = !r();
      i(!1),
        js(l)
          ? uu(l, {
              returnStrategy: p,
              twaReturnUrl:
                "twaReturnUrl" in d ? d.twaReturnUrl : jt.twaReturnUrl,
              forceRedirect: m,
            })
          : cu(l, c, { returnStrategy: p, forceRedirect: m }, () => {});
    };
    return J(
      ND,
      a2(t, {
        get children() {
          return [
            ke(() => e.icon),
            J(OD, {
              get translationKey() {
                return e.headerTranslationKey;
              },
              get translationValues() {
                return e.headerTranslationValues;
              },
            }),
            J(BD, {
              get translationKey() {
                return e.textTranslationKey;
              },
              get translationValues() {
                return e.textTranslationValues;
              },
            }),
            J(dt, {
              get when() {
                return (
                  !s() &&
                  ((e.showButton === "open-wallet" && l) ||
                    e.showButton !== "open-wallet")
                );
              },
              get children() {
                return J(DD, {
                  disabled: !0,
                  "data-tc-connect-button-loading": "true",
                  get children() {
                    return J(FD, {});
                  },
                });
              },
            }),
            J(dt, {
              get when() {
                return s();
              },
              get children() {
                return [
                  J(dt, {
                    get when() {
                      return e.showButton !== "open-wallet";
                    },
                    get children() {
                      return J(Wy, {
                        onClick: () => e.onClose(),
                        get children() {
                          return J(Kn, {
                            translationKey: "common.close",
                            children: "Close",
                          });
                        },
                      });
                    },
                  }),
                  J(dt, {
                    get when() {
                      return e.showButton === "open-wallet" && l;
                    },
                    get children() {
                      return J(Wy, {
                        onClick: f,
                        get children() {
                          return J(Kn, {
                            translationKey: "common.openWallet",
                            children: "Open wallet",
                          });
                        },
                      });
                    },
                  }),
                ];
              },
            }),
          ];
        },
      })
    );
  },
  UD = (e) => {
    const t = Mr(Ys),
      [n] = b2(),
      r = () =>
        t.wallet && "name" in t.wallet
          ? t.wallet.name
          : n("common.yourWallet", {}, "Your wallet");
    return J(xp, {
      headerTranslationKey: "actionModal.confirmTransaction.header",
      get headerTranslationValues() {
        return { name: r() };
      },
      textTranslationKey: "actionModal.confirmTransaction.text",
      get icon() {
        return J(rs, { size: "m" });
      },
      onClose: () => e.onClose(),
      showButton: "open-wallet",
      "data-tc-confirm-modal": "true",
    });
  },
  $D = (e) =>
    J(xp, {
      headerTranslationKey: "actionModal.transactionCanceled.header",
      textTranslationKey: "actionModal.transactionCanceled.text",
      get icon() {
        return J(L4, { size: "m" });
      },
      onClose: () => e.onClose(),
      "data-tc-transaction-canceled-modal": "true",
    }),
  VD = (e) =>
    J(xp, {
      headerTranslationKey: "actionModal.transactionSent.header",
      textTranslationKey: "actionModal.transactionSent.text",
      get icon() {
        return J(gp, { size: "m" });
      },
      onClose: () => e.onClose(),
      "data-tc-transaction-sent-modal": "true",
    }),
  WD = () =>
    J(CS, {
      get opened() {
        var e;
        return (
          ke(() => H2() !== null)() &&
          ((e = H2()) == null ? void 0 : e.openModal) === !0
        );
      },
      get enableAndroidBackHandler() {
        return jt.enableAndroidBackHandler;
      },
      onClose: () => t3(null),
      "data-tc-actions-modal-container": "true",
      get children() {
        return J(ru, {
          get children() {
            return [
              J(rr, {
                get when() {
                  return H2().name === "transaction-sent";
                },
                get children() {
                  return J(VD, { onClose: () => t3(null) });
                },
              }),
              J(rr, {
                get when() {
                  return H2().name === "transaction-canceled";
                },
                get children() {
                  return J($D, { onClose: () => t3(null) });
                },
              }),
              J(rr, {
                get when() {
                  return H2().name === "confirm-transaction";
                },
                get children() {
                  return J(UD, { onClose: () => t3(null) });
                },
              }),
            ];
          },
        });
      },
    }),
  zD = () => {
    const { locale: e } = b2()[1];
    Dn(() => e(jt.language)),
      Dn(() => {
        gy() && Hd();
      });
    const t = Mr(A3),
      n = Mr(Ys),
      [r, i] = et(!1),
      s = () => {
        var f;
        return (
          ((f = jt.connectRequestParameters) == null ? void 0 : f.state) ===
          "loading"
        );
      },
      o = ke(() => {
        var f;
        if (!s())
          return (f = jt.connectRequestParameters) == null ? void 0 : f.value;
      }),
      l = (f) => {
        n.closeSingleWalletModal(f);
      },
      c = t.onStatusChange((f) => {
        f && l("wallet-selected");
      });
    return (
      Pr(c),
      Pr(() => {
        i(!1);
      }),
      J(DS, {
        get opened() {
          return gy();
        },
        get enableAndroidBackHandler() {
          return jt.enableAndroidBackHandler;
        },
        onClose: () => l("action-cancelled"),
        onClickQuestion: () => i((f) => !f),
        "data-tc-wallets-modal-container": "true",
        get children() {
          return [
            J(dt, {
              get when() {
                return r();
              },
              get children() {
                return J(VS, { onBackClick: () => i(!1) });
              },
            }),
            J(dt, {
              get when() {
                return !r();
              },
              get children() {
                return [
                  J(dt, {
                    get when() {
                      return s();
                    },
                    get children() {
                      return [
                        J(FS, {
                          translationKey: "walletModal.loading",
                          children: "Wallets list is loading",
                        }),
                        J(US, {
                          get children() {
                            return J(rs, { size: "m" });
                          },
                        }),
                      ];
                    },
                  }),
                  J(dt, {
                    get when() {
                      return !s();
                    },
                    get children() {
                      return J(m3, {
                        get component() {
                          return v3() ? WS : $S;
                        },
                        get wallet() {
                          return ej();
                        },
                        get additionalRequest() {
                          return o();
                        },
                        onBackClick: () => {},
                        backDisabled: !0,
                      });
                    },
                  }),
                ];
              },
            }),
          ];
        },
      })
    );
  },
  HD = (e) => {
    const t = vN(yj, jt.language);
    return (
      GI(),
      KI(),
      J(kS.Provider, {
        value: t,
        get children() {
          return J(Ys.Provider, {
            get value() {
              return e.tonConnectUI;
            },
            get children() {
              return J(A3.Provider, {
                get value() {
                  return jt.connector;
                },
                get children() {
                  return [
                    J(FI, {}),
                    J(BI, {
                      theme: kj,
                      get children() {
                        return [
                          J(dt, {
                            get when() {
                              return jt.buttonRootId;
                            },
                            get children() {
                              return J(rS, {
                                get mount() {
                                  return document.getElementById(
                                    jt.buttonRootId
                                  );
                                },
                                get children() {
                                  return J(SB, {});
                                },
                              });
                            },
                          }),
                          J(m3, {
                            component: z2,
                            get children() {
                              return [J(jD, {}), J(zD, {}), J(WD, {})];
                            },
                          }),
                        ];
                      },
                    }),
                  ];
                },
              });
            },
          });
        },
      })
    );
  },
  Zr = {
    openWalletsModal: () =>
      void setTimeout(() => hy({ status: "opened", closeReason: null })),
    closeWalletsModal: (e) =>
      void setTimeout(() => hy({ status: "closed", closeReason: e })),
    openSingleWalletModal: (e) => {
      setTimeout(() =>
        my({ status: "opened", closeReason: null, walletInfo: e })
      );
    },
    closeSingleWalletModal: (e) =>
      void setTimeout(() => my({ status: "closed", closeReason: e })),
    setAction: (e) => void setTimeout(() => t3(e)),
    clearAction: () => void setTimeout(() => t3(null)),
    getSelectedWalletInfo: () => tj(),
    removeSelectedWalletInfo: () => sr(null),
    renderApp: (e, t) =>
      vI(() => J(HD, { tonConnectUI: t }), document.getElementById(e)),
  };
class qD {
  constructor(t) {
    Ke(this, "connector"),
      Ke(this, "setConnectRequestParametersCallback"),
      Ke(this, "consumers", []),
      Ke(this, "tracker"),
      Ke(this, "state", O5()),
      (this.connector = t.connector),
      (this.tracker = t.tracker),
      (this.setConnectRequestParametersCallback =
        t.setConnectRequestParametersCallback),
      Dn(() => {
        const n = O5();
        (this.state = n), this.consumers.forEach((r) => r(n));
      });
  }
  open() {
    return Dt(this, null, function* () {
      this.tracker.trackConnectionStarted();
      const n = (yield this.connector.getWallets()).find(_4);
      return n ? this.connectEmbeddedWallet(n) : this.openWalletsModal();
    });
  }
  close(t = "action-cancelled") {
    t === "action-cancelled" &&
      this.tracker.trackConnectionError("Connection was cancelled"),
      Zr.closeWalletsModal(t);
  }
  onStateChange(t) {
    return (
      this.consumers.push(t),
      () => {
        this.consumers = this.consumers.filter((n) => n !== t);
      }
    );
  }
  connectEmbeddedWallet(t) {
    const n = (i) => {
        sr(t), this.connector.connect({ jsBridgeKey: t.jsBridgeKey }, i);
      },
      r = jt.connectRequestParameters;
    (r == null ? void 0 : r.state) === "loading"
      ? this.setConnectRequestParametersCallback(n)
      : n(r == null ? void 0 : r.value);
  }
  openWalletsModal() {
    return Dt(this, null, function* () {
      return (
        p2() && fp(),
        Zr.openWalletsModal(),
        new Promise((t) => {
          const n = this.onStateChange((r) => {
            const { status: i } = r;
            i === "opened" && (n(), t());
          });
        })
      );
    });
  }
}
class KD {
  constructor(t) {
    Ke(this, "connector"),
      Ke(this, "consumers", []),
      (this.connector = t.connector),
      Dn(() => {
        const n = H2();
        this.consumers.forEach((r) => r(n));
      });
  }
  onStateChange(t) {
    return (
      this.consumers.push(t),
      () => {
        this.consumers = this.consumers.filter((n) => n !== t);
      }
    );
  }
}
class GD {
  constructor(t) {
    Ke(this, "connector"),
      Ke(this, "setConnectRequestParametersCallback"),
      Ke(this, "consumers", []),
      Ke(this, "tracker"),
      Ke(this, "state", Dd()),
      (this.connector = t.connector),
      (this.tracker = t.tracker),
      (this.setConnectRequestParametersCallback =
        t.setConnectRequestParametersCallback),
      Dn(() => {
        const n = Dd();
        (this.state = n), this.consumers.forEach((r) => r(n));
      });
  }
  open(t) {
    return Dt(this, null, function* () {
      this.tracker.trackConnectionStarted();
      const n = yield this.connector.getWallets(),
        r = bp(n, jt.walletsListConfiguration),
        i = r.find(_4);
      if (!!i) return this.connectEmbeddedWallet(i);
      const l = r.filter(X6).find((d) => Rs(d, t));
      if (!!l) return this.openSingleWalletModal(l);
      const f = `Trying to open modal window with unknown wallet "${t}".`;
      throw (this.tracker.trackConnectionError(f), new Tn(f));
    });
  }
  close(t = "action-cancelled") {
    t === "action-cancelled" &&
      this.tracker.trackConnectionError("Connection was cancelled"),
      Zr.closeSingleWalletModal("action-cancelled");
  }
  onStateChange(t) {
    return (
      this.consumers.push(t),
      () => {
        this.consumers = this.consumers.filter((n) => n !== t);
      }
    );
  }
  connectEmbeddedWallet(t) {
    const n = (i) => {
        sr(t), this.connector.connect({ jsBridgeKey: t.jsBridgeKey }, i);
      },
      r = jt.connectRequestParameters;
    (r == null ? void 0 : r.state) === "loading"
      ? this.setConnectRequestParametersCallback(n)
      : n(r == null ? void 0 : r.value);
  }
  openSingleWalletModal(t) {
    return Dt(this, null, function* () {
      return (
        p2() && fp(),
        Zr.openSingleWalletModal(t),
        new Promise((n) => {
          const r = this.onStateChange((i) => {
            const { status: s } = i;
            s === "opened" && (r(), n());
          });
        })
      );
    });
  }
}
class YD {
  constructor(t) {
    Ke(this, "eventPrefix", "ton-connect-ui-"),
      Ke(this, "tonConnectUiVersion"),
      Ke(this, "tonConnectSdkVersion", null),
      Ke(this, "eventDispatcher");
    var n;
    (this.eventDispatcher =
      (n = t == null ? void 0 : t.eventDispatcher) != null ? n : new VC()),
      (this.tonConnectUiVersion = t.tonConnectUiVersion),
      this.init().catch();
  }
  get version() {
    return sa({
      ton_connect_sdk_lib: this.tonConnectSdkVersion,
      ton_connect_ui_lib: this.tonConnectUiVersion,
    });
  }
  init() {
    return Dt(this, null, function* () {
      try {
        yield this.setRequestVersionHandler(),
          (this.tonConnectSdkVersion =
            yield this.requestTonConnectSdkVersion());
      } catch {}
    });
  }
  setRequestVersionHandler() {
    return Dt(this, null, function* () {
      yield this.eventDispatcher.addEventListener(
        "ton-connect-ui-request-version",
        () =>
          Dt(this, null, function* () {
            yield this.eventDispatcher.dispatchEvent(
              "ton-connect-ui-response-version",
              RC(this.tonConnectUiVersion)
            );
          })
      );
    });
  }
  requestTonConnectSdkVersion() {
    return Dt(this, null, function* () {
      return new Promise((t, n) =>
        Dt(this, null, function* () {
          try {
            yield this.eventDispatcher.addEventListener(
              "ton-connect-response-version",
              (r) => {
                t(r.detail.version);
              },
              { once: !0 }
            ),
              yield this.eventDispatcher.dispatchEvent(
                "ton-connect-request-version",
                MC()
              );
          } catch (r) {
            n(r);
          }
        })
      );
    });
  }
  dispatchUserActionEvent(t) {
    var n;
    try {
      (n = this.eventDispatcher) == null ||
        n.dispatchEvent(`${this.eventPrefix}${t.type}`, t).catch();
    } catch {}
  }
  trackConnectionStarted(...t) {
    try {
      const n = LC(this.version, ...t);
      this.dispatchUserActionEvent(n);
    } catch {}
  }
  trackConnectionCompleted(...t) {
    try {
      const n = IC(this.version, ...t);
      this.dispatchUserActionEvent(n);
    } catch {}
  }
  trackConnectionError(...t) {
    try {
      const n = jC(this.version, ...t);
      this.dispatchUserActionEvent(n);
    } catch {}
  }
  trackConnectionRestoringStarted(...t) {
    try {
      const n = NC(this.version, ...t);
      this.dispatchUserActionEvent(n);
    } catch {}
  }
  trackConnectionRestoringCompleted(...t) {
    try {
      const n = OC(this.version, ...t);
      this.dispatchUserActionEvent(n);
    } catch {}
  }
  trackConnectionRestoringError(...t) {
    try {
      const n = BC(this.version, ...t);
      this.dispatchUserActionEvent(n);
    } catch {}
  }
  trackDisconnection(...t) {
    try {
      const n = $C(this.version, ...t);
      this.dispatchUserActionEvent(n);
    } catch {}
  }
  trackTransactionSentForSignature(...t) {
    try {
      const n = DC(this.version, ...t);
      this.dispatchUserActionEvent(n);
    } catch {}
  }
  trackTransactionSigned(...t) {
    try {
      const n = FC(this.version, ...t);
      this.dispatchUserActionEvent(n);
    } catch {}
  }
  trackTransactionSigningFailed(...t) {
    try {
      const n = UC(this.version, ...t);
      this.dispatchUserActionEvent(n);
    } catch {}
  }
}
const QD = "2.0.9";
class ZD {
  constructor(t) {
    if (
      (Ke(this, "walletInfoStorage", new XI()),
      Ke(this, "preferredWalletStorage", new JI()),
      Ke(this, "tracker"),
      Ke(this, "walletInfo", null),
      Ke(this, "systemThemeChangeUnsubscribe", null),
      Ke(this, "actionsConfiguration"),
      Ke(this, "walletsList"),
      Ke(this, "connectRequestParametersCallback"),
      Ke(this, "connector"),
      Ke(this, "modal"),
      Ke(this, "singleWalletModal"),
      Ke(this, "transactionModal"),
      Ke(this, "connectionRestored", Promise.resolve(!1)),
      t && "connector" in t && t.connector)
    )
      this.connector = t.connector;
    else if (t && "manifestUrl" in t && t.manifestUrl)
      this.connector = new Xo({
        manifestUrl: t.manifestUrl,
        eventDispatcher: t == null ? void 0 : t.eventDispatcher,
      });
    else
      throw new Tn(
        "You have to specify a `manifestUrl` or a `connector` in the options."
      );
    (this.tracker = new YD({
      eventDispatcher: t == null ? void 0 : t.eventDispatcher,
      tonConnectUiVersion: QD,
    })),
      (this.modal = new qD({
        connector: this.connector,
        tracker: this.tracker,
        setConnectRequestParametersCallback: (i) => {
          this.connectRequestParametersCallback = i;
        },
      })),
      (this.singleWalletModal = new GD({
        connector: this.connector,
        tracker: this.tracker,
        setConnectRequestParametersCallback: (i) => {
          this.connectRequestParametersCallback = i;
        },
      })),
      (this.transactionModal = new KD({ connector: this.connector })),
      (this.walletsList = this.getWallets()),
      this.walletsList.then((i) => lS(EB(i.map((s) => s.imageUrl))));
    const n = this.normalizeWidgetRoot(t == null ? void 0 : t.widgetRootId);
    this.subscribeToWalletChange(),
      (t == null ? void 0 : t.restoreConnection) !== !1 &&
        (this.connectionRestored = YI(() =>
          Dt(this, null, function* () {
            return (
              this.tracker.trackConnectionRestoringStarted(),
              yield this.connector.restoreConnection(),
              this.connector.connected
                ? this.tracker.trackConnectionRestoringCompleted(this.wallet)
                : (this.tracker.trackConnectionRestoringError(
                    "Connection was not restored"
                  ),
                  this.walletInfoStorage.removeWalletInfo()),
              this.connector.connected
            );
          })
        )),
      (this.uiOptions = Ns(t, { uiPreferences: { theme: "SYSTEM" } }));
    const r = this.preferredWalletStorage.getPreferredWalletAppName();
    Dc({ connector: this.connector, preferredWalletAppName: r }),
      Zr.renderApp(n, this);
  }
  static getWallets() {
    return Xo.getWallets();
  }
  get connected() {
    return this.connector.connected;
  }
  get account() {
    return this.connector.account;
  }
  get wallet() {
    return this.connector.wallet
      ? Ft(Ft({}, this.connector.wallet), this.walletInfo)
      : null;
  }
  set uiOptions(t) {
    var n, r, i, s, o;
    this.checkButtonRootExist(t.buttonRootId),
      (this.actionsConfiguration = t.actionsConfiguration),
      (n = t.uiPreferences) != null && n.theme
        ? ((r = t.uiPreferences) == null ? void 0 : r.theme) !== "SYSTEM"
          ? ((i = this.systemThemeChangeUnsubscribe) == null || i.call(this),
            f9(t.uiPreferences.theme, t.uiPreferences.colorsSet))
          : (f9(WI(), t.uiPreferences.colorsSet),
            this.systemThemeChangeUnsubscribe ||
              (this.systemThemeChangeUnsubscribe = zI(f9)))
        : (s = t.uiPreferences) != null &&
          s.colorsSet &&
          Aj(t.uiPreferences.colorsSet),
      (o = t.uiPreferences) != null &&
        o.borderRadius &&
        _j(t.uiPreferences.borderRadius),
      Dc((l) => {
        var c, f;
        const d = Ns(
          Ft(
            Ft(
              Ft(
                Ft({}, t.language && { language: t.language }),
                !!(
                  (c = t.actionsConfiguration) != null && c.returnStrategy
                ) && { returnStrategy: t.actionsConfiguration.returnStrategy }
              ),
              !!((f = t.actionsConfiguration) != null && f.twaReturnUrl) && {
                twaReturnUrl: t.actionsConfiguration.twaReturnUrl,
              }
            ),
            !!t.walletsListConfiguration && {
              walletsListConfiguration: t.walletsListConfiguration,
            }
          ),
          g3(l)
        );
        return (
          t.buttonRootId !== void 0 && (d.buttonRootId = t.buttonRootId),
          t.enableAndroidBackHandler !== void 0 &&
            (d.enableAndroidBackHandler = t.enableAndroidBackHandler),
          d
        );
      });
  }
  setConnectRequestParameters(t) {
    var n;
    Dc({ connectRequestParameters: t }),
      ((t == null ? void 0 : t.state) === "ready" || !t) &&
        ((n = this.connectRequestParametersCallback) == null ||
          n.call(this, t == null ? void 0 : t.value));
  }
  getWallets() {
    return Dt(this, null, function* () {
      return this.connector.getWallets();
    });
  }
  onStatusChange(t, n) {
    return this.connector.onStatusChange(
      (r) =>
        Dt(this, null, function* () {
          if (r) {
            const i = yield this.getSelectedWalletInfo(r);
            t(Ft(Ft({}, r), i || this.walletInfoStorage.getWalletInfo()));
          } else t(r);
        }),
      n
    );
  }
  openModal() {
    return Dt(this, null, function* () {
      return this.modal.open();
    });
  }
  closeModal(t) {
    this.modal.close(t);
  }
  onModalStateChange(t) {
    return this.modal.onStateChange(t);
  }
  get modalState() {
    return this.modal.state;
  }
  openSingleWalletModal(t) {
    return Dt(this, null, function* () {
      return this.singleWalletModal.open(t);
    });
  }
  closeSingleWalletModal(t) {
    this.singleWalletModal.close(t);
  }
  onSingleWalletModalStateChange(t) {
    return this.singleWalletModal.onStateChange(t);
  }
  get singleWalletModalState() {
    return this.singleWalletModal.state;
  }
  connectWallet() {
    return Dt(this, null, function* () {
      const n = (yield this.getWallets()).find(_4);
      return n
        ? yield this.connectEmbeddedWallet(n)
        : yield this.connectExternalWallet();
    });
  }
  disconnect() {
    return (
      this.tracker.trackDisconnection(this.wallet, "dapp"),
      Zr.clearAction(),
      Zr.removeSelectedWalletInfo(),
      this.walletInfoStorage.removeWalletInfo(),
      this.connector.disconnect()
    );
  }
  sendTransaction(t, n) {
    return Dt(this, null, function* () {
      if (
        (this.tracker.trackTransactionSentForSignature(this.wallet, t),
        !this.connected)
      )
        throw (
          (this.tracker.trackTransactionSigningFailed(
            this.wallet,
            t,
            "Wallet was not connected"
          ),
          new Tn("Connect wallet to send a transaction."))
        );
      p2() && fp();
      const {
        notifications: r,
        modals: i,
        returnStrategy: s,
        twaReturnUrl: o,
        skipRedirectToWallet: l,
      } = this.getModalsAndNotificationsConfiguration(n);
      Zr.setAction({
        name: "confirm-transaction",
        showNotification: r.includes("before"),
        openModal: i.includes("before"),
        sent: !1,
      });
      const c = () => {
          f.signal.aborted ||
            (Zr.setAction({
              name: "confirm-transaction",
              showNotification: r.includes("before"),
              openModal: i.includes("before"),
              sent: !0,
            }),
            this.walletInfo &&
              "universalLink" in this.walletInfo &&
              (this.walletInfo.openMethod === "universal-link" ||
                this.walletInfo.openMethod === "custom-deeplink") &&
              (js(this.walletInfo.universalLink)
                ? uu(this.walletInfo.universalLink, {
                    returnStrategy: s,
                    twaReturnUrl: o || jt.twaReturnUrl,
                    forceRedirect: !1,
                  })
                : cu(
                    this.walletInfo.universalLink,
                    this.walletInfo.deepLink,
                    { returnStrategy: s, forceRedirect: !1 },
                    () => {}
                  )));
        },
        f = new AbortController(),
        d = this.onTransactionModalStateChange((p) => {
          (p != null && p.openModal) || (d(), p || f.abort());
        });
      try {
        const p = yield this.waitForSendTransaction(
          { transaction: t, signal: f.signal },
          c
        );
        return (
          this.tracker.trackTransactionSigned(this.wallet, t, p),
          Zr.setAction({
            name: "transaction-sent",
            showNotification: r.includes("success"),
            openModal: i.includes("success"),
          }),
          p
        );
      } catch (p) {
        throw (
          (Zr.setAction({
            name: "transaction-canceled",
            showNotification: r.includes("error"),
            openModal: i.includes("error"),
          }),
          p instanceof ze
            ? p
            : (console.error(p), new Tn("Unhandled error:" + p)))
        );
      } finally {
        d();
      }
    });
  }
  connectEmbeddedWallet(t) {
    return Dt(this, null, function* () {
      const n = (i) => {
          sr(t), this.connector.connect({ jsBridgeKey: t.jsBridgeKey }, i);
        },
        r = jt.connectRequestParameters;
      return (
        (r == null ? void 0 : r.state) === "loading"
          ? (this.connectRequestParametersCallback = n)
          : n(r == null ? void 0 : r.value),
        yield this.waitForWalletConnection({ ignoreErrors: !1 })
      );
    });
  }
  connectExternalWallet() {
    return Dt(this, null, function* () {
      const t = new AbortController();
      Zr.openWalletsModal();
      const n = this.onModalStateChange((r) => {
        const { status: i, closeReason: s } = r;
        i !== "opened" && (n(), s === "action-cancelled" && t.abort());
      });
      return yield this.waitForWalletConnection({
        ignoreErrors: !0,
        signal: t.signal,
      });
    });
  }
  waitForWalletConnection(t) {
    return Dt(this, null, function* () {
      return new Promise((n, r) => {
        this.tracker.trackConnectionStarted();
        const { ignoreErrors: i = !1, signal: s = null } = t;
        if (s && s.aborted)
          return (
            this.tracker.trackConnectionError("Connection was cancelled"),
            r(new Tn("Wallet was not connected"))
          );
        const o = (f) =>
            Dt(this, null, function* () {
              if (f) this.tracker.trackConnectionCompleted(f), c(), n(f);
              else {
                if (
                  (this.tracker.trackConnectionError(
                    "Connection was cancelled"
                  ),
                  i)
                )
                  return;
                c(), r(new Tn("Wallet was not connected"));
              }
            }),
          l = (f) => {
            this.tracker.trackConnectionError(f.message), !i && (c(), r(f));
          },
          c = this.onStatusChange(
            (f) => o(f),
            (f) => l(f)
          );
        s &&
          s.addEventListener(
            "abort",
            () => {
              c(), r(new Tn("Wallet was not connected"));
            },
            { once: !0 }
          );
      });
    });
  }
  waitForSendTransaction(t, n) {
    return Dt(this, null, function* () {
      return new Promise((r, i) => {
        const { transaction: s, signal: o } = t;
        if (o.aborted)
          return (
            this.tracker.trackTransactionSigningFailed(
              this.wallet,
              s,
              "Transaction was cancelled"
            ),
            i(new Tn("Transaction was not sent"))
          );
        const l = (d) =>
            Dt(this, null, function* () {
              r(d);
            }),
          c = (d) => {
            i(d);
          },
          f = () => {
            this.tracker.trackTransactionSigningFailed(
              this.wallet,
              s,
              "Transaction was cancelled"
            ),
              i(new Tn("Transaction was not sent"));
          };
        o.addEventListener("abort", f, { once: !0 }),
          this.connector
            .sendTransaction(s, { onRequestSent: n, signal: o })
            .then((d) => (o.removeEventListener("abort", f), l(d)))
            .catch((d) => (o.removeEventListener("abort", f), c(d)));
      });
    });
  }
  onTransactionModalStateChange(t) {
    return this.transactionModal.onStateChange(t);
  }
  subscribeToWalletChange() {
    this.connector.onStatusChange((t) =>
      Dt(this, null, function* () {
        var n;
        t
          ? (yield this.updateWalletInfo(t),
            this.setPreferredWalletAppName(
              ((n = this.walletInfo) == null ? void 0 : n.appName) ||
                t.device.appName
            ))
          : this.walletInfoStorage.removeWalletInfo();
      })
    );
  }
  setPreferredWalletAppName(t) {
    this.preferredWalletStorage.setPreferredWalletAppName(t),
      Dc({ preferredWalletAppName: t });
  }
  getSelectedWalletInfo(t) {
    return Dt(this, null, function* () {
      let n = Zr.getSelectedWalletInfo();
      if (!n) return null;
      let r;
      if ("name" in n) r = n;
      else {
        const s = bp(yield this.walletsList, jt.walletsListConfiguration).find(
          (o) => Rs(o, t.device.appName)
        );
        if (!s)
          throw new Tn(
            `Cannot find WalletInfo for the '${t.device.appName}' wallet`
          );
        r = Ft(Ft({}, s), n);
      }
      return r;
    });
  }
  updateWalletInfo(t) {
    return Dt(this, null, function* () {
      const n = yield this.getSelectedWalletInfo(t);
      if (n) {
        (this.walletInfo = n), this.walletInfoStorage.setWalletInfo(n);
        return;
      }
      const r = this.walletInfoStorage.getWalletInfo();
      if (r) {
        this.walletInfo = r;
        return;
      }
      this.walletInfo =
        (yield this.walletsList).find((i) => Rs(i, t.device.appName)) || null;
    });
  }
  normalizeWidgetRoot(t) {
    if (!t || !document.getElementById(t)) {
      t = "tc-widget-root";
      const n = document.createElement("div");
      (n.id = t), document.body.appendChild(n);
    }
    return t;
  }
  checkButtonRootExist(t) {
    if (t != null && !document.getElementById(t))
      throw new Tn(`${t} element not found in the document.`);
  }
  getModalsAndNotificationsConfiguration(t) {
    var n, r, i, s, o, l;
    const c = ["before", "success", "error"];
    let f = c;
    (n = this.actionsConfiguration) != null &&
      n.notifications &&
      ((r = this.actionsConfiguration) == null ? void 0 : r.notifications) !==
        "all" &&
      (f = this.actionsConfiguration.notifications),
      t != null &&
        t.notifications &&
        (t.notifications === "all" ? (f = c) : (f = t.notifications));
    let d = ["before"];
    (i = this.actionsConfiguration) != null &&
      i.modals &&
      (this.actionsConfiguration.modals === "all"
        ? (d = c)
        : (d = this.actionsConfiguration.modals)),
      t != null && t.modals && (t.modals === "all" ? (d = c) : (d = t.modals));
    const p =
        (t == null ? void 0 : t.returnStrategy) ||
        ((s = this.actionsConfiguration) == null ? void 0 : s.returnStrategy) ||
        "back",
      m =
        (t == null ? void 0 : t.twaReturnUrl) ||
        ((o = this.actionsConfiguration) == null ? void 0 : o.twaReturnUrl);
    let g =
      (t == null ? void 0 : t.skipRedirectToWallet) ||
      ((l = this.actionsConfiguration) == null
        ? void 0
        : l.skipRedirectToWallet) ||
      "ios";
    return (
      p2() && (g = "never"),
      {
        notifications: f,
        modals: d,
        returnStrategy: p,
        twaReturnUrl: m,
        skipRedirectToWallet: g,
      }
    );
  }
}
var XD = Object.defineProperty,
  Kd = Object.getOwnPropertySymbols,
  GS = Object.prototype.hasOwnProperty,
  YS = Object.prototype.propertyIsEnumerable,
  zy = (e, t, n) =>
    t in e
      ? XD(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n })
      : (e[t] = n),
  JD = (e, t) => {
    for (var n in t || (t = {})) GS.call(t, n) && zy(e, n, t[n]);
    if (Kd) for (var n of Kd(t)) YS.call(t, n) && zy(e, n, t[n]);
    return e;
  },
  eF = (e, t) => {
    var n = {};
    for (var r in e) GS.call(e, r) && t.indexOf(r) < 0 && (n[r] = e[r]);
    if (e != null && Kd)
      for (var r of Kd(e)) t.indexOf(r) < 0 && YS.call(e, r) && (n[r] = e[r]);
    return n;
  },
  QS = { exports: {} },
  m0 = {};
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var Hy;
function tF() {
  if (Hy) return m0;
  Hy = 1;
  var e = st,
    t = Symbol.for("react.element"),
    n = Symbol.for("react.fragment"),
    r = Object.prototype.hasOwnProperty,
    i = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
    s = { key: !0, ref: !0, __self: !0, __source: !0 };
  function o(l, c, f) {
    var d,
      p = {},
      m = null,
      g = null;
    f !== void 0 && (m = "" + f),
      c.key !== void 0 && (m = "" + c.key),
      c.ref !== void 0 && (g = c.ref);
    for (d in c) r.call(c, d) && !s.hasOwnProperty(d) && (p[d] = c[d]);
    if (l && l.defaultProps)
      for (d in ((c = l.defaultProps), c)) p[d] === void 0 && (p[d] = c[d]);
    return {
      $$typeof: t,
      type: l,
      key: m,
      ref: g,
      props: p,
      _owner: i.current,
    };
  }
  return (m0.Fragment = n), (m0.jsx = o), (m0.jsxs = o), m0;
}
(function (e) {
  e.exports = tF();
})(QS);
const ZS = QS.exports.jsx;
function XS() {
  return typeof window < "u";
}
function nF() {
  return !XS();
}
const JS = N.createContext(null);
let x9 = null;
const rF = (e) => {
    var t = e,
      { children: n } = t,
      r = eF(t, ["children"]);
    return (
      XS() && !x9 && (x9 = new ZD(r)),
      ZS(JS.Provider, { value: x9, children: n })
    );
  },
  iF = N.memo(rF);
class Cp extends Tn {
  constructor(...t) {
    super(...t), Object.setPrototypeOf(this, Cp.prototype);
  }
}
class Sp extends Cp {
  constructor(...t) {
    super(...t), Object.setPrototypeOf(this, Sp.prototype);
  }
}
function sF(e) {
  if (!e)
    throw new Sp(
      "You should add <TonConnectUIProvider> on the top of the app to use TonConnect"
    );
  return !0;
}
function la() {
  const e = N.useContext(JS),
    t = N.useCallback(
      (n) => {
        e && (e.uiOptions = n);
      },
      [e]
    );
  return nF() ? [null, () => {}] : (sF(e), [e, t]);
}
const qy = "ton-connect-button",
  oF = ({ className: e, style: t }) => {
    const [n, r] = la();
    return (
      N.useEffect(
        () => (r({ buttonRootId: qy }), () => r({ buttonRootId: null })),
        [r]
      ),
      ZS("div", {
        id: qy,
        className: e,
        style: JD({ width: "fit-content" }, t),
      })
    );
  };
N.memo(oF);
function aF() {
  const [e] = la(),
    [t, n] = N.useState((e == null ? void 0 : e.wallet) || null);
  return (
    N.useEffect(() => {
      if (e)
        return (
          n(e.wallet),
          e.onStatusChange((r) => {
            n(r);
          })
        );
    }, [e]),
    t
  );
}
function N4(e = !0) {
  const t = aF();
  return N.useMemo(
    () =>
      t
        ? e
          ? ep(t.account.address, t.account.chain === Rl.TESTNET)
          : t.account.address
        : "",
    [
      t,
      e,
      t == null ? void 0 : t.account.address,
      t == null ? void 0 : t.account.chain,
    ]
  );
}
function lF() {
  const [e] = la(),
    [t, n] = N.useState((e == null ? void 0 : e.modal.state) || null);
  return (
    N.useEffect(() => {
      if (e)
        return (
          n(e.modal.state),
          e.onModalStateChange((r) => {
            n(r);
          })
        );
    }, [e]),
    {
      state: t,
      open: () => (e == null ? void 0 : e.modal.open()),
      close: () => (e == null ? void 0 : e.modal.close()),
    }
  );
}
var g0 = {},
  Ky;
function uF() {
  if (Ky) return g0;
  (Ky = 1),
    Object.defineProperty(g0, "__esModule", { value: !0 }),
    (g0.parse = o),
    (g0.serialize = f);
  const e = /^[\u0021-\u003A\u003C\u003E-\u007E]+$/,
    t = /^[\u0021-\u003A\u003C-\u007E]*$/,
    n =
      /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i,
    r = /^[\u0020-\u003A\u003D-\u007E]*$/,
    i = Object.prototype.toString,
    s = (() => {
      const m = function () {};
      return (m.prototype = Object.create(null)), m;
    })();
  function o(m, g) {
    const w = new s(),
      b = m.length;
    if (b < 2) return w;
    const x = (g == null ? void 0 : g.decode) || d;
    let E = 0;
    do {
      const P = m.indexOf("=", E);
      if (P === -1) break;
      const _ = m.indexOf(";", E),
        T = _ === -1 ? b : _;
      if (P > T) {
        E = m.lastIndexOf(";", P - 1) + 1;
        continue;
      }
      const M = l(m, E, P),
        L = c(m, P, M),
        O = m.slice(M, L);
      if (w[O] === void 0) {
        let U = l(m, P + 1, T),
          D = c(m, T, U);
        const H = x(m.slice(U, D));
        w[O] = H;
      }
      E = T + 1;
    } while (E < b);
    return w;
  }
  function l(m, g, w) {
    do {
      const b = m.charCodeAt(g);
      if (b !== 32 && b !== 9) return g;
    } while (++g < w);
    return w;
  }
  function c(m, g, w) {
    for (; g > w; ) {
      const b = m.charCodeAt(--g);
      if (b !== 32 && b !== 9) return g + 1;
    }
    return w;
  }
  function f(m, g, w) {
    const b = (w == null ? void 0 : w.encode) || encodeURIComponent;
    if (!e.test(m)) throw new TypeError(`argument name is invalid: ${m}`);
    const x = b(g);
    if (!t.test(x)) throw new TypeError(`argument val is invalid: ${g}`);
    let E = m + "=" + x;
    if (!w) return E;
    if (w.maxAge !== void 0) {
      if (!Number.isInteger(w.maxAge))
        throw new TypeError(`option maxAge is invalid: ${w.maxAge}`);
      E += "; Max-Age=" + w.maxAge;
    }
    if (w.domain) {
      if (!n.test(w.domain))
        throw new TypeError(`option domain is invalid: ${w.domain}`);
      E += "; Domain=" + w.domain;
    }
    if (w.path) {
      if (!r.test(w.path))
        throw new TypeError(`option path is invalid: ${w.path}`);
      E += "; Path=" + w.path;
    }
    if (w.expires) {
      if (!p(w.expires) || !Number.isFinite(w.expires.valueOf()))
        throw new TypeError(`option expires is invalid: ${w.expires}`);
      E += "; Expires=" + w.expires.toUTCString();
    }
    if (
      (w.httpOnly && (E += "; HttpOnly"),
      w.secure && (E += "; Secure"),
      w.partitioned && (E += "; Partitioned"),
      w.priority)
    )
      switch (
        typeof w.priority == "string" ? w.priority.toLowerCase() : void 0
      ) {
        case "low":
          E += "; Priority=Low";
          break;
        case "medium":
          E += "; Priority=Medium";
          break;
        case "high":
          E += "; Priority=High";
          break;
        default:
          throw new TypeError(`option priority is invalid: ${w.priority}`);
      }
    if (w.sameSite)
      switch (
        typeof w.sameSite == "string" ? w.sameSite.toLowerCase() : w.sameSite
      ) {
        case !0:
        case "strict":
          E += "; SameSite=Strict";
          break;
        case "lax":
          E += "; SameSite=Lax";
          break;
        case "none":
          E += "; SameSite=None";
          break;
        default:
          throw new TypeError(`option sameSite is invalid: ${w.sameSite}`);
      }
    return E;
  }
  function d(m) {
    if (m.indexOf("%") === -1) return m;
    try {
      return decodeURIComponent(m);
    } catch {
      return m;
    }
  }
  function p(m) {
    return i.call(m) === "[object Date]";
  }
  return g0;
}
uF();
/**
 * react-router v7.1.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ var Gy = "popstate";
function cF(e = {}) {
  function t(r, i) {
    let { pathname: s, search: o, hash: l } = r.location;
    return z5(
      "",
      { pathname: s, search: o, hash: l },
      (i.state && i.state.usr) || null,
      (i.state && i.state.key) || "default"
    );
  }
  function n(r, i) {
    return typeof i == "string" ? i : Dl(i);
  }
  return fF(t, n, null, e);
}
function fn(e, t) {
  if (e === !1 || e === null || typeof e > "u") throw new Error(t);
}
function Fi(e, t) {
  if (!e) {
    typeof console < "u" && console.warn(t);
    try {
      throw new Error(t);
    } catch {}
  }
}
function dF() {
  return Math.random().toString(36).substring(2, 10);
}
function Yy(e, t) {
  return { usr: e.state, key: e.key, idx: t };
}
function z5(e, t, n = null, r) {
  return {
    pathname: typeof e == "string" ? e : e.pathname,
    search: "",
    hash: "",
    ...(typeof t == "string" ? T3(t) : t),
    state: n,
    key: (t && t.key) || r || dF(),
  };
}
function Dl({ pathname: e = "/", search: t = "", hash: n = "" }) {
  return (
    t && t !== "?" && (e += t.charAt(0) === "?" ? t : "?" + t),
    n && n !== "#" && (e += n.charAt(0) === "#" ? n : "#" + n),
    e
  );
}
function T3(e) {
  let t = {};
  if (e) {
    let n = e.indexOf("#");
    n >= 0 && ((t.hash = e.substring(n)), (e = e.substring(0, n)));
    let r = e.indexOf("?");
    r >= 0 && ((t.search = e.substring(r)), (e = e.substring(0, r))),
      e && (t.pathname = e);
  }
  return t;
}
function fF(e, t, n, r = {}) {
  let { window: i = document.defaultView, v5Compat: s = !1 } = r,
    o = i.history,
    l = "POP",
    c = null,
    f = d();
  f == null && ((f = 0), o.replaceState({ ...o.state, idx: f }, ""));
  function d() {
    return (o.state || { idx: null }).idx;
  }
  function p() {
    l = "POP";
    let x = d(),
      E = x == null ? null : x - f;
    (f = x), c && c({ action: l, location: b.location, delta: E });
  }
  function m(x, E) {
    l = "PUSH";
    let P = z5(b.location, x, E);
    f = d() + 1;
    let _ = Yy(P, f),
      T = b.createHref(P);
    try {
      o.pushState(_, "", T);
    } catch (M) {
      if (M instanceof DOMException && M.name === "DataCloneError") throw M;
      i.location.assign(T);
    }
    s && c && c({ action: l, location: b.location, delta: 1 });
  }
  function g(x, E) {
    l = "REPLACE";
    let P = z5(b.location, x, E);
    f = d();
    let _ = Yy(P, f),
      T = b.createHref(P);
    o.replaceState(_, "", T),
      s && c && c({ action: l, location: b.location, delta: 0 });
  }
  function w(x) {
    let E = i.location.origin !== "null" ? i.location.origin : i.location.href,
      P = typeof x == "string" ? x : Dl(x);
    return (
      (P = P.replace(/ $/, "%20")),
      fn(
        E,
        `No window.location.(origin|href) available to create URL for href: ${P}`
      ),
      new URL(P, E)
    );
  }
  let b = {
    get action() {
      return l;
    },
    get location() {
      return e(i, o);
    },
    listen(x) {
      if (c) throw new Error("A history only accepts one active listener");
      return (
        i.addEventListener(Gy, p),
        (c = x),
        () => {
          i.removeEventListener(Gy, p), (c = null);
        }
      );
    },
    createHref(x) {
      return t(i, x);
    },
    createURL: w,
    encodeLocation(x) {
      let E = w(x);
      return { pathname: E.pathname, search: E.search, hash: E.hash };
    },
    push: m,
    replace: g,
    go(x) {
      return o.go(x);
    },
  };
  return b;
}
function eE(e, t, n = "/") {
  return hF(e, t, n, !1);
}
function hF(e, t, n, r) {
  let i = typeof t == "string" ? T3(t) : t,
    s = Vs(i.pathname || "/", n);
  if (s == null) return null;
  let o = tE(e);
  pF(o);
  let l = null;
  for (let c = 0; l == null && c < o.length; ++c) {
    let f = kF(s);
    l = SF(o[c], f, r);
  }
  return l;
}
function tE(e, t = [], n = [], r = "") {
  let i = (s, o, l) => {
    let c = {
      relativePath: l === void 0 ? s.path || "" : l,
      caseSensitive: s.caseSensitive === !0,
      childrenIndex: o,
      route: s,
    };
    c.relativePath.startsWith("/") &&
      (fn(
        c.relativePath.startsWith(r),
        `Absolute route path "${c.relativePath}" nested under path "${r}" is not valid. An absolute child route path must start with the combined path of all its parent routes.`
      ),
      (c.relativePath = c.relativePath.slice(r.length)));
    let f = Q2([r, c.relativePath]),
      d = n.concat(c);
    s.children &&
      s.children.length > 0 &&
      (fn(
        s.index !== !0,
        `Index routes must not have child routes. Please remove all child routes from route path "${f}".`
      ),
      tE(s.children, t, d, f)),
      !(s.path == null && !s.index) &&
        t.push({ path: f, score: xF(f, s.index), routesMeta: d });
  };
  return (
    e.forEach((s, o) => {
      var l;
      if (s.path === "" || !((l = s.path) != null && l.includes("?"))) i(s, o);
      else for (let c of nE(s.path)) i(s, o, c);
    }),
    t
  );
}
function nE(e) {
  let t = e.split("/");
  if (t.length === 0) return [];
  let [n, ...r] = t,
    i = n.endsWith("?"),
    s = n.replace(/\?$/, "");
  if (r.length === 0) return i ? [s, ""] : [s];
  let o = nE(r.join("/")),
    l = [];
  return (
    l.push(...o.map((c) => (c === "" ? s : [s, c].join("/")))),
    i && l.push(...o),
    l.map((c) => (e.startsWith("/") && c === "" ? "/" : c))
  );
}
function pF(e) {
  e.sort((t, n) =>
    t.score !== n.score
      ? n.score - t.score
      : CF(
          t.routesMeta.map((r) => r.childrenIndex),
          n.routesMeta.map((r) => r.childrenIndex)
        )
  );
}
var mF = /^:[\w-]+$/,
  gF = 3,
  yF = 2,
  vF = 1,
  wF = 10,
  bF = -2,
  Qy = (e) => e === "*";
function xF(e, t) {
  let n = e.split("/"),
    r = n.length;
  return (
    n.some(Qy) && (r += bF),
    t && (r += yF),
    n
      .filter((i) => !Qy(i))
      .reduce((i, s) => i + (mF.test(s) ? gF : s === "" ? vF : wF), r)
  );
}
function CF(e, t) {
  return e.length === t.length && e.slice(0, -1).every((r, i) => r === t[i])
    ? e[e.length - 1] - t[t.length - 1]
    : 0;
}
function SF(e, t, n = !1) {
  let { routesMeta: r } = e,
    i = {},
    s = "/",
    o = [];
  for (let l = 0; l < r.length; ++l) {
    let c = r[l],
      f = l === r.length - 1,
      d = s === "/" ? t : t.slice(s.length) || "/",
      p = Os(
        { path: c.relativePath, caseSensitive: c.caseSensitive, end: f },
        d
      ),
      m = c.route;
    if (
      (!p &&
        f &&
        n &&
        !r[r.length - 1].route.index &&
        (p = Os(
          { path: c.relativePath, caseSensitive: c.caseSensitive, end: !1 },
          d
        )),
      !p)
    )
      return null;
    Object.assign(i, p.params),
      o.push({
        params: i,
        pathname: Q2([s, p.pathname]),
        pathnameBase: PF(Q2([s, p.pathnameBase])),
        route: m,
      }),
      p.pathnameBase !== "/" && (s = Q2([s, p.pathnameBase]));
  }
  return o;
}
function Os(e, t) {
  typeof e == "string" && (e = { path: e, caseSensitive: !1, end: !0 });
  let [n, r] = EF(e.path, e.caseSensitive, e.end),
    i = t.match(n);
  if (!i) return null;
  let s = i[0],
    o = s.replace(/(.)\/+$/, "$1"),
    l = i.slice(1);
  return {
    params: r.reduce((f, { paramName: d, isOptional: p }, m) => {
      if (d === "*") {
        let w = l[m] || "";
        o = s.slice(0, s.length - w.length).replace(/(.)\/+$/, "$1");
      }
      const g = l[m];
      return (
        p && !g ? (f[d] = void 0) : (f[d] = (g || "").replace(/%2F/g, "/")), f
      );
    }, {}),
    pathname: s,
    pathnameBase: o,
    pattern: e,
  };
}
function EF(e, t = !1, n = !0) {
  Fi(
    e === "*" || !e.endsWith("*") || e.endsWith("/*"),
    `Route path "${e}" will be treated as if it were "${e.replace(
      /\*$/,
      "/*"
    )}" because the \`*\` character must always follow a \`/\` in the pattern. To get rid of this warning, please change the route path to "${e.replace(
      /\*$/,
      "/*"
    )}".`
  );
  let r = [],
    i =
      "^" +
      e
        .replace(/\/*\*?$/, "")
        .replace(/^\/*/, "/")
        .replace(/[\\.*+^${}|()[\]]/g, "\\$&")
        .replace(
          /\/:([\w-]+)(\?)?/g,
          (o, l, c) => (
            r.push({ paramName: l, isOptional: c != null }),
            c ? "/?([^\\/]+)?" : "/([^\\/]+)"
          )
        );
  return (
    e.endsWith("*")
      ? (r.push({ paramName: "*" }),
        (i += e === "*" || e === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$"))
      : n
      ? (i += "\\/*$")
      : e !== "" && e !== "/" && (i += "(?:(?=\\/|$))"),
    [new RegExp(i, t ? void 0 : "i"), r]
  );
}
function kF(e) {
  try {
    return e
      .split("/")
      .map((t) => decodeURIComponent(t).replace(/\//g, "%2F"))
      .join("/");
  } catch (t) {
    return (
      Fi(
        !1,
        `The URL path "${e}" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent encoding (${t}).`
      ),
      e
    );
  }
}
function Vs(e, t) {
  if (t === "/") return e;
  if (!e.toLowerCase().startsWith(t.toLowerCase())) return null;
  let n = t.endsWith("/") ? t.length - 1 : t.length,
    r = e.charAt(n);
  return r && r !== "/" ? null : e.slice(n) || "/";
}
function _F(e, t = "/") {
  let {
    pathname: n,
    search: r = "",
    hash: i = "",
  } = typeof e == "string" ? T3(e) : e;
  return {
    pathname: n ? (n.startsWith("/") ? n : AF(n, t)) : t,
    search: MF(r),
    hash: RF(i),
  };
}
function AF(e, t) {
  let n = t.replace(/\/+$/, "").split("/");
  return (
    e.split("/").forEach((i) => {
      i === ".." ? n.length > 1 && n.pop() : i !== "." && n.push(i);
    }),
    n.length > 1 ? n.join("/") : "/"
  );
}
function C9(e, t, n, r) {
  return `Cannot include a '${e}' character in a manually specified \`to.${t}\` field [${JSON.stringify(
    r
  )}].  Please separate it out to the \`to.${n}\` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.`;
}
function TF(e) {
  return e.filter(
    (t, n) => n === 0 || (t.route.path && t.route.path.length > 0)
  );
}
function Ep(e) {
  let t = TF(e);
  return t.map((n, r) => (r === t.length - 1 ? n.pathname : n.pathnameBase));
}
function kp(e, t, n, r = !1) {
  let i;
  typeof e == "string"
    ? (i = T3(e))
    : ((i = { ...e }),
      fn(
        !i.pathname || !i.pathname.includes("?"),
        C9("?", "pathname", "search", i)
      ),
      fn(
        !i.pathname || !i.pathname.includes("#"),
        C9("#", "pathname", "hash", i)
      ),
      fn(!i.search || !i.search.includes("#"), C9("#", "search", "hash", i)));
  let s = e === "" || i.pathname === "",
    o = s ? "/" : i.pathname,
    l;
  if (o == null) l = n;
  else {
    let p = t.length - 1;
    if (!r && o.startsWith("..")) {
      let m = o.split("/");
      for (; m[0] === ".."; ) m.shift(), (p -= 1);
      i.pathname = m.join("/");
    }
    l = p >= 0 ? t[p] : "/";
  }
  let c = _F(i, l),
    f = o && o !== "/" && o.endsWith("/"),
    d = (s || o === ".") && n.endsWith("/");
  return !c.pathname.endsWith("/") && (f || d) && (c.pathname += "/"), c;
}
var Q2 = (e) => e.join("/").replace(/\/\/+/g, "/"),
  PF = (e) => e.replace(/\/+$/, "").replace(/^\/*/, "/"),
  MF = (e) => (!e || e === "?" ? "" : e.startsWith("?") ? e : "?" + e),
  RF = (e) => (!e || e === "#" ? "" : e.startsWith("#") ? e : "#" + e);
function LF(e) {
  return (
    e != null &&
    typeof e.status == "number" &&
    typeof e.statusText == "string" &&
    typeof e.internal == "boolean" &&
    "data" in e
  );
}
var rE = ["POST", "PUT", "PATCH", "DELETE"];
new Set(rE);
var IF = ["GET", ...rE];
new Set(IF);
var P3 = N.createContext(null);
P3.displayName = "DataRouter";
var O4 = N.createContext(null);
O4.displayName = "DataRouterState";
var iE = N.createContext({ isTransitioning: !1 });
iE.displayName = "ViewTransition";
var jF = N.createContext(new Map());
jF.displayName = "Fetchers";
var NF = N.createContext(null);
NF.displayName = "Await";
var $i = N.createContext(null);
$i.displayName = "Navigation";
var du = N.createContext(null);
du.displayName = "Location";
var xi = N.createContext({ outlet: null, matches: [], isDataRoute: !1 });
xi.displayName = "Route";
var _p = N.createContext(null);
_p.displayName = "RouteError";
function OF(e, { relative: t } = {}) {
  fn(
    M3(),
    "useHref() may be used only in the context of a <Router> component."
  );
  let { basename: n, navigator: r } = N.useContext($i),
    { hash: i, pathname: s, search: o } = hu(e, { relative: t }),
    l = s;
  return (
    n !== "/" && (l = s === "/" ? n : Q2([n, s])),
    r.createHref({ pathname: l, search: o, hash: i })
  );
}
function M3() {
  return N.useContext(du) != null;
}
function Un() {
  return (
    fn(
      M3(),
      "useLocation() may be used only in the context of a <Router> component."
    ),
    N.useContext(du).location
  );
}
var sE =
  "You should call navigate() in a React.useEffect(), not when your component is first rendered.";
function oE(e) {
  N.useContext($i).static || N.useLayoutEffect(e);
}
function or() {
  let { isDataRoute: e } = N.useContext(xi);
  return e ? QF() : BF();
}
function BF() {
  fn(
    M3(),
    "useNavigate() may be used only in the context of a <Router> component."
  );
  let e = N.useContext(P3),
    { basename: t, navigator: n } = N.useContext($i),
    { matches: r } = N.useContext(xi),
    { pathname: i } = Un(),
    s = JSON.stringify(Ep(r)),
    o = N.useRef(!1);
  return (
    oE(() => {
      o.current = !0;
    }),
    N.useCallback(
      (c, f = {}) => {
        if ((Fi(o.current, sE), !o.current)) return;
        if (typeof c == "number") {
          n.go(c);
          return;
        }
        let d = kp(c, JSON.parse(s), i, f.relative === "path");
        e == null &&
          t !== "/" &&
          (d.pathname = d.pathname === "/" ? t : Q2([t, d.pathname])),
          (f.replace ? n.replace : n.push)(d, f.state, f);
      },
      [t, n, s, i, e]
    )
  );
}
var aE = N.createContext(null);
function lE() {
  return N.useContext(aE);
}
function DF(e) {
  let t = N.useContext(xi).outlet;
  return t && N.createElement(aE.Provider, { value: e }, t);
}
function fu() {
  let { matches: e } = N.useContext(xi),
    t = e[e.length - 1];
  return t ? t.params : {};
}
function hu(e, { relative: t } = {}) {
  let { matches: n } = N.useContext(xi),
    { pathname: r } = Un(),
    i = JSON.stringify(Ep(n));
  return N.useMemo(() => kp(e, JSON.parse(i), r, t === "path"), [e, i, r, t]);
}
function FF(e, t) {
  return uE(e, t);
}
function uE(e, t, n, r) {
  var E;
  fn(
    M3(),
    "useRoutes() may be used only in the context of a <Router> component."
  );
  let { navigator: i } = N.useContext($i),
    { matches: s } = N.useContext(xi),
    o = s[s.length - 1],
    l = o ? o.params : {},
    c = o ? o.pathname : "/",
    f = o ? o.pathnameBase : "/",
    d = o && o.route;
  {
    let P = (d && d.path) || "";
    cE(
      c,
      !d || P.endsWith("*") || P.endsWith("*?"),
      `You rendered descendant <Routes> (or called \`useRoutes()\`) at "${c}" (under <Route path="${P}">) but the parent route path has no trailing "*". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.

Please change the parent <Route path="${P}"> to <Route path="${
        P === "/" ? "*" : `${P}/*`
      }">.`
    );
  }
  let p = Un(),
    m;
  if (t) {
    let P = typeof t == "string" ? T3(t) : t;
    fn(
      f === "/" || ((E = P.pathname) == null ? void 0 : E.startsWith(f)),
      `When overriding the location using \`<Routes location>\` or \`useRoutes(routes, location)\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is "${f}" but pathname "${P.pathname}" was given in the \`location\` prop.`
    ),
      (m = P);
  } else m = p;
  let g = m.pathname || "/",
    w = g;
  if (f !== "/") {
    let P = f.replace(/^\//, "").split("/");
    w = "/" + g.replace(/^\//, "").split("/").slice(P.length).join("/");
  }
  let b = eE(e, { pathname: w });
  Fi(
    d || b != null,
    `No routes matched location "${m.pathname}${m.search}${m.hash}" `
  ),
    Fi(
      b == null ||
        b[b.length - 1].route.element !== void 0 ||
        b[b.length - 1].route.Component !== void 0 ||
        b[b.length - 1].route.lazy !== void 0,
      `Matched leaf route at location "${m.pathname}${m.search}${m.hash}" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an "empty" page.`
    );
  let x = zF(
    b &&
      b.map((P) =>
        Object.assign({}, P, {
          params: Object.assign({}, l, P.params),
          pathname: Q2([
            f,
            i.encodeLocation
              ? i.encodeLocation(P.pathname).pathname
              : P.pathname,
          ]),
          pathnameBase:
            P.pathnameBase === "/"
              ? f
              : Q2([
                  f,
                  i.encodeLocation
                    ? i.encodeLocation(P.pathnameBase).pathname
                    : P.pathnameBase,
                ]),
        })
      ),
    s,
    n,
    r
  );
  return t && x
    ? N.createElement(
        du.Provider,
        {
          value: {
            location: {
              pathname: "/",
              search: "",
              hash: "",
              state: null,
              key: "default",
              ...m,
            },
            navigationType: "POP",
          },
        },
        x
      )
    : x;
}
function UF() {
  let e = YF(),
    t = LF(e)
      ? `${e.status} ${e.statusText}`
      : e instanceof Error
      ? e.message
      : JSON.stringify(e),
    n = e instanceof Error ? e.stack : null,
    r = "rgba(200,200,200, 0.5)",
    i = { padding: "0.5rem", backgroundColor: r },
    s = { padding: "2px 4px", backgroundColor: r },
    o = null;
  return (
    console.error("Error handled by React Router default ErrorBoundary:", e),
    (o = N.createElement(
      N.Fragment,
      null,
      N.createElement("p", null, "💿 Hey developer 👋"),
      N.createElement(
        "p",
        null,
        "You can provide a way better UX than this when your app throws errors by providing your own ",
        N.createElement("code", { style: s }, "ErrorBoundary"),
        " or",
        " ",
        N.createElement("code", { style: s }, "errorElement"),
        " prop on your route."
      )
    )),
    N.createElement(
      N.Fragment,
      null,
      N.createElement("h2", null, "Unexpected Application Error!"),
      N.createElement("h3", { style: { fontStyle: "italic" } }, t),
      n ? N.createElement("pre", { style: i }, n) : null,
      o
    )
  );
}
var $F = N.createElement(UF, null),
  VF = class extends N.Component {
    constructor(e) {
      super(e),
        (this.state = {
          location: e.location,
          revalidation: e.revalidation,
          error: e.error,
        });
    }
    static getDerivedStateFromError(e) {
      return { error: e };
    }
    static getDerivedStateFromProps(e, t) {
      return t.location !== e.location ||
        (t.revalidation !== "idle" && e.revalidation === "idle")
        ? { error: e.error, location: e.location, revalidation: e.revalidation }
        : {
            error: e.error !== void 0 ? e.error : t.error,
            location: t.location,
            revalidation: e.revalidation || t.revalidation,
          };
    }
    componentDidCatch(e, t) {
      console.error(
        "React Router caught the following error during render",
        e,
        t
      );
    }
    render() {
      return this.state.error !== void 0
        ? N.createElement(
            xi.Provider,
            { value: this.props.routeContext },
            N.createElement(_p.Provider, {
              value: this.state.error,
              children: this.props.component,
            })
          )
        : this.props.children;
    }
  };
function WF({ routeContext: e, match: t, children: n }) {
  let r = N.useContext(P3);
  return (
    r &&
      r.static &&
      r.staticContext &&
      (t.route.errorElement || t.route.ErrorBoundary) &&
      (r.staticContext._deepestRenderedBoundaryId = t.route.id),
    N.createElement(xi.Provider, { value: e }, n)
  );
}
function zF(e, t = [], n = null, r = null) {
  if (e == null) {
    if (!n) return null;
    if (n.errors) e = n.matches;
    else if (t.length === 0 && !n.initialized && n.matches.length > 0)
      e = n.matches;
    else return null;
  }
  let i = e,
    s = n == null ? void 0 : n.errors;
  if (s != null) {
    let c = i.findIndex(
      (f) => f.route.id && (s == null ? void 0 : s[f.route.id]) !== void 0
    );
    fn(
      c >= 0,
      `Could not find a matching route for errors on route IDs: ${Object.keys(
        s
      ).join(",")}`
    ),
      (i = i.slice(0, Math.min(i.length, c + 1)));
  }
  let o = !1,
    l = -1;
  if (n)
    for (let c = 0; c < i.length; c++) {
      let f = i[c];
      if (
        ((f.route.HydrateFallback || f.route.hydrateFallbackElement) && (l = c),
        f.route.id)
      ) {
        let { loaderData: d, errors: p } = n,
          m =
            f.route.loader &&
            !d.hasOwnProperty(f.route.id) &&
            (!p || p[f.route.id] === void 0);
        if (f.route.lazy || m) {
          (o = !0), l >= 0 ? (i = i.slice(0, l + 1)) : (i = [i[0]]);
          break;
        }
      }
    }
  return i.reduceRight((c, f, d) => {
    let p,
      m = !1,
      g = null,
      w = null;
    n &&
      ((p = s && f.route.id ? s[f.route.id] : void 0),
      (g = f.route.errorElement || $F),
      o &&
        (l < 0 && d === 0
          ? (cE(
              "route-fallback",
              !1,
              "No `HydrateFallback` element provided to render during initial hydration"
            ),
            (m = !0),
            (w = null))
          : l === d &&
            ((m = !0), (w = f.route.hydrateFallbackElement || null))));
    let b = t.concat(i.slice(0, d + 1)),
      x = () => {
        let E;
        return (
          p
            ? (E = g)
            : m
            ? (E = w)
            : f.route.Component
            ? (E = N.createElement(f.route.Component, null))
            : f.route.element
            ? (E = f.route.element)
            : (E = c),
          N.createElement(WF, {
            match: f,
            routeContext: { outlet: c, matches: b, isDataRoute: n != null },
            children: E,
          })
        );
      };
    return n && (f.route.ErrorBoundary || f.route.errorElement || d === 0)
      ? N.createElement(VF, {
          location: n.location,
          revalidation: n.revalidation,
          component: g,
          error: p,
          children: x(),
          routeContext: { outlet: null, matches: b, isDataRoute: !0 },
        })
      : x();
  }, null);
}
function Ap(e) {
  return `${e} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;
}
function HF(e) {
  let t = N.useContext(P3);
  return fn(t, Ap(e)), t;
}
function qF(e) {
  let t = N.useContext(O4);
  return fn(t, Ap(e)), t;
}
function KF(e) {
  let t = N.useContext(xi);
  return fn(t, Ap(e)), t;
}
function Tp(e) {
  let t = KF(e),
    n = t.matches[t.matches.length - 1];
  return (
    fn(
      n.route.id,
      `${e} can only be used on routes that contain a unique "id"`
    ),
    n.route.id
  );
}
function GF() {
  return Tp("useRouteId");
}
function YF() {
  var r;
  let e = N.useContext(_p),
    t = qF("useRouteError"),
    n = Tp("useRouteError");
  return e !== void 0 ? e : (r = t.errors) == null ? void 0 : r[n];
}
function QF() {
  let { router: e } = HF("useNavigate"),
    t = Tp("useNavigate"),
    n = N.useRef(!1);
  return (
    oE(() => {
      n.current = !0;
    }),
    N.useCallback(
      async (i, s = {}) => {
        Fi(n.current, sE),
          n.current &&
            (typeof i == "number"
              ? e.navigate(i)
              : await e.navigate(i, { fromRouteId: t, ...s }));
      },
      [e, t]
    )
  );
}
var Zy = {};
function cE(e, t, n) {
  !t && !Zy[e] && ((Zy[e] = !0), Fi(!1, n));
}
N.memo(ZF);
function ZF({ routes: e, future: t, state: n }) {
  return uE(e, void 0, n, t);
}
function Va({ to: e, replace: t, state: n, relative: r }) {
  fn(
    M3(),
    "<Navigate> may be used only in the context of a <Router> component."
  );
  let { static: i } = N.useContext($i);
  Fi(
    !i,
    "<Navigate> must not be used on the initial render in a <StaticRouter>. This is a no-op, but you should modify your code so the <Navigate> is only ever rendered in response to some user interaction or state change."
  );
  let { matches: s } = N.useContext(xi),
    { pathname: o } = Un(),
    l = or(),
    c = kp(e, Ep(s), o, r === "path"),
    f = JSON.stringify(c);
  return (
    N.useEffect(() => {
      l(JSON.parse(f), { replace: t, state: n, relative: r });
    }, [l, f, r, t, n]),
    null
  );
}
function ua(e) {
  return DF(e.context);
}
function Ut(e) {
  fn(
    !1,
    "A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>."
  );
}
function XF({
  basename: e = "/",
  children: t = null,
  location: n,
  navigationType: r = "POP",
  navigator: i,
  static: s = !1,
}) {
  fn(
    !M3(),
    "You cannot render a <Router> inside another <Router>. You should never have more than one in your app."
  );
  let o = e.replace(/^\/*/, "/"),
    l = N.useMemo(
      () => ({ basename: o, navigator: i, static: s, future: {} }),
      [o, i, s]
    );
  typeof n == "string" && (n = T3(n));
  let {
      pathname: c = "/",
      search: f = "",
      hash: d = "",
      state: p = null,
      key: m = "default",
    } = n,
    g = N.useMemo(() => {
      let w = Vs(c, o);
      return w == null
        ? null
        : {
            location: { pathname: w, search: f, hash: d, state: p, key: m },
            navigationType: r,
          };
    }, [o, c, f, d, p, m, r]);
  return (
    Fi(
      g != null,
      `<Router basename="${o}"> is not able to match the URL "${c}${f}${d}" because it does not start with the basename, so the <Router> won't render anything.`
    ),
    g == null
      ? null
      : N.createElement(
          $i.Provider,
          { value: l },
          N.createElement(du.Provider, { children: t, value: g })
        )
  );
}
function JF({ children: e, location: t }) {
  return FF(H5(e), t);
}
function H5(e, t = []) {
  let n = [];
  return (
    N.Children.forEach(e, (r, i) => {
      if (!N.isValidElement(r)) return;
      let s = [...t, i];
      if (r.type === N.Fragment) {
        n.push.apply(n, H5(r.props.children, s));
        return;
      }
      fn(
        r.type === Ut,
        `[${
          typeof r.type == "string" ? r.type : r.type.name
        }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`
      ),
        fn(
          !r.props.index || !r.props.children,
          "An index route cannot have child routes."
        );
      let o = {
        id: r.props.id || s.join("-"),
        caseSensitive: r.props.caseSensitive,
        element: r.props.element,
        Component: r.props.Component,
        index: r.props.index,
        path: r.props.path,
        loader: r.props.loader,
        action: r.props.action,
        hydrateFallbackElement: r.props.hydrateFallbackElement,
        HydrateFallback: r.props.HydrateFallback,
        errorElement: r.props.errorElement,
        ErrorBoundary: r.props.ErrorBoundary,
        hasErrorBoundary:
          r.props.hasErrorBoundary === !0 ||
          r.props.ErrorBoundary != null ||
          r.props.errorElement != null,
        shouldRevalidate: r.props.shouldRevalidate,
        handle: r.props.handle,
        lazy: r.props.lazy,
      };
      r.props.children && (o.children = H5(r.props.children, s)), n.push(o);
    }),
    n
  );
}
var dd = "get",
  fd = "application/x-www-form-urlencoded";
function B4(e) {
  return e != null && typeof e.tagName == "string";
}
function eU(e) {
  return B4(e) && e.tagName.toLowerCase() === "button";
}
function tU(e) {
  return B4(e) && e.tagName.toLowerCase() === "form";
}
function nU(e) {
  return B4(e) && e.tagName.toLowerCase() === "input";
}
function rU(e) {
  return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey);
}
function iU(e, t) {
  return e.button === 0 && (!t || t === "_self") && !rU(e);
}
var $c = null;
function sU() {
  if ($c === null)
    try {
      new FormData(document.createElement("form"), 0), ($c = !1);
    } catch {
      $c = !0;
    }
  return $c;
}
var oU = new Set([
  "application/x-www-form-urlencoded",
  "multipart/form-data",
  "text/plain",
]);
function S9(e) {
  return e != null && !oU.has(e)
    ? (Fi(
        !1,
        `"${e}" is not a valid \`encType\` for \`<Form>\`/\`<fetcher.Form>\` and will default to "${fd}"`
      ),
      null)
    : e;
}
function aU(e, t) {
  let n, r, i, s, o;
  if (tU(e)) {
    let l = e.getAttribute("action");
    (r = l ? Vs(l, t) : null),
      (n = e.getAttribute("method") || dd),
      (i = S9(e.getAttribute("enctype")) || fd),
      (s = new FormData(e));
  } else if (eU(e) || (nU(e) && (e.type === "submit" || e.type === "image"))) {
    let l = e.form;
    if (l == null)
      throw new Error(
        'Cannot submit a <button> or <input type="submit"> without a <form>'
      );
    let c = e.getAttribute("formaction") || l.getAttribute("action");
    if (
      ((r = c ? Vs(c, t) : null),
      (n = e.getAttribute("formmethod") || l.getAttribute("method") || dd),
      (i =
        S9(e.getAttribute("formenctype")) ||
        S9(l.getAttribute("enctype")) ||
        fd),
      (s = new FormData(l, e)),
      !sU())
    ) {
      let { name: f, type: d, value: p } = e;
      if (d === "image") {
        let m = f ? `${f}.` : "";
        s.append(`${m}x`, "0"), s.append(`${m}y`, "0");
      } else f && s.append(f, p);
    }
  } else {
    if (B4(e))
      throw new Error(
        'Cannot submit element that is not <form>, <button>, or <input type="submit|image">'
      );
    (n = dd), (r = null), (i = fd), (o = e);
  }
  return (
    s && i === "text/plain" && ((o = s), (s = void 0)),
    { action: r, method: n.toLowerCase(), encType: i, formData: s, body: o }
  );
}
function Pp(e, t) {
  if (e === !1 || e === null || typeof e > "u") throw new Error(t);
}
async function lU(e, t) {
  if (e.id in t) return t[e.id];
  try {
    let n = await import(e.module);
    return (t[e.id] = n), n;
  } catch (n) {
    return (
      console.error(
        `Error loading route module \`${e.module}\`, reloading page...`
      ),
      console.error(n),
      window.__reactRouterContext && window.__reactRouterContext.isSpaMode,
      window.location.reload(),
      new Promise(() => {})
    );
  }
}
function uU(e) {
  return e == null
    ? !1
    : e.href == null
    ? e.rel === "preload" &&
      typeof e.imageSrcSet == "string" &&
      typeof e.imageSizes == "string"
    : typeof e.rel == "string" && typeof e.href == "string";
}
async function cU(e, t, n) {
  let r = await Promise.all(
    e.map(async (i) => {
      let s = t.routes[i.route.id];
      if (s) {
        let o = await lU(s, n);
        return o.links ? o.links() : [];
      }
      return [];
    })
  );
  return pU(
    r
      .flat(1)
      .filter(uU)
      .filter((i) => i.rel === "stylesheet" || i.rel === "preload")
      .map((i) =>
        i.rel === "stylesheet"
          ? { ...i, rel: "prefetch", as: "style" }
          : { ...i, rel: "prefetch" }
      )
  );
}
function Xy(e, t, n, r, i, s) {
  let o = (c, f) => (n[f] ? c.route.id !== n[f].route.id : !0),
    l = (c, f) => {
      var d;
      return (
        n[f].pathname !== c.pathname ||
        (((d = n[f].route.path) == null ? void 0 : d.endsWith("*")) &&
          n[f].params["*"] !== c.params["*"])
      );
    };
  return s === "assets"
    ? t.filter((c, f) => o(c, f) || l(c, f))
    : s === "data"
    ? t.filter((c, f) => {
        var p;
        let d = r.routes[c.route.id];
        if (!d || !d.hasLoader) return !1;
        if (o(c, f) || l(c, f)) return !0;
        if (c.route.shouldRevalidate) {
          let m = c.route.shouldRevalidate({
            currentUrl: new URL(i.pathname + i.search + i.hash, window.origin),
            currentParams: ((p = n[0]) == null ? void 0 : p.params) || {},
            nextUrl: new URL(e, window.origin),
            nextParams: c.params,
            defaultShouldRevalidate: !0,
          });
          if (typeof m == "boolean") return m;
        }
        return !0;
      })
    : [];
}
function dU(e, t) {
  return fU(
    e
      .map((n) => {
        let r = t.routes[n.route.id];
        if (!r) return [];
        let i = [r.module];
        return r.imports && (i = i.concat(r.imports)), i;
      })
      .flat(1)
  );
}
function fU(e) {
  return [...new Set(e)];
}
function hU(e) {
  let t = {},
    n = Object.keys(e).sort();
  for (let r of n) t[r] = e[r];
  return t;
}
function pU(e, t) {
  let n = new Set();
  return (
    new Set(t),
    e.reduce((r, i) => {
      let s = JSON.stringify(hU(i));
      return n.has(s) || (n.add(s), r.push({ key: s, link: i })), r;
    }, [])
  );
}
function mU(e) {
  let t =
    typeof e == "string"
      ? new URL(
          e,
          typeof window > "u" ? "server://singlefetch/" : window.location.origin
        )
      : e;
  return (
    t.pathname === "/"
      ? (t.pathname = "_root.data")
      : (t.pathname = `${t.pathname.replace(/\/$/, "")}.data`),
    t
  );
}
function gU() {
  let e = N.useContext(P3);
  return (
    Pp(
      e,
      "You must render this element inside a <DataRouterContext.Provider> element"
    ),
    e
  );
}
function yU() {
  let e = N.useContext(O4);
  return (
    Pp(
      e,
      "You must render this element inside a <DataRouterStateContext.Provider> element"
    ),
    e
  );
}
var Mp = N.createContext(void 0);
Mp.displayName = "FrameworkContext";
function dE() {
  let e = N.useContext(Mp);
  return (
    Pp(e, "You must render this element inside a <HydratedRouter> element"), e
  );
}
function vU(e, t) {
  let n = N.useContext(Mp),
    [r, i] = N.useState(!1),
    [s, o] = N.useState(!1),
    {
      onFocus: l,
      onBlur: c,
      onMouseEnter: f,
      onMouseLeave: d,
      onTouchStart: p,
    } = t,
    m = N.useRef(null);
  N.useEffect(() => {
    if ((e === "render" && o(!0), e === "viewport")) {
      let b = (E) => {
          E.forEach((P) => {
            o(P.isIntersecting);
          });
        },
        x = new IntersectionObserver(b, { threshold: 0.5 });
      return (
        m.current && x.observe(m.current),
        () => {
          x.disconnect();
        }
      );
    }
  }, [e]),
    N.useEffect(() => {
      if (r) {
        let b = setTimeout(() => {
          o(!0);
        }, 100);
        return () => {
          clearTimeout(b);
        };
      }
    }, [r]);
  let g = () => {
      i(!0);
    },
    w = () => {
      i(!1), o(!1);
    };
  return n
    ? e !== "intent"
      ? [s, m, {}]
      : [
          s,
          m,
          {
            onFocus: y0(l, g),
            onBlur: y0(c, w),
            onMouseEnter: y0(f, g),
            onMouseLeave: y0(d, w),
            onTouchStart: y0(p, g),
          },
        ]
    : [!1, m, {}];
}
function y0(e, t) {
  return (n) => {
    e && e(n), n.defaultPrevented || t(n);
  };
}
function wU({ page: e, ...t }) {
  let { router: n } = gU(),
    r = N.useMemo(() => eE(n.routes, e, n.basename), [n.routes, e, n.basename]);
  return r ? N.createElement(xU, { page: e, matches: r, ...t }) : null;
}
function bU(e) {
  let { manifest: t, routeModules: n } = dE(),
    [r, i] = N.useState([]);
  return (
    N.useEffect(() => {
      let s = !1;
      return (
        cU(e, t, n).then((o) => {
          s || i(o);
        }),
        () => {
          s = !0;
        }
      );
    }, [e, t, n]),
    r
  );
}
function xU({ page: e, matches: t, ...n }) {
  let r = Un(),
    { manifest: i, routeModules: s } = dE(),
    { loaderData: o, matches: l } = yU(),
    c = N.useMemo(() => Xy(e, t, l, i, r, "data"), [e, t, l, i, r]),
    f = N.useMemo(() => Xy(e, t, l, i, r, "assets"), [e, t, l, i, r]),
    d = N.useMemo(() => {
      if (e === r.pathname + r.search + r.hash) return [];
      let g = new Set(),
        w = !1;
      if (
        (t.forEach((x) => {
          var P;
          let E = i.routes[x.route.id];
          !E ||
            !E.hasLoader ||
            ((!c.some((_) => _.route.id === x.route.id) &&
              x.route.id in o &&
              (P = s[x.route.id]) != null &&
              P.shouldRevalidate) ||
            E.hasClientLoader
              ? (w = !0)
              : g.add(x.route.id));
        }),
        g.size === 0)
      )
        return [];
      let b = mU(e);
      return (
        w &&
          g.size > 0 &&
          b.searchParams.set(
            "_routes",
            t
              .filter((x) => g.has(x.route.id))
              .map((x) => x.route.id)
              .join(",")
          ),
        [b.pathname + b.search]
      );
    }, [o, r, i, c, t, e, s]),
    p = N.useMemo(() => dU(f, i), [f, i]),
    m = bU(f);
  return N.createElement(
    N.Fragment,
    null,
    d.map((g) =>
      N.createElement("link", {
        key: g,
        rel: "prefetch",
        as: "fetch",
        href: g,
        ...n,
      })
    ),
    p.map((g) =>
      N.createElement("link", { key: g, rel: "modulepreload", href: g, ...n })
    ),
    m.map(({ key: g, link: w }) => N.createElement("link", { key: g, ...w }))
  );
}
function CU(...e) {
  return (t) => {
    e.forEach((n) => {
      typeof n == "function" ? n(t) : n != null && (n.current = t);
    });
  };
}
var fE =
  typeof window < "u" &&
  typeof window.document < "u" &&
  typeof window.document.createElement < "u";
try {
  fE && (window.__reactRouterVersion = "7.1.1");
} catch {}
function SU({ basename: e, children: t, window: n }) {
  let r = N.useRef();
  r.current == null && (r.current = cF({ window: n, v5Compat: !0 }));
  let i = r.current,
    [s, o] = N.useState({ action: i.action, location: i.location }),
    l = N.useCallback(
      (c) => {
        N.startTransition(() => o(c));
      },
      [o]
    );
  return (
    N.useLayoutEffect(() => i.listen(l), [i, l]),
    N.createElement(XF, {
      basename: e,
      children: t,
      location: s.location,
      navigationType: s.action,
      navigator: i,
    })
  );
}
var hE = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,
  pu = N.forwardRef(function (
    {
      onClick: t,
      discover: n = "render",
      prefetch: r = "none",
      relative: i,
      reloadDocument: s,
      replace: o,
      state: l,
      target: c,
      to: f,
      preventScrollReset: d,
      viewTransition: p,
      ...m
    },
    g
  ) {
    let { basename: w } = N.useContext($i),
      b = typeof f == "string" && hE.test(f),
      x,
      E = !1;
    if (typeof f == "string" && b && ((x = f), fE))
      try {
        let D = new URL(window.location.href),
          H = f.startsWith("//") ? new URL(D.protocol + f) : new URL(f),
          $ = Vs(H.pathname, w);
        H.origin === D.origin && $ != null
          ? (f = $ + H.search + H.hash)
          : (E = !0);
      } catch {
        Fi(
          !1,
          `<Link to="${f}"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.`
        );
      }
    let P = OF(f, { relative: i }),
      [_, T, M] = vU(r, m),
      L = _U(f, {
        replace: o,
        state: l,
        target: c,
        preventScrollReset: d,
        relative: i,
        viewTransition: p,
      });
    function O(D) {
      t && t(D), D.defaultPrevented || L(D);
    }
    let U = N.createElement("a", {
      ...m,
      ...M,
      href: x || P,
      onClick: E || s ? t : O,
      ref: CU(g, T),
      target: c,
      "data-discover": !b && n === "render" ? "true" : void 0,
    });
    return _ && !b
      ? N.createElement(N.Fragment, null, U, N.createElement(wU, { page: P }))
      : U;
  });
pu.displayName = "Link";
var R3 = N.forwardRef(function (
  {
    "aria-current": t = "page",
    caseSensitive: n = !1,
    className: r = "",
    end: i = !1,
    style: s,
    to: o,
    viewTransition: l,
    children: c,
    ...f
  },
  d
) {
  let p = hu(o, { relative: f.relative }),
    m = Un(),
    g = N.useContext(O4),
    { navigator: w, basename: b } = N.useContext($i),
    x = g != null && RU(p) && l === !0,
    E = w.encodeLocation ? w.encodeLocation(p).pathname : p.pathname,
    P = m.pathname,
    _ =
      g && g.navigation && g.navigation.location
        ? g.navigation.location.pathname
        : null;
  n ||
    ((P = P.toLowerCase()),
    (_ = _ ? _.toLowerCase() : null),
    (E = E.toLowerCase())),
    _ && b && (_ = Vs(_, b) || _);
  const T = E !== "/" && E.endsWith("/") ? E.length - 1 : E.length;
  let M = P === E || (!i && P.startsWith(E) && P.charAt(T) === "/"),
    L =
      _ != null &&
      (_ === E || (!i && _.startsWith(E) && _.charAt(E.length) === "/")),
    O = { isActive: M, isPending: L, isTransitioning: x },
    U = M ? t : void 0,
    D;
  typeof r == "function"
    ? (D = r(O))
    : (D = [
        r,
        M ? "active" : null,
        L ? "pending" : null,
        x ? "transitioning" : null,
      ]
        .filter(Boolean)
        .join(" "));
  let H = typeof s == "function" ? s(O) : s;
  return N.createElement(
    pu,
    {
      ...f,
      "aria-current": U,
      className: D,
      ref: d,
      style: H,
      to: o,
      viewTransition: l,
    },
    typeof c == "function" ? c(O) : c
  );
});
R3.displayName = "NavLink";
var EU = N.forwardRef(
  (
    {
      discover: e = "render",
      fetcherKey: t,
      navigate: n,
      reloadDocument: r,
      replace: i,
      state: s,
      method: o = dd,
      action: l,
      onSubmit: c,
      relative: f,
      preventScrollReset: d,
      viewTransition: p,
      ...m
    },
    g
  ) => {
    let w = PU(),
      b = MU(l, { relative: f }),
      x = o.toLowerCase() === "get" ? "get" : "post",
      E = typeof l == "string" && hE.test(l),
      P = (_) => {
        if ((c && c(_), _.defaultPrevented)) return;
        _.preventDefault();
        let T = _.nativeEvent.submitter,
          M = (T == null ? void 0 : T.getAttribute("formmethod")) || o;
        w(T || _.currentTarget, {
          fetcherKey: t,
          method: M,
          navigate: n,
          replace: i,
          state: s,
          relative: f,
          preventScrollReset: d,
          viewTransition: p,
        });
      };
    return N.createElement("form", {
      ref: g,
      method: x,
      action: b,
      onSubmit: r ? c : P,
      ...m,
      "data-discover": !E && e === "render" ? "true" : void 0,
    });
  }
);
EU.displayName = "Form";
function kU(e) {
  return `${e} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;
}
function pE(e) {
  let t = N.useContext(P3);
  return fn(t, kU(e)), t;
}
function _U(
  e,
  {
    target: t,
    replace: n,
    state: r,
    preventScrollReset: i,
    relative: s,
    viewTransition: o,
  } = {}
) {
  let l = or(),
    c = Un(),
    f = hu(e, { relative: s });
  return N.useCallback(
    (d) => {
      if (iU(d, t)) {
        d.preventDefault();
        let p = n !== void 0 ? n : Dl(c) === Dl(f);
        l(e, {
          replace: p,
          state: r,
          preventScrollReset: i,
          relative: s,
          viewTransition: o,
        });
      }
    },
    [c, l, f, n, r, t, e, i, s, o]
  );
}
var AU = 0,
  TU = () => `__${String(++AU)}__`;
function PU() {
  let { router: e } = pE("useSubmit"),
    { basename: t } = N.useContext($i),
    n = GF();
  return N.useCallback(
    async (r, i = {}) => {
      let { action: s, method: o, encType: l, formData: c, body: f } = aU(r, t);
      if (i.navigate === !1) {
        let d = i.fetcherKey || TU();
        await e.fetch(d, n, i.action || s, {
          preventScrollReset: i.preventScrollReset,
          formData: c,
          body: f,
          formMethod: i.method || o,
          formEncType: i.encType || l,
          flushSync: i.flushSync,
        });
      } else
        await e.navigate(i.action || s, {
          preventScrollReset: i.preventScrollReset,
          formData: c,
          body: f,
          formMethod: i.method || o,
          formEncType: i.encType || l,
          replace: i.replace,
          state: i.state,
          fromRouteId: n,
          flushSync: i.flushSync,
          viewTransition: i.viewTransition,
        });
    },
    [e, t, n]
  );
}
function MU(e, { relative: t } = {}) {
  let { basename: n } = N.useContext($i),
    r = N.useContext(xi);
  fn(r, "useFormAction must be used inside a RouteContext");
  let [i] = r.matches.slice(-1),
    s = { ...hu(e || ".", { relative: t }) },
    o = Un();
  if (e == null) {
    s.search = o.search;
    let l = new URLSearchParams(s.search),
      c = l.getAll("index");
    if (c.some((d) => d === "")) {
      l.delete("index"),
        c.filter((p) => p).forEach((p) => l.append("index", p));
      let d = l.toString();
      s.search = d ? `?${d}` : "";
    }
  }
  return (
    (!e || e === ".") &&
      i.route.index &&
      (s.search = s.search ? s.search.replace(/^\?/, "?index&") : "?index"),
    n !== "/" && (s.pathname = s.pathname === "/" ? n : Q2([n, s.pathname])),
    Dl(s)
  );
}
function RU(e, t = {}) {
  let n = N.useContext(iE);
  fn(
    n != null,
    "`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?"
  );
  let { basename: r } = pE("useViewTransitionState"),
    i = hu(e, { relative: t.relative });
  if (!n.isTransitioning) return !1;
  let s = Vs(n.currentLocation.pathname, r) || n.currentLocation.pathname,
    o = Vs(n.nextLocation.pathname, r) || n.nextLocation.pathname;
  return Os(i.pathname, o) != null || Os(i.pathname, s) != null;
}
new TextEncoder();
function Jn(e) {
  return `Minified Redux error #${e}; visit https://redux.js.org/Errors?code=${e} for the full message or use the non-minified dev environment for full errors. `;
}
var LU = (typeof Symbol == "function" && Symbol.observable) || "@@observable",
  Jy = LU,
  E9 = () => Math.random().toString(36).substring(7).split("").join("."),
  IU = {
    INIT: `@@redux/INIT${E9()}`,
    REPLACE: `@@redux/REPLACE${E9()}`,
    PROBE_UNKNOWN_ACTION: () => `@@redux/PROBE_UNKNOWN_ACTION${E9()}`,
  },
  Gd = IU;
function w3(e) {
  if (typeof e != "object" || e === null) return !1;
  let t = e;
  for (; Object.getPrototypeOf(t) !== null; ) t = Object.getPrototypeOf(t);
  return Object.getPrototypeOf(e) === t || Object.getPrototypeOf(e) === null;
}
function mE(e, t, n) {
  if (typeof e != "function") throw new Error(Jn(2));
  if (
    (typeof t == "function" && typeof n == "function") ||
    (typeof n == "function" && typeof arguments[3] == "function")
  )
    throw new Error(Jn(0));
  if (
    (typeof t == "function" && typeof n > "u" && ((n = t), (t = void 0)),
    typeof n < "u")
  ) {
    if (typeof n != "function") throw new Error(Jn(1));
    return n(mE)(e, t);
  }
  let r = e,
    i = t,
    s = new Map(),
    o = s,
    l = 0,
    c = !1;
  function f() {
    o === s &&
      ((o = new Map()),
      s.forEach((x, E) => {
        o.set(E, x);
      }));
  }
  function d() {
    if (c) throw new Error(Jn(3));
    return i;
  }
  function p(x) {
    if (typeof x != "function") throw new Error(Jn(4));
    if (c) throw new Error(Jn(5));
    let E = !0;
    f();
    const P = l++;
    return (
      o.set(P, x),
      function () {
        if (E) {
          if (c) throw new Error(Jn(6));
          (E = !1), f(), o.delete(P), (s = null);
        }
      }
    );
  }
  function m(x) {
    if (!w3(x)) throw new Error(Jn(7));
    if (typeof x.type > "u") throw new Error(Jn(8));
    if (typeof x.type != "string") throw new Error(Jn(17));
    if (c) throw new Error(Jn(9));
    try {
      (c = !0), (i = r(i, x));
    } finally {
      c = !1;
    }
    return (
      (s = o).forEach((P) => {
        P();
      }),
      x
    );
  }
  function g(x) {
    if (typeof x != "function") throw new Error(Jn(10));
    (r = x), m({ type: Gd.REPLACE });
  }
  function w() {
    const x = p;
    return {
      subscribe(E) {
        if (typeof E != "object" || E === null) throw new Error(Jn(11));
        function P() {
          const T = E;
          T.next && T.next(d());
        }
        return P(), { unsubscribe: x(P) };
      },
      [Jy]() {
        return this;
      },
    };
  }
  return (
    m({ type: Gd.INIT }),
    { dispatch: m, subscribe: p, getState: d, replaceReducer: g, [Jy]: w }
  );
}
function jU(e) {
  Object.keys(e).forEach((t) => {
    const n = e[t];
    if (typeof n(void 0, { type: Gd.INIT }) > "u") throw new Error(Jn(12));
    if (typeof n(void 0, { type: Gd.PROBE_UNKNOWN_ACTION() }) > "u")
      throw new Error(Jn(13));
  });
}
function gE(e) {
  const t = Object.keys(e),
    n = {};
  for (let s = 0; s < t.length; s++) {
    const o = t[s];
    typeof e[o] == "function" && (n[o] = e[o]);
  }
  const r = Object.keys(n);
  let i;
  try {
    jU(n);
  } catch (s) {
    i = s;
  }
  return function (o = {}, l) {
    if (i) throw i;
    let c = !1;
    const f = {};
    for (let d = 0; d < r.length; d++) {
      const p = r[d],
        m = n[p],
        g = o[p],
        w = m(g, l);
      if (typeof w > "u") throw (l && l.type, new Error(Jn(14)));
      (f[p] = w), (c = c || w !== g);
    }
    return (c = c || r.length !== Object.keys(o).length), c ? f : o;
  };
}
function Yd(...e) {
  return e.length === 0
    ? (t) => t
    : e.length === 1
    ? e[0]
    : e.reduce(
        (t, n) =>
          (...r) =>
            t(n(...r))
      );
}
function NU(...e) {
  return (t) => (n, r) => {
    const i = t(n, r);
    let s = () => {
      throw new Error(Jn(15));
    };
    const o = { getState: i.getState, dispatch: (c, ...f) => s(c, ...f) },
      l = e.map((c) => c(o));
    return (s = Yd(...l)(i.dispatch)), { ...i, dispatch: s };
  };
}
function yE(e) {
  return w3(e) && "type" in e && typeof e.type == "string";
}
var Rp = Symbol.for("immer-nothing"),
  bl = Symbol.for("immer-draftable"),
  Hr = Symbol.for("immer-state");
function nr(e, ...t) {
  throw new Error(
    `[Immer] minified error nr: ${e}. Full error at: https://bit.ly/3cXEKWf`
  );
}
var Jo = Object.getPrototypeOf;
function y2(e) {
  return !!e && !!e[Hr];
}
function Ui(e) {
  var t;
  return e
    ? vE(e) ||
        Array.isArray(e) ||
        !!e[bl] ||
        !!((t = e.constructor) != null && t[bl]) ||
        mu(e) ||
        gu(e)
    : !1;
}
var OU = Object.prototype.constructor.toString();
function vE(e) {
  if (!e || typeof e != "object") return !1;
  const t = Jo(e);
  if (t === null) return !0;
  const n = Object.hasOwnProperty.call(t, "constructor") && t.constructor;
  return n === Object
    ? !0
    : typeof n == "function" && Function.toString.call(n) === OU;
}
function BU(e) {
  return y2(e) || nr(15, e), e[Hr].base_;
}
function Fl(e, t) {
  ea(e) === 0
    ? Reflect.ownKeys(e).forEach((n) => {
        t(n, e[n], e);
      })
    : e.forEach((n, r) => t(r, n, e));
}
function ea(e) {
  const t = e[Hr];
  return t ? t.type_ : Array.isArray(e) ? 1 : mu(e) ? 2 : gu(e) ? 3 : 0;
}
function Ul(e, t) {
  return ea(e) === 2 ? e.has(t) : Object.prototype.hasOwnProperty.call(e, t);
}
function k9(e, t) {
  return ea(e) === 2 ? e.get(t) : e[t];
}
function wE(e, t, n) {
  const r = ea(e);
  r === 2 ? e.set(t, n) : r === 3 ? e.add(n) : (e[t] = n);
}
function DU(e, t) {
  return e === t ? e !== 0 || 1 / e === 1 / t : e !== e && t !== t;
}
function mu(e) {
  return e instanceof Map;
}
function gu(e) {
  return e instanceof Set;
}
function Ro(e) {
  return e.copy_ || e.base_;
}
function q5(e, t) {
  if (mu(e)) return new Map(e);
  if (gu(e)) return new Set(e);
  if (Array.isArray(e)) return Array.prototype.slice.call(e);
  const n = vE(e);
  if (t === !0 || (t === "class_only" && !n)) {
    const r = Object.getOwnPropertyDescriptors(e);
    delete r[Hr];
    let i = Reflect.ownKeys(r);
    for (let s = 0; s < i.length; s++) {
      const o = i[s],
        l = r[o];
      l.writable === !1 && ((l.writable = !0), (l.configurable = !0)),
        (l.get || l.set) &&
          (r[o] = {
            configurable: !0,
            writable: !0,
            enumerable: l.enumerable,
            value: e[o],
          });
    }
    return Object.create(Jo(e), r);
  } else {
    const r = Jo(e);
    if (r !== null && n) return { ...e };
    const i = Object.create(r);
    return Object.assign(i, e);
  }
}
function Lp(e, t = !1) {
  return (
    D4(e) ||
      y2(e) ||
      !Ui(e) ||
      (ea(e) > 1 && (e.set = e.add = e.clear = e.delete = FU),
      Object.freeze(e),
      t && Object.entries(e).forEach(([n, r]) => Lp(r, !0))),
    e
  );
}
function FU() {
  nr(2);
}
function D4(e) {
  return Object.isFrozen(e);
}
var K5 = {};
function ta(e) {
  const t = K5[e];
  return t || nr(0, e), t;
}
function UU(e, t) {
  K5[e] || (K5[e] = t);
}
var $l;
function bE() {
  return $l;
}
function $U(e, t) {
  return {
    drafts_: [],
    parent_: e,
    immer_: t,
    canAutoFreeze_: !0,
    unfinalizedDrafts_: 0,
  };
}
function ev(e, t) {
  t &&
    (ta("Patches"),
    (e.patches_ = []),
    (e.inversePatches_ = []),
    (e.patchListener_ = t));
}
function G5(e) {
  Y5(e), e.drafts_.forEach(VU), (e.drafts_ = null);
}
function Y5(e) {
  e === $l && ($l = e.parent_);
}
function tv(e) {
  return ($l = $U($l, e));
}
function VU(e) {
  const t = e[Hr];
  t.type_ === 0 || t.type_ === 1 ? t.revoke_() : (t.revoked_ = !0);
}
function nv(e, t) {
  t.unfinalizedDrafts_ = t.drafts_.length;
  const n = t.drafts_[0];
  return (
    e !== void 0 && e !== n
      ? (n[Hr].modified_ && (G5(t), nr(4)),
        Ui(e) && ((e = Qd(t, e)), t.parent_ || Zd(t, e)),
        t.patches_ &&
          ta("Patches").generateReplacementPatches_(
            n[Hr].base_,
            e,
            t.patches_,
            t.inversePatches_
          ))
      : (e = Qd(t, n, [])),
    G5(t),
    t.patches_ && t.patchListener_(t.patches_, t.inversePatches_),
    e !== Rp ? e : void 0
  );
}
function Qd(e, t, n) {
  if (D4(t)) return t;
  const r = t[Hr];
  if (!r) return Fl(t, (i, s) => rv(e, r, t, i, s, n)), t;
  if (r.scope_ !== e) return t;
  if (!r.modified_) return Zd(e, r.base_, !0), r.base_;
  if (!r.finalized_) {
    (r.finalized_ = !0), r.scope_.unfinalizedDrafts_--;
    const i = r.copy_;
    let s = i,
      o = !1;
    r.type_ === 3 && ((s = new Set(i)), i.clear(), (o = !0)),
      Fl(s, (l, c) => rv(e, r, i, l, c, n, o)),
      Zd(e, i, !1),
      n &&
        e.patches_ &&
        ta("Patches").generatePatches_(r, n, e.patches_, e.inversePatches_);
  }
  return r.copy_;
}
function rv(e, t, n, r, i, s, o) {
  if (y2(i)) {
    const l =
        s && t && t.type_ !== 3 && !Ul(t.assigned_, r) ? s.concat(r) : void 0,
      c = Qd(e, i, l);
    if ((wE(n, r, c), y2(c))) e.canAutoFreeze_ = !1;
    else return;
  } else o && n.add(i);
  if (Ui(i) && !D4(i)) {
    if (!e.immer_.autoFreeze_ && e.unfinalizedDrafts_ < 1) return;
    Qd(e, i),
      (!t || !t.scope_.parent_) &&
        typeof r != "symbol" &&
        Object.prototype.propertyIsEnumerable.call(n, r) &&
        Zd(e, i);
  }
}
function Zd(e, t, n = !1) {
  !e.parent_ && e.immer_.autoFreeze_ && e.canAutoFreeze_ && Lp(t, n);
}
function WU(e, t) {
  const n = Array.isArray(e),
    r = {
      type_: n ? 1 : 0,
      scope_: t ? t.scope_ : bE(),
      modified_: !1,
      finalized_: !1,
      assigned_: {},
      parent_: t,
      base_: e,
      draft_: null,
      copy_: null,
      revoke_: null,
      isManual_: !1,
    };
  let i = r,
    s = Ip;
  n && ((i = [r]), (s = Vl));
  const { revoke: o, proxy: l } = Proxy.revocable(i, s);
  return (r.draft_ = l), (r.revoke_ = o), l;
}
var Ip = {
    get(e, t) {
      if (t === Hr) return e;
      const n = Ro(e);
      if (!Ul(n, t)) return zU(e, n, t);
      const r = n[t];
      return e.finalized_ || !Ui(r)
        ? r
        : r === _9(e.base_, t)
        ? (A9(e), (e.copy_[t] = Z5(r, e)))
        : r;
    },
    has(e, t) {
      return t in Ro(e);
    },
    ownKeys(e) {
      return Reflect.ownKeys(Ro(e));
    },
    set(e, t, n) {
      const r = xE(Ro(e), t);
      if (r != null && r.set) return r.set.call(e.draft_, n), !0;
      if (!e.modified_) {
        const i = _9(Ro(e), t),
          s = i == null ? void 0 : i[Hr];
        if (s && s.base_ === n)
          return (e.copy_[t] = n), (e.assigned_[t] = !1), !0;
        if (DU(n, i) && (n !== void 0 || Ul(e.base_, t))) return !0;
        A9(e), Q5(e);
      }
      return (
        (e.copy_[t] === n && (n !== void 0 || t in e.copy_)) ||
          (Number.isNaN(n) && Number.isNaN(e.copy_[t])) ||
          ((e.copy_[t] = n), (e.assigned_[t] = !0)),
        !0
      );
    },
    deleteProperty(e, t) {
      return (
        _9(e.base_, t) !== void 0 || t in e.base_
          ? ((e.assigned_[t] = !1), A9(e), Q5(e))
          : delete e.assigned_[t],
        e.copy_ && delete e.copy_[t],
        !0
      );
    },
    getOwnPropertyDescriptor(e, t) {
      const n = Ro(e),
        r = Reflect.getOwnPropertyDescriptor(n, t);
      return (
        r && {
          writable: !0,
          configurable: e.type_ !== 1 || t !== "length",
          enumerable: r.enumerable,
          value: n[t],
        }
      );
    },
    defineProperty() {
      nr(11);
    },
    getPrototypeOf(e) {
      return Jo(e.base_);
    },
    setPrototypeOf() {
      nr(12);
    },
  },
  Vl = {};
Fl(Ip, (e, t) => {
  Vl[e] = function () {
    return (arguments[0] = arguments[0][0]), t.apply(this, arguments);
  };
});
Vl.deleteProperty = function (e, t) {
  return Vl.set.call(this, e, t, void 0);
};
Vl.set = function (e, t, n) {
  return Ip.set.call(this, e[0], t, n, e[0]);
};
function _9(e, t) {
  const n = e[Hr];
  return (n ? Ro(n) : e)[t];
}
function zU(e, t, n) {
  var i;
  const r = xE(t, n);
  return r
    ? "value" in r
      ? r.value
      : (i = r.get) == null
      ? void 0
      : i.call(e.draft_)
    : void 0;
}
function xE(e, t) {
  if (!(t in e)) return;
  let n = Jo(e);
  for (; n; ) {
    const r = Object.getOwnPropertyDescriptor(n, t);
    if (r) return r;
    n = Jo(n);
  }
}
function Q5(e) {
  e.modified_ || ((e.modified_ = !0), e.parent_ && Q5(e.parent_));
}
function A9(e) {
  e.copy_ || (e.copy_ = q5(e.base_, e.scope_.immer_.useStrictShallowCopy_));
}
var HU = class {
  constructor(e) {
    (this.autoFreeze_ = !0),
      (this.useStrictShallowCopy_ = !1),
      (this.produce = (t, n, r) => {
        if (typeof t == "function" && typeof n != "function") {
          const s = n;
          n = t;
          const o = this;
          return function (c = s, ...f) {
            return o.produce(c, (d) => n.call(this, d, ...f));
          };
        }
        typeof n != "function" && nr(6),
          r !== void 0 && typeof r != "function" && nr(7);
        let i;
        if (Ui(t)) {
          const s = tv(this),
            o = Z5(t, void 0);
          let l = !0;
          try {
            (i = n(o)), (l = !1);
          } finally {
            l ? G5(s) : Y5(s);
          }
          return ev(s, r), nv(i, s);
        } else if (!t || typeof t != "object") {
          if (
            ((i = n(t)),
            i === void 0 && (i = t),
            i === Rp && (i = void 0),
            this.autoFreeze_ && Lp(i, !0),
            r)
          ) {
            const s = [],
              o = [];
            ta("Patches").generateReplacementPatches_(t, i, s, o), r(s, o);
          }
          return i;
        } else nr(1, t);
      }),
      (this.produceWithPatches = (t, n) => {
        if (typeof t == "function")
          return (o, ...l) => this.produceWithPatches(o, (c) => t(c, ...l));
        let r, i;
        return [
          this.produce(t, n, (o, l) => {
            (r = o), (i = l);
          }),
          r,
          i,
        ];
      }),
      typeof (e == null ? void 0 : e.autoFreeze) == "boolean" &&
        this.setAutoFreeze(e.autoFreeze),
      typeof (e == null ? void 0 : e.useStrictShallowCopy) == "boolean" &&
        this.setUseStrictShallowCopy(e.useStrictShallowCopy);
  }
  createDraft(e) {
    Ui(e) || nr(8), y2(e) && (e = qU(e));
    const t = tv(this),
      n = Z5(e, void 0);
    return (n[Hr].isManual_ = !0), Y5(t), n;
  }
  finishDraft(e, t) {
    const n = e && e[Hr];
    (!n || !n.isManual_) && nr(9);
    const { scope_: r } = n;
    return ev(r, t), nv(void 0, r);
  }
  setAutoFreeze(e) {
    this.autoFreeze_ = e;
  }
  setUseStrictShallowCopy(e) {
    this.useStrictShallowCopy_ = e;
  }
  applyPatches(e, t) {
    let n;
    for (n = t.length - 1; n >= 0; n--) {
      const i = t[n];
      if (i.path.length === 0 && i.op === "replace") {
        e = i.value;
        break;
      }
    }
    n > -1 && (t = t.slice(n + 1));
    const r = ta("Patches").applyPatches_;
    return y2(e) ? r(e, t) : this.produce(e, (i) => r(i, t));
  }
};
function Z5(e, t) {
  const n = mu(e)
    ? ta("MapSet").proxyMap_(e, t)
    : gu(e)
    ? ta("MapSet").proxySet_(e, t)
    : WU(e, t);
  return (t ? t.scope_ : bE()).drafts_.push(n), n;
}
function qU(e) {
  return y2(e) || nr(10, e), CE(e);
}
function CE(e) {
  if (!Ui(e) || D4(e)) return e;
  const t = e[Hr];
  let n;
  if (t) {
    if (!t.modified_) return t.base_;
    (t.finalized_ = !0), (n = q5(e, t.scope_.immer_.useStrictShallowCopy_));
  } else n = q5(e, !0);
  return (
    Fl(n, (r, i) => {
      wE(n, r, CE(i));
    }),
    t && (t.finalized_ = !1),
    n
  );
}
function KU() {
  const t = "replace",
    n = "add",
    r = "remove";
  function i(m, g, w, b) {
    switch (m.type_) {
      case 0:
      case 2:
        return o(m, g, w, b);
      case 1:
        return s(m, g, w, b);
      case 3:
        return l(m, g, w, b);
    }
  }
  function s(m, g, w, b) {
    let { base_: x, assigned_: E } = m,
      P = m.copy_;
    P.length < x.length && (([x, P] = [P, x]), ([w, b] = [b, w]));
    for (let _ = 0; _ < x.length; _++)
      if (E[_] && P[_] !== x[_]) {
        const T = g.concat([_]);
        w.push({ op: t, path: T, value: p(P[_]) }),
          b.push({ op: t, path: T, value: p(x[_]) });
      }
    for (let _ = x.length; _ < P.length; _++) {
      const T = g.concat([_]);
      w.push({ op: n, path: T, value: p(P[_]) });
    }
    for (let _ = P.length - 1; x.length <= _; --_) {
      const T = g.concat([_]);
      b.push({ op: r, path: T });
    }
  }
  function o(m, g, w, b) {
    const { base_: x, copy_: E } = m;
    Fl(m.assigned_, (P, _) => {
      const T = k9(x, P),
        M = k9(E, P),
        L = _ ? (Ul(x, P) ? t : n) : r;
      if (T === M && L === t) return;
      const O = g.concat(P);
      w.push(L === r ? { op: L, path: O } : { op: L, path: O, value: M }),
        b.push(
          L === n
            ? { op: r, path: O }
            : L === r
            ? { op: n, path: O, value: p(T) }
            : { op: t, path: O, value: p(T) }
        );
    });
  }
  function l(m, g, w, b) {
    let { base_: x, copy_: E } = m,
      P = 0;
    x.forEach((_) => {
      if (!E.has(_)) {
        const T = g.concat([P]);
        w.push({ op: r, path: T, value: _ }),
          b.unshift({ op: n, path: T, value: _ });
      }
      P++;
    }),
      (P = 0),
      E.forEach((_) => {
        if (!x.has(_)) {
          const T = g.concat([P]);
          w.push({ op: n, path: T, value: _ }),
            b.unshift({ op: r, path: T, value: _ });
        }
        P++;
      });
  }
  function c(m, g, w, b) {
    w.push({ op: t, path: [], value: g === Rp ? void 0 : g }),
      b.push({ op: t, path: [], value: m });
  }
  function f(m, g) {
    return (
      g.forEach((w) => {
        const { path: b, op: x } = w;
        let E = m;
        for (let M = 0; M < b.length - 1; M++) {
          const L = ea(E);
          let O = b[M];
          typeof O != "string" && typeof O != "number" && (O = "" + O),
            (L === 0 || L === 1) &&
              (O === "__proto__" || O === "constructor") &&
              nr(19),
            typeof E == "function" && O === "prototype" && nr(19),
            (E = k9(E, O)),
            typeof E != "object" && nr(18, b.join("/"));
        }
        const P = ea(E),
          _ = d(w.value),
          T = b[b.length - 1];
        switch (x) {
          case t:
            switch (P) {
              case 2:
                return E.set(T, _);
              case 3:
                nr(16);
              default:
                return (E[T] = _);
            }
          case n:
            switch (P) {
              case 1:
                return T === "-" ? E.push(_) : E.splice(T, 0, _);
              case 2:
                return E.set(T, _);
              case 3:
                return E.add(_);
              default:
                return (E[T] = _);
            }
          case r:
            switch (P) {
              case 1:
                return E.splice(T, 1);
              case 2:
                return E.delete(T);
              case 3:
                return E.delete(w.value);
              default:
                return delete E[T];
            }
          default:
            nr(17, x);
        }
      }),
      m
    );
  }
  function d(m) {
    if (!Ui(m)) return m;
    if (Array.isArray(m)) return m.map(d);
    if (mu(m))
      return new Map(Array.from(m.entries()).map(([w, b]) => [w, d(b)]));
    if (gu(m)) return new Set(Array.from(m).map(d));
    const g = Object.create(Jo(m));
    for (const w in m) g[w] = d(m[w]);
    return Ul(m, bl) && (g[bl] = m[bl]), g;
  }
  function p(m) {
    return y2(m) ? d(m) : m;
  }
  UU("Patches", {
    applyPatches_: f,
    generatePatches_: i,
    generateReplacementPatches_: c,
  });
}
var ni = new HU(),
  yu = ni.produce,
  SE = ni.produceWithPatches.bind(ni);
ni.setAutoFreeze.bind(ni);
ni.setUseStrictShallowCopy.bind(ni);
var iv = ni.applyPatches.bind(ni);
ni.createDraft.bind(ni);
ni.finishDraft.bind(ni);
function GU(e, t = `expected a function, instead received ${typeof e}`) {
  if (typeof e != "function") throw new TypeError(t);
}
function YU(e, t = `expected an object, instead received ${typeof e}`) {
  if (typeof e != "object") throw new TypeError(t);
}
function QU(
  e,
  t = "expected all items to be functions, instead received the following types: "
) {
  if (!e.every((n) => typeof n == "function")) {
    const n = e
      .map((r) =>
        typeof r == "function" ? `function ${r.name || "unnamed"}()` : typeof r
      )
      .join(", ");
    throw new TypeError(`${t}[${n}]`);
  }
}
var sv = (e) => (Array.isArray(e) ? e : [e]);
function ZU(e) {
  const t = Array.isArray(e[0]) ? e[0] : e;
  return (
    QU(
      t,
      "createSelector expects all input-selectors to be functions, but received the following types: "
    ),
    t
  );
}
function XU(e, t) {
  const n = [],
    { length: r } = e;
  for (let i = 0; i < r; i++) n.push(e[i].apply(null, t));
  return n;
}
var JU = class {
    constructor(e) {
      this.value = e;
    }
    deref() {
      return this.value;
    }
  },
  e$ = typeof WeakRef < "u" ? WeakRef : JU,
  t$ = 0,
  ov = 1;
function Vc() {
  return { s: t$, v: void 0, o: null, p: null };
}
function Xd(e, t = {}) {
  let n = Vc();
  const { resultEqualityCheck: r } = t;
  let i,
    s = 0;
  function o() {
    var p;
    let l = n;
    const { length: c } = arguments;
    for (let m = 0, g = c; m < g; m++) {
      const w = arguments[m];
      if (typeof w == "function" || (typeof w == "object" && w !== null)) {
        let b = l.o;
        b === null && (l.o = b = new WeakMap());
        const x = b.get(w);
        x === void 0 ? ((l = Vc()), b.set(w, l)) : (l = x);
      } else {
        let b = l.p;
        b === null && (l.p = b = new Map());
        const x = b.get(w);
        x === void 0 ? ((l = Vc()), b.set(w, l)) : (l = x);
      }
    }
    const f = l;
    let d;
    if (l.s === ov) d = l.v;
    else if (((d = e.apply(null, arguments)), s++, r)) {
      const m =
        ((p = i == null ? void 0 : i.deref) == null ? void 0 : p.call(i)) ?? i;
      m != null && r(m, d) && ((d = m), s !== 0 && s--),
        (i =
          (typeof d == "object" && d !== null) || typeof d == "function"
            ? new e$(d)
            : d);
    }
    return (f.s = ov), (f.v = d), d;
  }
  return (
    (o.clearCache = () => {
      (n = Vc()), o.resetResultsCount();
    }),
    (o.resultsCount = () => s),
    (o.resetResultsCount = () => {
      s = 0;
    }),
    o
  );
}
function n$(e, ...t) {
  const n = typeof e == "function" ? { memoize: e, memoizeOptions: t } : e,
    r = (...i) => {
      let s = 0,
        o = 0,
        l,
        c = {},
        f = i.pop();
      typeof f == "object" && ((c = f), (f = i.pop())),
        GU(
          f,
          `createSelector expects an output function after the inputs, but received: [${typeof f}]`
        );
      const d = { ...n, ...c },
        {
          memoize: p,
          memoizeOptions: m = [],
          argsMemoize: g = Xd,
          argsMemoizeOptions: w = [],
        } = d,
        b = sv(m),
        x = sv(w),
        E = ZU(i),
        P = p(function () {
          return s++, f.apply(null, arguments);
        }, ...b),
        _ = g(function () {
          o++;
          const M = XU(E, arguments);
          return (l = P.apply(null, M)), l;
        }, ...x);
      return Object.assign(_, {
        resultFunc: f,
        memoizedResultFunc: P,
        dependencies: E,
        dependencyRecomputations: () => o,
        resetDependencyRecomputations: () => {
          o = 0;
        },
        lastResult: () => l,
        recomputations: () => s,
        resetRecomputations: () => {
          s = 0;
        },
        memoize: p,
        argsMemoize: g,
      });
    };
  return Object.assign(r, { withTypes: () => r }), r;
}
var ca = n$(Xd),
  r$ = Object.assign(
    (e, t = ca) => {
      YU(
        e,
        `createStructuredSelector expects first argument to be an object where each property is a selector, instead received a ${typeof e}`
      );
      const n = Object.keys(e),
        r = n.map((s) => e[s]);
      return t(r, (...s) => s.reduce((o, l, c) => ((o[n[c]] = l), o), {}));
    },
    { withTypes: () => r$ }
  );
function EE(e) {
  return ({ dispatch: n, getState: r }) =>
    (i) =>
    (s) =>
      typeof s == "function" ? s(n, r, e) : i(s);
}
var i$ = EE(),
  s$ = EE,
  o$ =
    typeof window < "u" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__
      ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__
      : function () {
          if (arguments.length !== 0)
            return typeof arguments[0] == "object"
              ? Yd
              : Yd.apply(null, arguments);
        },
  a$ = (e) => e && typeof e.match == "function";
function Oi(e, t) {
  function n(...r) {
    if (t) {
      let i = t(...r);
      if (!i) throw new Error(Bi(0));
      return {
        type: e,
        payload: i.payload,
        ...("meta" in i && { meta: i.meta }),
        ...("error" in i && { error: i.error }),
      };
    }
    return { type: e, payload: r[0] };
  }
  return (
    (n.toString = () => `${e}`),
    (n.type = e),
    (n.match = (r) => yE(r) && r.type === e),
    n
  );
}
var kE = class al extends Array {
  constructor(...t) {
    super(...t), Object.setPrototypeOf(this, al.prototype);
  }
  static get [Symbol.species]() {
    return al;
  }
  concat(...t) {
    return super.concat.apply(this, t);
  }
  prepend(...t) {
    return t.length === 1 && Array.isArray(t[0])
      ? new al(...t[0].concat(this))
      : new al(...t.concat(this));
  }
};
function av(e) {
  return Ui(e) ? yu(e, () => {}) : e;
}
function Wc(e, t, n) {
  return e.has(t) ? e.get(t) : e.set(t, n(t)).get(t);
}
function l$(e) {
  return typeof e == "boolean";
}
var u$ = () =>
    function (t) {
      const {
        thunk: n = !0,
        immutableCheck: r = !0,
        serializableCheck: i = !0,
        actionCreatorCheck: s = !0,
      } = t ?? {};
      let o = new kE();
      return n && (l$(n) ? o.push(i$) : o.push(s$(n.extraArgument))), o;
    },
  F4 = "RTK_autoBatch",
  v0 = () => (e) => ({ payload: e, meta: { [F4]: !0 } }),
  lv = (e) => (t) => {
    setTimeout(t, e);
  },
  c$ =
    (e = { type: "raf" }) =>
    (t) =>
    (...n) => {
      const r = t(...n);
      let i = !0,
        s = !1,
        o = !1;
      const l = new Set(),
        c =
          e.type === "tick"
            ? queueMicrotask
            : e.type === "raf"
            ? typeof window < "u" && window.requestAnimationFrame
              ? window.requestAnimationFrame
              : lv(10)
            : e.type === "callback"
            ? e.queueNotification
            : lv(e.timeout),
        f = () => {
          (o = !1), s && ((s = !1), l.forEach((d) => d()));
        };
      return Object.assign({}, r, {
        subscribe(d) {
          const p = () => i && d(),
            m = r.subscribe(p);
          return (
            l.add(d),
            () => {
              m(), l.delete(d);
            }
          );
        },
        dispatch(d) {
          var p;
          try {
            return (
              (i = !((p = d == null ? void 0 : d.meta) != null && p[F4])),
              (s = !i),
              s && (o || ((o = !0), c(f))),
              r.dispatch(d)
            );
          } finally {
            i = !0;
          }
        },
      });
    },
  d$ = (e) =>
    function (n) {
      const { autoBatch: r = !0 } = n ?? {};
      let i = new kE(e);
      return r && i.push(c$(typeof r == "object" ? r : void 0)), i;
    };
function f$(e) {
  const t = u$(),
    {
      reducer: n = void 0,
      middleware: r,
      devTools: i = !0,
      preloadedState: s = void 0,
      enhancers: o = void 0,
    } = e || {};
  let l;
  if (typeof n == "function") l = n;
  else if (w3(n)) l = gE(n);
  else throw new Error(Bi(1));
  let c;
  typeof r == "function" ? (c = r(t)) : (c = t());
  let f = Yd;
  i && (f = o$({ trace: !1, ...(typeof i == "object" && i) }));
  const d = NU(...c),
    p = d$(d);
  let m = typeof o == "function" ? o(p) : p();
  const g = f(...m);
  return mE(l, s, g);
}
function _E(e) {
  const t = {},
    n = [];
  let r;
  const i = {
    addCase(s, o) {
      const l = typeof s == "string" ? s : s.type;
      if (!l) throw new Error(Bi(28));
      if (l in t) throw new Error(Bi(29));
      return (t[l] = o), i;
    },
    addMatcher(s, o) {
      return n.push({ matcher: s, reducer: o }), i;
    },
    addDefaultCase(s) {
      return (r = s), i;
    },
  };
  return e(i), [t, n, r];
}
function h$(e) {
  return typeof e == "function";
}
function p$(e, t) {
  let [n, r, i] = _E(t),
    s;
  if (h$(e)) s = () => av(e());
  else {
    const l = av(e);
    s = () => l;
  }
  function o(l = s(), c) {
    let f = [
      n[c.type],
      ...r.filter(({ matcher: d }) => d(c)).map(({ reducer: d }) => d),
    ];
    return (
      f.filter((d) => !!d).length === 0 && (f = [i]),
      f.reduce((d, p) => {
        if (p)
          if (y2(d)) {
            const g = p(d, c);
            return g === void 0 ? d : g;
          } else {
            if (Ui(d)) return yu(d, (m) => p(m, c));
            {
              const m = p(d, c);
              if (m === void 0) {
                if (d === null) return d;
                throw Error(
                  "A case reducer on a non-draftable value must not return undefined"
                );
              }
              return m;
            }
          }
        return d;
      }, l)
    );
  }
  return (o.getInitialState = s), o;
}
var AE = (e, t) => (a$(e) ? e.match(t) : e(t));
function X2(...e) {
  return (t) => e.some((n) => AE(n, t));
}
function xl(...e) {
  return (t) => e.every((n) => AE(n, t));
}
function U4(e, t) {
  if (!e || !e.meta) return !1;
  const n = typeof e.meta.requestId == "string",
    r = t.indexOf(e.meta.requestStatus) > -1;
  return n && r;
}
function vu(e) {
  return (
    typeof e[0] == "function" &&
    "pending" in e[0] &&
    "fulfilled" in e[0] &&
    "rejected" in e[0]
  );
}
function jp(...e) {
  return e.length === 0
    ? (t) => U4(t, ["pending"])
    : vu(e)
    ? X2(...e.map((t) => t.pending))
    : jp()(e[0]);
}
function b3(...e) {
  return e.length === 0
    ? (t) => U4(t, ["rejected"])
    : vu(e)
    ? X2(...e.map((t) => t.rejected))
    : b3()(e[0]);
}
function $4(...e) {
  const t = (n) => n && n.meta && n.meta.rejectedWithValue;
  return e.length === 0
    ? xl(b3(...e), t)
    : vu(e)
    ? xl(b3(...e), t)
    : $4()(e[0]);
}
function Ws(...e) {
  return e.length === 0
    ? (t) => U4(t, ["fulfilled"])
    : vu(e)
    ? X2(...e.map((t) => t.fulfilled))
    : Ws()(e[0]);
}
function X5(...e) {
  return e.length === 0
    ? (t) => U4(t, ["pending", "fulfilled", "rejected"])
    : vu(e)
    ? X2(...e.flatMap((t) => [t.pending, t.rejected, t.fulfilled]))
    : X5()(e[0]);
}
var m$ = "ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW",
  Np = (e = 21) => {
    let t = "",
      n = e;
    for (; n--; ) t += m$[(Math.random() * 64) | 0];
    return t;
  },
  g$ = ["name", "message", "stack", "code"],
  T9 = class {
    constructor(e, t) {
      Pc(this, "_type");
      (this.payload = e), (this.meta = t);
    }
  },
  uv = class {
    constructor(e, t) {
      Pc(this, "_type");
      (this.payload = e), (this.meta = t);
    }
  },
  y$ = (e) => {
    if (typeof e == "object" && e !== null) {
      const t = {};
      for (const n of g$) typeof e[n] == "string" && (t[n] = e[n]);
      return t;
    }
    return { message: String(e) };
  },
  cv = "External signal was aborted",
  dv = (() => {
    function e(t, n, r) {
      const i = Oi(t + "/fulfilled", (c, f, d, p) => ({
          payload: c,
          meta: {
            ...(p || {}),
            arg: d,
            requestId: f,
            requestStatus: "fulfilled",
          },
        })),
        s = Oi(t + "/pending", (c, f, d) => ({
          payload: void 0,
          meta: {
            ...(d || {}),
            arg: f,
            requestId: c,
            requestStatus: "pending",
          },
        })),
        o = Oi(t + "/rejected", (c, f, d, p, m) => ({
          payload: p,
          error: ((r && r.serializeError) || y$)(c || "Rejected"),
          meta: {
            ...(m || {}),
            arg: d,
            requestId: f,
            rejectedWithValue: !!p,
            requestStatus: "rejected",
            aborted: (c == null ? void 0 : c.name) === "AbortError",
            condition: (c == null ? void 0 : c.name) === "ConditionError",
          },
        }));
      function l(c, { signal: f } = {}) {
        return (d, p, m) => {
          const g = r != null && r.idGenerator ? r.idGenerator(c) : Np(),
            w = new AbortController();
          let b, x;
          function E(_) {
            (x = _), w.abort();
          }
          f &&
            (f.aborted
              ? E(cv)
              : f.addEventListener("abort", () => E(cv), { once: !0 }));
          const P = (async function () {
            var M, L;
            let _;
            try {
              let O =
                (M = r == null ? void 0 : r.condition) == null
                  ? void 0
                  : M.call(r, c, { getState: p, extra: m });
              if ((w$(O) && (O = await O), O === !1 || w.signal.aborted))
                throw {
                  name: "ConditionError",
                  message: "Aborted due to condition callback returning false.",
                };
              const U = new Promise((D, H) => {
                (b = () => {
                  H({ name: "AbortError", message: x || "Aborted" });
                }),
                  w.signal.addEventListener("abort", b);
              });
              d(
                s(
                  g,
                  c,
                  (L = r == null ? void 0 : r.getPendingMeta) == null
                    ? void 0
                    : L.call(
                        r,
                        { requestId: g, arg: c },
                        { getState: p, extra: m }
                      )
                )
              ),
                (_ = await Promise.race([
                  U,
                  Promise.resolve(
                    n(c, {
                      dispatch: d,
                      getState: p,
                      extra: m,
                      requestId: g,
                      signal: w.signal,
                      abort: E,
                      rejectWithValue: (D, H) => new T9(D, H),
                      fulfillWithValue: (D, H) => new uv(D, H),
                    })
                  ).then((D) => {
                    if (D instanceof T9) throw D;
                    return D instanceof uv
                      ? i(D.payload, g, c, D.meta)
                      : i(D, g, c);
                  }),
                ]));
            } catch (O) {
              _ =
                O instanceof T9 ? o(null, g, c, O.payload, O.meta) : o(O, g, c);
            } finally {
              b && w.signal.removeEventListener("abort", b);
            }
            return (
              (r &&
                !r.dispatchConditionRejection &&
                o.match(_) &&
                _.meta.condition) ||
                d(_),
              _
            );
          })();
          return Object.assign(P, {
            abort: E,
            requestId: g,
            arg: c,
            unwrap() {
              return P.then(v$);
            },
          });
        };
      }
      return Object.assign(l, {
        pending: s,
        rejected: o,
        fulfilled: i,
        settled: X2(o, i),
        typePrefix: t,
      });
    }
    return (e.withTypes = () => e), e;
  })();
function v$(e) {
  if (e.meta && e.meta.rejectedWithValue) throw e.payload;
  if (e.error) throw e.error;
  return e.payload;
}
function w$(e) {
  return e !== null && typeof e == "object" && typeof e.then == "function";
}
var b$ = Symbol.for("rtk-slice-createasyncthunk");
function x$(e, t) {
  return `${e}/${t}`;
}
function C$({ creators: e } = {}) {
  var n;
  const t = (n = e == null ? void 0 : e.asyncThunk) == null ? void 0 : n[b$];
  return function (i) {
    const { name: s, reducerPath: o = s } = i;
    if (!s) throw new Error(Bi(11));
    const l =
        (typeof i.reducers == "function" ? i.reducers(E$()) : i.reducers) || {},
      c = Object.keys(l),
      f = {
        sliceCaseReducersByName: {},
        sliceCaseReducersByType: {},
        actionCreators: {},
        sliceMatchers: [],
      },
      d = {
        addCase(T, M) {
          const L = typeof T == "string" ? T : T.type;
          if (!L) throw new Error(Bi(12));
          if (L in f.sliceCaseReducersByType) throw new Error(Bi(13));
          return (f.sliceCaseReducersByType[L] = M), d;
        },
        addMatcher(T, M) {
          return f.sliceMatchers.push({ matcher: T, reducer: M }), d;
        },
        exposeAction(T, M) {
          return (f.actionCreators[T] = M), d;
        },
        exposeCaseReducer(T, M) {
          return (f.sliceCaseReducersByName[T] = M), d;
        },
      };
    c.forEach((T) => {
      const M = l[T],
        L = {
          reducerName: T,
          type: x$(s, T),
          createNotation: typeof i.reducers == "function",
        };
      _$(M) ? T$(L, M, d, t) : k$(L, M, d);
    });
    function p() {
      const [T = {}, M = [], L = void 0] =
          typeof i.extraReducers == "function"
            ? _E(i.extraReducers)
            : [i.extraReducers],
        O = { ...T, ...f.sliceCaseReducersByType };
      return p$(i.initialState, (U) => {
        for (let D in O) U.addCase(D, O[D]);
        for (let D of f.sliceMatchers) U.addMatcher(D.matcher, D.reducer);
        for (let D of M) U.addMatcher(D.matcher, D.reducer);
        L && U.addDefaultCase(L);
      });
    }
    const m = (T) => T,
      g = new Map(),
      w = new WeakMap();
    let b;
    function x(T, M) {
      return b || (b = p()), b(T, M);
    }
    function E() {
      return b || (b = p()), b.getInitialState();
    }
    function P(T, M = !1) {
      function L(U) {
        let D = U[T];
        return typeof D > "u" && M && (D = Wc(w, L, E)), D;
      }
      function O(U = m) {
        const D = Wc(g, M, () => new WeakMap());
        return Wc(D, U, () => {
          const H = {};
          for (const [$, F] of Object.entries(i.selectors ?? {}))
            H[$] = S$(F, U, () => Wc(w, U, E), M);
          return H;
        });
      }
      return {
        reducerPath: T,
        getSelectors: O,
        get selectors() {
          return O(L);
        },
        selectSlice: L,
      };
    }
    const _ = {
      name: s,
      reducer: x,
      actions: f.actionCreators,
      caseReducers: f.sliceCaseReducersByName,
      getInitialState: E,
      ...P(o),
      injectInto(T, { reducerPath: M, ...L } = {}) {
        const O = M ?? o;
        return (
          T.inject({ reducerPath: O, reducer: x }, L), { ..._, ...P(O, !0) }
        );
      },
    };
    return _;
  };
}
function S$(e, t, n, r) {
  function i(s, ...o) {
    let l = t(s);
    return typeof l > "u" && r && (l = n()), e(l, ...o);
  }
  return (i.unwrapped = e), i;
}
var Lo = C$();
function E$() {
  function e(t, n) {
    return { _reducerDefinitionType: "asyncThunk", payloadCreator: t, ...n };
  }
  return (
    (e.withTypes = () => e),
    {
      reducer(t) {
        return Object.assign(
          {
            [t.name](...n) {
              return t(...n);
            },
          }[t.name],
          { _reducerDefinitionType: "reducer" }
        );
      },
      preparedReducer(t, n) {
        return {
          _reducerDefinitionType: "reducerWithPrepare",
          prepare: t,
          reducer: n,
        };
      },
      asyncThunk: e,
    }
  );
}
function k$({ type: e, reducerName: t, createNotation: n }, r, i) {
  let s, o;
  if ("reducer" in r) {
    if (n && !A$(r)) throw new Error(Bi(17));
    (s = r.reducer), (o = r.prepare);
  } else s = r;
  i.addCase(e, s)
    .exposeCaseReducer(t, s)
    .exposeAction(t, o ? Oi(e, o) : Oi(e));
}
function _$(e) {
  return e._reducerDefinitionType === "asyncThunk";
}
function A$(e) {
  return e._reducerDefinitionType === "reducerWithPrepare";
}
function T$({ type: e, reducerName: t }, n, r, i) {
  if (!i) throw new Error(Bi(18));
  const {
      payloadCreator: s,
      fulfilled: o,
      pending: l,
      rejected: c,
      settled: f,
      options: d,
    } = n,
    p = i(e, s, d);
  r.exposeAction(t, p),
    o && r.addCase(p.fulfilled, o),
    l && r.addCase(p.pending, l),
    c && r.addCase(p.rejected, c),
    f && r.addMatcher(p.settled, f),
    r.exposeCaseReducer(t, {
      fulfilled: o || zc,
      pending: l || zc,
      rejected: c || zc,
      settled: f || zc,
    });
}
function zc() {}
function Bi(e) {
  return `Minified Redux Toolkit error #${e}; visit https://redux-toolkit.js.org/Errors?code=${e} for the full message or use the non-minified dev environment for full errors. `;
}
var P$ = class extends Error {
    constructor(t) {
      super(t[0].message);
      Pc(this, "issues");
      (this.name = "SchemaError"), (this.issues = t);
    }
  },
  TE = ((e) => (
    (e.uninitialized = "uninitialized"),
    (e.pending = "pending"),
    (e.fulfilled = "fulfilled"),
    (e.rejected = "rejected"),
    e
  ))(TE || {});
function fv(e) {
  return {
    status: e,
    isUninitialized: e === "uninitialized",
    isLoading: e === "pending",
    isSuccess: e === "fulfilled",
    isError: e === "rejected",
  };
}
var hv = w3;
function PE(e, t) {
  if (e === t || !((hv(e) && hv(t)) || (Array.isArray(e) && Array.isArray(t))))
    return t;
  const n = Object.keys(t),
    r = Object.keys(e);
  let i = n.length === r.length;
  const s = Array.isArray(t) ? [] : {};
  for (const o of n) (s[o] = PE(e[o], t[o])), i && (i = e[o] === s[o]);
  return i ? e : s;
}
function f3(e) {
  let t = 0;
  for (const n in e) t++;
  return t;
}
var pv = (e) => [].concat(...e);
function M$() {
  return typeof document > "u" ? !0 : document.visibilityState !== "hidden";
}
function Jd(e) {
  return e != null;
}
function R$() {
  return typeof navigator > "u" || navigator.onLine === void 0
    ? !0
    : navigator.onLine;
}
function L$(e, t, n) {
  return e.has(t) ? e.get(t) : e.set(t, n).get(t);
}
var mv = class {
    constructor(e, t = void 0) {
      (this.value = e), (this.meta = t);
    }
  },
  Op = Oi("__rtkq/focused"),
  ME = Oi("__rtkq/unfocused"),
  Bp = Oi("__rtkq/online"),
  RE = Oi("__rtkq/offline");
function V4(e) {
  return e.type === "query";
}
function I$(e) {
  return e.type === "mutation";
}
function W4(e) {
  return e.type === "infinitequery";
}
function e4(e) {
  return V4(e) || W4(e);
}
function Dp(e, t, n, r, i, s) {
  return j$(e)
    ? e(t, n, r, i).filter(Jd).map(J5).map(s)
    : Array.isArray(e)
    ? e.map(J5).map(s)
    : [];
}
function j$(e) {
  return typeof e == "function";
}
function J5(e) {
  return typeof e == "string" ? { type: e } : e;
}
function N$(e, t) {
  return e.catch(t);
}
var Wl = Symbol("forceQueryFn"),
  e6 = (e) => typeof e[Wl] == "function";
function O$({
  serializeQueryArgs: e,
  queryThunk: t,
  infiniteQueryThunk: n,
  mutationThunk: r,
  api: i,
  context: s,
}) {
  const o = new Map(),
    l = new Map(),
    {
      unsubscribeQueryResult: c,
      removeMutationResult: f,
      updateSubscriptionOptions: d,
    } = i.internalActions;
  return {
    buildInitiateQuery: x,
    buildInitiateInfiniteQuery: E,
    buildInitiateMutation: P,
    getRunningQueryThunk: p,
    getRunningMutationThunk: m,
    getRunningQueriesThunk: g,
    getRunningMutationsThunk: w,
  };
  function p(_, T) {
    return (M) => {
      var U;
      const L = s.endpointDefinitions[_],
        O = e({ queryArgs: T, endpointDefinition: L, endpointName: _ });
      return (U = o.get(M)) == null ? void 0 : U[O];
    };
  }
  function m(_, T) {
    return (M) => {
      var L;
      return (L = l.get(M)) == null ? void 0 : L[T];
    };
  }
  function g() {
    return (_) => Object.values(o.get(_) || {}).filter(Jd);
  }
  function w() {
    return (_) => Object.values(l.get(_) || {}).filter(Jd);
  }
  function b(_, T) {
    const M =
      (
        L,
        {
          subscribe: O = !0,
          forceRefetch: U,
          subscriptionOptions: D,
          [Wl]: H,
          ...$
        } = {}
      ) =>
      (F, B) => {
        var Q1;
        const j = e({ queryArgs: L, endpointDefinition: T, endpointName: _ });
        let G;
        const u1 = {
          ...$,
          type: "query",
          subscribe: O,
          forceRefetch: U,
          subscriptionOptions: D,
          endpointName: _,
          originalArgs: L,
          queryCacheKey: j,
          [Wl]: H,
        };
        if (V4(T)) G = t(u1);
        else {
          const { direction: re, initialPageParam: d1 } = $;
          G = n({ ...u1, direction: re, initialPageParam: d1 });
        }
        const e1 = i.endpoints[_].select(L),
          i1 = F(G),
          Z = e1(B()),
          { requestId: b1, abort: o1 } = i1,
          k1 = Z.requestId !== b1,
          Y1 = (Q1 = o.get(F)) == null ? void 0 : Q1[j],
          G1 = () => e1(B()),
          M1 = Object.assign(
            H
              ? i1.then(G1)
              : k1 && !Y1
              ? Promise.resolve(Z)
              : Promise.all([Y1, i1]).then(G1),
            {
              arg: L,
              requestId: b1,
              subscriptionOptions: D,
              queryCacheKey: j,
              abort: o1,
              async unwrap() {
                const re = await M1;
                if (re.isError) throw re.error;
                return re.data;
              },
              refetch: () => F(M(L, { subscribe: !1, forceRefetch: !0 })),
              unsubscribe() {
                O && F(c({ queryCacheKey: j, requestId: b1 }));
              },
              updateSubscriptionOptions(re) {
                (M1.subscriptionOptions = re),
                  F(
                    d({
                      endpointName: _,
                      requestId: b1,
                      queryCacheKey: j,
                      options: re,
                    })
                  );
              },
            }
          );
        if (!Y1 && !k1 && !H) {
          const re = L$(o, F, {});
          (re[j] = M1),
            M1.then(() => {
              delete re[j], f3(re) || o.delete(F);
            });
        }
        return M1;
      };
    return M;
  }
  function x(_, T) {
    return b(_, T);
  }
  function E(_, T) {
    return b(_, T);
  }
  function P(_) {
    return (T, { track: M = !0, fixedCacheKey: L } = {}) =>
      (O, U) => {
        const D = r({
            type: "mutation",
            endpointName: _,
            originalArgs: T,
            track: M,
            fixedCacheKey: L,
          }),
          H = O(D),
          { requestId: $, abort: F, unwrap: B } = H,
          j = N$(
            H.unwrap().then((i1) => ({ data: i1 })),
            (i1) => ({ error: i1 })
          ),
          G = () => {
            O(f({ requestId: $, fixedCacheKey: L }));
          },
          u1 = Object.assign(j, {
            arg: H.arg,
            requestId: $,
            abort: F,
            unwrap: B,
            reset: G,
          }),
          e1 = l.get(O) || {};
        return (
          l.set(O, e1),
          (e1[$] = u1),
          u1.then(() => {
            delete e1[$], f3(e1) || l.delete(O);
          }),
          L &&
            ((e1[L] = u1),
            u1.then(() => {
              e1[L] === u1 && (delete e1[L], f3(e1) || l.delete(O));
            })),
          u1
        );
      };
  }
}
var LE = class extends P$ {
  constructor(e, t, n, r) {
    super(e), (this.value = t), (this.schemaName = n), (this._bqMeta = r);
  }
};
async function po(e, t, n, r) {
  const i = await e["~standard"].validate(t);
  if (i.issues) throw new LE(i.issues, t, n, r);
  return i.value;
}
function B$(e) {
  return e;
}
var w0 = (e = {}) => ({ ...e, [F4]: !0 });
function D$({
  reducerPath: e,
  baseQuery: t,
  context: { endpointDefinitions: n },
  serializeQueryArgs: r,
  api: i,
  assertTagType: s,
  selectors: o,
  onSchemaFailure: l,
  catchSchemaFailure: c,
  skipSchemaValidation: f,
}) {
  const d = ($, F, B, j) => (G, u1) => {
    const e1 = n[$],
      i1 = r({ queryArgs: F, endpointDefinition: e1, endpointName: $ });
    if (
      (G(
        i.internalActions.queryResultPatched({ queryCacheKey: i1, patches: B })
      ),
      !j)
    )
      return;
    const Z = i.endpoints[$].select(F)(u1()),
      b1 = Dp(e1.providesTags, Z.data, void 0, F, {}, s);
    G(
      i.internalActions.updateProvidedBy([
        { queryCacheKey: i1, providedTags: b1 },
      ])
    );
  };
  function p($, F, B = 0) {
    const j = [F, ...$];
    return B && j.length > B ? j.slice(0, -1) : j;
  }
  function m($, F, B = 0) {
    const j = [...$, F];
    return B && j.length > B ? j.slice(1) : j;
  }
  const g =
      ($, F, B, j = !0) =>
      (G, u1) => {
        const i1 = i.endpoints[$].select(F)(u1()),
          Z = {
            patches: [],
            inversePatches: [],
            undo: () => G(i.util.patchQueryData($, F, Z.inversePatches, j)),
          };
        if (i1.status === "uninitialized") return Z;
        let b1;
        if ("data" in i1)
          if (Ui(i1.data)) {
            const [o1, k1, Y1] = SE(i1.data, B);
            Z.patches.push(...k1), Z.inversePatches.push(...Y1), (b1 = o1);
          } else
            (b1 = B(i1.data)),
              Z.patches.push({ op: "replace", path: [], value: b1 }),
              Z.inversePatches.push({
                op: "replace",
                path: [],
                value: i1.data,
              });
        return (
          Z.patches.length === 0 ||
            G(i.util.patchQueryData($, F, Z.patches, j)),
          Z
        );
      },
    w = ($, F, B) => (j) =>
      j(
        i.endpoints[$].initiate(F, {
          subscribe: !1,
          forceRefetch: !0,
          [Wl]: () => ({ data: B }),
        })
      ),
    b = ($, F) => ($.query && $[F] ? $[F] : B$),
    x = async (
      $,
      {
        signal: F,
        abort: B,
        rejectWithValue: j,
        fulfillWithValue: G,
        dispatch: u1,
        getState: e1,
        extra: i1,
      }
    ) => {
      var k1, Y1;
      const Z = n[$.endpointName],
        { metaSchema: b1, skipSchemaValidation: o1 = f } = Z;
      try {
        let G1 = b(Z, "transformResponse");
        const M1 = {
            signal: F,
            abort: B,
            dispatch: u1,
            getState: e1,
            extra: i1,
            endpoint: $.endpointName,
            type: $.type,
            forced: $.type === "query" ? E($, e1()) : void 0,
            queryCacheKey: $.type === "query" ? $.queryCacheKey : void 0,
          },
          Q1 = $.type === "query" ? $[Wl] : void 0;
        let re;
        const d1 = async (y1, A1, L1, V1) => {
          if (A1 == null && y1.pages.length)
            return Promise.resolve({ data: y1 });
          const ie = { queryArg: $.originalArgs, pageParam: A1 },
            ae = await h1(ie),
            Be = V1 ? p : m;
          return {
            data: {
              pages: Be(y1.pages, ae.data, L1),
              pageParams: Be(y1.pageParams, A1, L1),
            },
            meta: ae.meta,
          };
        };
        async function h1(y1) {
          let A1;
          const {
            extraOptions: L1,
            argSchema: V1,
            rawResponseSchema: ie,
            responseSchema: ae,
          } = Z;
          if (
            (V1 && !o1 && (y1 = await po(V1, y1, "argSchema", {})),
            Q1
              ? (A1 = Q1())
              : Z.query
              ? (A1 = await t(Z.query(y1), M1, L1))
              : (A1 = await Z.queryFn(y1, M1, L1, (ce) => t(ce, M1, L1))),
            typeof process < "u",
            A1.error)
          )
            throw new mv(A1.error, A1.meta);
          let { data: Be } = A1;
          ie &&
            !o1 &&
            (Be = await po(ie, A1.data, "rawResponseSchema", A1.meta));
          let Ve = await G1(Be, A1.meta, y1);
          return (
            ae && !o1 && (Ve = await po(ae, Ve, "responseSchema", A1.meta)),
            { ...A1, data: Ve }
          );
        }
        if ($.type === "query" && "infiniteQueryOptions" in Z) {
          const { infiniteQueryOptions: y1 } = Z,
            { maxPages: A1 = 1 / 0 } = y1;
          let L1;
          const V1 = { pages: [], pageParams: [] },
            ie =
              (k1 = o.selectQueryEntry(e1(), $.queryCacheKey)) == null
                ? void 0
                : k1.data,
            Be = (E($, e1()) && !$.direction) || !ie ? V1 : ie;
          if ("direction" in $ && $.direction && Be.pages.length) {
            const Ve = $.direction === "backward",
              gt = (Ve ? IE : t6)(y1, Be);
            L1 = await d1(Be, gt, A1, Ve);
          } else {
            const { initialPageParam: Ve = y1.initialPageParam } = $,
              ce = (ie == null ? void 0 : ie.pageParams) ?? [],
              gt = ce[0] ?? Ve,
              qe = ce.length;
            (L1 = await d1(Be, gt, A1)),
              Q1 && (L1 = { data: L1.data.pages[0] });
            for (let je = 1; je < qe; je++) {
              const g1 = t6(y1, L1.data);
              L1 = await d1(L1.data, g1, A1);
            }
          }
          re = L1;
        } else re = await h1($.originalArgs);
        return (
          b1 &&
            !o1 &&
            re.meta &&
            (re.meta = await po(b1, re.meta, "metaSchema", re.meta)),
          G(
            re.data,
            w0({ fulfilledTimeStamp: Date.now(), baseQueryMeta: re.meta })
          )
        );
      } catch (G1) {
        let M1 = G1;
        if (M1 instanceof mv) {
          let Q1 = b(Z, "transformErrorResponse");
          const { rawErrorResponseSchema: re, errorResponseSchema: d1 } = Z;
          let { value: h1, meta: y1 } = M1;
          try {
            re && !o1 && (h1 = await po(re, h1, "rawErrorResponseSchema", y1)),
              b1 && !o1 && (y1 = await po(b1, y1, "metaSchema", y1));
            let A1 = await Q1(h1, y1, $.originalArgs);
            return (
              d1 && !o1 && (A1 = await po(d1, A1, "errorResponseSchema", y1)),
              j(A1, w0({ baseQueryMeta: y1 }))
            );
          } catch (A1) {
            M1 = A1;
          }
        }
        try {
          if (M1 instanceof LE) {
            const Q1 = {
              endpoint: $.endpointName,
              arg: $.originalArgs,
              type: $.type,
              queryCacheKey: $.type === "query" ? $.queryCacheKey : void 0,
            };
            (Y1 = Z.onSchemaFailure) == null || Y1.call(Z, M1, Q1),
              l == null || l(M1, Q1);
            const { catchSchemaFailure: re = c } = Z;
            if (re) return j(re(M1, Q1), w0({ baseQueryMeta: M1._bqMeta }));
          }
        } catch (Q1) {
          M1 = Q1;
        }
        throw (console.error(M1), M1);
      }
    };
  function E($, F) {
    const B = o.selectQueryEntry(F, $.queryCacheKey),
      j = o.selectConfig(F).refetchOnMountOrArgChange,
      G = B == null ? void 0 : B.fulfilledTimeStamp,
      u1 = $.forceRefetch ?? ($.subscribe && j);
    return u1 ? u1 === !0 || (Number(new Date()) - Number(G)) / 1e3 >= u1 : !1;
  }
  const P = () =>
      dv(`${e}/executeQuery`, x, {
        getPendingMeta({ arg: F }) {
          const B = n[F.endpointName];
          return w0({
            startedTimeStamp: Date.now(),
            ...(W4(B) ? { direction: F.direction } : {}),
          });
        },
        condition(F, { getState: B }) {
          var o1;
          const j = B(),
            G = o.selectQueryEntry(j, F.queryCacheKey),
            u1 = G == null ? void 0 : G.fulfilledTimeStamp,
            e1 = F.originalArgs,
            i1 = G == null ? void 0 : G.originalArgs,
            Z = n[F.endpointName],
            b1 = F.direction;
          return e6(F)
            ? !0
            : (G == null ? void 0 : G.status) === "pending"
            ? !1
            : E(F, j) ||
              (V4(Z) &&
                (o1 = Z == null ? void 0 : Z.forceRefetch) != null &&
                o1.call(Z, {
                  currentArg: e1,
                  previousArg: i1,
                  endpointState: G,
                  state: j,
                }))
            ? !0
            : !(u1 && !b1);
        },
        dispatchConditionRejection: !0,
      }),
    _ = P(),
    T = P(),
    M = dv(`${e}/executeMutation`, x, {
      getPendingMeta() {
        return w0({ startedTimeStamp: Date.now() });
      },
    }),
    L = ($) => "force" in $,
    O = ($) => "ifOlderThan" in $,
    U = ($, F, B) => (j, G) => {
      const u1 = L(B) && B.force,
        e1 = O(B) && B.ifOlderThan,
        i1 = (b1 = !0) => {
          const o1 = { forceRefetch: b1, isPrefetch: !0 };
          return i.endpoints[$].initiate(F, o1);
        },
        Z = i.endpoints[$].select(F)(G());
      if (u1) j(i1());
      else if (e1) {
        const b1 = Z == null ? void 0 : Z.fulfilledTimeStamp;
        if (!b1) {
          j(i1());
          return;
        }
        (Number(new Date()) - Number(new Date(b1))) / 1e3 >= e1 && j(i1());
      } else j(i1(!1));
    };
  function D($) {
    return (F) => {
      var B, j;
      return (
        ((j = (B = F == null ? void 0 : F.meta) == null ? void 0 : B.arg) ==
        null
          ? void 0
          : j.endpointName) === $
      );
    };
  }
  function H($, F) {
    return {
      matchPending: xl(jp($), D(F)),
      matchFulfilled: xl(Ws($), D(F)),
      matchRejected: xl(b3($), D(F)),
    };
  }
  return {
    queryThunk: _,
    mutationThunk: M,
    infiniteQueryThunk: T,
    prefetch: U,
    updateQueryData: g,
    upsertQueryData: w,
    patchQueryData: d,
    buildMatchThunkActions: H,
  };
}
function t6(e, { pages: t, pageParams: n }) {
  const r = t.length - 1;
  return e.getNextPageParam(t[r], t, n[r], n);
}
function IE(e, { pages: t, pageParams: n }) {
  var r;
  return (r = e.getPreviousPageParam) == null
    ? void 0
    : r.call(e, t[0], t, n[0], n);
}
function jE(e, t, n, r) {
  return Dp(
    n[e.meta.arg.endpointName][t],
    Ws(e) ? e.payload : void 0,
    $4(e) ? e.payload : void 0,
    e.meta.arg.originalArgs,
    "baseQueryMeta" in e.meta ? e.meta.baseQueryMeta : void 0,
    r
  );
}
function Hc(e, t, n) {
  const r = e[t];
  r && n(r);
}
function zl(e) {
  return ("arg" in e ? e.arg.fixedCacheKey : e.fixedCacheKey) ?? e.requestId;
}
function gv(e, t, n) {
  const r = e[zl(t)];
  r && n(r);
}
var qc = {};
function F$({
  reducerPath: e,
  queryThunk: t,
  mutationThunk: n,
  serializeQueryArgs: r,
  context: {
    endpointDefinitions: i,
    apiUid: s,
    extractRehydrationInfo: o,
    hasRehydrationInfo: l,
  },
  assertTagType: c,
  config: f,
}) {
  const d = Oi(`${e}/resetApiState`);
  function p(D, H, $, F) {
    var B;
    D[(B = H.queryCacheKey)] ??
      (D[B] = { status: "uninitialized", endpointName: H.endpointName }),
      Hc(D, H.queryCacheKey, (j) => {
        (j.status = "pending"),
          (j.requestId = $ && j.requestId ? j.requestId : F.requestId),
          H.originalArgs !== void 0 && (j.originalArgs = H.originalArgs),
          (j.startedTimeStamp = F.startedTimeStamp);
        const G = i[F.arg.endpointName];
        W4(G) && "direction" in H && (j.direction = H.direction);
      });
  }
  function m(D, H, $, F) {
    Hc(D, H.arg.queryCacheKey, (B) => {
      if (B.requestId !== H.requestId && !F) return;
      const { merge: j } = i[H.arg.endpointName];
      if (((B.status = "fulfilled"), j))
        if (B.data !== void 0) {
          const {
            fulfilledTimeStamp: G,
            arg: u1,
            baseQueryMeta: e1,
            requestId: i1,
          } = H;
          let Z = yu(B.data, (b1) =>
            j(b1, $, {
              arg: u1.originalArgs,
              baseQueryMeta: e1,
              fulfilledTimeStamp: G,
              requestId: i1,
            })
          );
          B.data = Z;
        } else B.data = $;
      else
        B.data =
          i[H.arg.endpointName].structuralSharing ?? !0
            ? PE(y2(B.data) ? BU(B.data) : B.data, $)
            : $;
      delete B.error, (B.fulfilledTimeStamp = H.fulfilledTimeStamp);
    });
  }
  const g = Lo({
      name: `${e}/queries`,
      initialState: qc,
      reducers: {
        removeQueryResult: {
          reducer(D, { payload: { queryCacheKey: H } }) {
            delete D[H];
          },
          prepare: v0(),
        },
        cacheEntriesUpserted: {
          reducer(D, H) {
            for (const $ of H.payload) {
              const { queryDescription: F, value: B } = $;
              p(D, F, !0, {
                arg: F,
                requestId: H.meta.requestId,
                startedTimeStamp: H.meta.timestamp,
              }),
                m(
                  D,
                  {
                    arg: F,
                    requestId: H.meta.requestId,
                    fulfilledTimeStamp: H.meta.timestamp,
                    baseQueryMeta: {},
                  },
                  B,
                  !0
                );
            }
          },
          prepare: (D) => ({
            payload: D.map((F) => {
              const { endpointName: B, arg: j, value: G } = F,
                u1 = i[B];
              return {
                queryDescription: {
                  type: "query",
                  endpointName: B,
                  originalArgs: F.arg,
                  queryCacheKey: r({
                    queryArgs: j,
                    endpointDefinition: u1,
                    endpointName: B,
                  }),
                },
                value: G,
              };
            }),
            meta: { [F4]: !0, requestId: Np(), timestamp: Date.now() },
          }),
        },
        queryResultPatched: {
          reducer(D, { payload: { queryCacheKey: H, patches: $ } }) {
            Hc(D, H, (F) => {
              F.data = iv(F.data, $.concat());
            });
          },
          prepare: v0(),
        },
      },
      extraReducers(D) {
        D.addCase(t.pending, (H, { meta: $, meta: { arg: F } }) => {
          const B = e6(F);
          p(H, F, B, $);
        })
          .addCase(t.fulfilled, (H, { meta: $, payload: F }) => {
            const B = e6($.arg);
            m(H, $, F, B);
          })
          .addCase(
            t.rejected,
            (
              H,
              {
                meta: { condition: $, arg: F, requestId: B },
                error: j,
                payload: G,
              }
            ) => {
              Hc(H, F.queryCacheKey, (u1) => {
                if (!$) {
                  if (u1.requestId !== B) return;
                  (u1.status = "rejected"), (u1.error = G ?? j);
                }
              });
            }
          )
          .addMatcher(l, (H, $) => {
            const { queries: F } = o($);
            for (const [B, j] of Object.entries(F))
              ((j == null ? void 0 : j.status) === "fulfilled" ||
                (j == null ? void 0 : j.status) === "rejected") &&
                (H[B] = j);
          });
      },
    }),
    w = Lo({
      name: `${e}/mutations`,
      initialState: qc,
      reducers: {
        removeMutationResult: {
          reducer(D, { payload: H }) {
            const $ = zl(H);
            $ in D && delete D[$];
          },
          prepare: v0(),
        },
      },
      extraReducers(D) {
        D.addCase(
          n.pending,
          (
            H,
            { meta: $, meta: { requestId: F, arg: B, startedTimeStamp: j } }
          ) => {
            B.track &&
              (H[zl($)] = {
                requestId: F,
                status: "pending",
                endpointName: B.endpointName,
                startedTimeStamp: j,
              });
          }
        )
          .addCase(n.fulfilled, (H, { payload: $, meta: F }) => {
            F.arg.track &&
              gv(H, F, (B) => {
                B.requestId === F.requestId &&
                  ((B.status = "fulfilled"),
                  (B.data = $),
                  (B.fulfilledTimeStamp = F.fulfilledTimeStamp));
              });
          })
          .addCase(n.rejected, (H, { payload: $, error: F, meta: B }) => {
            B.arg.track &&
              gv(H, B, (j) => {
                j.requestId === B.requestId &&
                  ((j.status = "rejected"), (j.error = $ ?? F));
              });
          })
          .addMatcher(l, (H, $) => {
            const { mutations: F } = o($);
            for (const [B, j] of Object.entries(F))
              ((j == null ? void 0 : j.status) === "fulfilled" ||
                (j == null ? void 0 : j.status) === "rejected") &&
                B !== (j == null ? void 0 : j.requestId) &&
                (H[B] = j);
          });
      },
    }),
    b = { tags: {}, keys: {} },
    x = Lo({
      name: `${e}/invalidation`,
      initialState: b,
      reducers: {
        updateProvidedBy: {
          reducer(D, H) {
            var $, F, B;
            for (const { queryCacheKey: j, providedTags: G } of H.payload) {
              E(D, j);
              for (const { type: u1, id: e1 } of G) {
                const i1 =
                  (F = ($ = D.tags)[u1] ?? ($[u1] = {}))[
                    (B = e1 || "__internal_without_id")
                  ] ?? (F[B] = []);
                i1.includes(j) || i1.push(j);
              }
              D.keys[j] = G;
            }
          },
          prepare: v0(),
        },
      },
      extraReducers(D) {
        D.addCase(
          g.actions.removeQueryResult,
          (H, { payload: { queryCacheKey: $ } }) => {
            E(H, $);
          }
        )
          .addMatcher(l, (H, $) => {
            var B, j, G;
            const { provided: F } = o($);
            for (const [u1, e1] of Object.entries(F))
              for (const [i1, Z] of Object.entries(e1)) {
                const b1 =
                  (j = (B = H.tags)[u1] ?? (B[u1] = {}))[
                    (G = i1 || "__internal_without_id")
                  ] ?? (j[G] = []);
                for (const o1 of Z) b1.includes(o1) || b1.push(o1);
              }
          })
          .addMatcher(X2(Ws(t), $4(t)), (H, $) => {
            P(H, [$]);
          })
          .addMatcher(g.actions.cacheEntriesUpserted.match, (H, $) => {
            const F = $.payload.map(({ queryDescription: B, value: j }) => ({
              type: "UNKNOWN",
              payload: j,
              meta: {
                requestStatus: "fulfilled",
                requestId: "UNKNOWN",
                arg: B,
              },
            }));
            P(H, F);
          });
      },
    });
  function E(D, H) {
    var F;
    const $ = D.keys[H] ?? [];
    for (const B of $) {
      const j = B.type,
        G = B.id ?? "__internal_without_id",
        u1 = (F = D.tags[j]) == null ? void 0 : F[G];
      u1 && (D.tags[j][G] = u1.filter((e1) => e1 !== H));
    }
    delete D.keys[H];
  }
  function P(D, H) {
    const $ = H.map((F) => {
      const B = jE(F, "providesTags", i, c),
        { queryCacheKey: j } = F.meta.arg;
      return { queryCacheKey: j, providedTags: B };
    });
    x.caseReducers.updateProvidedBy(D, x.actions.updateProvidedBy($));
  }
  const _ = Lo({
      name: `${e}/subscriptions`,
      initialState: qc,
      reducers: {
        updateSubscriptionOptions(D, H) {},
        unsubscribeQueryResult(D, H) {},
        internal_getRTKQSubscriptions() {},
      },
    }),
    T = Lo({
      name: `${e}/internalSubscriptions`,
      initialState: qc,
      reducers: {
        subscriptionsUpdated: {
          reducer(D, H) {
            return iv(D, H.payload);
          },
          prepare: v0(),
        },
      },
    }),
    M = Lo({
      name: `${e}/config`,
      initialState: {
        online: R$(),
        focused: M$(),
        middlewareRegistered: !1,
        ...f,
      },
      reducers: {
        middlewareRegistered(D, { payload: H }) {
          D.middlewareRegistered =
            D.middlewareRegistered === "conflict" || s !== H ? "conflict" : !0;
        },
      },
      extraReducers: (D) => {
        D.addCase(Bp, (H) => {
          H.online = !0;
        })
          .addCase(RE, (H) => {
            H.online = !1;
          })
          .addCase(Op, (H) => {
            H.focused = !0;
          })
          .addCase(ME, (H) => {
            H.focused = !1;
          })
          .addMatcher(l, (H) => ({ ...H }));
      },
    }),
    L = gE({
      queries: g.reducer,
      mutations: w.reducer,
      provided: x.reducer,
      subscriptions: T.reducer,
      config: M.reducer,
    }),
    O = (D, H) => L(d.match(H) ? void 0 : D, H),
    U = {
      ...M.actions,
      ...g.actions,
      ..._.actions,
      ...T.actions,
      ...w.actions,
      ...x.actions,
      resetApiState: d,
    };
  return { reducer: O, actions: U };
}
var Li = Symbol.for("RTKQ/skipToken"),
  NE = { status: "uninitialized" },
  yv = yu(NE, () => {}),
  vv = yu(NE, () => {});
function U$({ serializeQueryArgs: e, reducerPath: t, createSelector: n }) {
  const r = (_) => yv,
    i = (_) => vv;
  return {
    buildQuerySelector: m,
    buildInfiniteQuerySelector: g,
    buildMutationSelector: w,
    selectInvalidatedBy: b,
    selectCachedArgsForQuery: x,
    selectApiState: o,
    selectQueries: l,
    selectMutations: f,
    selectQueryEntry: c,
    selectConfig: d,
  };
  function s(_) {
    return { ..._, ...fv(_.status) };
  }
  function o(_) {
    return _[t];
  }
  function l(_) {
    var T;
    return (T = o(_)) == null ? void 0 : T.queries;
  }
  function c(_, T) {
    var M;
    return (M = l(_)) == null ? void 0 : M[T];
  }
  function f(_) {
    var T;
    return (T = o(_)) == null ? void 0 : T.mutations;
  }
  function d(_) {
    var T;
    return (T = o(_)) == null ? void 0 : T.config;
  }
  function p(_, T, M) {
    return (L) => {
      if (L === Li) return n(r, M);
      const O = e({ queryArgs: L, endpointDefinition: T, endpointName: _ });
      return n((D) => c(D, O) ?? yv, M);
    };
  }
  function m(_, T) {
    return p(_, T, s);
  }
  function g(_, T) {
    const { infiniteQueryOptions: M } = T;
    function L(O) {
      const U = { ...O, ...fv(O.status) },
        { isLoading: D, isError: H, direction: $ } = U,
        F = $ === "forward",
        B = $ === "backward";
      return {
        ...U,
        hasNextPage: E(M, U.data),
        hasPreviousPage: P(M, U.data),
        isFetchingNextPage: D && F,
        isFetchingPreviousPage: D && B,
        isFetchNextPageError: H && F,
        isFetchPreviousPageError: H && B,
      };
    }
    return p(_, T, L);
  }
  function w() {
    return (_) => {
      let T;
      return (
        typeof _ == "object" ? (T = zl(_) ?? Li) : (T = _),
        n(
          T === Li
            ? i
            : (O) => {
                var U, D;
                return (
                  ((D = (U = o(O)) == null ? void 0 : U.mutations) == null
                    ? void 0
                    : D[T]) ?? vv
                );
              },
          s
        )
      );
    };
  }
  function b(_, T) {
    const M = _[t],
      L = new Set();
    for (const O of T.filter(Jd).map(J5)) {
      const U = M.provided.tags[O.type];
      if (!U) continue;
      let D = (O.id !== void 0 ? U[O.id] : pv(Object.values(U))) ?? [];
      for (const H of D) L.add(H);
    }
    return pv(
      Array.from(L.values()).map((O) => {
        const U = M.queries[O];
        return U
          ? [
              {
                queryCacheKey: O,
                endpointName: U.endpointName,
                originalArgs: U.originalArgs,
              },
            ]
          : [];
      })
    );
  }
  function x(_, T) {
    return Object.values(l(_))
      .filter(
        (M) =>
          (M == null ? void 0 : M.endpointName) === T &&
          M.status !== "uninitialized"
      )
      .map((M) => M.originalArgs);
  }
  function E(_, T) {
    return T ? t6(_, T) != null : !1;
  }
  function P(_, T) {
    return !T || !_.getPreviousPageParam ? !1 : IE(_, T) != null;
  }
}
var Wa = WeakMap ? new WeakMap() : void 0,
  t4 = ({ endpointName: e, queryArgs: t }) => {
    let n = "";
    const r = Wa == null ? void 0 : Wa.get(t);
    if (typeof r == "string") n = r;
    else {
      const i = JSON.stringify(
        t,
        (s, o) => (
          (o = typeof o == "bigint" ? { $bigint: o.toString() } : o),
          (o = w3(o)
            ? Object.keys(o)
                .sort()
                .reduce((l, c) => ((l[c] = o[c]), l), {})
            : o),
          o
        )
      );
      w3(t) && (Wa == null || Wa.set(t, i)), (n = i);
    }
    return `${e}(${n})`;
  };
function OE(...e) {
  return function (n) {
    const r = Xd((f) => {
        var d;
        return (d = n.extractRehydrationInfo) == null
          ? void 0
          : d.call(n, f, { reducerPath: n.reducerPath ?? "api" });
      }),
      i = {
        reducerPath: "api",
        keepUnusedDataFor: 60,
        refetchOnMountOrArgChange: !1,
        refetchOnFocus: !1,
        refetchOnReconnect: !1,
        invalidationBehavior: "delayed",
        ...n,
        extractRehydrationInfo: r,
        serializeQueryArgs(f) {
          let d = t4;
          if ("serializeQueryArgs" in f.endpointDefinition) {
            const p = f.endpointDefinition.serializeQueryArgs;
            d = (m) => {
              const g = p(m);
              return typeof g == "string" ? g : t4({ ...m, queryArgs: g });
            };
          } else n.serializeQueryArgs && (d = n.serializeQueryArgs);
          return d(f);
        },
        tagTypes: [...(n.tagTypes || [])],
      },
      s = {
        endpointDefinitions: {},
        batch(f) {
          f();
        },
        apiUid: Np(),
        extractRehydrationInfo: r,
        hasRehydrationInfo: Xd((f) => r(f) != null),
      },
      o = {
        injectEndpoints: c,
        enhanceEndpoints({ addTagTypes: f, endpoints: d }) {
          if (f)
            for (const p of f) i.tagTypes.includes(p) || i.tagTypes.push(p);
          if (d)
            for (const [p, m] of Object.entries(d))
              typeof m == "function"
                ? m(s.endpointDefinitions[p])
                : Object.assign(s.endpointDefinitions[p] || {}, m);
          return o;
        },
      },
      l = e.map((f) => f.init(o, i, s));
    function c(f) {
      const d = f.endpoints({
        query: (p) => ({ ...p, type: "query" }),
        mutation: (p) => ({ ...p, type: "mutation" }),
        infiniteQuery: (p) => ({ ...p, type: "infinitequery" }),
      });
      for (const [p, m] of Object.entries(d)) {
        if (f.overrideExisting !== !0 && p in s.endpointDefinitions) {
          if (f.overrideExisting === "throw") throw new Error(Bi(39));
          continue;
        }
        s.endpointDefinitions[p] = m;
        for (const g of l) g.injectEndpoint(p, m);
      }
      return o;
    }
    return o.injectEndpoints({ endpoints: n.endpoints });
  };
}
function L2(e, ...t) {
  return Object.assign(e, ...t);
}
var $$ = ({ api: e, queryThunk: t, internalState: n }) => {
  const r = `${e.reducerPath}/subscriptions`;
  let i = null,
    s = null;
  const { updateSubscriptionOptions: o, unsubscribeQueryResult: l } =
      e.internalActions,
    c = (g, w) => {
      var x, E, P;
      if (o.match(w)) {
        const { queryCacheKey: _, requestId: T, options: M } = w.payload;
        return (
          (x = g == null ? void 0 : g[_]) != null && x[T] && (g[_][T] = M), !0
        );
      }
      if (l.match(w)) {
        const { queryCacheKey: _, requestId: T } = w.payload;
        return g[_] && delete g[_][T], !0;
      }
      if (e.internalActions.removeQueryResult.match(w))
        return delete g[w.payload.queryCacheKey], !0;
      if (t.pending.match(w)) {
        const {
            meta: { arg: _, requestId: T },
          } = w,
          M = g[(E = _.queryCacheKey)] ?? (g[E] = {});
        return (
          (M[`${T}_running`] = {}),
          _.subscribe && (M[T] = _.subscriptionOptions ?? M[T] ?? {}),
          !0
        );
      }
      let b = !1;
      if (t.fulfilled.match(w) || t.rejected.match(w)) {
        const _ = g[w.meta.arg.queryCacheKey] || {},
          T = `${w.meta.requestId}_running`;
        b || (b = !!_[T]), delete _[T];
      }
      if (t.rejected.match(w)) {
        const {
          meta: { condition: _, arg: T, requestId: M },
        } = w;
        if (_ && T.subscribe) {
          const L = g[(P = T.queryCacheKey)] ?? (g[P] = {});
          (L[M] = T.subscriptionOptions ?? L[M] ?? {}), (b = !0);
        }
      }
      return b;
    },
    f = () => n.currentSubscriptions,
    m = {
      getSubscriptions: f,
      getSubscriptionCount: (g) => {
        const b = f()[g] ?? {};
        return f3(b);
      },
      isRequestSubscribed: (g, w) => {
        var x;
        const b = f();
        return !!((x = b == null ? void 0 : b[g]) != null && x[w]);
      },
    };
  return (g, w) => {
    if (
      (i || (i = JSON.parse(JSON.stringify(n.currentSubscriptions))),
      e.util.resetApiState.match(g))
    )
      return (i = n.currentSubscriptions = {}), (s = null), [!0, !1];
    if (e.internalActions.internal_getRTKQSubscriptions.match(g))
      return [!1, m];
    const b = c(n.currentSubscriptions, g);
    let x = !0;
    if (b) {
      s ||
        (s = setTimeout(() => {
          const _ = JSON.parse(JSON.stringify(n.currentSubscriptions)),
            [, T] = SE(i, () => _);
          w.next(e.internalActions.subscriptionsUpdated(T)),
            (i = _),
            (s = null);
        }, 500));
      const E = typeof g.type == "string" && !!g.type.startsWith(r),
        P = t.rejected.match(g) && g.meta.condition && !!g.meta.arg.subscribe;
      x = !E && !P;
    }
    return [x, !1];
  };
};
function V$(e) {
  for (const t in e) return !1;
  return !0;
}
var W$ = 2147483647 / 1e3 - 1,
  z$ = ({
    reducerPath: e,
    api: t,
    queryThunk: n,
    context: r,
    internalState: i,
    selectors: { selectQueryEntry: s, selectConfig: o },
  }) => {
    const {
        removeQueryResult: l,
        unsubscribeQueryResult: c,
        cacheEntriesUpserted: f,
      } = t.internalActions,
      d = X2(c.match, n.fulfilled, n.rejected, f.match);
    function p(x) {
      const E = i.currentSubscriptions[x];
      return !!E && !V$(E);
    }
    const m = {},
      g = (x, E, P) => {
        const _ = E.getState(),
          T = o(_);
        if (d(x)) {
          let M;
          if (f.match(x))
            M = x.payload.map((L) => L.queryDescription.queryCacheKey);
          else {
            const { queryCacheKey: L } = c.match(x) ? x.payload : x.meta.arg;
            M = [L];
          }
          w(M, E, T);
        }
        if (t.util.resetApiState.match(x))
          for (const [M, L] of Object.entries(m))
            L && clearTimeout(L), delete m[M];
        if (r.hasRehydrationInfo(x)) {
          const { queries: M } = r.extractRehydrationInfo(x);
          w(Object.keys(M), E, T);
        }
      };
    function w(x, E, P) {
      const _ = E.getState();
      for (const T of x) {
        const M = s(_, T);
        b(T, M == null ? void 0 : M.endpointName, E, P);
      }
    }
    function b(x, E, P, _) {
      const T = r.endpointDefinitions[E],
        M = (T == null ? void 0 : T.keepUnusedDataFor) ?? _.keepUnusedDataFor;
      if (M === 1 / 0) return;
      const L = Math.max(0, Math.min(M, W$));
      if (!p(x)) {
        const O = m[x];
        O && clearTimeout(O),
          (m[x] = setTimeout(() => {
            p(x) || P.dispatch(l({ queryCacheKey: x })), delete m[x];
          }, L * 1e3));
      }
    }
    return g;
  },
  wv = new Error("Promise never resolved before cacheEntryRemoved."),
  H$ = ({
    api: e,
    reducerPath: t,
    context: n,
    queryThunk: r,
    mutationThunk: i,
    internalState: s,
    selectors: { selectQueryEntry: o, selectApiState: l },
  }) => {
    const c = X5(r),
      f = X5(i),
      d = Ws(r, i),
      p = {};
    function m(E, P, _) {
      const T = p[E];
      T != null &&
        T.valueResolved &&
        (T.valueResolved({ data: P, meta: _ }), delete T.valueResolved);
    }
    function g(E) {
      const P = p[E];
      P && (delete p[E], P.cacheEntryRemoved());
    }
    const w = (E, P, _) => {
      const T = b(E);
      function M(L, O, U, D) {
        const H = o(_, O),
          $ = o(P.getState(), O);
        !H && $ && x(L, D, O, P, U);
      }
      if (r.pending.match(E))
        M(
          E.meta.arg.endpointName,
          T,
          E.meta.requestId,
          E.meta.arg.originalArgs
        );
      else if (e.internalActions.cacheEntriesUpserted.match(E))
        for (const { queryDescription: L, value: O } of E.payload) {
          const { endpointName: U, originalArgs: D, queryCacheKey: H } = L;
          M(U, H, E.meta.requestId, D), m(H, O, {});
        }
      else if (i.pending.match(E))
        P.getState()[t].mutations[T] &&
          x(
            E.meta.arg.endpointName,
            E.meta.arg.originalArgs,
            T,
            P,
            E.meta.requestId
          );
      else if (d(E)) m(T, E.payload, E.meta.baseQueryMeta);
      else if (
        e.internalActions.removeQueryResult.match(E) ||
        e.internalActions.removeMutationResult.match(E)
      )
        g(T);
      else if (e.util.resetApiState.match(E))
        for (const L of Object.keys(p)) g(L);
    };
    function b(E) {
      return c(E)
        ? E.meta.arg.queryCacheKey
        : f(E)
        ? E.meta.arg.fixedCacheKey ?? E.meta.requestId
        : e.internalActions.removeQueryResult.match(E)
        ? E.payload.queryCacheKey
        : e.internalActions.removeMutationResult.match(E)
        ? zl(E.payload)
        : "";
    }
    function x(E, P, _, T, M) {
      const L = n.endpointDefinitions[E],
        O = L == null ? void 0 : L.onCacheEntryAdded;
      if (!O) return;
      const U = {},
        D = new Promise((G) => {
          U.cacheEntryRemoved = G;
        }),
        H = Promise.race([
          new Promise((G) => {
            U.valueResolved = G;
          }),
          D.then(() => {
            throw wv;
          }),
        ]);
      H.catch(() => {}), (p[_] = U);
      const $ = e.endpoints[E].select(e4(L) ? P : _),
        F = T.dispatch((G, u1, e1) => e1),
        B = {
          ...T,
          getCacheEntry: () => $(T.getState()),
          requestId: M,
          extra: F,
          updateCachedData: e4(L)
            ? (G) => T.dispatch(e.util.updateQueryData(E, P, G))
            : void 0,
          cacheDataLoaded: H,
          cacheEntryRemoved: D,
        },
        j = O(P, B);
      Promise.resolve(j).catch((G) => {
        if (G !== wv) throw G;
      });
    }
    return w;
  },
  q$ =
    ({ api: e, context: { apiUid: t }, reducerPath: n }) =>
    (r, i) => {
      e.util.resetApiState.match(r) &&
        i.dispatch(e.internalActions.middlewareRegistered(t));
    },
  K$ = ({
    reducerPath: e,
    context: t,
    context: { endpointDefinitions: n },
    mutationThunk: r,
    queryThunk: i,
    api: s,
    assertTagType: o,
    refetchQuery: l,
    internalState: c,
  }) => {
    const { removeQueryResult: f } = s.internalActions,
      d = X2(Ws(r), $4(r)),
      p = X2(Ws(r, i), b3(r, i));
    let m = [];
    const g = (x, E) => {
      d(x)
        ? b(jE(x, "invalidatesTags", n, o), E)
        : p(x)
        ? b([], E)
        : s.util.invalidateTags.match(x) &&
          b(Dp(x.payload, void 0, void 0, void 0, void 0, o), E);
    };
    function w(x) {
      var _;
      const { queries: E, mutations: P } = x;
      for (const T of [E, P])
        for (const M in T)
          if (((_ = T[M]) == null ? void 0 : _.status) === "pending") return !0;
      return !1;
    }
    function b(x, E) {
      const P = E.getState(),
        _ = P[e];
      if ((m.push(...x), _.config.invalidationBehavior === "delayed" && w(_)))
        return;
      const T = m;
      if (((m = []), T.length === 0)) return;
      const M = s.util.selectInvalidatedBy(P, T);
      t.batch(() => {
        const L = Array.from(M.values());
        for (const { queryCacheKey: O } of L) {
          const U = _.queries[O],
            D = c.currentSubscriptions[O] ?? {};
          U &&
            (f3(D) === 0
              ? E.dispatch(f({ queryCacheKey: O }))
              : U.status !== "uninitialized" && E.dispatch(l(U)));
        }
      });
    }
    return g;
  },
  G$ = ({
    reducerPath: e,
    queryThunk: t,
    api: n,
    refetchQuery: r,
    internalState: i,
  }) => {
    const s = {},
      o = (m, g) => {
        (n.internalActions.updateSubscriptionOptions.match(m) ||
          n.internalActions.unsubscribeQueryResult.match(m)) &&
          c(m.payload, g),
          (t.pending.match(m) || (t.rejected.match(m) && m.meta.condition)) &&
            c(m.meta.arg, g),
          (t.fulfilled.match(m) ||
            (t.rejected.match(m) && !m.meta.condition)) &&
            l(m.meta.arg, g),
          n.util.resetApiState.match(m) && d();
      };
    function l({ queryCacheKey: m }, g) {
      const w = g.getState()[e],
        b = w.queries[m],
        x = i.currentSubscriptions[m];
      if (!b || b.status === "uninitialized") return;
      const { lowestPollingInterval: E, skipPollingIfUnfocused: P } = p(x);
      if (!Number.isFinite(E)) return;
      const _ = s[m];
      _ != null && _.timeout && (clearTimeout(_.timeout), (_.timeout = void 0));
      const T = Date.now() + E;
      s[m] = {
        nextPollTimestamp: T,
        pollingInterval: E,
        timeout: setTimeout(() => {
          (w.config.focused || !P) && g.dispatch(r(b)),
            l({ queryCacheKey: m }, g);
        }, E),
      };
    }
    function c({ queryCacheKey: m }, g) {
      const b = g.getState()[e].queries[m],
        x = i.currentSubscriptions[m];
      if (!b || b.status === "uninitialized") return;
      const { lowestPollingInterval: E } = p(x);
      if (!Number.isFinite(E)) {
        f(m);
        return;
      }
      const P = s[m],
        _ = Date.now() + E;
      (!P || _ < P.nextPollTimestamp) && l({ queryCacheKey: m }, g);
    }
    function f(m) {
      const g = s[m];
      g != null && g.timeout && clearTimeout(g.timeout), delete s[m];
    }
    function d() {
      for (const m of Object.keys(s)) f(m);
    }
    function p(m = {}) {
      let g = !1,
        w = Number.POSITIVE_INFINITY;
      for (let b in m)
        m[b].pollingInterval &&
          ((w = Math.min(m[b].pollingInterval, w)),
          (g = m[b].skipPollingIfUnfocused || g));
      return { lowestPollingInterval: w, skipPollingIfUnfocused: g };
    }
    return o;
  },
  Y$ = ({ api: e, context: t, queryThunk: n, mutationThunk: r }) => {
    const i = jp(n, r),
      s = b3(n, r),
      o = Ws(n, r),
      l = {};
    return (f, d) => {
      var p, m;
      if (i(f)) {
        const {
            requestId: g,
            arg: { endpointName: w, originalArgs: b },
          } = f.meta,
          x = t.endpointDefinitions[w],
          E = x == null ? void 0 : x.onQueryStarted;
        if (E) {
          const P = {},
            _ = new Promise((O, U) => {
              (P.resolve = O), (P.reject = U);
            });
          _.catch(() => {}), (l[g] = P);
          const T = e.endpoints[w].select(e4(x) ? b : g),
            M = d.dispatch((O, U, D) => D),
            L = {
              ...d,
              getCacheEntry: () => T(d.getState()),
              requestId: g,
              extra: M,
              updateCachedData: e4(x)
                ? (O) => d.dispatch(e.util.updateQueryData(w, b, O))
                : void 0,
              queryFulfilled: _,
            };
          E(b, L);
        }
      } else if (o(f)) {
        const { requestId: g, baseQueryMeta: w } = f.meta;
        (p = l[g]) == null || p.resolve({ data: f.payload, meta: w }),
          delete l[g];
      } else if (s(f)) {
        const { requestId: g, rejectedWithValue: w, baseQueryMeta: b } = f.meta;
        (m = l[g]) == null ||
          m.reject({
            error: f.payload ?? f.error,
            isUnhandledError: !w,
            meta: b,
          }),
          delete l[g];
      }
    };
  },
  Q$ = ({
    reducerPath: e,
    context: t,
    api: n,
    refetchQuery: r,
    internalState: i,
  }) => {
    const { removeQueryResult: s } = n.internalActions,
      o = (c, f) => {
        Op.match(c) && l(f, "refetchOnFocus"),
          Bp.match(c) && l(f, "refetchOnReconnect");
      };
    function l(c, f) {
      const d = c.getState()[e],
        p = d.queries,
        m = i.currentSubscriptions;
      t.batch(() => {
        for (const g of Object.keys(m)) {
          const w = p[g],
            b = m[g];
          if (!b || !w) continue;
          (Object.values(b).some((E) => E[f] === !0) ||
            (Object.values(b).every((E) => E[f] === void 0) && d.config[f])) &&
            (f3(b) === 0
              ? c.dispatch(s({ queryCacheKey: g }))
              : w.status !== "uninitialized" && c.dispatch(r(w)));
        }
      });
    }
    return o;
  };
function Z$(e) {
  const { reducerPath: t, queryThunk: n, api: r, context: i } = e,
    { apiUid: s } = i,
    o = { invalidateTags: Oi(`${t}/invalidateTags`) },
    l = (p) => p.type.startsWith(`${t}/`),
    c = [q$, z$, K$, G$, H$, Y$];
  return {
    middleware: (p) => {
      let m = !1;
      const w = {
          ...e,
          internalState: { currentSubscriptions: {} },
          refetchQuery: d,
          isThisApiSliceAction: l,
        },
        b = c.map((P) => P(w)),
        x = $$(w),
        E = Q$(w);
      return (P) => (_) => {
        if (!yE(_)) return P(_);
        m || ((m = !0), p.dispatch(r.internalActions.middlewareRegistered(s)));
        const T = { ...p, next: P },
          M = p.getState(),
          [L, O] = x(_, T, M);
        let U;
        if (
          (L ? (U = P(_)) : (U = O),
          p.getState()[t] && (E(_, T, M), l(_) || i.hasRehydrationInfo(_)))
        )
          for (const D of b) D(_, T, M);
        return U;
      };
    },
    actions: o,
  };
  function d(p) {
    return e.api.endpoints[p.endpointName].initiate(p.originalArgs, {
      subscribe: !1,
      forceRefetch: !0,
    });
  }
}
var bv = Symbol(),
  BE = ({ createSelector: e = ca } = {}) => ({
    name: bv,
    init(
      t,
      {
        baseQuery: n,
        tagTypes: r,
        reducerPath: i,
        serializeQueryArgs: s,
        keepUnusedDataFor: o,
        refetchOnMountOrArgChange: l,
        refetchOnFocus: c,
        refetchOnReconnect: f,
        invalidationBehavior: d,
        onSchemaFailure: p,
        catchSchemaFailure: m,
        skipSchemaValidation: g,
      },
      w
    ) {
      KU();
      const b = (M1) => M1;
      Object.assign(t, {
        reducerPath: i,
        endpoints: {},
        internalActions: {
          onOnline: Bp,
          onOffline: RE,
          onFocus: Op,
          onFocusLost: ME,
        },
        util: {},
      });
      const x = U$({
          serializeQueryArgs: s,
          reducerPath: i,
          createSelector: e,
        }),
        {
          selectInvalidatedBy: E,
          selectCachedArgsForQuery: P,
          buildQuerySelector: _,
          buildInfiniteQuerySelector: T,
          buildMutationSelector: M,
        } = x;
      L2(t.util, { selectInvalidatedBy: E, selectCachedArgsForQuery: P });
      const {
          queryThunk: L,
          infiniteQueryThunk: O,
          mutationThunk: U,
          patchQueryData: D,
          updateQueryData: H,
          upsertQueryData: $,
          prefetch: F,
          buildMatchThunkActions: B,
        } = D$({
          baseQuery: n,
          reducerPath: i,
          context: w,
          api: t,
          serializeQueryArgs: s,
          assertTagType: b,
          selectors: x,
          onSchemaFailure: p,
          catchSchemaFailure: m,
          skipSchemaValidation: g,
        }),
        { reducer: j, actions: G } = F$({
          context: w,
          queryThunk: L,
          mutationThunk: U,
          serializeQueryArgs: s,
          reducerPath: i,
          assertTagType: b,
          config: {
            refetchOnFocus: c,
            refetchOnReconnect: f,
            refetchOnMountOrArgChange: l,
            keepUnusedDataFor: o,
            reducerPath: i,
            invalidationBehavior: d,
          },
        });
      L2(t.util, {
        patchQueryData: D,
        updateQueryData: H,
        upsertQueryData: $,
        prefetch: F,
        resetApiState: G.resetApiState,
        upsertQueryEntries: G.cacheEntriesUpserted,
      }),
        L2(t.internalActions, G);
      const { middleware: u1, actions: e1 } = Z$({
        reducerPath: i,
        context: w,
        queryThunk: L,
        mutationThunk: U,
        infiniteQueryThunk: O,
        api: t,
        assertTagType: b,
        selectors: x,
      });
      L2(t.util, e1), L2(t, { reducer: j, middleware: u1 });
      const {
        buildInitiateQuery: i1,
        buildInitiateInfiniteQuery: Z,
        buildInitiateMutation: b1,
        getRunningMutationThunk: o1,
        getRunningMutationsThunk: k1,
        getRunningQueriesThunk: Y1,
        getRunningQueryThunk: G1,
      } = O$({
        queryThunk: L,
        mutationThunk: U,
        infiniteQueryThunk: O,
        api: t,
        serializeQueryArgs: s,
        context: w,
      });
      return (
        L2(t.util, {
          getRunningMutationThunk: o1,
          getRunningMutationsThunk: k1,
          getRunningQueryThunk: G1,
          getRunningQueriesThunk: Y1,
        }),
        {
          name: bv,
          injectEndpoint(M1, Q1) {
            var h1;
            const d1 = (h1 = t.endpoints)[M1] ?? (h1[M1] = {});
            V4(Q1) &&
              L2(
                d1,
                { name: M1, select: _(M1, Q1), initiate: i1(M1, Q1) },
                B(L, M1)
              ),
              I$(Q1) &&
                L2(d1, { name: M1, select: M(), initiate: b1(M1) }, B(U, M1)),
              W4(Q1) &&
                L2(
                  d1,
                  { name: M1, select: T(M1, Q1), initiate: Z(M1, Q1) },
                  B(L, M1)
                );
          },
        }
      );
    },
  });
BE();
function Kc(e) {
  return e.replace(e[0], e[0].toUpperCase());
}
function X$(e) {
  return e.type === "query";
}
function J$(e) {
  return e.type === "mutation";
}
function DE(e) {
  return e.type === "infinitequery";
}
function b0(e, ...t) {
  return Object.assign(e, ...t);
}
var P9 = Symbol();
function M9(e, t, n, r) {
  const i = N.useMemo(
      () => ({
        queryArgs: e,
        serialized:
          typeof e == "object"
            ? t({ queryArgs: e, endpointDefinition: n, endpointName: r })
            : e,
      }),
      [e, t, n, r]
    ),
    s = N.useRef(i);
  return (
    N.useEffect(() => {
      s.current.serialized !== i.serialized && (s.current = i);
    }, [i]),
    s.current.serialized === i.serialized ? s.current.queryArgs : e
  );
}
function Gc(e) {
  const t = N.useRef(e);
  return (
    N.useEffect(() => {
      dl(t.current, e) || (t.current = e);
    }, [e]),
    dl(t.current, e) ? t.current : e
  );
}
var eV = () =>
    typeof window < "u" &&
    typeof window.document < "u" &&
    typeof window.document.createElement < "u",
  tV = eV(),
  nV = () => typeof navigator < "u" && navigator.product === "ReactNative",
  rV = nV(),
  iV = () => (tV || rV ? N.useLayoutEffect : N.useEffect),
  sV = iV(),
  xv = (e) =>
    e.isUninitialized
      ? {
          ...e,
          isUninitialized: !1,
          isFetching: !0,
          isLoading: e.data === void 0,
          status: TE.pending,
        }
      : e;
function R9(e, ...t) {
  const n = {};
  return (
    t.forEach((r) => {
      n[r] = e[r];
    }),
    n
  );
}
var L9 = ["data", "status", "isLoading", "isSuccess", "isError", "error"];
function oV({
  api: e,
  moduleOptions: {
    batch: t,
    hooks: { useDispatch: n, useSelector: r, useStore: i },
    unstable__sideEffectsInRender: s,
    createSelector: o,
  },
  serializeQueryArgs: l,
  context: c,
}) {
  const f = s ? (T) => T() : N.useEffect;
  return {
    buildQueryHooks: E,
    buildInfiniteQueryHooks: P,
    buildMutationHook: _,
    usePrefetch: m,
  };
  function d(T, M, L) {
    if (M != null && M.endpointName && T.isUninitialized) {
      const { endpointName: F } = M,
        B = c.endpointDefinitions[F];
      L !== Li &&
        l({
          queryArgs: M.originalArgs,
          endpointDefinition: B,
          endpointName: F,
        }) === l({ queryArgs: L, endpointDefinition: B, endpointName: F }) &&
        (M = void 0);
    }
    let O = T.isSuccess ? T.data : M == null ? void 0 : M.data;
    O === void 0 && (O = T.data);
    const U = O !== void 0,
      D = T.isLoading,
      H = (!M || M.isLoading || M.isUninitialized) && !U && D,
      $ =
        T.isSuccess ||
        (U && ((D && !(M != null && M.isError)) || T.isUninitialized));
    return {
      ...T,
      data: O,
      currentData: T.data,
      isFetching: D,
      isLoading: H,
      isSuccess: $,
    };
  }
  function p(T, M, L) {
    if (M != null && M.endpointName && T.isUninitialized) {
      const { endpointName: F } = M,
        B = c.endpointDefinitions[F];
      L !== Li &&
        l({
          queryArgs: M.originalArgs,
          endpointDefinition: B,
          endpointName: F,
        }) === l({ queryArgs: L, endpointDefinition: B, endpointName: F }) &&
        (M = void 0);
    }
    let O = T.isSuccess ? T.data : M == null ? void 0 : M.data;
    O === void 0 && (O = T.data);
    const U = O !== void 0,
      D = T.isLoading,
      H = (!M || M.isLoading || M.isUninitialized) && !U && D,
      $ = T.isSuccess || (D && U);
    return {
      ...T,
      data: O,
      currentData: T.data,
      isFetching: D,
      isLoading: H,
      isSuccess: $,
    };
  }
  function m(T, M) {
    const L = n(),
      O = Gc(M);
    return N.useCallback(
      (U, D) => L(e.util.prefetch(T, U, { ...O, ...D })),
      [T, L, O]
    );
  }
  function g(
    T,
    M,
    {
      refetchOnReconnect: L,
      refetchOnFocus: O,
      refetchOnMountOrArgChange: U,
      skip: D = !1,
      pollingInterval: H = 0,
      skipPollingIfUnfocused: $ = !1,
      ...F
    } = {}
  ) {
    const { initiate: B } = e.endpoints[T],
      j = n(),
      G = N.useRef(void 0);
    if (!G.current) {
      const M1 = j(e.internalActions.internal_getRTKQSubscriptions());
      G.current = M1;
    }
    const u1 = M9(D ? Li : M, t4, c.endpointDefinitions[T], T),
      e1 = Gc({
        refetchOnReconnect: L,
        refetchOnFocus: O,
        pollingInterval: H,
        skipPollingIfUnfocused: $,
      }),
      i1 = F.initialPageParam,
      Z = Gc(i1),
      b1 = N.useRef(void 0);
    let { queryCacheKey: o1, requestId: k1 } = b1.current || {},
      Y1 = !1;
    o1 && k1 && (Y1 = G.current.isRequestSubscribed(o1, k1));
    const G1 = !Y1 && b1.current !== void 0;
    return (
      f(() => {
        G1 && (b1.current = void 0);
      }, [G1]),
      f(() => {
        var re;
        const M1 = b1.current;
        if (u1 === Li) {
          M1 == null || M1.unsubscribe(), (b1.current = void 0);
          return;
        }
        const Q1 = (re = b1.current) == null ? void 0 : re.subscriptionOptions;
        if (!M1 || M1.arg !== u1) {
          M1 == null || M1.unsubscribe();
          const d1 = j(
            B(u1, {
              subscriptionOptions: e1,
              forceRefetch: U,
              ...(DE(c.endpointDefinitions[T]) ? { initialPageParam: Z } : {}),
            })
          );
          b1.current = d1;
        } else e1 !== Q1 && M1.updateSubscriptionOptions(e1);
      }, [j, B, U, u1, e1, G1, Z, T]),
      [b1, j, B, e1]
    );
  }
  function w(T, M) {
    return (O, { skip: U = !1, selectFromResult: D } = {}) => {
      const { select: H } = e.endpoints[T],
        $ = M9(U ? Li : O, l, c.endpointDefinitions[T], T),
        F = N.useRef(void 0),
        B = N.useMemo(
          () =>
            o([H($), (i1, Z) => Z, (i1) => $], M, {
              memoizeOptions: { resultEqualityCheck: dl },
            }),
          [H, $]
        ),
        j = N.useMemo(
          () =>
            D
              ? o([B], D, { devModeChecks: { identityFunctionCheck: "never" } })
              : B,
          [B, D]
        ),
        G = r((i1) => j(i1, F.current), dl),
        u1 = i(),
        e1 = B(u1.getState(), F.current);
      return (
        sV(() => {
          F.current = e1;
        }, [e1]),
        G
      );
    };
  }
  function b(T) {
    N.useEffect(
      () => () => {
        var M, L;
        (L = (M = T.current) == null ? void 0 : M.unsubscribe) == null ||
          L.call(M),
          (T.current = void 0);
      },
      [T]
    );
  }
  function x(T) {
    if (!T.current) throw new Error(Bi(38));
    return T.current.refetch();
  }
  function E(T) {
    const M = (U, D = {}) => {
        const [H] = g(T, U, D);
        return b(H), N.useMemo(() => ({ refetch: () => x(H) }), [H]);
      },
      L = ({
        refetchOnReconnect: U,
        refetchOnFocus: D,
        pollingInterval: H = 0,
        skipPollingIfUnfocused: $ = !1,
      } = {}) => {
        const { initiate: F } = e.endpoints[T],
          B = n(),
          [j, G] = N.useState(P9),
          u1 = N.useRef(void 0),
          e1 = Gc({
            refetchOnReconnect: U,
            refetchOnFocus: D,
            pollingInterval: H,
            skipPollingIfUnfocused: $,
          });
        f(() => {
          var k1, Y1;
          const o1 =
            (k1 = u1.current) == null ? void 0 : k1.subscriptionOptions;
          e1 !== o1 &&
            ((Y1 = u1.current) == null || Y1.updateSubscriptionOptions(e1));
        }, [e1]);
        const i1 = N.useRef(e1);
        f(() => {
          i1.current = e1;
        }, [e1]);
        const Z = N.useCallback(
            function (o1, k1 = !1) {
              let Y1;
              return (
                t(() => {
                  var G1;
                  (G1 = u1.current) == null || G1.unsubscribe(),
                    (u1.current = Y1 =
                      B(
                        F(o1, {
                          subscriptionOptions: i1.current,
                          forceRefetch: !k1,
                        })
                      )),
                    G(o1);
                }),
                Y1
              );
            },
            [B, F]
          ),
          b1 = N.useCallback(() => {
            var o1, k1;
            (o1 = u1.current) != null &&
              o1.queryCacheKey &&
              B(
                e.internalActions.removeQueryResult({
                  queryCacheKey:
                    (k1 = u1.current) == null ? void 0 : k1.queryCacheKey,
                })
              );
          }, [B]);
        return (
          N.useEffect(
            () => () => {
              var o1;
              (o1 = u1 == null ? void 0 : u1.current) == null ||
                o1.unsubscribe();
            },
            []
          ),
          N.useEffect(() => {
            j !== P9 && !u1.current && Z(j, !0);
          }, [j, Z]),
          N.useMemo(() => [Z, j, { reset: b1 }], [Z, j, b1])
        );
      },
      O = w(T, d);
    return {
      useQueryState: O,
      useQuerySubscription: M,
      useLazyQuerySubscription: L,
      useLazyQuery(U) {
        const [D, H, { reset: $ }] = L(U),
          F = O(H, { ...U, skip: H === P9 }),
          B = N.useMemo(() => ({ lastArg: H }), [H]);
        return N.useMemo(() => [D, { ...F, reset: $ }, B], [D, F, $, B]);
      },
      useQuery(U, D) {
        const H = M(U, D),
          $ = O(U, {
            selectFromResult: U === Li || (D != null && D.skip) ? void 0 : xv,
            ...D,
          }),
          F = R9($, ...L9);
        return N.useDebugValue(F), N.useMemo(() => ({ ...$, ...H }), [$, H]);
      },
    };
  }
  function P(T) {
    const M = (O, U = {}) => {
        const [D, H, $, F] = g(T, O, U),
          B = N.useRef(F);
        f(() => {
          B.current = F;
        }, [F]);
        const j = N.useCallback(
          function (e1, i1) {
            let Z;
            return (
              t(() => {
                var b1;
                (b1 = D.current) == null || b1.unsubscribe(),
                  (D.current = Z =
                    H(
                      $(e1, { subscriptionOptions: B.current, direction: i1 })
                    ));
              }),
              Z
            );
          },
          [D, H, $]
        );
        b(D);
        const G = M9(U.skip ? Li : O, t4, c.endpointDefinitions[T], T),
          u1 = N.useCallback(() => x(D), [D]);
        return N.useMemo(
          () => ({
            trigger: j,
            refetch: u1,
            fetchNextPage: () => j(G, "forward"),
            fetchPreviousPage: () => j(G, "backward"),
          }),
          [u1, j, G]
        );
      },
      L = w(T, p);
    return {
      useInfiniteQueryState: L,
      useInfiniteQuerySubscription: M,
      useInfiniteQuery(O, U) {
        const { refetch: D, fetchNextPage: H, fetchPreviousPage: $ } = M(O, U),
          F = L(O, {
            selectFromResult: O === Li || (U != null && U.skip) ? void 0 : xv,
            ...U,
          }),
          B = R9(F, ...L9, "hasNextPage", "hasPreviousPage");
        return (
          N.useDebugValue(B),
          N.useMemo(
            () => ({
              ...F,
              fetchNextPage: H,
              fetchPreviousPage: $,
              refetch: D,
            }),
            [F, H, $, D]
          )
        );
      },
    };
  }
  function _(T) {
    return ({ selectFromResult: M, fixedCacheKey: L } = {}) => {
      const { select: O, initiate: U } = e.endpoints[T],
        D = n(),
        [H, $] = N.useState();
      N.useEffect(
        () => () => {
          (H != null && H.arg.fixedCacheKey) || H == null || H.reset();
        },
        [H]
      );
      const F = N.useCallback(
          function (o1) {
            const k1 = D(U(o1, { fixedCacheKey: L }));
            return $(k1), k1;
          },
          [D, U, L]
        ),
        { requestId: B } = H || {},
        j = N.useMemo(
          () =>
            O({
              fixedCacheKey: L,
              requestId: H == null ? void 0 : H.requestId,
            }),
          [L, H, O]
        ),
        G = N.useMemo(() => (M ? o([j], M) : j), [M, j]),
        u1 = r(G, dl),
        e1 = L == null ? (H == null ? void 0 : H.arg.originalArgs) : void 0,
        i1 = N.useCallback(() => {
          t(() => {
            H && $(void 0),
              L &&
                D(
                  e.internalActions.removeMutationResult({
                    requestId: B,
                    fixedCacheKey: L,
                  })
                );
          });
        }, [D, L, H, B]),
        Z = R9(u1, ...L9, "endpointName");
      N.useDebugValue(Z);
      const b1 = N.useMemo(
        () => ({ ...u1, originalArgs: e1, reset: i1 }),
        [u1, e1, i1]
      );
      return N.useMemo(() => [F, b1], [F, b1]);
    };
  }
}
var aV = Symbol(),
  lV = ({
    batch: e = DR,
    hooks: t = { useDispatch: v2, useSelector: ia, useStore: CC },
    createSelector: n = ca,
    unstable__sideEffectsInRender: r = !1,
    ...i
  } = {}) => ({
    name: aV,
    init(s, { serializeQueryArgs: o }, l) {
      const c = s,
        {
          buildQueryHooks: f,
          buildInfiniteQueryHooks: d,
          buildMutationHook: p,
          usePrefetch: m,
        } = oV({
          api: s,
          moduleOptions: {
            batch: e,
            hooks: t,
            unstable__sideEffectsInRender: r,
            createSelector: n,
          },
          serializeQueryArgs: o,
          context: l,
        });
      return (
        b0(c, { usePrefetch: m }),
        b0(l, { batch: e }),
        {
          injectEndpoint(g, w) {
            if (X$(w)) {
              const {
                useQuery: b,
                useLazyQuery: x,
                useLazyQuerySubscription: E,
                useQueryState: P,
                useQuerySubscription: _,
              } = f(g);
              b0(c.endpoints[g], {
                useQuery: b,
                useLazyQuery: x,
                useLazyQuerySubscription: E,
                useQueryState: P,
                useQuerySubscription: _,
              }),
                (s[`use${Kc(g)}Query`] = b),
                (s[`useLazy${Kc(g)}Query`] = x);
            }
            if (J$(w)) {
              const b = p(g);
              b0(c.endpoints[g], { useMutation: b }),
                (s[`use${Kc(g)}Mutation`] = b);
            } else if (DE(w)) {
              const {
                useInfiniteQuery: b,
                useInfiniteQuerySubscription: x,
                useInfiniteQueryState: E,
              } = d(g);
              b0(c.endpoints[g], {
                useInfiniteQuery: b,
                useInfiniteQuerySubscription: x,
                useInfiniteQueryState: E,
              }),
                (s[`use${Kc(g)}InfiniteQuery`] = b);
            }
          },
        }
      );
    },
  }),
  wu = OE(BE(), lV());
const uV = /ref_(\d+)/,
  cV = () => window.Telegram.WebApp.platform,
  dV = () => {
    var l;
    const {
      first_name: e = "",
      last_name: t = "",
      photo_url: n = "",
      is_premium: r = !1,
      id: i = 0,
      username: s = "",
      language_code: o,
      } = ((l = window.Telegram.WebApp.initDataUnsafe) == null
      ? void 0
      : l.user) ?? {};
    return {
      firstName: e,
      lastName: t,
      isPremium: r,
      language: o,
      avatar: n,
      id: i,
      username: s,
    };
  },
  fV = () => {
    var t, n, r;
    return {
      referrer:
        new URLSearchParams(window.location.search).get("ref") ||
        ((r =
          (n =
            (t = window.Telegram.WebApp.initDataUnsafe) == null
              ? void 0
              : t.start_param) == null
            ? void 0
            : n.match(uV)) == null
          ? void 0
          : r[1]) ||
        null,
    };
  },
  FE = () => btoa(window.Telegram.WebApp.initData),
  hV = () => ({ ...dV(), ...fV(), platform: cV(), token: FE() });
function UE(e, t) {
  return function () {
    return e.apply(t, arguments);
  };
}
const { toString: pV } = Object.prototype,
  { getPrototypeOf: Fp } = Object,
  z4 = ((e) => (t) => {
    const n = pV.call(t);
    return e[n] || (e[n] = n.slice(8, -1).toLowerCase());
  })(Object.create(null)),
  Vi = (e) => ((e = e.toLowerCase()), (t) => z4(t) === e),
  H4 = (e) => (t) => typeof t === e,
  { isArray: L3 } = Array,
  Hl = H4("undefined");
function mV(e) {
  return (
    e !== null &&
    !Hl(e) &&
    e.constructor !== null &&
    !Hl(e.constructor) &&
    ei(e.constructor.isBuffer) &&
    e.constructor.isBuffer(e)
  );
}
const $E = Vi("ArrayBuffer");
function gV(e) {
  let t;
  return (
    typeof ArrayBuffer < "u" && ArrayBuffer.isView
      ? (t = ArrayBuffer.isView(e))
      : (t = e && e.buffer && $E(e.buffer)),
    t
  );
}
const yV = H4("string"),
  ei = H4("function"),
  VE = H4("number"),
  q4 = (e) => e !== null && typeof e == "object",
  vV = (e) => e === !0 || e === !1,
  hd = (e) => {
    if (z4(e) !== "object") return !1;
    const t = Fp(e);
    return (
      (t === null ||
        t === Object.prototype ||
        Object.getPrototypeOf(t) === null) &&
      !(Symbol.toStringTag in e) &&
      !(Symbol.iterator in e)
    );
  },
  wV = Vi("Date"),
  bV = Vi("File"),
  xV = Vi("Blob"),
  CV = Vi("FileList"),
  SV = (e) => q4(e) && ei(e.pipe),
  EV = (e) => {
    let t;
    return (
      e &&
      ((typeof FormData == "function" && e instanceof FormData) ||
        (ei(e.append) &&
          ((t = z4(e)) === "formdata" ||
            (t === "object" &&
              ei(e.toString) &&
              e.toString() === "[object FormData]"))))
    );
  },
  kV = Vi("URLSearchParams"),
  [_V, AV, TV, PV] = ["ReadableStream", "Request", "Response", "Headers"].map(
    Vi
  ),
  MV = (e) =>
    e.trim ? e.trim() : e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
function bu(e, t, { allOwnKeys: n = !1 } = {}) {
  if (e === null || typeof e > "u") return;
  let r, i;
  if ((typeof e != "object" && (e = [e]), L3(e)))
    for (r = 0, i = e.length; r < i; r++) t.call(null, e[r], r, e);
  else {
    const s = n ? Object.getOwnPropertyNames(e) : Object.keys(e),
      o = s.length;
    let l;
    for (r = 0; r < o; r++) (l = s[r]), t.call(null, e[l], l, e);
  }
}
function WE(e, t) {
  t = t.toLowerCase();
  const n = Object.keys(e);
  let r = n.length,
    i;
  for (; r-- > 0; ) if (((i = n[r]), t === i.toLowerCase())) return i;
  return null;
}
const Vo =
    typeof globalThis < "u"
      ? globalThis
      : typeof self < "u"
      ? self
      : typeof window < "u"
      ? window
      : global,
  zE = (e) => !Hl(e) && e !== Vo;
function n6() {
  const { caseless: e } = (zE(this) && this) || {},
    t = {},
    n = (r, i) => {
      const s = (e && WE(t, i)) || i;
      hd(t[s]) && hd(r)
        ? (t[s] = n6(t[s], r))
        : hd(r)
        ? (t[s] = n6({}, r))
        : L3(r)
        ? (t[s] = r.slice())
        : (t[s] = r);
    };
  for (let r = 0, i = arguments.length; r < i; r++)
    arguments[r] && bu(arguments[r], n);
  return t;
}
const RV = (e, t, n, { allOwnKeys: r } = {}) => (
    bu(
      t,
      (i, s) => {
        n && ei(i) ? (e[s] = UE(i, n)) : (e[s] = i);
      },
      { allOwnKeys: r }
    ),
    e
  ),
  LV = (e) => (e.charCodeAt(0) === 65279 && (e = e.slice(1)), e),
  IV = (e, t, n, r) => {
    (e.prototype = Object.create(t.prototype, r)),
      (e.prototype.constructor = e),
      Object.defineProperty(e, "super", { value: t.prototype }),
      n && Object.assign(e.prototype, n);
  },
  jV = (e, t, n, r) => {
    let i, s, o;
    const l = {};
    if (((t = t || {}), e == null)) return t;
    do {
      for (i = Object.getOwnPropertyNames(e), s = i.length; s-- > 0; )
        (o = i[s]), (!r || r(o, e, t)) && !l[o] && ((t[o] = e[o]), (l[o] = !0));
      e = n !== !1 && Fp(e);
    } while (e && (!n || n(e, t)) && e !== Object.prototype);
    return t;
  },
  NV = (e, t, n) => {
    (e = String(e)),
      (n === void 0 || n > e.length) && (n = e.length),
      (n -= t.length);
    const r = e.indexOf(t, n);
    return r !== -1 && r === n;
  },
  OV = (e) => {
    if (!e) return null;
    if (L3(e)) return e;
    let t = e.length;
    if (!VE(t)) return null;
    const n = new Array(t);
    for (; t-- > 0; ) n[t] = e[t];
    return n;
  },
  BV = (
    (e) => (t) =>
      e && t instanceof e
  )(typeof Uint8Array < "u" && Fp(Uint8Array)),
  DV = (e, t) => {
    const r = (e && e[Symbol.iterator]).call(e);
    let i;
    for (; (i = r.next()) && !i.done; ) {
      const s = i.value;
      t.call(e, s[0], s[1]);
    }
  },
  FV = (e, t) => {
    let n;
    const r = [];
    for (; (n = e.exec(t)) !== null; ) r.push(n);
    return r;
  },
  UV = Vi("HTMLFormElement"),
  $V = (e) =>
    e.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g, function (n, r, i) {
      return r.toUpperCase() + i;
    }),
  Cv = (
    ({ hasOwnProperty: e }) =>
    (t, n) =>
      e.call(t, n)
  )(Object.prototype),
  VV = Vi("RegExp"),
  HE = (e, t) => {
    const n = Object.getOwnPropertyDescriptors(e),
      r = {};
    bu(n, (i, s) => {
      let o;
      (o = t(i, s, e)) !== !1 && (r[s] = o || i);
    }),
      Object.defineProperties(e, r);
  },
  WV = (e) => {
    HE(e, (t, n) => {
      if (ei(e) && ["arguments", "caller", "callee"].indexOf(n) !== -1)
        return !1;
      const r = e[n];
      if (ei(r)) {
        if (((t.enumerable = !1), "writable" in t)) {
          t.writable = !1;
          return;
        }
        t.set ||
          (t.set = () => {
            throw Error("Can not rewrite read-only method '" + n + "'");
          });
      }
    });
  },
  zV = (e, t) => {
    const n = {},
      r = (i) => {
        i.forEach((s) => {
          n[s] = !0;
        });
      };
    return L3(e) ? r(e) : r(String(e).split(t)), n;
  },
  HV = () => {},
  qV = (e, t) => (e != null && Number.isFinite((e = +e)) ? e : t),
  I9 = "abcdefghijklmnopqrstuvwxyz",
  Sv = "0123456789",
  qE = { DIGIT: Sv, ALPHA: I9, ALPHA_DIGIT: I9 + I9.toUpperCase() + Sv },
  KV = (e = 16, t = qE.ALPHA_DIGIT) => {
    let n = "";
    const { length: r } = t;
    for (; e--; ) n += t[(Math.random() * r) | 0];
    return n;
  };
function GV(e) {
  return !!(
    e &&
    ei(e.append) &&
    e[Symbol.toStringTag] === "FormData" &&
    e[Symbol.iterator]
  );
}
const YV = (e) => {
    const t = new Array(10),
      n = (r, i) => {
        if (q4(r)) {
          if (t.indexOf(r) >= 0) return;
          if (!("toJSON" in r)) {
            t[i] = r;
            const s = L3(r) ? [] : {};
            return (
              bu(r, (o, l) => {
                const c = n(o, i + 1);
                !Hl(c) && (s[l] = c);
              }),
              (t[i] = void 0),
              s
            );
          }
        }
        return r;
      };
    return n(e, 0);
  },
  QV = Vi("AsyncFunction"),
  ZV = (e) => e && (q4(e) || ei(e)) && ei(e.then) && ei(e.catch),
  KE = ((e, t) =>
    e
      ? setImmediate
      : t
      ? ((n, r) => (
          Vo.addEventListener(
            "message",
            ({ source: i, data: s }) => {
              i === Vo && s === n && r.length && r.shift()();
            },
            !1
          ),
          (i) => {
            r.push(i), Vo.postMessage(n, "*");
          }
        ))(`axios@${Math.random()}`, [])
      : (n) => setTimeout(n))(
    typeof setImmediate == "function",
    ei(Vo.postMessage)
  ),
  XV =
    typeof queueMicrotask < "u"
      ? queueMicrotask.bind(Vo)
      : (typeof process < "u" && process.nextTick) || KE,
  D1 = {
    isArray: L3,
    isArrayBuffer: $E,
    isBuffer: mV,
    isFormData: EV,
    isArrayBufferView: gV,
    isString: yV,
    isNumber: VE,
    isBoolean: vV,
    isObject: q4,
    isPlainObject: hd,
    isReadableStream: _V,
    isRequest: AV,
    isResponse: TV,
    isHeaders: PV,
    isUndefined: Hl,
    isDate: wV,
    isFile: bV,
    isBlob: xV,
    isRegExp: VV,
    isFunction: ei,
    isStream: SV,
    isURLSearchParams: kV,
    isTypedArray: BV,
    isFileList: CV,
    forEach: bu,
    merge: n6,
    extend: RV,
    trim: MV,
    stripBOM: LV,
    inherits: IV,
    toFlatObject: jV,
    kindOf: z4,
    kindOfTest: Vi,
    endsWith: NV,
    toArray: OV,
    forEachEntry: DV,
    matchAll: FV,
    isHTMLForm: UV,
    hasOwnProperty: Cv,
    hasOwnProp: Cv,
    reduceDescriptors: HE,
    freezeMethods: WV,
    toObjectSet: zV,
    toCamelCase: $V,
    noop: HV,
    toFiniteNumber: qV,
    findKey: WE,
    global: Vo,
    isContextDefined: zE,
    ALPHABET: qE,
    generateString: KV,
    isSpecCompliantForm: GV,
    toJSONObject: YV,
    isAsyncFn: QV,
    isThenable: ZV,
    setImmediate: KE,
    asap: XV,
  };
function yt(e, t, n, r, i) {
  Error.call(this),
    Error.captureStackTrace
      ? Error.captureStackTrace(this, this.constructor)
      : (this.stack = new Error().stack),
    (this.message = e),
    (this.name = "AxiosError"),
    t && (this.code = t),
    n && (this.config = n),
    r && (this.request = r),
    i && ((this.response = i), (this.status = i.status ? i.status : null));
}
D1.inherits(yt, Error, {
  toJSON: function () {
    return {
      message: this.message,
      name: this.name,
      description: this.description,
      number: this.number,
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      config: D1.toJSONObject(this.config),
      code: this.code,
      status: this.status,
    };
  },
});
const GE = yt.prototype,
  YE = {};
[
  "ERR_BAD_OPTION_VALUE",
  "ERR_BAD_OPTION",
  "ECONNABORTED",
  "ETIMEDOUT",
  "ERR_NETWORK",
  "ERR_FR_TOO_MANY_REDIRECTS",
  "ERR_DEPRECATED",
  "ERR_BAD_RESPONSE",
  "ERR_BAD_REQUEST",
  "ERR_CANCELED",
  "ERR_NOT_SUPPORT",
  "ERR_INVALID_URL",
].forEach((e) => {
  YE[e] = { value: e };
});
Object.defineProperties(yt, YE);
Object.defineProperty(GE, "isAxiosError", { value: !0 });
yt.from = (e, t, n, r, i, s) => {
  const o = Object.create(GE);
  return (
    D1.toFlatObject(
      e,
      o,
      function (c) {
        return c !== Error.prototype;
      },
      (l) => l !== "isAxiosError"
    ),
    yt.call(o, e.message, t, n, r, i),
    (o.cause = e),
    (o.name = e.name),
    s && Object.assign(o, s),
    o
  );
};
const JV = null;
function r6(e) {
  return D1.isPlainObject(e) || D1.isArray(e);
}
function QE(e) {
  return D1.endsWith(e, "[]") ? e.slice(0, -2) : e;
}
function Ev(e, t, n) {
  return e
    ? e
        .concat(t)
        .map(function (i, s) {
          return (i = QE(i)), !n && s ? "[" + i + "]" : i;
        })
        .join(n ? "." : "")
    : t;
}
function eW(e) {
  return D1.isArray(e) && !e.some(r6);
}
const tW = D1.toFlatObject(D1, {}, null, function (t) {
  return /^is[A-Z]/.test(t);
});
function K4(e, t, n) {
  if (!D1.isObject(e)) throw new TypeError("target must be an object");
  (t = t || new FormData()),
    (n = D1.toFlatObject(
      n,
      { metaTokens: !0, dots: !1, indexes: !1 },
      !1,
      function (b, x) {
        return !D1.isUndefined(x[b]);
      }
    ));
  const r = n.metaTokens,
    i = n.visitor || d,
    s = n.dots,
    o = n.indexes,
    c = (n.Blob || (typeof Blob < "u" && Blob)) && D1.isSpecCompliantForm(t);
  if (!D1.isFunction(i)) throw new TypeError("visitor must be a function");
  function f(w) {
    if (w === null) return "";
    if (D1.isDate(w)) return w.toISOString();
    if (!c && D1.isBlob(w))
      throw new yt("Blob is not supported. Use a Buffer instead.");
    return D1.isArrayBuffer(w) || D1.isTypedArray(w)
      ? c && typeof Blob == "function"
        ? new Blob([w])
        : ge.from(w)
      : w;
  }
  function d(w, b, x) {
    let E = w;
    if (w && !x && typeof w == "object") {
      if (D1.endsWith(b, "{}"))
        (b = r ? b : b.slice(0, -2)), (w = JSON.stringify(w));
      else if (
        (D1.isArray(w) && eW(w)) ||
        ((D1.isFileList(w) || D1.endsWith(b, "[]")) && (E = D1.toArray(w)))
      )
        return (
          (b = QE(b)),
          E.forEach(function (_, T) {
            !(D1.isUndefined(_) || _ === null) &&
              t.append(
                o === !0 ? Ev([b], T, s) : o === null ? b : b + "[]",
                f(_)
              );
          }),
          !1
        );
    }
    return r6(w) ? !0 : (t.append(Ev(x, b, s), f(w)), !1);
  }
  const p = [],
    m = Object.assign(tW, {
      defaultVisitor: d,
      convertValue: f,
      isVisitable: r6,
    });
  function g(w, b) {
    if (!D1.isUndefined(w)) {
      if (p.indexOf(w) !== -1)
        throw Error("Circular reference detected in " + b.join("."));
      p.push(w),
        D1.forEach(w, function (E, P) {
          (!(D1.isUndefined(E) || E === null) &&
            i.call(t, E, D1.isString(P) ? P.trim() : P, b, m)) === !0 &&
            g(E, b ? b.concat(P) : [P]);
        }),
        p.pop();
    }
  }
  if (!D1.isObject(e)) throw new TypeError("data must be an object");
  return g(e), t;
}
function kv(e) {
  const t = {
    "!": "%21",
    "'": "%27",
    "(": "%28",
    ")": "%29",
    "~": "%7E",
    "%20": "+",
    "%00": "\0",
  };
  return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g, function (r) {
    return t[r];
  });
}
function Up(e, t) {
  (this._pairs = []), e && K4(e, this, t);
}
const ZE = Up.prototype;
ZE.append = function (t, n) {
  this._pairs.push([t, n]);
};
ZE.toString = function (t) {
  const n = t
    ? function (r) {
        return t.call(this, r, kv);
      }
    : kv;
  return this._pairs
    .map(function (i) {
      return n(i[0]) + "=" + n(i[1]);
    }, "")
    .join("&");
};
function nW(e) {
  return encodeURIComponent(e)
    .replace(/%3A/gi, ":")
    .replace(/%24/g, "$")
    .replace(/%2C/gi, ",")
    .replace(/%20/g, "+")
    .replace(/%5B/gi, "[")
    .replace(/%5D/gi, "]");
}
function XE(e, t, n) {
  if (!t) return e;
  const r = (n && n.encode) || nW;
  D1.isFunction(n) && (n = { serialize: n });
  const i = n && n.serialize;
  let s;
  if (
    (i
      ? (s = i(t, n))
      : (s = D1.isURLSearchParams(t) ? t.toString() : new Up(t, n).toString(r)),
    s)
  ) {
    const o = e.indexOf("#");
    o !== -1 && (e = e.slice(0, o)),
      (e += (e.indexOf("?") === -1 ? "?" : "&") + s);
  }
  return e;
}
class _v {
  constructor() {
    this.handlers = [];
  }
  use(t, n, r) {
    return (
      this.handlers.push({
        fulfilled: t,
        rejected: n,
        synchronous: r ? r.synchronous : !1,
        runWhen: r ? r.runWhen : null,
      }),
      this.handlers.length - 1
    );
  }
  eject(t) {
    this.handlers[t] && (this.handlers[t] = null);
  }
  clear() {
    this.handlers && (this.handlers = []);
  }
  forEach(t) {
    D1.forEach(this.handlers, function (r) {
      r !== null && t(r);
    });
  }
}
const JE = {
    silentJSONParsing: !0,
    forcedJSONParsing: !0,
    clarifyTimeoutError: !1,
  },
  rW = typeof URLSearchParams < "u" ? URLSearchParams : Up,
  iW = typeof FormData < "u" ? FormData : null,
  sW = typeof Blob < "u" ? Blob : null,
  oW = {
    isBrowser: !0,
    classes: { URLSearchParams: rW, FormData: iW, Blob: sW },
    protocols: ["http", "https", "file", "blob", "url", "data"],
  },
  $p = typeof window < "u" && typeof document < "u",
  i6 = (typeof navigator == "object" && navigator) || void 0,
  aW =
    $p &&
    (!i6 || ["ReactNative", "NativeScript", "NS"].indexOf(i6.product) < 0),
  lW =
    typeof WorkerGlobalScope < "u" &&
    self instanceof WorkerGlobalScope &&
    typeof self.importScripts == "function",
  uW = ($p && window.location.href) || "http://localhost",
  cW = Object.freeze(
    Object.defineProperty(
      {
        __proto__: null,
        hasBrowserEnv: $p,
        hasStandardBrowserEnv: aW,
        hasStandardBrowserWebWorkerEnv: lW,
        navigator: i6,
        origin: uW,
      },
      Symbol.toStringTag,
      { value: "Module" }
    )
  ),
  gr = { ...cW, ...oW };
function dW(e, t) {
  return K4(
    e,
    new gr.classes.URLSearchParams(),
    Object.assign(
      {
        visitor: function (n, r, i, s) {
          return gr.isNode && D1.isBuffer(n)
            ? (this.append(r, n.toString("base64")), !1)
            : s.defaultVisitor.apply(this, arguments);
        },
      },
      t
    )
  );
}
function fW(e) {
  return D1.matchAll(/\w+|\[(\w*)]/g, e).map((t) =>
    t[0] === "[]" ? "" : t[1] || t[0]
  );
}
function hW(e) {
  const t = {},
    n = Object.keys(e);
  let r;
  const i = n.length;
  let s;
  for (r = 0; r < i; r++) (s = n[r]), (t[s] = e[s]);
  return t;
}
function ek(e) {
  function t(n, r, i, s) {
    let o = n[s++];
    if (o === "__proto__") return !0;
    const l = Number.isFinite(+o),
      c = s >= n.length;
    return (
      (o = !o && D1.isArray(i) ? i.length : o),
      c
        ? (D1.hasOwnProp(i, o) ? (i[o] = [i[o], r]) : (i[o] = r), !l)
        : ((!i[o] || !D1.isObject(i[o])) && (i[o] = []),
          t(n, r, i[o], s) && D1.isArray(i[o]) && (i[o] = hW(i[o])),
          !l)
    );
  }
  if (D1.isFormData(e) && D1.isFunction(e.entries)) {
    const n = {};
    return (
      D1.forEachEntry(e, (r, i) => {
        t(fW(r), i, n, 0);
      }),
      n
    );
  }
  return null;
}
function pW(e, t, n) {
  if (D1.isString(e))
    try {
      return (t || JSON.parse)(e), D1.trim(e);
    } catch (r) {
      if (r.name !== "SyntaxError") throw r;
    }
  return (n || JSON.stringify)(e);
}
const xu = {
  transitional: JE,
  adapter: ["xhr", "http", "fetch"],
  transformRequest: [
    function (t, n) {
      const r = n.getContentType() || "",
        i = r.indexOf("application/json") > -1,
        s = D1.isObject(t);
      if ((s && D1.isHTMLForm(t) && (t = new FormData(t)), D1.isFormData(t)))
        return i ? JSON.stringify(ek(t)) : t;
      if (
        D1.isArrayBuffer(t) ||
        D1.isBuffer(t) ||
        D1.isStream(t) ||
        D1.isFile(t) ||
        D1.isBlob(t) ||
        D1.isReadableStream(t)
      )
        return t;
      if (D1.isArrayBufferView(t)) return t.buffer;
      if (D1.isURLSearchParams(t))
        return (
          n.setContentType(
            "application/x-www-form-urlencoded;charset=utf-8",
            !1
          ),
          t.toString()
        );
      let l;
      if (s) {
        if (r.indexOf("application/x-www-form-urlencoded") > -1)
          return dW(t, this.formSerializer).toString();
        if ((l = D1.isFileList(t)) || r.indexOf("multipart/form-data") > -1) {
          const c = this.env && this.env.FormData;
          return K4(
            l ? { "files[]": t } : t,
            c && new c(),
            this.formSerializer
          );
        }
      }
      return s || i ? (n.setContentType("application/json", !1), pW(t)) : t;
    },
  ],
  transformResponse: [
    function (t) {
      const n = this.transitional || xu.transitional,
        r = n && n.forcedJSONParsing,
        i = this.responseType === "json";
      if (D1.isResponse(t) || D1.isReadableStream(t)) return t;
      if (t && D1.isString(t) && ((r && !this.responseType) || i)) {
        const o = !(n && n.silentJSONParsing) && i;
        try {
          return JSON.parse(t);
        } catch (l) {
          if (o)
            throw l.name === "SyntaxError"
              ? yt.from(l, yt.ERR_BAD_RESPONSE, this, null, this.response)
              : l;
        }
      }
      return t;
    },
  ],
  timeout: 0,
  xsrfCookieName: "XSRF-TOKEN",
  xsrfHeaderName: "X-XSRF-TOKEN",
  maxContentLength: -1,
  maxBodyLength: -1,
  env: { FormData: gr.classes.FormData, Blob: gr.classes.Blob },
  validateStatus: function (t) {
    return t >= 200 && t < 300;
  },
  headers: {
    common: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": void 0,
    },
  },
};
D1.forEach(["delete", "get", "head", "post", "put", "patch"], (e) => {
  xu.headers[e] = {};
});
const mW = D1.toObjectSet([
    "age",
    "authorization",
    "content-length",
    "content-type",
    "etag",
    "expires",
    "from",
    "host",
    "if-modified-since",
    "if-unmodified-since",
    "last-modified",
    "location",
    "max-forwards",
    "proxy-authorization",
    "referer",
    "retry-after",
    "user-agent",
  ]),
  gW = (e) => {
    const t = {};
    let n, r, i;
    return (
      e &&
        e
          .split(
            `
`
          )
          .forEach(function (o) {
            (i = o.indexOf(":")),
              (n = o.substring(0, i).trim().toLowerCase()),
              (r = o.substring(i + 1).trim()),
              !(!n || (t[n] && mW[n])) &&
                (n === "set-cookie"
                  ? t[n]
                    ? t[n].push(r)
                    : (t[n] = [r])
                  : (t[n] = t[n] ? t[n] + ", " + r : r));
          }),
      t
    );
  },
  Av = Symbol("internals");
function x0(e) {
  return e && String(e).trim().toLowerCase();
}
function pd(e) {
  return e === !1 || e == null ? e : D1.isArray(e) ? e.map(pd) : String(e);
}
function yW(e) {
  const t = Object.create(null),
    n = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
  let r;
  for (; (r = n.exec(e)); ) t[r[1]] = r[2];
  return t;
}
const vW = (e) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim());
function j9(e, t, n, r, i) {
  if (D1.isFunction(r)) return r.call(this, t, n);
  if ((i && (t = n), !!D1.isString(t))) {
    if (D1.isString(r)) return t.indexOf(r) !== -1;
    if (D1.isRegExp(r)) return r.test(t);
  }
}
function wW(e) {
  return e
    .trim()
    .toLowerCase()
    .replace(/([a-z\d])(\w*)/g, (t, n, r) => n.toUpperCase() + r);
}
function bW(e, t) {
  const n = D1.toCamelCase(" " + t);
  ["get", "set", "has"].forEach((r) => {
    Object.defineProperty(e, r + n, {
      value: function (i, s, o) {
        return this[r].call(this, t, i, s, o);
      },
      configurable: !0,
    });
  });
}
let Wr = class {
  constructor(t) {
    t && this.set(t);
  }
  set(t, n, r) {
    const i = this;
    function s(l, c, f) {
      const d = x0(c);
      if (!d) throw new Error("header name must be a non-empty string");
      const p = D1.findKey(i, d);
      (!p || i[p] === void 0 || f === !0 || (f === void 0 && i[p] !== !1)) &&
        (i[p || c] = pd(l));
    }
    const o = (l, c) => D1.forEach(l, (f, d) => s(f, d, c));
    if (D1.isPlainObject(t) || t instanceof this.constructor) o(t, n);
    else if (D1.isString(t) && (t = t.trim()) && !vW(t)) o(gW(t), n);
    else if (D1.isHeaders(t)) for (const [l, c] of t.entries()) s(c, l, r);
    else t != null && s(n, t, r);
    return this;
  }
  get(t, n) {
    if (((t = x0(t)), t)) {
      const r = D1.findKey(this, t);
      if (r) {
        const i = this[r];
        if (!n) return i;
        if (n === !0) return yW(i);
        if (D1.isFunction(n)) return n.call(this, i, r);
        if (D1.isRegExp(n)) return n.exec(i);
        throw new TypeError("parser must be boolean|regexp|function");
      }
    }
  }
  has(t, n) {
    if (((t = x0(t)), t)) {
      const r = D1.findKey(this, t);
      return !!(r && this[r] !== void 0 && (!n || j9(this, this[r], r, n)));
    }
    return !1;
  }
  delete(t, n) {
    const r = this;
    let i = !1;
    function s(o) {
      if (((o = x0(o)), o)) {
        const l = D1.findKey(r, o);
        l && (!n || j9(r, r[l], l, n)) && (delete r[l], (i = !0));
      }
    }
    return D1.isArray(t) ? t.forEach(s) : s(t), i;
  }
  clear(t) {
    const n = Object.keys(this);
    let r = n.length,
      i = !1;
    for (; r--; ) {
      const s = n[r];
      (!t || j9(this, this[s], s, t, !0)) && (delete this[s], (i = !0));
    }
    return i;
  }
  normalize(t) {
    const n = this,
      r = {};
    return (
      D1.forEach(this, (i, s) => {
        const o = D1.findKey(r, s);
        if (o) {
          (n[o] = pd(i)), delete n[s];
          return;
        }
        const l = t ? wW(s) : String(s).trim();
        l !== s && delete n[s], (n[l] = pd(i)), (r[l] = !0);
      }),
      this
    );
  }
  concat(...t) {
    return this.constructor.concat(this, ...t);
  }
  toJSON(t) {
    const n = Object.create(null);
    return (
      D1.forEach(this, (r, i) => {
        r != null && r !== !1 && (n[i] = t && D1.isArray(r) ? r.join(", ") : r);
      }),
      n
    );
  }
  [Symbol.iterator]() {
    return Object.entries(this.toJSON())[Symbol.iterator]();
  }
  toString() {
    return Object.entries(this.toJSON()).map(([t, n]) => t + ": " + n).join(`
`);
  }
  get [Symbol.toStringTag]() {
    return "AxiosHeaders";
  }
  static from(t) {
    return t instanceof this ? t : new this(t);
  }
  static concat(t, ...n) {
    const r = new this(t);
    return n.forEach((i) => r.set(i)), r;
  }
  static accessor(t) {
    const r = (this[Av] = this[Av] = { accessors: {} }).accessors,
      i = this.prototype;
    function s(o) {
      const l = x0(o);
      r[l] || (bW(i, o), (r[l] = !0));
    }
    return D1.isArray(t) ? t.forEach(s) : s(t), this;
  }
};
Wr.accessor([
  "Content-Type",
  "Content-Length",
  "Accept",
  "Accept-Encoding",
  "User-Agent",
  "Authorization",
]);
D1.reduceDescriptors(Wr.prototype, ({ value: e }, t) => {
  let n = t[0].toUpperCase() + t.slice(1);
  return {
    get: () => e,
    set(r) {
      this[n] = r;
    },
  };
});
D1.freezeMethods(Wr);
function N9(e, t) {
  const n = this || xu,
    r = t || n,
    i = Wr.from(r.headers);
  let s = r.data;
  return (
    D1.forEach(e, function (l) {
      s = l.call(n, s, i.normalize(), t ? t.status : void 0);
    }),
    i.normalize(),
    s
  );
}
function tk(e) {
  return !!(e && e.__CANCEL__);
}
function I3(e, t, n) {
  yt.call(this, e ?? "canceled", yt.ERR_CANCELED, t, n),
    (this.name = "CanceledError");
}
D1.inherits(I3, yt, { __CANCEL__: !0 });
function nk(e, t, n) {
  const r = n.config.validateStatus;
  !n.status || !r || r(n.status)
    ? e(n)
    : t(
        new yt(
          "Request failed with status code " + n.status,
          [yt.ERR_BAD_REQUEST, yt.ERR_BAD_RESPONSE][
            Math.floor(n.status / 100) - 4
          ],
          n.config,
          n.request,
          n
        )
      );
}
function xW(e) {
  const t = /^([-+\w]{1,25})(:?\/\/|:)/.exec(e);
  return (t && t[1]) || "";
}
function CW(e, t) {
  e = e || 10;
  const n = new Array(e),
    r = new Array(e);
  let i = 0,
    s = 0,
    o;
  return (
    (t = t !== void 0 ? t : 1e3),
    function (c) {
      const f = Date.now(),
        d = r[s];
      o || (o = f), (n[i] = c), (r[i] = f);
      let p = s,
        m = 0;
      for (; p !== i; ) (m += n[p++]), (p = p % e);
      if (((i = (i + 1) % e), i === s && (s = (s + 1) % e), f - o < t)) return;
      const g = d && f - d;
      return g ? Math.round((m * 1e3) / g) : void 0;
    }
  );
}
function SW(e, t) {
  let n = 0,
    r = 1e3 / t,
    i,
    s;
  const o = (f, d = Date.now()) => {
    (n = d), (i = null), s && (clearTimeout(s), (s = null)), e.apply(null, f);
  };
  return [
    (...f) => {
      const d = Date.now(),
        p = d - n;
      p >= r
        ? o(f, d)
        : ((i = f),
          s ||
            (s = setTimeout(() => {
              (s = null), o(i);
            }, r - p)));
    },
    () => i && o(i),
  ];
}
const n4 = (e, t, n = 3) => {
    let r = 0;
    const i = CW(50, 250);
    return SW((s) => {
      const o = s.loaded,
        l = s.lengthComputable ? s.total : void 0,
        c = o - r,
        f = i(c),
        d = o <= l;
      r = o;
      const p = {
        loaded: o,
        total: l,
        progress: l ? o / l : void 0,
        bytes: c,
        rate: f || void 0,
        estimated: f && l && d ? (l - o) / f : void 0,
        event: s,
        lengthComputable: l != null,
        [t ? "download" : "upload"]: !0,
      };
      e(p);
    }, n);
  },
  Tv = (e, t) => {
    const n = e != null;
    return [(r) => t[0]({ lengthComputable: n, total: e, loaded: r }), t[1]];
  },
  Pv =
    (e) =>
    (...t) =>
      D1.asap(() => e(...t)),
  EW = gr.hasStandardBrowserEnv
    ? ((e, t) => (n) => (
        (n = new URL(n, gr.origin)),
        e.protocol === n.protocol &&
          e.host === n.host &&
          (t || e.port === n.port)
      ))(
        new URL(gr.origin),
        gr.navigator && /(msie|trident)/i.test(gr.navigator.userAgent)
      )
    : () => !0,
  kW = gr.hasStandardBrowserEnv
    ? {
        write(e, t, n, r, i, s) {
          const o = [e + "=" + encodeURIComponent(t)];
          D1.isNumber(n) && o.push("expires=" + new Date(n).toGMTString()),
            D1.isString(r) && o.push("path=" + r),
            D1.isString(i) && o.push("domain=" + i),
            s === !0 && o.push("secure"),
            (document.cookie = o.join("; "));
        },
        read(e) {
          const t = document.cookie.match(
            new RegExp("(^|;\\s*)(" + e + ")=([^;]*)")
          );
          return t ? decodeURIComponent(t[3]) : null;
        },
        remove(e) {
          this.write(e, "", Date.now() - 864e5);
        },
      }
    : {
        write() {},
        read() {
          return null;
        },
        remove() {},
      };
function _W(e) {
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(e);
}
function AW(e, t) {
  return t ? e.replace(/\/?\/$/, "") + "/" + t.replace(/^\/+/, "") : e;
}
function rk(e, t) {
  return e && !_W(t) ? AW(e, t) : t;
}
const Mv = (e) => (e instanceof Wr ? { ...e } : e);
function na(e, t) {
  t = t || {};
  const n = {};
  function r(f, d, p, m) {
    return D1.isPlainObject(f) && D1.isPlainObject(d)
      ? D1.merge.call({ caseless: m }, f, d)
      : D1.isPlainObject(d)
      ? D1.merge({}, d)
      : D1.isArray(d)
      ? d.slice()
      : d;
  }
  function i(f, d, p, m) {
    if (D1.isUndefined(d)) {
      if (!D1.isUndefined(f)) return r(void 0, f, p, m);
    } else return r(f, d, p, m);
  }
  function s(f, d) {
    if (!D1.isUndefined(d)) return r(void 0, d);
  }
  function o(f, d) {
    if (D1.isUndefined(d)) {
      if (!D1.isUndefined(f)) return r(void 0, f);
    } else return r(void 0, d);
  }
  function l(f, d, p) {
    if (p in t) return r(f, d);
    if (p in e) return r(void 0, f);
  }
  const c = {
    url: s,
    method: s,
    data: s,
    baseURL: o,
    transformRequest: o,
    transformResponse: o,
    paramsSerializer: o,
    timeout: o,
    timeoutMessage: o,
    withCredentials: o,
    withXSRFToken: o,
    adapter: o,
    responseType: o,
    xsrfCookieName: o,
    xsrfHeaderName: o,
    onUploadProgress: o,
    onDownloadProgress: o,
    decompress: o,
    maxContentLength: o,
    maxBodyLength: o,
    beforeRedirect: o,
    transport: o,
    httpAgent: o,
    httpsAgent: o,
    cancelToken: o,
    socketPath: o,
    responseEncoding: o,
    validateStatus: l,
    headers: (f, d, p) => i(Mv(f), Mv(d), p, !0),
  };
  return (
    D1.forEach(Object.keys(Object.assign({}, e, t)), function (d) {
      const p = c[d] || i,
        m = p(e[d], t[d], d);
      (D1.isUndefined(m) && p !== l) || (n[d] = m);
    }),
    n
  );
}
const ik = (e) => {
    const t = na({}, e);
    let {
      data: n,
      withXSRFToken: r,
      xsrfHeaderName: i,
      xsrfCookieName: s,
      headers: o,
      auth: l,
    } = t;
    (t.headers = o = Wr.from(o)),
      (t.url = XE(rk(t.baseURL, t.url), e.params, e.paramsSerializer)),
      l &&
        o.set(
          "Authorization",
          "Basic " +
            btoa(
              (l.username || "") +
                ":" +
                (l.password ? unescape(encodeURIComponent(l.password)) : "")
            )
        );
    let c;
    if (D1.isFormData(n)) {
      if (gr.hasStandardBrowserEnv || gr.hasStandardBrowserWebWorkerEnv)
        o.setContentType(void 0);
      else if ((c = o.getContentType()) !== !1) {
        const [f, ...d] = c
          ? c
              .split(";")
              .map((p) => p.trim())
              .filter(Boolean)
          : [];
        o.setContentType([f || "multipart/form-data", ...d].join("; "));
      }
    }
    if (
      gr.hasStandardBrowserEnv &&
      (r && D1.isFunction(r) && (r = r(t)), r || (r !== !1 && EW(t.url)))
    ) {
      const f = i && s && kW.read(s);
      f && o.set(i, f);
    }
    return t;
  },
  TW = typeof XMLHttpRequest < "u",
  PW =
    TW &&
    function (e) {
      return new Promise(function (n, r) {
        const i = ik(e);
        let s = i.data;
        const o = Wr.from(i.headers).normalize();
        let { responseType: l, onUploadProgress: c, onDownloadProgress: f } = i,
          d,
          p,
          m,
          g,
          w;
        function b() {
          g && g(),
            w && w(),
            i.cancelToken && i.cancelToken.unsubscribe(d),
            i.signal && i.signal.removeEventListener("abort", d);
        }
        let x = new XMLHttpRequest();
        x.open(i.method.toUpperCase(), i.url, !0), (x.timeout = i.timeout);
        function E() {
          if (!x) return;
          const _ = Wr.from(
              "getAllResponseHeaders" in x && x.getAllResponseHeaders()
            ),
            M = {
              data:
                !l || l === "text" || l === "json"
                  ? x.responseText
                  : x.response,
              status: x.status,
              statusText: x.statusText,
              headers: _,
              config: e,
              request: x,
            };
          nk(
            function (O) {
              n(O), b();
            },
            function (O) {
              r(O), b();
            },
            M
          ),
            (x = null);
        }
        "onloadend" in x
          ? (x.onloadend = E)
          : (x.onreadystatechange = function () {
              !x ||
                x.readyState !== 4 ||
                (x.status === 0 &&
                  !(x.responseURL && x.responseURL.indexOf("file:") === 0)) ||
                setTimeout(E);
            }),
          (x.onabort = function () {
            x &&
              (r(new yt("Request aborted", yt.ECONNABORTED, e, x)), (x = null));
          }),
          (x.onerror = function () {
            r(new yt("Network Error", yt.ERR_NETWORK, e, x)), (x = null);
          }),
          (x.ontimeout = function () {
            let T = i.timeout
              ? "timeout of " + i.timeout + "ms exceeded"
              : "timeout exceeded";
            const M = i.transitional || JE;
            i.timeoutErrorMessage && (T = i.timeoutErrorMessage),
              r(
                new yt(
                  T,
                  M.clarifyTimeoutError ? yt.ETIMEDOUT : yt.ECONNABORTED,
                  e,
                  x
                )
              ),
              (x = null);
          }),
          s === void 0 && o.setContentType(null),
          "setRequestHeader" in x &&
            D1.forEach(o.toJSON(), function (T, M) {
              x.setRequestHeader(M, T);
            }),
          D1.isUndefined(i.withCredentials) ||
            (x.withCredentials = !!i.withCredentials),
          l && l !== "json" && (x.responseType = i.responseType),
          f && (([m, w] = n4(f, !0)), x.addEventListener("progress", m)),
          c &&
            x.upload &&
            (([p, g] = n4(c)),
            x.upload.addEventListener("progress", p),
            x.upload.addEventListener("loadend", g)),
          (i.cancelToken || i.signal) &&
            ((d = (_) => {
              x &&
                (r(!_ || _.type ? new I3(null, e, x) : _),
                x.abort(),
                (x = null));
            }),
            i.cancelToken && i.cancelToken.subscribe(d),
            i.signal &&
              (i.signal.aborted ? d() : i.signal.addEventListener("abort", d)));
        const P = xW(i.url);
        if (P && gr.protocols.indexOf(P) === -1) {
          r(new yt("Unsupported protocol " + P + ":", yt.ERR_BAD_REQUEST, e));
          return;
        }
        x.send(s || null);
      });
    },
  MW = (e, t) => {
    const { length: n } = (e = e ? e.filter(Boolean) : []);
    if (t || n) {
      let r = new AbortController(),
        i;
      const s = function (f) {
        if (!i) {
          (i = !0), l();
          const d = f instanceof Error ? f : this.reason;
          r.abort(
            d instanceof yt ? d : new I3(d instanceof Error ? d.message : d)
          );
        }
      };
      let o =
        t &&
        setTimeout(() => {
          (o = null), s(new yt(`timeout ${t} of ms exceeded`, yt.ETIMEDOUT));
        }, t);
      const l = () => {
        e &&
          (o && clearTimeout(o),
          (o = null),
          e.forEach((f) => {
            f.unsubscribe
              ? f.unsubscribe(s)
              : f.removeEventListener("abort", s);
          }),
          (e = null));
      };
      e.forEach((f) => f.addEventListener("abort", s));
      const { signal: c } = r;
      return (c.unsubscribe = () => D1.asap(l)), c;
    }
  },
  RW = function* (e, t) {
    let n = e.byteLength;
    if (n < t) {
      yield e;
      return;
    }
    let r = 0,
      i;
    for (; r < n; ) (i = r + t), yield e.slice(r, i), (r = i);
  },
  LW = async function* (e, t) {
    for await (const n of IW(e)) yield* RW(n, t);
  },
  IW = async function* (e) {
    if (e[Symbol.asyncIterator]) {
      yield* e;
      return;
    }
    const t = e.getReader();
    try {
      for (;;) {
        const { done: n, value: r } = await t.read();
        if (n) break;
        yield r;
      }
    } finally {
      await t.cancel();
    }
  },
  Rv = (e, t, n, r) => {
    const i = LW(e, t);
    let s = 0,
      o,
      l = (c) => {
        o || ((o = !0), r && r(c));
      };
    return new ReadableStream(
      {
        async pull(c) {
          try {
            const { done: f, value: d } = await i.next();
            if (f) {
              l(), c.close();
              return;
            }
            let p = d.byteLength;
            if (n) {
              let m = (s += p);
              n(m);
            }
            c.enqueue(new Uint8Array(d));
          } catch (f) {
            throw (l(f), f);
          }
        },
        cancel(c) {
          return l(c), i.return();
        },
      },
      { highWaterMark: 2 }
    );
  },
  G4 =
    typeof fetch == "function" &&
    typeof Request == "function" &&
    typeof Response == "function",
  sk = G4 && typeof ReadableStream == "function",
  jW =
    G4 &&
    (typeof TextEncoder == "function"
      ? (
          (e) => (t) =>
            e.encode(t)
        )(new TextEncoder())
      : async (e) => new Uint8Array(await new Response(e).arrayBuffer())),
  ok = (e, ...t) => {
    try {
      return !!e(...t);
    } catch {
      return !1;
    }
  },
  NW =
    sk &&
    ok(() => {
      let e = !1;
      const t = new Request(gr.origin, {
        body: new ReadableStream(),
        method: "POST",
        get duplex() {
          return (e = !0), "half";
        },
      }).headers.has("Content-Type");
      return e && !t;
    }),
  Lv = 64 * 1024,
  s6 = sk && ok(() => D1.isReadableStream(new Response("").body)),
  r4 = { stream: s6 && ((e) => e.body) };
G4 &&
  ((e) => {
    ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((t) => {
      !r4[t] &&
        (r4[t] = D1.isFunction(e[t])
          ? (n) => n[t]()
          : (n, r) => {
              throw new yt(
                `Response type '${t}' is not supported`,
                yt.ERR_NOT_SUPPORT,
                r
              );
            });
    });
  })(new Response());
const OW = async (e) => {
    if (e == null) return 0;
    if (D1.isBlob(e)) return e.size;
    if (D1.isSpecCompliantForm(e))
      return (
        await new Request(gr.origin, { method: "POST", body: e }).arrayBuffer()
      ).byteLength;
    if (D1.isArrayBufferView(e) || D1.isArrayBuffer(e)) return e.byteLength;
    if ((D1.isURLSearchParams(e) && (e = e + ""), D1.isString(e)))
      return (await jW(e)).byteLength;
  },
  BW = async (e, t) => {
    const n = D1.toFiniteNumber(e.getContentLength());
    return n ?? OW(t);
  },
  DW =
    G4 &&
    (async (e) => {
      let {
        url: t,
        method: n,
        data: r,
        signal: i,
        cancelToken: s,
        timeout: o,
        onDownloadProgress: l,
        onUploadProgress: c,
        responseType: f,
        headers: d,
        withCredentials: p = "same-origin",
        fetchOptions: m,
      } = ik(e);
      f = f ? (f + "").toLowerCase() : "text";
      let g = MW([i, s && s.toAbortSignal()], o),
        w;
      const b =
        g &&
        g.unsubscribe &&
        (() => {
          g.unsubscribe();
        });
      let x;
      try {
        if (
          c &&
          NW &&
          n !== "get" &&
          n !== "head" &&
          (x = await BW(d, r)) !== 0
        ) {
          let M = new Request(t, { method: "POST", body: r, duplex: "half" }),
            L;
          if (
            (D1.isFormData(r) &&
              (L = M.headers.get("content-type")) &&
              d.setContentType(L),
            M.body)
          ) {
            const [O, U] = Tv(x, n4(Pv(c)));
            r = Rv(M.body, Lv, O, U);
          }
        }
        D1.isString(p) || (p = p ? "include" : "omit");
        const E = "credentials" in Request.prototype;
        w = new Request(t, {
          ...m,
          signal: g,
          method: n.toUpperCase(),
          headers: d.normalize().toJSON(),
          body: r,
          duplex: "half",
          credentials: E ? p : void 0,
        });
        let P = await fetch(w);
        const _ = s6 && (f === "stream" || f === "response");
        if (s6 && (l || (_ && b))) {
          const M = {};
          ["status", "statusText", "headers"].forEach((D) => {
            M[D] = P[D];
          });
          const L = D1.toFiniteNumber(P.headers.get("content-length")),
            [O, U] = (l && Tv(L, n4(Pv(l), !0))) || [];
          P = new Response(
            Rv(P.body, Lv, O, () => {
              U && U(), b && b();
            }),
            M
          );
        }
        f = f || "text";
        let T = await r4[D1.findKey(r4, f) || "text"](P, e);
        return (
          !_ && b && b(),
          await new Promise((M, L) => {
            nk(M, L, {
              data: T,
              headers: Wr.from(P.headers),
              status: P.status,
              statusText: P.statusText,
              config: e,
              request: w,
            });
          })
        );
      } catch (E) {
        throw (
          (b && b(),
          E && E.name === "TypeError" && /fetch/i.test(E.message)
            ? Object.assign(new yt("Network Error", yt.ERR_NETWORK, e, w), {
                cause: E.cause || E,
              })
            : yt.from(E, E && E.code, e, w))
        );
      }
    }),
  o6 = { http: JV, xhr: PW, fetch: DW };
D1.forEach(o6, (e, t) => {
  if (e) {
    try {
      Object.defineProperty(e, "name", { value: t });
    } catch {}
    Object.defineProperty(e, "adapterName", { value: t });
  }
});
const Iv = (e) => `- ${e}`,
  FW = (e) => D1.isFunction(e) || e === null || e === !1,
  ak = {
    getAdapter: (e) => {
      e = D1.isArray(e) ? e : [e];
      const { length: t } = e;
      let n, r;
      const i = {};
      for (let s = 0; s < t; s++) {
        n = e[s];
        let o;
        if (
          ((r = n),
          !FW(n) && ((r = o6[(o = String(n)).toLowerCase()]), r === void 0))
        )
          throw new yt(`Unknown adapter '${o}'`);
        if (r) break;
        i[o || "#" + s] = r;
      }
      if (!r) {
        const s = Object.entries(i).map(
          ([l, c]) =>
            `adapter ${l} ` +
            (c === !1
              ? "is not supported by the environment"
              : "is not available in the build")
        );
        let o = t
          ? s.length > 1
            ? `since :
` +
              s.map(Iv).join(`
`)
            : " " + Iv(s[0])
          : "as no adapter specified";
        throw new yt(
          "There is no suitable adapter to dispatch the request " + o,
          "ERR_NOT_SUPPORT"
        );
      }
      return r;
    },
    adapters: o6,
  };
function O9(e) {
  if (
    (e.cancelToken && e.cancelToken.throwIfRequested(),
    e.signal && e.signal.aborted)
  )
    throw new I3(null, e);
}
function jv(e) {
  return (
    O9(e),
    (e.headers = Wr.from(e.headers)),
    (e.data = N9.call(e, e.transformRequest)),
    ["post", "put", "patch"].indexOf(e.method) !== -1 &&
      e.headers.setContentType("application/x-www-form-urlencoded", !1),
    ak
      .getAdapter(e.adapter || xu.adapter)(e)
      .then(
        function (r) {
          return (
            O9(e),
            (r.data = N9.call(e, e.transformResponse, r)),
            (r.headers = Wr.from(r.headers)),
            r
          );
        },
        function (r) {
          return (
            tk(r) ||
              (O9(e),
              r &&
                r.response &&
                ((r.response.data = N9.call(
                  e,
                  e.transformResponse,
                  r.response
                )),
                (r.response.headers = Wr.from(r.response.headers)))),
            Promise.reject(r)
          );
        }
      )
  );
}
const lk = "1.7.9",
  Y4 = {};
["object", "boolean", "number", "function", "string", "symbol"].forEach(
  (e, t) => {
    Y4[e] = function (r) {
      return typeof r === e || "a" + (t < 1 ? "n " : " ") + e;
    };
  }
);
const Nv = {};
Y4.transitional = function (t, n, r) {
  function i(s, o) {
    return (
      "[Axios v" +
      lk +
      "] Transitional option '" +
      s +
      "'" +
      o +
      (r ? ". " + r : "")
    );
  }
  return (s, o, l) => {
    if (t === !1)
      throw new yt(
        i(o, " has been removed" + (n ? " in " + n : "")),
        yt.ERR_DEPRECATED
      );
    return (
      n &&
        !Nv[o] &&
        ((Nv[o] = !0),
        console.warn(
          i(
            o,
            " has been deprecated since v" +
              n +
              " and will be removed in the near future"
          )
        )),
      t ? t(s, o, l) : !0
    );
  };
};
Y4.spelling = function (t) {
  return (n, r) => (console.warn(`${r} is likely a misspelling of ${t}`), !0);
};
function UW(e, t, n) {
  if (typeof e != "object")
    throw new yt("options must be an object", yt.ERR_BAD_OPTION_VALUE);
  const r = Object.keys(e);
  let i = r.length;
  for (; i-- > 0; ) {
    const s = r[i],
      o = t[s];
    if (o) {
      const l = e[s],
        c = l === void 0 || o(l, s, e);
      if (c !== !0)
        throw new yt("option " + s + " must be " + c, yt.ERR_BAD_OPTION_VALUE);
      continue;
    }
    if (n !== !0) throw new yt("Unknown option " + s, yt.ERR_BAD_OPTION);
  }
}
const md = { assertOptions: UW, validators: Y4 },
  Xi = md.validators;
let Yo = class {
  constructor(t) {
    (this.defaults = t),
      (this.interceptors = { request: new _v(), response: new _v() });
  }
  async request(t, n) {
    try {
      return await this._request(t, n);
    } catch (r) {
      if (r instanceof Error) {
        let i = {};
        Error.captureStackTrace
          ? Error.captureStackTrace(i)
          : (i = new Error());
        const s = i.stack ? i.stack.replace(/^.+\n/, "") : "";
        try {
          r.stack
            ? s &&
              !String(r.stack).endsWith(s.replace(/^.+\n.+\n/, "")) &&
              (r.stack +=
                `
` + s)
            : (r.stack = s);
        } catch {}
      }
      throw r;
    }
  }
  _request(t, n) {
    typeof t == "string" ? ((n = n || {}), (n.url = t)) : (n = t || {}),
      (n = na(this.defaults, n));
    const { transitional: r, paramsSerializer: i, headers: s } = n;
    r !== void 0 &&
      md.assertOptions(
        r,
        {
          silentJSONParsing: Xi.transitional(Xi.boolean),
          forcedJSONParsing: Xi.transitional(Xi.boolean),
          clarifyTimeoutError: Xi.transitional(Xi.boolean),
        },
        !1
      ),
      i != null &&
        (D1.isFunction(i)
          ? (n.paramsSerializer = { serialize: i })
          : md.assertOptions(
              i,
              { encode: Xi.function, serialize: Xi.function },
              !0
            )),
      md.assertOptions(
        n,
        {
          baseUrl: Xi.spelling("baseURL"),
          withXsrfToken: Xi.spelling("withXSRFToken"),
        },
        !0
      ),
      (n.method = (n.method || this.defaults.method || "get").toLowerCase());
    let o = s && D1.merge(s.common, s[n.method]);
    s &&
      D1.forEach(
        ["delete", "get", "head", "post", "put", "patch", "common"],
        (w) => {
          delete s[w];
        }
      ),
      (n.headers = Wr.concat(o, s));
    const l = [];
    let c = !0;
    this.interceptors.request.forEach(function (b) {
      (typeof b.runWhen == "function" && b.runWhen(n) === !1) ||
        ((c = c && b.synchronous), l.unshift(b.fulfilled, b.rejected));
    });
    const f = [];
    this.interceptors.response.forEach(function (b) {
      f.push(b.fulfilled, b.rejected);
    });
    let d,
      p = 0,
      m;
    if (!c) {
      const w = [jv.bind(this), void 0];
      for (
        w.unshift.apply(w, l),
          w.push.apply(w, f),
          m = w.length,
          d = Promise.resolve(n);
        p < m;

      )
        d = d.then(w[p++], w[p++]);
      return d;
    }
    m = l.length;
    let g = n;
    for (p = 0; p < m; ) {
      const w = l[p++],
        b = l[p++];
      try {
        g = w(g);
      } catch (x) {
        b.call(this, x);
        break;
      }
    }
    try {
      d = jv.call(this, g);
    } catch (w) {
      return Promise.reject(w);
    }
    for (p = 0, m = f.length; p < m; ) d = d.then(f[p++], f[p++]);
    return d;
  }
  getUri(t) {
    t = na(this.defaults, t);
    const n = rk(t.baseURL, t.url);
    return XE(n, t.params, t.paramsSerializer);
  }
};
D1.forEach(["delete", "get", "head", "options"], function (t) {
  Yo.prototype[t] = function (n, r) {
    return this.request(
      na(r || {}, { method: t, url: n, data: (r || {}).data })
    );
  };
});
D1.forEach(["post", "put", "patch"], function (t) {
  function n(r) {
    return function (s, o, l) {
      return this.request(
        na(l || {}, {
          method: t,
          headers: r ? { "Content-Type": "multipart/form-data" } : {},
          url: s,
          data: o,
        })
      );
    };
  }
  (Yo.prototype[t] = n()), (Yo.prototype[t + "Form"] = n(!0));
});
let $W = class uk {
  constructor(t) {
    if (typeof t != "function")
      throw new TypeError("executor must be a function.");
    let n;
    this.promise = new Promise(function (s) {
      n = s;
    });
    const r = this;
    this.promise.then((i) => {
      if (!r._listeners) return;
      let s = r._listeners.length;
      for (; s-- > 0; ) r._listeners[s](i);
      r._listeners = null;
    }),
      (this.promise.then = (i) => {
        let s;
        const o = new Promise((l) => {
          r.subscribe(l), (s = l);
        }).then(i);
        return (
          (o.cancel = function () {
            r.unsubscribe(s);
          }),
          o
        );
      }),
      t(function (s, o, l) {
        r.reason || ((r.reason = new I3(s, o, l)), n(r.reason));
      });
  }
  throwIfRequested() {
    if (this.reason) throw this.reason;
  }
  subscribe(t) {
    if (this.reason) {
      t(this.reason);
      return;
    }
    this._listeners ? this._listeners.push(t) : (this._listeners = [t]);
  }
  unsubscribe(t) {
    if (!this._listeners) return;
    const n = this._listeners.indexOf(t);
    n !== -1 && this._listeners.splice(n, 1);
  }
  toAbortSignal() {
    const t = new AbortController(),
      n = (r) => {
        t.abort(r);
      };
    return (
      this.subscribe(n),
      (t.signal.unsubscribe = () => this.unsubscribe(n)),
      t.signal
    );
  }
  static source() {
    let t;
    return {
      token: new uk(function (i) {
        t = i;
      }),
      cancel: t,
    };
  }
};
function VW(e) {
  return function (n) {
    return e.apply(null, n);
  };
}
function WW(e) {
  return D1.isObject(e) && e.isAxiosError === !0;
}
const a6 = {
  Continue: 100,
  SwitchingProtocols: 101,
  Processing: 102,
  EarlyHints: 103,
  Ok: 200,
  Created: 201,
  Accepted: 202,
  NonAuthoritativeInformation: 203,
  NoContent: 204,
  ResetContent: 205,
  PartialContent: 206,
  MultiStatus: 207,
  AlreadyReported: 208,
  ImUsed: 226,
  MultipleChoices: 300,
  MovedPermanently: 301,
  Found: 302,
  SeeOther: 303,
  NotModified: 304,
  UseProxy: 305,
  Unused: 306,
  TemporaryRedirect: 307,
  PermanentRedirect: 308,
  BadRequest: 400,
  Unauthorized: 401,
  PaymentRequired: 402,
  Forbidden: 403,
  NotFound: 404,
  MethodNotAllowed: 405,
  NotAcceptable: 406,
  ProxyAuthenticationRequired: 407,
  RequestTimeout: 408,
  Conflict: 409,
  Gone: 410,
  LengthRequired: 411,
  PreconditionFailed: 412,
  PayloadTooLarge: 413,
  UriTooLong: 414,
  UnsupportedMediaType: 415,
  RangeNotSatisfiable: 416,
  ExpectationFailed: 417,
  ImATeapot: 418,
  MisdirectedRequest: 421,
  UnprocessableEntity: 422,
  Locked: 423,
  FailedDependency: 424,
  TooEarly: 425,
  UpgradeRequired: 426,
  PreconditionRequired: 428,
  TooManyRequests: 429,
  RequestHeaderFieldsTooLarge: 431,
  UnavailableForLegalReasons: 451,
  InternalServerError: 500,
  NotImplemented: 501,
  BadGateway: 502,
  ServiceUnavailable: 503,
  GatewayTimeout: 504,
  HttpVersionNotSupported: 505,
  VariantAlsoNegotiates: 506,
  InsufficientStorage: 507,
  LoopDetected: 508,
  NotExtended: 510,
  NetworkAuthenticationRequired: 511,
};
Object.entries(a6).forEach(([e, t]) => {
  a6[t] = e;
});
function ck(e) {
  const t = new Yo(e),
    n = UE(Yo.prototype.request, t);
  return (
    D1.extend(n, Yo.prototype, t, { allOwnKeys: !0 }),
    D1.extend(n, t, null, { allOwnKeys: !0 }),
    (n.create = function (i) {
      return ck(na(e, i));
    }),
    n
  );
}
const Rn = ck(xu);
Rn.Axios = Yo;
Rn.CanceledError = I3;
Rn.CancelToken = $W;
Rn.isCancel = tk;
Rn.VERSION = lk;
Rn.toFormData = K4;
Rn.AxiosError = yt;
Rn.Cancel = Rn.CanceledError;
Rn.all = function (t) {
  return Promise.all(t);
};
Rn.spread = VW;
Rn.isAxiosError = WW;
Rn.mergeConfig = na;
Rn.AxiosHeaders = Wr;
Rn.formToJSON = (e) => ek(D1.isHTMLForm(e) ? new FormData(e) : e);
Rn.getAdapter = ak.getAdapter;
Rn.HttpStatusCode = a6;
Rn.default = Rn;
const {
    Axios: G11,
    AxiosError: Y11,
    CanceledError: Q11,
    isCancel: Z11,
    CancelToken: X11,
    VERSION: J11,
    all: ee1,
    Cancel: te1,
    isAxiosError: ne1,
    spread: re1,
    toFormData: ie1,
    AxiosHeaders: se1,
    HttpStatusCode: oe1,
    formToJSON: ae1,
    getAdapter: le1,
    mergeConfig: ue1,
  } = Rn,
  l6 = (e) => {
    var t, n, r, i;
    !e ||
      !(
        (n =
          (t = window == null ? void 0 : window.Telegram) == null
            ? void 0
            : t.WebApp) != null && n.showAlert
      ) ||
      ((e == null ? void 0 : e.success) === !1 &&
        e != null &&
        e.message &&
        ((i = (r = window.Telegram.WebApp).showAlert) == null ||
          i.call(r, e.message)));
  },
  Cu = Rn.create({ baseURL: cR });
Cu.interceptors.request.use(
  (e) => (
    e.method !== "options" && (e.headers.Authorization = FE()),
    (e.params = { ...e.params, c: Math.floor(Date.now() / 1e3) }),
    e
  )
);
Cu.interceptors.response.use(
  (e) => (l6(e.data), e),
  (e) => {
    var t;
    return l6((t = e.response) == null ? void 0 : t.data), Promise.reject(e);
  }
);
const zW = 2e3;
class HW {
  constructor() {
    (this.ws = null),
      (this.subscribers = new Set()),
      (this.messageHandlers = []),
      (this.isConnected = !1),
      (this.url = null),
      (this.token = null),
      (this.reconnectTimeoutId = null),
      (this.reconnectAttempts = 0);
  }
  connect(t, n) {
    this.reconnectTimeoutId &&
      (clearTimeout(this.reconnectTimeoutId), (this.reconnectTimeoutId = null)),
      this.ws &&
        ((this.ws.onclose = () => {}), this.ws.close(), (this.ws = null)),
      (this.url = t),
      (this.token = n);
    const r = encodeURIComponent(n);
    (this.ws = new WebSocket(`${t}?token=${r}`)),
      (this.ws.onopen = () => {
        console.log("WebSocket соединение установлено"),
          (this.reconnectAttempts = 0),
          (this.isConnected = !0),
          this.notifySubscribers();
      }),
      (this.ws.onclose = () => {
        console.log("WebSocket соединение закрыто"),
          (this.isConnected = !1),
          this.notifySubscribers(),
          (this.ws = null),
          this.reconnect();
      }),
      (this.ws.onerror = (i) => {
        console.error("WebSocket ошибка:", i);
      }),
      (this.ws.onmessage = (i) => {
        const s = JSON.parse(i.data);
        this.messageHandlers.forEach((o) => o(s));
      });
  }
  reconnect() {
    this.reconnectAttempts++,
      console.log(
        `WebSocket попытка переподключения: ${this.reconnectAttempts}`
      ),
      (this.reconnectTimeoutId = setTimeout(() => {
        this.connect(this.url, this.token);
      }, zW));
  }
  addMessageHandler(t) {
    this.messageHandlers.push(t);
  }
  removeMessageHandler(t) {
    this.messageHandlers = this.messageHandlers.filter((n) => n !== t);
  }
  subscribe(t) {
    return this.subscribers.add(t), () => this.subscribers.delete(t);
  }
  notifySubscribers() {
    this.subscribers.forEach((t) => t(this.isConnected));
  }
  send(t) {
    var n;
    ((n = this.ws) == null ? void 0 : n.readyState) === WebSocket.OPEN &&
      this.ws.send(JSON.stringify(t));
  }
}
const za = new HW(),
  wr = (e) => (t) => {
    t == null || t.stopPropagation(),
      window.Telegram.WebApp.openTelegramLink(e);
  },
  qW = (e) => (t) => {
    t == null || t.stopPropagation(), window.Telegram.WebApp.openLink(e);
  },
  Su = (e) => async (t) => {
    var o, l;
    const {
      url: n = t,
      method: r = "GET",
      data: i = {},
      params: s = {},
    } = typeof t == "string" ? {} : t;
    try {
      return {
        data: (await Cu({ url: `${e}/${n}`, method: r, data: i, params: s }))
          .data,
      };
    } catch (c) {
      return {
        error: {
          status: (o = c.response) == null ? void 0 : o.status,
          data: (l = c.response) == null ? void 0 : l.data,
        },
      };
    }
  },
  gd = wu({
    reducerPath: "rootApi",
    baseQuery: Su(""),
    endpoints: (e) => ({ getOnline: e.query({ query: () => "online" }) }),
  }),
  { useLazyGetOnlineQuery: KW, useGetOnlineQuery: GW } = gd,
  zr = wu({
    reducerPath: "userApi",
    baseQuery: Su("user"),
    tagTypes: ["Profile", "History", "Giveaway", "Inventory"],
    endpoints: (e) => ({
      getProfile: e.query({
        query: () => "profile",
        providesTags: ["Profile"],
      }),
      setLogin: e.mutation({
        query: (t) => ({ url: "login", method: "POST", data: { ...t } }),
        invalidatesTags: ["Profile"],
      }),
      getHistory: e.query({
        query: () => "history",
        providesTags: ["History"],
        transformResponse: (t) => {
          var n;
          if (t != null && t.success) {
            const r =
              ((n = t.items) == null ? void 0 : n.filter(Boolean)) || [];
            return { ...t, items: r };
          }
          return t;
        },
      }),
      setWallet: e.mutation({
        query: (t) => ({ url: "wallet", method: "POST", data: { wallet: t } }),
        invalidatesTags: ["Profile"],
      }),
      createPayment: e.mutation({
        query: (t) => ({ url: "payments/create", method: "POST", data: t }),
      }),
      setReferralClaim: e.mutation({
        query: () => ({ url: "referral-claim", method: "POST" }),
      }),
      buyItems: e.mutation({
        query: (t) => ({ url: "trade/checkout", method: "POST", data: t }),
      }),
      createGiveaway: e.mutation({
        query: (t) => ({ url: "giveaway/create", method: "POST", data: t }),
      }),
      getGiveaway: e.query({
        query: (t) => `giveaway/${t}`,
        providesTags: (t, n, r) => [{ type: "Giveaway", id: r }],
      }),
      sellInventory: e.mutation({
        query: (t) => ({ url: "inventory/sell", method: "POST", data: t }),
      }),
      withdrawInventory: e.mutation({
        query: (t) => ({ url: "inventory/withdraw", method: "POST", data: t }),
      }),
      checkTask: e.mutation({
        query: (t) => ({
          url: "giveaway/tasks/check",
          method: "POST",
          data: t,
        }),
      }),
      buyGiveawayTickets: e.mutation({
        query: (t) => ({ url: "giveaway/purchase", method: "POST", data: t }),
      }),
      checkPromoCode: e.mutation({
        query: (t) => ({ url: "check-promocode", method: "POST", data: t }),
      }),
      getInventory: e.query({
        query: () => "inventory",
        providesTags: ["Inventory"],
      }),
    }),
  }),
  {
    useGetProfileQuery: da,
    useLazyGetProfileQuery: YW,
    useCreatePaymentMutation: QW,
    useGetHistoryQuery: ZW,
    useSetWalletMutation: Vp,
    useSetReferralClaimMutation: XW,
    useBuyItemsMutation: JW,
    useCreateGiveawayMutation: ez,
    useGetGiveawayQuery: tz,
    useCheckTaskMutation: nz,
    useBuyGiveawayTicketsMutation: rz,
    useCheckPromoCodeMutation: iz,
    useSellInventoryMutation: Wp,
    useWithdrawInventoryMutation: sz,
    useGetInventoryQuery: dk,
  } = zr,
  J2 = 0.9,
  fa = { small: 6, medium: 12, large: 24 },
  j3 = "@PrimeGiftsCase",
  Cl = wu({
    reducerPath: "tradeApi",
    baseQuery: Su("trade"),
    tagTypes: [
      "CollectionList",
      "Collection",
      "CollectionFilterList",
      "TradeItems",
    ],
    endpoints: (e) => ({
      getCollectionsList: e.query({
        query: () => "collections",
        providesTags: ["CollectionList"],
        transformResponse: (t) => {
          var n;
          if (t != null && t.success) {
            const r =
              ((n = t.items) == null ? void 0 : n.filter(Boolean)) || [];
            return { ...t, items: r };
          }
          return t;
        },
      }),
      getCollectionsForFilter: e.query({
        query: () => "filters/collections",
        providesTags: ["CollectionFilterList"],
      }),
      getCollection: e.query({
        query: (t) => `collections/${t}`,
        providesTags: ["Collection"],
      }),
      getTradeItems: e.infiniteQuery({
        infiniteQueryOptions: {
          initialPageParam: { offset: 0, limit: fa.medium },
          getNextPageParam: (t, n, r) => {
            var s;
            const i = r.offset + r.limit;
            if (
              !(
                ((s = t == null ? void 0 : t.items) == null
                  ? void 0
                  : s.length) < r.limit
              )
            )
              return { ...r, offset: i };
          },
          refetchOnMountOrArgChange: !0,
        },
        query: ({
          queryArg: { collectionId: t, order: n },
          pageParam: { offset: r, limit: i },
        }) => `items?offset=${r}&limit=${i}&collectionId=${t}&order=${n}`,
        transformResponse: (t) => {
          var n;
          if (t != null && t.success) {
            const r =
              ((n = t.items) == null ? void 0 : n.filter(Boolean)) || [];
            return { ...t, items: r };
          }
          return t;
        },
        providesTags: ["TradeItems"],
      }),
    }),
  }),
  {
    useGetCollectionsListQuery: oz,
    useGetCollectionQuery: az,
    useGetTradeItemsInfiniteQuery: lz,
    useGetCollectionsForFilterQuery: uz,
  } = Cl,
  yd = wu({
    reducerPath: "casesApi",
    baseQuery: Su("cases"),
    tagTypes: ["CasesList", "Case"],
    endpoints: (e) => ({
      getCasesList: e.query({ query: () => "", providesTags: ["CasesList"] }),
      getCase: e.query({ query: (t) => `${t}`, providesTags: ["Case"] }),
      getLiveDrops: e.query({ query: () => "live-drops" }),
    }),
  }),
  {
    useGetCasesListQuery: fk,
    useGetCaseQuery: cz,
    useGetLiveDropsQuery: dz,
    useLazyGetCasesListQuery: fz,
  } = yd,
  vd = wu({
    reducerPath: "giveawaysApi",
    baseQuery: Su("giveaways"),
    tagTypes: ["GiveawaysActive", "GiveawaysCompleted"],
    endpoints: (e) => ({
      getGiveawaysActive: e.query({
        query: () => "active",
        providesTags: ["GiveawaysActive"],
      }),
      getGiveawaysCompleted: e.query({
        query: () => "completed",
        providesTags: ["GiveawaysCompleted"],
      }),
    }),
  }),
  { useGetGiveawaysActiveQuery: hz, useGetGiveawaysCompletedQuery: pz } = vd,
  Q4 = ({ telegram: e }) => e,
  mz = ca(Q4, ({ token: e }) => e || ""),
  gz = ca(Q4, ({ platform: e }) => e || ""),
  yz = ca(Q4, ({ token: e, id: t, ...n }) => n),
  vz = ca(Q4, ({ id: e }) => e),
  wz = { getToken: mz, getData: yz, getPlatform: gz, getUserId: vz },
  N3 = { telegram: wz },
  bz = Lo({ name: "telegram", initialState: {}, reducers: {} }),
  xz = f$({
    reducer: {
      telegram: bz.reducer,
      [zr.reducerPath]: zr.reducer,
      [Cl.reducerPath]: Cl.reducer,
      [yd.reducerPath]: yd.reducer,
      [vd.reducerPath]: vd.reducer,
      [gd.reducerPath]: gd.reducer,
    },
    preloadedState: { telegram: hV() },
    middleware: (e) =>
      e().concat(
        zr.middleware,
        Cl.middleware,
        yd.middleware,
        vd.middleware,
        gd.middleware
      ),
  });
var mo = {},
  Ov;
function Cz() {
  if (Ov) return mo;
  (Ov = 1),
    Object.defineProperty(mo, "__esModule", { value: !0 }),
    (mo.fromNano = mo.toNano = void 0);
  function e(n) {
    if (typeof n == "bigint") return n * 1000000000n;
    {
      if (typeof n == "number") {
        if (!Number.isFinite(n)) throw Error("Invalid number");
        if (Math.log10(n) <= 6)
          n = n.toLocaleString("en", {
            minimumFractionDigits: 9,
            useGrouping: !1,
          });
        else if (n - Math.trunc(n) === 0)
          n = n.toLocaleString("en", {
            maximumFractionDigits: 0,
            useGrouping: !1,
          });
        else
          throw Error(
            "Not enough precision for a number value. Use string value instead"
          );
      }
      let r = !1;
      for (; n.startsWith("-"); ) (r = !r), (n = n.slice(1));
      if (n === ".") throw Error("Invalid number");
      let i = n.split(".");
      if (i.length > 2) throw Error("Invalid number");
      let s = i[0],
        o = i[1];
      if ((s || (s = "0"), o || (o = "0"), o.length > 9))
        throw Error("Invalid number");
      for (; o.length < 9; ) o += "0";
      let l = BigInt(s) * 1000000000n + BigInt(o);
      return r && (l = -l), l;
    }
  }
  mo.toNano = e;
  function t(n) {
    let r = BigInt(n),
      i = !1;
    r < 0 && ((i = !0), (r = -r));
    let o = (r % 1000000000n).toString();
    for (; o.length < 9; ) o = "0" + o;
    o = o.match(/^([0-9]*[1-9]|0)(0*)/)[1];
    let f = `${(r / 1000000000n).toString()}${o === "0" ? "" : `.${o}`}`;
    return i && (f = "-" + f), f;
  }
  return (mo.fromNano = t), mo;
}
var Jt = Cz();
const Fn = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 17,
        height: 18,
        fill: "none",
        viewBox: "0 0 17 18",
        ...e,
      },
      N.createElement("path", {
        fill: "#fff",
        d: "M8.5 1.35c0-.47.38-.85.85-.8a8.5 8.5 0 1 1-6.5 2.1c.34-.3.88-.22 1.15.16.28.38.2.9-.15 1.23a6.8 6.8 0 1 0 5.5-1.79c-.47-.06-.85-.43-.85-.9Z",
      })
    ),
  hk = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 20,
        height: 20,
        fill: "none",
        viewBox: "0 0 20 20",
        ...e,
      },
      N.createElement("path", {
        fill: "currentColor",
        fillRule: "evenodd",
        d: "M16.97 16.6 16 12.7l3.17-2.6a2.26 2.26 0 0 0-1.26-4l-4.23-.31-1.63-3.82a2.25 2.25 0 0 0-4.15 0L6.27 5.78l-4.18.31a2.25 2.25 0 0 0-1.25 4l1.51 1.23c.57.46 1.34.88 2.2 1.1a4.65 4.65 0 0 0-.9 1.74l-.63 2.4a2.25 2.25 0 0 0 3.33 2.51l3.63-2.15 3.66 2.17a2.25 2.25 0 0 0 3.33-2.49Zm-1.41.36-1.08-4.35a.77.77 0 0 1 .26-.78l3.5-2.87a.8.8 0 0 0-.44-1.41l-4.6-.35a.84.84 0 0 1-.7-.5l-1.8-4.17a.8.8 0 0 0-1.45 0L7.46 6.71a.84.84 0 0 1-.71.5l-4.55.34a.8.8 0 0 0-.44 1.41l1.5 1.23a3.87 3.87 0 0 0 2.8.88l3.93-.58h.03a.4.4 0 0 1 .4.19c.1.18.03.4-.16.5l-.13.05-3.56 1.38a3.05 3.05 0 0 0-1.51 1.92l-.63 2.4a.8.8 0 0 0 1.17.89l3.93-2.33a.9.9 0 0 1 .9 0l3.95 2.34a.8.8 0 0 0 1.18-.87Z",
        clipRule: "evenodd",
      })
    ),
  zp = "-",
  Sz = (e) => {
    const t = kz(e),
      { conflictingClassGroups: n, conflictingClassGroupModifiers: r } = e;
    return {
      getClassGroupId: (o) => {
        const l = o.split(zp);
        return l[0] === "" && l.length !== 1 && l.shift(), pk(l, t) || Ez(o);
      },
      getConflictingClassGroupIds: (o, l) => {
        const c = n[o] || [];
        return l && r[o] ? [...c, ...r[o]] : c;
      },
    };
  },
  pk = (e, t) => {
    var o;
    if (e.length === 0) return t.classGroupId;
    const n = e[0],
      r = t.nextPart.get(n),
      i = r ? pk(e.slice(1), r) : void 0;
    if (i) return i;
    if (t.validators.length === 0) return;
    const s = e.join(zp);
    return (o = t.validators.find(({ validator: l }) => l(s))) == null
      ? void 0
      : o.classGroupId;
  },
  Bv = /^\[(.+)\]$/,
  Ez = (e) => {
    if (Bv.test(e)) {
      const t = Bv.exec(e)[1],
        n = t == null ? void 0 : t.substring(0, t.indexOf(":"));
      if (n) return "arbitrary.." + n;
    }
  },
  kz = (e) => {
    const { theme: t, classGroups: n } = e,
      r = { nextPart: new Map(), validators: [] };
    for (const i in n) u6(n[i], r, i, t);
    return r;
  },
  u6 = (e, t, n, r) => {
    e.forEach((i) => {
      if (typeof i == "string") {
        const s = i === "" ? t : Dv(t, i);
        s.classGroupId = n;
        return;
      }
      if (typeof i == "function") {
        if (_z(i)) {
          u6(i(r), t, n, r);
          return;
        }
        t.validators.push({ validator: i, classGroupId: n });
        return;
      }
      Object.entries(i).forEach(([s, o]) => {
        u6(o, Dv(t, s), n, r);
      });
    });
  },
  Dv = (e, t) => {
    let n = e;
    return (
      t.split(zp).forEach((r) => {
        n.nextPart.has(r) ||
          n.nextPart.set(r, { nextPart: new Map(), validators: [] }),
          (n = n.nextPart.get(r));
      }),
      n
    );
  },
  _z = (e) => e.isThemeGetter,
  Az = (e) => {
    if (e < 1) return { get: () => {}, set: () => {} };
    let t = 0,
      n = new Map(),
      r = new Map();
    const i = (s, o) => {
      n.set(s, o), t++, t > e && ((t = 0), (r = n), (n = new Map()));
    };
    return {
      get(s) {
        let o = n.get(s);
        if (o !== void 0) return o;
        if ((o = r.get(s)) !== void 0) return i(s, o), o;
      },
      set(s, o) {
        n.has(s) ? n.set(s, o) : i(s, o);
      },
    };
  },
  c6 = "!",
  d6 = ":",
  Tz = d6.length,
  Pz = (e) => {
    const { prefix: t, experimentalParseClassName: n } = e;
    let r = (i) => {
      const s = [];
      let o = 0,
        l = 0,
        c = 0,
        f;
      for (let w = 0; w < i.length; w++) {
        let b = i[w];
        if (o === 0 && l === 0) {
          if (b === d6) {
            s.push(i.slice(c, w)), (c = w + Tz);
            continue;
          }
          if (b === "/") {
            f = w;
            continue;
          }
        }
        b === "[" ? o++ : b === "]" ? o-- : b === "(" ? l++ : b === ")" && l--;
      }
      const d = s.length === 0 ? i : i.substring(c),
        p = Mz(d),
        m = p !== d,
        g = f && f > c ? f - c : void 0;
      return {
        modifiers: s,
        hasImportantModifier: m,
        baseClassName: p,
        maybePostfixModifierPosition: g,
      };
    };
    if (t) {
      const i = t + d6,
        s = r;
      r = (o) =>
        o.startsWith(i)
          ? s(o.substring(i.length))
          : {
              isExternal: !0,
              modifiers: [],
              hasImportantModifier: !1,
              baseClassName: o,
              maybePostfixModifierPosition: void 0,
            };
    }
    if (n) {
      const i = r;
      r = (s) => n({ className: s, parseClassName: i });
    }
    return r;
  },
  Mz = (e) =>
    e.endsWith(c6)
      ? e.substring(0, e.length - 1)
      : e.startsWith(c6)
      ? e.substring(1)
      : e,
  Rz = (e) => {
    const t = Object.fromEntries(e.orderSensitiveModifiers.map((r) => [r, !0]));
    return (r) => {
      if (r.length <= 1) return r;
      const i = [];
      let s = [];
      return (
        r.forEach((o) => {
          o[0] === "[" || t[o] ? (i.push(...s.sort(), o), (s = [])) : s.push(o);
        }),
        i.push(...s.sort()),
        i
      );
    };
  },
  Lz = (e) => ({
    cache: Az(e.cacheSize),
    parseClassName: Pz(e),
    sortModifiers: Rz(e),
    ...Sz(e),
  }),
  Iz = /\s+/,
  jz = (e, t) => {
    const {
        parseClassName: n,
        getClassGroupId: r,
        getConflictingClassGroupIds: i,
        sortModifiers: s,
      } = t,
      o = [],
      l = e.trim().split(Iz);
    let c = "";
    for (let f = l.length - 1; f >= 0; f -= 1) {
      const d = l[f],
        {
          isExternal: p,
          modifiers: m,
          hasImportantModifier: g,
          baseClassName: w,
          maybePostfixModifierPosition: b,
        } = n(d);
      if (p) {
        c = d + (c.length > 0 ? " " + c : c);
        continue;
      }
      let x = !!b,
        E = r(x ? w.substring(0, b) : w);
      if (!E) {
        if (!x) {
          c = d + (c.length > 0 ? " " + c : c);
          continue;
        }
        if (((E = r(w)), !E)) {
          c = d + (c.length > 0 ? " " + c : c);
          continue;
        }
        x = !1;
      }
      const P = s(m).join(":"),
        _ = g ? P + c6 : P,
        T = _ + E;
      if (o.includes(T)) continue;
      o.push(T);
      const M = i(E, x);
      for (let L = 0; L < M.length; ++L) {
        const O = M[L];
        o.push(_ + O);
      }
      c = d + (c.length > 0 ? " " + c : c);
    }
    return c;
  };
function mk() {
  let e = 0,
    t,
    n,
    r = "";
  for (; e < arguments.length; )
    (t = arguments[e++]) && (n = gk(t)) && (r && (r += " "), (r += n));
  return r;
}
const gk = (e) => {
  if (typeof e == "string") return e;
  let t,
    n = "";
  for (let r = 0; r < e.length; r++)
    e[r] && (t = gk(e[r])) && (n && (n += " "), (n += t));
  return n;
};
function Nz(e, ...t) {
  let n,
    r,
    i,
    s = o;
  function o(c) {
    const f = t.reduce((d, p) => p(d), e());
    return (n = Lz(f)), (r = n.cache.get), (i = n.cache.set), (s = l), l(c);
  }
  function l(c) {
    const f = r(c);
    if (f) return f;
    const d = jz(c, n);
    return i(c, d), d;
  }
  return function () {
    return s(mk.apply(null, arguments));
  };
}
const Hn = (e) => {
    const t = (n) => n[e] || [];
    return (t.isThemeGetter = !0), t;
  },
  yk = /^\[(?:(\w[\w-]*):)?(.+)\]$/i,
  vk = /^\((?:(\w[\w-]*):)?(.+)\)$/i,
  Oz = /^\d+\/\d+$/,
  Bz = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/,
  Dz =
    /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/,
  Fz = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/,
  Uz = /^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/,
  $z =
    /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/,
  Ha = (e) => Oz.test(e),
  Rt = (e) => !!e && !Number.isNaN(Number(e)),
  go = (e) => !!e && Number.isInteger(Number(e)),
  Fv = (e) => e.endsWith("%") && Rt(e.slice(0, -1)),
  Ss = (e) => Bz.test(e),
  Vz = () => !0,
  Wz = (e) => Dz.test(e) && !Fz.test(e),
  Hp = () => !1,
  zz = (e) => Uz.test(e),
  Hz = (e) => $z.test(e),
  qz = (e) => !Se(e) && !Ee(e),
  Kz = (e) => O3(e, xk, Hp),
  Se = (e) => yk.test(e),
  yo = (e) => O3(e, Ck, Wz),
  B9 = (e) => O3(e, iH, Rt),
  Gz = (e) => O3(e, wk, Hp),
  Yz = (e) => O3(e, bk, Hz),
  Qz = (e) => O3(e, Hp, zz),
  Ee = (e) => vk.test(e),
  Yc = (e) => B3(e, Ck),
  Zz = (e) => B3(e, sH),
  Xz = (e) => B3(e, wk),
  Jz = (e) => B3(e, xk),
  eH = (e) => B3(e, bk),
  tH = (e) => B3(e, oH, !0),
  O3 = (e, t, n) => {
    const r = yk.exec(e);
    return r ? (r[1] ? t(r[1]) : n(r[2])) : !1;
  },
  B3 = (e, t, n = !1) => {
    const r = vk.exec(e);
    return r ? (r[1] ? t(r[1]) : n) : !1;
  },
  wk = (e) => e === "position",
  nH = new Set(["image", "url"]),
  bk = (e) => nH.has(e),
  rH = new Set(["length", "size", "percentage"]),
  xk = (e) => rH.has(e),
  Ck = (e) => e === "length",
  iH = (e) => e === "number",
  sH = (e) => e === "family-name",
  oH = (e) => e === "shadow",
  aH = () => {
    const e = Hn("color"),
      t = Hn("font"),
      n = Hn("text"),
      r = Hn("font-weight"),
      i = Hn("tracking"),
      s = Hn("leading"),
      o = Hn("breakpoint"),
      l = Hn("container"),
      c = Hn("spacing"),
      f = Hn("radius"),
      d = Hn("shadow"),
      p = Hn("inset-shadow"),
      m = Hn("drop-shadow"),
      g = Hn("blur"),
      w = Hn("perspective"),
      b = Hn("aspect"),
      x = Hn("ease"),
      E = Hn("animate"),
      P = () => [
        "auto",
        "avoid",
        "all",
        "avoid-page",
        "page",
        "left",
        "right",
        "column",
      ],
      _ = () => [
        "bottom",
        "center",
        "left",
        "left-bottom",
        "left-top",
        "right",
        "right-bottom",
        "right-top",
        "top",
      ],
      T = () => ["auto", "hidden", "clip", "visible", "scroll"],
      M = () => ["auto", "contain", "none"],
      L = () => [Ha, "px", "full", "auto", Ee, Se, c],
      O = () => [go, "none", "subgrid", Ee, Se],
      U = () => ["auto", { span: ["full", go, Ee, Se] }, Ee, Se],
      D = () => [go, "auto", Ee, Se],
      H = () => ["auto", "min", "max", "fr", Ee, Se],
      $ = () => [Ee, Se, c],
      F = () => [
        "start",
        "end",
        "center",
        "between",
        "around",
        "evenly",
        "stretch",
        "baseline",
      ],
      B = () => ["start", "end", "center", "stretch"],
      j = () => [Ee, Se, c],
      G = () => ["px", ...j()],
      u1 = () => ["px", "auto", ...j()],
      e1 = () => [
        Ha,
        "auto",
        "px",
        "full",
        "dvw",
        "dvh",
        "lvw",
        "lvh",
        "svw",
        "svh",
        "min",
        "max",
        "fit",
        Ee,
        Se,
        c,
      ],
      i1 = () => [e, Ee, Se],
      Z = () => [Fv, yo],
      b1 = () => ["", "none", "full", f, Ee, Se],
      o1 = () => ["", Rt, Yc, yo],
      k1 = () => ["solid", "dashed", "dotted", "double"],
      Y1 = () => [
        "normal",
        "multiply",
        "screen",
        "overlay",
        "darken",
        "lighten",
        "color-dodge",
        "color-burn",
        "hard-light",
        "soft-light",
        "difference",
        "exclusion",
        "hue",
        "saturation",
        "color",
        "luminosity",
      ],
      G1 = () => ["", "none", g, Ee, Se],
      M1 = () => [
        "center",
        "top",
        "top-right",
        "right",
        "bottom-right",
        "bottom",
        "bottom-left",
        "left",
        "top-left",
        Ee,
        Se,
      ],
      Q1 = () => ["none", Rt, Ee, Se],
      re = () => ["none", Rt, Ee, Se],
      d1 = () => [Rt, Ee, Se],
      h1 = () => [Ha, "full", "px", Ee, Se, c];
    return {
      cacheSize: 500,
      theme: {
        animate: ["spin", "ping", "pulse", "bounce"],
        aspect: ["video"],
        blur: [Ss],
        breakpoint: [Ss],
        color: [Vz],
        container: [Ss],
        "drop-shadow": [Ss],
        ease: ["in", "out", "in-out"],
        font: [qz],
        "font-weight": [
          "thin",
          "extralight",
          "light",
          "normal",
          "medium",
          "semibold",
          "bold",
          "extrabold",
          "black",
        ],
        "inset-shadow": [Ss],
        leading: ["none", "tight", "snug", "normal", "relaxed", "loose"],
        perspective: [
          "dramatic",
          "near",
          "normal",
          "midrange",
          "distant",
          "none",
        ],
        radius: [Ss],
        shadow: [Ss],
        spacing: [Rt],
        text: [Ss],
        tracking: ["tighter", "tight", "normal", "wide", "wider", "widest"],
      },
      classGroups: {
        aspect: [{ aspect: ["auto", "square", Ha, Se, Ee, b] }],
        container: ["container"],
        columns: [{ columns: [Rt, Se, Ee, l] }],
        "break-after": [{ "break-after": P() }],
        "break-before": [{ "break-before": P() }],
        "break-inside": [
          { "break-inside": ["auto", "avoid", "avoid-page", "avoid-column"] },
        ],
        "box-decoration": [{ "box-decoration": ["slice", "clone"] }],
        box: [{ box: ["border", "content"] }],
        display: [
          "block",
          "inline-block",
          "inline",
          "flex",
          "inline-flex",
          "table",
          "inline-table",
          "table-caption",
          "table-cell",
          "table-column",
          "table-column-group",
          "table-footer-group",
          "table-header-group",
          "table-row-group",
          "table-row",
          "flow-root",
          "grid",
          "inline-grid",
          "contents",
          "list-item",
          "hidden",
        ],
        sr: ["sr-only", "not-sr-only"],
        float: [{ float: ["right", "left", "none", "start", "end"] }],
        clear: [{ clear: ["left", "right", "both", "none", "start", "end"] }],
        isolation: ["isolate", "isolation-auto"],
        "object-fit": [
          { object: ["contain", "cover", "fill", "none", "scale-down"] },
        ],
        "object-position": [{ object: [..._(), Se, Ee] }],
        overflow: [{ overflow: T() }],
        "overflow-x": [{ "overflow-x": T() }],
        "overflow-y": [{ "overflow-y": T() }],
        overscroll: [{ overscroll: M() }],
        "overscroll-x": [{ "overscroll-x": M() }],
        "overscroll-y": [{ "overscroll-y": M() }],
        position: ["static", "fixed", "absolute", "relative", "sticky"],
        inset: [{ inset: L() }],
        "inset-x": [{ "inset-x": L() }],
        "inset-y": [{ "inset-y": L() }],
        start: [{ start: L() }],
        end: [{ end: L() }],
        top: [{ top: L() }],
        right: [{ right: L() }],
        bottom: [{ bottom: L() }],
        left: [{ left: L() }],
        visibility: ["visible", "invisible", "collapse"],
        z: [{ z: [go, "auto", Ee, Se] }],
        basis: [{ basis: [Ha, "full", "auto", Ee, Se, l, c] }],
        "flex-direction": [
          { flex: ["row", "row-reverse", "col", "col-reverse"] },
        ],
        "flex-wrap": [{ flex: ["nowrap", "wrap", "wrap-reverse"] }],
        flex: [{ flex: [Rt, Ha, "auto", "initial", "none", Se] }],
        grow: [{ grow: ["", Rt, Ee, Se] }],
        shrink: [{ shrink: ["", Rt, Ee, Se] }],
        order: [{ order: [go, "first", "last", "none", Ee, Se] }],
        "grid-cols": [{ "grid-cols": O() }],
        "col-start-end": [{ col: U() }],
        "col-start": [{ "col-start": D() }],
        "col-end": [{ "col-end": D() }],
        "grid-rows": [{ "grid-rows": O() }],
        "row-start-end": [{ row: U() }],
        "row-start": [{ "row-start": D() }],
        "row-end": [{ "row-end": D() }],
        "grid-flow": [
          { "grid-flow": ["row", "col", "dense", "row-dense", "col-dense"] },
        ],
        "auto-cols": [{ "auto-cols": H() }],
        "auto-rows": [{ "auto-rows": H() }],
        gap: [{ gap: $() }],
        "gap-x": [{ "gap-x": $() }],
        "gap-y": [{ "gap-y": $() }],
        "justify-content": [{ justify: [...F(), "normal"] }],
        "justify-items": [{ "justify-items": [...B(), "normal"] }],
        "justify-self": [{ "justify-self": ["auto", ...B()] }],
        "align-content": [{ content: ["normal", ...F()] }],
        "align-items": [{ items: [...B(), "baseline"] }],
        "align-self": [{ self: ["auto", ...B(), "baseline"] }],
        "place-content": [{ "place-content": F() }],
        "place-items": [{ "place-items": [...B(), "baseline"] }],
        "place-self": [{ "place-self": ["auto", ...B()] }],
        p: [{ p: G() }],
        px: [{ px: G() }],
        py: [{ py: G() }],
        ps: [{ ps: G() }],
        pe: [{ pe: G() }],
        pt: [{ pt: G() }],
        pr: [{ pr: G() }],
        pb: [{ pb: G() }],
        pl: [{ pl: G() }],
        m: [{ m: u1() }],
        mx: [{ mx: u1() }],
        my: [{ my: u1() }],
        ms: [{ ms: u1() }],
        me: [{ me: u1() }],
        mt: [{ mt: u1() }],
        mr: [{ mr: u1() }],
        mb: [{ mb: u1() }],
        ml: [{ ml: u1() }],
        "space-x": [{ "space-x": j() }],
        "space-x-reverse": ["space-x-reverse"],
        "space-y": [{ "space-y": j() }],
        "space-y-reverse": ["space-y-reverse"],
        size: [{ size: e1() }],
        w: [{ w: [l, "screen", ...e1()] }],
        "min-w": [{ "min-w": [l, "screen", "none", ...e1()] }],
        "max-w": [
          { "max-w": [l, "screen", "none", "prose", { screen: [o] }, ...e1()] },
        ],
        h: [{ h: ["screen", ...e1()] }],
        "min-h": [{ "min-h": ["screen", "none", ...e1()] }],
        "max-h": [{ "max-h": ["screen", ...e1()] }],
        "font-size": [{ text: ["base", n, Yc, yo] }],
        "font-smoothing": ["antialiased", "subpixel-antialiased"],
        "font-style": ["italic", "not-italic"],
        "font-weight": [{ font: [r, Ee, B9] }],
        "font-stretch": [
          {
            "font-stretch": [
              "ultra-condensed",
              "extra-condensed",
              "condensed",
              "semi-condensed",
              "normal",
              "semi-expanded",
              "expanded",
              "extra-expanded",
              "ultra-expanded",
              Fv,
              Se,
            ],
          },
        ],
        "font-family": [{ font: [Zz, Se, t] }],
        "fvn-normal": ["normal-nums"],
        "fvn-ordinal": ["ordinal"],
        "fvn-slashed-zero": ["slashed-zero"],
        "fvn-figure": ["lining-nums", "oldstyle-nums"],
        "fvn-spacing": ["proportional-nums", "tabular-nums"],
        "fvn-fraction": ["diagonal-fractions", "stacked-fractions"],
        tracking: [{ tracking: [i, Ee, Se] }],
        "line-clamp": [{ "line-clamp": [Rt, "none", Ee, B9] }],
        leading: [{ leading: [Ee, Se, s, c] }],
        "list-image": [{ "list-image": ["none", Ee, Se] }],
        "list-style-position": [{ list: ["inside", "outside"] }],
        "list-style-type": [{ list: ["disc", "decimal", "none", Ee, Se] }],
        "text-alignment": [
          { text: ["left", "center", "right", "justify", "start", "end"] },
        ],
        "placeholder-color": [{ placeholder: i1() }],
        "text-color": [{ text: i1() }],
        "text-decoration": [
          "underline",
          "overline",
          "line-through",
          "no-underline",
        ],
        "text-decoration-style": [{ decoration: [...k1(), "wavy"] }],
        "text-decoration-thickness": [
          { decoration: [Rt, "from-font", "auto", Ee, yo] },
        ],
        "text-decoration-color": [{ decoration: i1() }],
        "underline-offset": [{ "underline-offset": [Rt, "auto", Ee, Se] }],
        "text-transform": [
          "uppercase",
          "lowercase",
          "capitalize",
          "normal-case",
        ],
        "text-overflow": ["truncate", "text-ellipsis", "text-clip"],
        "text-wrap": [{ text: ["wrap", "nowrap", "balance", "pretty"] }],
        indent: [{ indent: ["px", ...j()] }],
        "vertical-align": [
          {
            align: [
              "baseline",
              "top",
              "middle",
              "bottom",
              "text-top",
              "text-bottom",
              "sub",
              "super",
              Ee,
              Se,
            ],
          },
        ],
        whitespace: [
          {
            whitespace: [
              "normal",
              "nowrap",
              "pre",
              "pre-line",
              "pre-wrap",
              "break-spaces",
            ],
          },
        ],
        break: [{ break: ["normal", "words", "all", "keep"] }],
        hyphens: [{ hyphens: ["none", "manual", "auto"] }],
        content: [{ content: ["none", Ee, Se] }],
        "bg-attachment": [{ bg: ["fixed", "local", "scroll"] }],
        "bg-clip": [{ "bg-clip": ["border", "padding", "content", "text"] }],
        "bg-origin": [{ "bg-origin": ["border", "padding", "content"] }],
        "bg-position": [{ bg: [..._(), Xz, Gz] }],
        "bg-repeat": [
          { bg: ["no-repeat", { repeat: ["", "x", "y", "space", "round"] }] },
        ],
        "bg-size": [{ bg: ["auto", "cover", "contain", Jz, Kz] }],
        "bg-image": [
          {
            bg: [
              "none",
              {
                linear: [
                  { to: ["t", "tr", "r", "br", "b", "bl", "l", "tl"] },
                  go,
                  Ee,
                  Se,
                ],
                radial: ["", Ee, Se],
                conic: [go, Ee, Se],
              },
              eH,
              Yz,
            ],
          },
        ],
        "bg-color": [{ bg: i1() }],
        "gradient-from-pos": [{ from: Z() }],
        "gradient-via-pos": [{ via: Z() }],
        "gradient-to-pos": [{ to: Z() }],
        "gradient-from": [{ from: i1() }],
        "gradient-via": [{ via: i1() }],
        "gradient-to": [{ to: i1() }],
        rounded: [{ rounded: b1() }],
        "rounded-s": [{ "rounded-s": b1() }],
        "rounded-e": [{ "rounded-e": b1() }],
        "rounded-t": [{ "rounded-t": b1() }],
        "rounded-r": [{ "rounded-r": b1() }],
        "rounded-b": [{ "rounded-b": b1() }],
        "rounded-l": [{ "rounded-l": b1() }],
        "rounded-ss": [{ "rounded-ss": b1() }],
        "rounded-se": [{ "rounded-se": b1() }],
        "rounded-ee": [{ "rounded-ee": b1() }],
        "rounded-es": [{ "rounded-es": b1() }],
        "rounded-tl": [{ "rounded-tl": b1() }],
        "rounded-tr": [{ "rounded-tr": b1() }],
        "rounded-br": [{ "rounded-br": b1() }],
        "rounded-bl": [{ "rounded-bl": b1() }],
        "border-w": [{ border: o1() }],
        "border-w-x": [{ "border-x": o1() }],
        "border-w-y": [{ "border-y": o1() }],
        "border-w-s": [{ "border-s": o1() }],
        "border-w-e": [{ "border-e": o1() }],
        "border-w-t": [{ "border-t": o1() }],
        "border-w-r": [{ "border-r": o1() }],
        "border-w-b": [{ "border-b": o1() }],
        "border-w-l": [{ "border-l": o1() }],
        "divide-x": [{ "divide-x": o1() }],
        "divide-x-reverse": ["divide-x-reverse"],
        "divide-y": [{ "divide-y": o1() }],
        "divide-y-reverse": ["divide-y-reverse"],
        "border-style": [{ border: [...k1(), "hidden", "none"] }],
        "divide-style": [{ divide: [...k1(), "hidden", "none"] }],
        "border-color": [{ border: i1() }],
        "border-color-x": [{ "border-x": i1() }],
        "border-color-y": [{ "border-y": i1() }],
        "border-color-s": [{ "border-s": i1() }],
        "border-color-e": [{ "border-e": i1() }],
        "border-color-t": [{ "border-t": i1() }],
        "border-color-r": [{ "border-r": i1() }],
        "border-color-b": [{ "border-b": i1() }],
        "border-color-l": [{ "border-l": i1() }],
        "divide-color": [{ divide: i1() }],
        "outline-style": [{ outline: [...k1(), "none", "hidden"] }],
        "outline-offset": [{ "outline-offset": [Rt, Ee, Se] }],
        "outline-w": [{ outline: ["", Rt, Yc, yo] }],
        "outline-color": [{ outline: [e] }],
        shadow: [{ shadow: ["", "none", d, tH, Qz] }],
        "shadow-color": [{ shadow: i1() }],
        "inset-shadow": [{ "inset-shadow": ["none", Ee, Se, p] }],
        "inset-shadow-color": [{ "inset-shadow": i1() }],
        "ring-w": [{ ring: o1() }],
        "ring-w-inset": ["ring-inset"],
        "ring-color": [{ ring: i1() }],
        "ring-offset-w": [{ "ring-offset": [Rt, yo] }],
        "ring-offset-color": [{ "ring-offset": i1() }],
        "inset-ring-w": [{ "inset-ring": o1() }],
        "inset-ring-color": [{ "inset-ring": i1() }],
        opacity: [{ opacity: [Rt, Ee, Se] }],
        "mix-blend": [
          { "mix-blend": [...Y1(), "plus-darker", "plus-lighter"] },
        ],
        "bg-blend": [{ "bg-blend": Y1() }],
        filter: [{ filter: ["", "none", Ee, Se] }],
        blur: [{ blur: G1() }],
        brightness: [{ brightness: [Rt, Ee, Se] }],
        contrast: [{ contrast: [Rt, Ee, Se] }],
        "drop-shadow": [{ "drop-shadow": ["", "none", m, Ee, Se] }],
        grayscale: [{ grayscale: ["", Rt, Ee, Se] }],
        "hue-rotate": [{ "hue-rotate": [Rt, Ee, Se] }],
        invert: [{ invert: ["", Rt, Ee, Se] }],
        saturate: [{ saturate: [Rt, Ee, Se] }],
        sepia: [{ sepia: ["", Rt, Ee, Se] }],
        "backdrop-filter": [{ "backdrop-filter": ["", "none", Ee, Se] }],
        "backdrop-blur": [{ "backdrop-blur": G1() }],
        "backdrop-brightness": [{ "backdrop-brightness": [Rt, Ee, Se] }],
        "backdrop-contrast": [{ "backdrop-contrast": [Rt, Ee, Se] }],
        "backdrop-grayscale": [{ "backdrop-grayscale": ["", Rt, Ee, Se] }],
        "backdrop-hue-rotate": [{ "backdrop-hue-rotate": [Rt, Ee, Se] }],
        "backdrop-invert": [{ "backdrop-invert": ["", Rt, Ee, Se] }],
        "backdrop-opacity": [{ "backdrop-opacity": [Rt, Ee, Se] }],
        "backdrop-saturate": [{ "backdrop-saturate": [Rt, Ee, Se] }],
        "backdrop-sepia": [{ "backdrop-sepia": ["", Rt, Ee, Se] }],
        "border-collapse": [{ border: ["collapse", "separate"] }],
        "border-spacing": [{ "border-spacing": j() }],
        "border-spacing-x": [{ "border-spacing-x": j() }],
        "border-spacing-y": [{ "border-spacing-y": j() }],
        "table-layout": [{ table: ["auto", "fixed"] }],
        caption: [{ caption: ["top", "bottom"] }],
        transition: [
          {
            transition: [
              "",
              "all",
              "colors",
              "opacity",
              "shadow",
              "transform",
              "none",
              Ee,
              Se,
            ],
          },
        ],
        "transition-behavior": [{ transition: ["normal", "discrete"] }],
        duration: [{ duration: [Rt, "initial", Ee, Se] }],
        ease: [{ ease: ["linear", "initial", x, Ee, Se] }],
        delay: [{ delay: [Rt, Ee, Se] }],
        animate: [{ animate: ["none", E, Ee, Se] }],
        backface: [{ backface: ["hidden", "visible"] }],
        perspective: [{ perspective: [w, Ee, Se] }],
        "perspective-origin": [{ "perspective-origin": M1() }],
        rotate: [{ rotate: Q1() }],
        "rotate-x": [{ "rotate-x": Q1() }],
        "rotate-y": [{ "rotate-y": Q1() }],
        "rotate-z": [{ "rotate-z": Q1() }],
        scale: [{ scale: re() }],
        "scale-x": [{ "scale-x": re() }],
        "scale-y": [{ "scale-y": re() }],
        "scale-z": [{ "scale-z": re() }],
        "scale-3d": ["scale-3d"],
        skew: [{ skew: d1() }],
        "skew-x": [{ "skew-x": d1() }],
        "skew-y": [{ "skew-y": d1() }],
        transform: [{ transform: [Ee, Se, "", "none", "gpu", "cpu"] }],
        "transform-origin": [{ origin: M1() }],
        "transform-style": [{ transform: ["3d", "flat"] }],
        translate: [{ translate: h1() }],
        "translate-x": [{ "translate-x": h1() }],
        "translate-y": [{ "translate-y": h1() }],
        "translate-z": [{ "translate-z": h1() }],
        "translate-none": ["translate-none"],
        accent: [{ accent: i1() }],
        appearance: [{ appearance: ["none", "auto"] }],
        "caret-color": [{ caret: i1() }],
        "color-scheme": [
          {
            scheme: [
              "normal",
              "dark",
              "light",
              "light-dark",
              "only-dark",
              "only-light",
            ],
          },
        ],
        cursor: [
          {
            cursor: [
              "auto",
              "default",
              "pointer",
              "wait",
              "text",
              "move",
              "help",
              "not-allowed",
              "none",
              "context-menu",
              "progress",
              "cell",
              "crosshair",
              "vertical-text",
              "alias",
              "copy",
              "no-drop",
              "grab",
              "grabbing",
              "all-scroll",
              "col-resize",
              "row-resize",
              "n-resize",
              "e-resize",
              "s-resize",
              "w-resize",
              "ne-resize",
              "nw-resize",
              "se-resize",
              "sw-resize",
              "ew-resize",
              "ns-resize",
              "nesw-resize",
              "nwse-resize",
              "zoom-in",
              "zoom-out",
              Ee,
              Se,
            ],
          },
        ],
        "field-sizing": [{ "field-sizing": ["fixed", "content"] }],
        "pointer-events": [{ "pointer-events": ["auto", "none"] }],
        resize: [{ resize: ["none", "", "y", "x"] }],
        "scroll-behavior": [{ scroll: ["auto", "smooth"] }],
        "scroll-m": [{ "scroll-m": j() }],
        "scroll-mx": [{ "scroll-mx": j() }],
        "scroll-my": [{ "scroll-my": j() }],
        "scroll-ms": [{ "scroll-ms": j() }],
        "scroll-me": [{ "scroll-me": j() }],
        "scroll-mt": [{ "scroll-mt": j() }],
        "scroll-mr": [{ "scroll-mr": j() }],
        "scroll-mb": [{ "scroll-mb": j() }],
        "scroll-ml": [{ "scroll-ml": j() }],
        "scroll-p": [{ "scroll-p": j() }],
        "scroll-px": [{ "scroll-px": j() }],
        "scroll-py": [{ "scroll-py": j() }],
        "scroll-ps": [{ "scroll-ps": j() }],
        "scroll-pe": [{ "scroll-pe": j() }],
        "scroll-pt": [{ "scroll-pt": j() }],
        "scroll-pr": [{ "scroll-pr": j() }],
        "scroll-pb": [{ "scroll-pb": j() }],
        "scroll-pl": [{ "scroll-pl": j() }],
        "snap-align": [{ snap: ["start", "end", "center", "align-none"] }],
        "snap-stop": [{ snap: ["normal", "always"] }],
        "snap-type": [{ snap: ["none", "x", "y", "both"] }],
        "snap-strictness": [{ snap: ["mandatory", "proximity"] }],
        touch: [{ touch: ["auto", "none", "manipulation"] }],
        "touch-x": [{ "touch-pan": ["x", "left", "right"] }],
        "touch-y": [{ "touch-pan": ["y", "up", "down"] }],
        "touch-pz": ["touch-pinch-zoom"],
        select: [{ select: ["none", "text", "all", "auto"] }],
        "will-change": [
          {
            "will-change": ["auto", "scroll", "contents", "transform", Ee, Se],
          },
        ],
        fill: [{ fill: ["none", ...i1()] }],
        "stroke-w": [{ stroke: [Rt, Yc, yo, B9] }],
        stroke: [{ stroke: ["none", ...i1()] }],
        "forced-color-adjust": [{ "forced-color-adjust": ["auto", "none"] }],
      },
      conflictingClassGroups: {
        overflow: ["overflow-x", "overflow-y"],
        overscroll: ["overscroll-x", "overscroll-y"],
        inset: [
          "inset-x",
          "inset-y",
          "start",
          "end",
          "top",
          "right",
          "bottom",
          "left",
        ],
        "inset-x": ["right", "left"],
        "inset-y": ["top", "bottom"],
        flex: ["basis", "grow", "shrink"],
        gap: ["gap-x", "gap-y"],
        p: ["px", "py", "ps", "pe", "pt", "pr", "pb", "pl"],
        px: ["pr", "pl"],
        py: ["pt", "pb"],
        m: ["mx", "my", "ms", "me", "mt", "mr", "mb", "ml"],
        mx: ["mr", "ml"],
        my: ["mt", "mb"],
        size: ["w", "h"],
        "font-size": ["leading"],
        "fvn-normal": [
          "fvn-ordinal",
          "fvn-slashed-zero",
          "fvn-figure",
          "fvn-spacing",
          "fvn-fraction",
        ],
        "fvn-ordinal": ["fvn-normal"],
        "fvn-slashed-zero": ["fvn-normal"],
        "fvn-figure": ["fvn-normal"],
        "fvn-spacing": ["fvn-normal"],
        "fvn-fraction": ["fvn-normal"],
        "line-clamp": ["display", "overflow"],
        rounded: [
          "rounded-s",
          "rounded-e",
          "rounded-t",
          "rounded-r",
          "rounded-b",
          "rounded-l",
          "rounded-ss",
          "rounded-se",
          "rounded-ee",
          "rounded-es",
          "rounded-tl",
          "rounded-tr",
          "rounded-br",
          "rounded-bl",
        ],
        "rounded-s": ["rounded-ss", "rounded-es"],
        "rounded-e": ["rounded-se", "rounded-ee"],
        "rounded-t": ["rounded-tl", "rounded-tr"],
        "rounded-r": ["rounded-tr", "rounded-br"],
        "rounded-b": ["rounded-br", "rounded-bl"],
        "rounded-l": ["rounded-tl", "rounded-bl"],
        "border-spacing": ["border-spacing-x", "border-spacing-y"],
        "border-w": [
          "border-w-s",
          "border-w-e",
          "border-w-t",
          "border-w-r",
          "border-w-b",
          "border-w-l",
        ],
        "border-w-x": ["border-w-r", "border-w-l"],
        "border-w-y": ["border-w-t", "border-w-b"],
        "border-color": [
          "border-color-s",
          "border-color-e",
          "border-color-t",
          "border-color-r",
          "border-color-b",
          "border-color-l",
        ],
        "border-color-x": ["border-color-r", "border-color-l"],
        "border-color-y": ["border-color-t", "border-color-b"],
        translate: ["translate-x", "translate-y", "translate-none"],
        "translate-none": [
          "translate",
          "translate-x",
          "translate-y",
          "translate-z",
        ],
        "scroll-m": [
          "scroll-mx",
          "scroll-my",
          "scroll-ms",
          "scroll-me",
          "scroll-mt",
          "scroll-mr",
          "scroll-mb",
          "scroll-ml",
        ],
        "scroll-mx": ["scroll-mr", "scroll-ml"],
        "scroll-my": ["scroll-mt", "scroll-mb"],
        "scroll-p": [
          "scroll-px",
          "scroll-py",
          "scroll-ps",
          "scroll-pe",
          "scroll-pt",
          "scroll-pr",
          "scroll-pb",
          "scroll-pl",
        ],
        "scroll-px": ["scroll-pr", "scroll-pl"],
        "scroll-py": ["scroll-pt", "scroll-pb"],
        touch: ["touch-x", "touch-y", "touch-pz"],
        "touch-x": ["touch"],
        "touch-y": ["touch"],
        "touch-pz": ["touch"],
      },
      conflictingClassGroupModifiers: { "font-size": ["leading"] },
      orderSensitiveModifiers: [
        "before",
        "after",
        "placeholder",
        "file",
        "marker",
        "selection",
        "first-line",
        "first-letter",
        "backdrop",
        "*",
        "**",
      ],
    };
  },
  me = Nz(aH),
  Zs = ({ children: e, className: t }) =>
    v.jsx("div", {
      className: me(
        "px-4 py-3 bg-gray-800 rounded-lg border-l-4 border-solid border-l-blue-200 text-[12px] leading-[15px] font-normal text-gray-300",
        t
      ),
      children: e,
    }),
  zt = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 14,
        height: 14,
        viewBox: "0 0 14 14",
        fill: "none",
        ...e,
      },
      N.createElement("path", {
        fill: "currentColor",
        fillRule: "evenodd",
        d: "M1.72 2.2h4.53v8.53L1.72 2.2Zm6.04 8.2 4.52-8.2H7.76v8.2ZM.7.8c.12-.05.3-.1.5-.1h11.6A1.2 1.2 0 0 1 13.9 2.4l-.02.03-5.52 10.01a1.65 1.65 0 0 1-2.89.02v-.02L.14 2.47A1.2 1.2 0 0 1 .63.83L.66.82.7.8Z",
        clipRule: "evenodd",
      })
    ),
  Z4 = ({ i18nKey: e, count: t, className: n }) =>
    v.jsx("div", {
      className: me("flex gap-1", n),
      children: v.jsx(Ks, {
        i18nKey: e,
        components: { ton: v.jsx(zt, { width: 14, className: "text-white" }) },
        count: t,
      }),
    }),
  qp = N.createContext({});
function Kp(e) {
  const t = N.useRef(null);
  return t.current === null && (t.current = e()), t.current;
}
const Gp = typeof window < "u",
  Sk = Gp ? N.useLayoutEffect : N.useEffect,
  X4 = N.createContext(null),
  Yp = N.createContext({
    transformPagePoint: (e) => e,
    isStatic: !1,
    reducedMotion: "never",
  });
class lH extends N.Component {
  getSnapshotBeforeUpdate(t) {
    const n = this.props.childRef.current;
    if (n && t.isPresent && !this.props.isPresent) {
      const r = n.offsetParent,
        i = (r instanceof HTMLElement && r.offsetWidth) || 0,
        s = this.props.sizeRef.current;
      (s.height = n.offsetHeight || 0),
        (s.width = n.offsetWidth || 0),
        (s.top = n.offsetTop),
        (s.left = n.offsetLeft),
        (s.right = i - s.width - s.left);
    }
    return null;
  }
  componentDidUpdate() {}
  render() {
    return this.props.children;
  }
}
function uH({ children: e, isPresent: t, anchorX: n }) {
  const r = N.useId(),
    i = N.useRef(null),
    s = N.useRef({ width: 0, height: 0, top: 0, left: 0, right: 0 }),
    { nonce: o } = N.useContext(Yp);
  return (
    N.useInsertionEffect(() => {
      const { width: l, height: c, top: f, left: d, right: p } = s.current;
      if (t || !i.current || !l || !c) return;
      const m = n === "left" ? `left: ${d}` : `right: ${p}`;
      i.current.dataset.motionPopId = r;
      const g = document.createElement("style");
      return (
        o && (g.nonce = o),
        document.head.appendChild(g),
        g.sheet &&
          g.sheet.insertRule(`
          [data-motion-pop-id="${r}"] {
            position: absolute !important;
            width: ${l}px !important;
            height: ${c}px !important;
            ${m}px !important;
            top: ${f}px !important;
          }
        `),
        () => {
          document.head.removeChild(g);
        }
      );
    }, [t]),
    v.jsx(lH, {
      isPresent: t,
      childRef: i,
      sizeRef: s,
      children: N.cloneElement(e, { ref: i }),
    })
  );
}
const cH = ({
  children: e,
  initial: t,
  isPresent: n,
  onExitComplete: r,
  custom: i,
  presenceAffectsLayout: s,
  mode: o,
  anchorX: l,
}) => {
  const c = Kp(dH),
    f = N.useId();
  let d = !0,
    p = N.useMemo(
      () => (
        (d = !1),
        {
          id: f,
          initial: t,
          isPresent: n,
          custom: i,
          onExitComplete: (m) => {
            c.set(m, !0);
            for (const g of c.values()) if (!g) return;
            r && r();
          },
          register: (m) => (c.set(m, !1), () => c.delete(m)),
        }
      ),
      [n, c, r]
    );
  return (
    s && d && (p = { ...p }),
    N.useMemo(() => {
      c.forEach((m, g) => c.set(g, !1));
    }, [n]),
    N.useEffect(() => {
      !n && !c.size && r && r();
    }, [n]),
    o === "popLayout" &&
      (e = v.jsx(uH, { isPresent: n, anchorX: l, children: e })),
    v.jsx(X4.Provider, { value: p, children: e })
  );
};
function dH() {
  return new Map();
}
function Ek(e = !0) {
  const t = N.useContext(X4);
  if (t === null) return [!0, null];
  const { isPresent: n, onExitComplete: r, register: i } = t,
    s = N.useId();
  N.useEffect(() => {
    if (e) return i(s);
  }, [e]);
  const o = N.useCallback(() => e && r && r(s), [s, r, e]);
  return !n && r ? [!1, o] : [!0];
}
const Qc = (e) => e.key || "";
function Uv(e) {
  const t = [];
  return (
    N.Children.forEach(e, (n) => {
      N.isValidElement(n) && t.push(n);
    }),
    t
  );
}
const ss = ({
  children: e,
  custom: t,
  initial: n = !0,
  onExitComplete: r,
  presenceAffectsLayout: i = !0,
  mode: s = "sync",
  propagate: o = !1,
  anchorX: l = "left",
}) => {
  const [c, f] = Ek(o),
    d = N.useMemo(() => Uv(e), [e]),
    p = o && !c ? [] : d.map(Qc),
    m = N.useRef(!0),
    g = N.useRef(d),
    w = Kp(() => new Map()),
    [b, x] = N.useState(d),
    [E, P] = N.useState(d);
  Sk(() => {
    (m.current = !1), (g.current = d);
    for (let M = 0; M < E.length; M++) {
      const L = Qc(E[M]);
      p.includes(L) ? w.delete(L) : w.get(L) !== !0 && w.set(L, !1);
    }
  }, [E, p.length, p.join("-")]);
  const _ = [];
  if (d !== b) {
    let M = [...d];
    for (let L = 0; L < E.length; L++) {
      const O = E[L],
        U = Qc(O);
      p.includes(U) || (M.splice(L, 0, O), _.push(O));
    }
    return s === "wait" && _.length && (M = _), P(Uv(M)), x(d), null;
  }
  const { forceRender: T } = N.useContext(qp);
  return v.jsx(v.Fragment, {
    children: E.map((M) => {
      const L = Qc(M),
        O = o && !c ? !1 : d === E || p.includes(L),
        U = () => {
          if (w.has(L)) w.set(L, !0);
          else return;
          let D = !0;
          w.forEach((H) => {
            H || (D = !1);
          }),
            D &&
              (T == null || T(),
              P(g.current),
              o && (f == null || f()),
              r && r());
        };
      return v.jsx(
        cH,
        {
          isPresent: O,
          initial: !m.current || n ? void 0 : !1,
          custom: t,
          presenceAffectsLayout: i,
          mode: s,
          onExitComplete: O ? void 0 : U,
          anchorX: l,
          children: M,
        },
        L
      );
    }),
  });
};
function Qp(e, t) {
  e.indexOf(t) === -1 && e.push(t);
}
function Zp(e, t) {
  const n = e.indexOf(t);
  n > -1 && e.splice(n, 1);
}
let kk = () => {};
const f6 = { useManualTiming: !1 };
function Xp(e) {
  let t;
  return () => (t === void 0 && (t = e()), t);
}
const bi = (e) => e,
  ql = (e, t, n) => {
    const r = t - e;
    return r === 0 ? 1 : (n - e) / r;
  };
class Jp {
  constructor() {
    this.subscriptions = [];
  }
  add(t) {
    return Qp(this.subscriptions, t), () => Zp(this.subscriptions, t);
  }
  notify(t, n, r) {
    const i = this.subscriptions.length;
    if (i)
      if (i === 1) this.subscriptions[0](t, n, r);
      else
        for (let s = 0; s < i; s++) {
          const o = this.subscriptions[s];
          o && o(t, n, r);
        }
  }
  getSize() {
    return this.subscriptions.length;
  }
  clear() {
    this.subscriptions.length = 0;
  }
}
const u2 = (e) => e * 1e3,
  c2 = (e) => e / 1e3;
function _k(e, t) {
  return t ? e * (1e3 / t) : 0;
}
const fH = Xp(() => window.ScrollTimeline !== void 0);
class hH {
  constructor(t) {
    (this.stop = () => this.runAll("stop")),
      (this.animations = t.filter(Boolean));
  }
  get finished() {
    return Promise.all(this.animations.map((t) => t.finished));
  }
  getAll(t) {
    return this.animations[0][t];
  }
  setAll(t, n) {
    for (let r = 0; r < this.animations.length; r++) this.animations[r][t] = n;
  }
  attachTimeline(t, n) {
    const r = this.animations.map((i) => {
      if (fH() && i.attachTimeline) return i.attachTimeline(t);
      if (typeof n == "function") return n(i);
    });
    return () => {
      r.forEach((i, s) => {
        i && i(), this.animations[s].stop();
      });
    };
  }
  get time() {
    return this.getAll("time");
  }
  set time(t) {
    this.setAll("time", t);
  }
  get speed() {
    return this.getAll("speed");
  }
  set speed(t) {
    this.setAll("speed", t);
  }
  get startTime() {
    return this.getAll("startTime");
  }
  get duration() {
    let t = 0;
    for (let n = 0; n < this.animations.length; n++)
      t = Math.max(t, this.animations[n].duration);
    return t;
  }
  runAll(t) {
    this.animations.forEach((n) => n[t]());
  }
  flatten() {
    this.runAll("flatten");
  }
  play() {
    this.runAll("play");
  }
  pause() {
    this.runAll("pause");
  }
  cancel() {
    this.runAll("cancel");
  }
  complete() {
    this.runAll("complete");
  }
}
class pH extends hH {
  then(t, n) {
    return this.finished.finally(t).then(() => {});
  }
}
const $v = { value: null },
  em = (e) => Array.isArray(e) && typeof e[0] == "number",
  mH = {};
function gH(e, t) {
  const n = Xp(e);
  return () => mH[t] ?? n();
}
const Kl = gH(() => {
    try {
      document
        .createElement("div")
        .animate({ opacity: 0 }, { easing: "linear(0, 1)" });
    } catch {
      return !1;
    }
    return !0;
  }, "linearEasing"),
  Ak = (e, t, n = 10) => {
    let r = "";
    const i = Math.max(Math.round(t / n), 2);
    for (let s = 0; s < i; s++) r += e(s / (i - 1)) + ", ";
    return `linear(${r.substring(0, r.length - 2)})`;
  },
  ll = ([e, t, n, r]) => `cubic-bezier(${e}, ${t}, ${n}, ${r})`,
  h6 = {
    linear: "linear",
    ease: "ease",
    easeIn: "ease-in",
    easeOut: "ease-out",
    easeInOut: "ease-in-out",
    circIn: ll([0, 0.65, 0.55, 1]),
    circOut: ll([0.55, 0, 1, 0.45]),
    backIn: ll([0.31, 0.01, 0.66, -0.59]),
    backOut: ll([0.33, 1.53, 0.69, 0.99]),
  };
function Tk(e, t) {
  if (e)
    return typeof e == "function" && Kl()
      ? Ak(e, t)
      : em(e)
      ? ll(e)
      : Array.isArray(e)
      ? e.map((n) => Tk(n, t) || h6.easeOut)
      : h6[e];
}
function yH(
  e,
  t,
  n,
  {
    delay: r = 0,
    duration: i = 300,
    repeat: s = 0,
    repeatType: o = "loop",
    ease: l = "easeInOut",
    times: c,
  } = {},
  f = void 0
) {
  const d = { [t]: n };
  c && (d.offset = c);
  const p = Tk(l, i);
  return (
    Array.isArray(p) && (d.easing = p),
    e.animate(d, {
      delay: r,
      duration: i,
      easing: Array.isArray(p) ? "linear" : p,
      fill: "both",
      iterations: s + 1,
      direction: o === "reverse" ? "alternate" : "normal",
      pseudoElement: f,
    })
  );
}
function tm(e) {
  return typeof e == "function" && "applyToOptions" in e;
}
function nm(e, t) {
  return (e == null ? void 0 : e[t]) ?? (e == null ? void 0 : e.default) ?? e;
}
const i4 = 2e4;
function rm(e) {
  let t = 0;
  const n = 50;
  let r = e.next(t);
  for (; !r.done && t < i4; ) (t += n), (r = e.next(t));
  return t >= i4 ? 1 / 0 : t;
}
function vH(e, t = 100, n) {
  const r = n({ ...e, keyframes: [0, t] }),
    i = Math.min(rm(r), i4);
  return {
    type: "keyframes",
    ease: (s) => r.next(i * s).value / t,
    duration: c2(i),
  };
}
function Pk(e) {
  return !!(
    (typeof e == "function" && Kl()) ||
    !e ||
    (typeof e == "string" && (e in h6 || Kl())) ||
    em(e) ||
    (Array.isArray(e) && e.every(Pk))
  );
}
function Vv(e, t) {
  (e.timeline = t), (e.onfinish = null);
}
const Zc = [
  "read",
  "resolveKeyframes",
  "update",
  "preRender",
  "render",
  "postRender",
];
function wH(e, t) {
  let n = new Set(),
    r = new Set(),
    i = !1,
    s = !1;
  const o = new WeakSet();
  let l = { delta: 0, timestamp: 0, isProcessing: !1 },
    c = 0;
  function f(p) {
    o.has(p) && (d.schedule(p), e()), c++, p(l);
  }
  const d = {
    schedule: (p, m = !1, g = !1) => {
      const b = g && i ? n : r;
      return m && o.add(p), b.has(p) || b.add(p), p;
    },
    cancel: (p) => {
      r.delete(p), o.delete(p);
    },
    process: (p) => {
      if (((l = p), i)) {
        s = !0;
        return;
      }
      (i = !0),
        ([n, r] = [r, n]),
        n.forEach(f),
        t && $v.value && $v.value.frameloop[t].push(c),
        (c = 0),
        n.clear(),
        (i = !1),
        s && ((s = !1), d.process(p));
    },
  };
  return d;
}
const bH = 40;
function Mk(e, t) {
  let n = !1,
    r = !0;
  const i = { delta: 0, timestamp: 0, isProcessing: !1 },
    s = () => (n = !0),
    o = Zc.reduce((E, P) => ((E[P] = wH(s, t ? P : void 0)), E), {}),
    {
      read: l,
      resolveKeyframes: c,
      update: f,
      preRender: d,
      render: p,
      postRender: m,
    } = o,
    g = () => {
      const E = performance.now();
      (n = !1),
        (i.delta = r ? 1e3 / 60 : Math.max(Math.min(E - i.timestamp, bH), 1)),
        (i.timestamp = E),
        (i.isProcessing = !0),
        l.process(i),
        c.process(i),
        f.process(i),
        d.process(i),
        p.process(i),
        m.process(i),
        (i.isProcessing = !1),
        n && t && ((r = !1), e(g));
    },
    w = () => {
      (n = !0), (r = !0), i.isProcessing || e(g);
    };
  return {
    schedule: Zc.reduce((E, P) => {
      const _ = o[P];
      return (E[P] = (T, M = !1, L = !1) => (n || w(), _.schedule(T, M, L))), E;
    }, {}),
    cancel: (E) => {
      for (let P = 0; P < Zc.length; P++) o[Zc[P]].cancel(E);
    },
    state: i,
    steps: o,
  };
}
const { schedule: im } = Mk(queueMicrotask, !1),
  {
    schedule: Xt,
    cancel: zs,
    state: er,
    steps: D9,
  } = Mk(typeof requestAnimationFrame < "u" ? requestAnimationFrame : bi, !0);
let wd;
function xH() {
  wd = void 0;
}
const d2 = {
    now: () => (
      wd === void 0 &&
        d2.set(
          er.isProcessing || f6.useManualTiming
            ? er.timestamp
            : performance.now()
        ),
      wd
    ),
    set: (e) => {
      (wd = e), queueMicrotask(xH);
    },
  },
  Ri = { x: !1, y: !1 };
function Rk() {
  return Ri.x || Ri.y;
}
function CH(e) {
  return e === "x" || e === "y"
    ? Ri[e]
      ? null
      : ((Ri[e] = !0),
        () => {
          Ri[e] = !1;
        })
    : Ri.x || Ri.y
    ? null
    : ((Ri.x = Ri.y = !0),
      () => {
        Ri.x = Ri.y = !1;
      });
}
function SH(e, t, n) {
  if (e instanceof EventTarget) return [e];
  if (typeof e == "string") {
    let r = document;
    const i = (n == null ? void 0 : n[e]) ?? r.querySelectorAll(e);
    return i ? Array.from(i) : [];
  }
  return Array.from(e);
}
function Lk(e, t) {
  const n = SH(e),
    r = new AbortController(),
    i = { passive: !0, ...t, signal: r.signal };
  return [n, i, () => r.abort()];
}
function Wv(e) {
  return !(e.pointerType === "touch" || Rk());
}
function EH(e, t, n = {}) {
  const [r, i, s] = Lk(e, n),
    o = (l) => {
      if (!Wv(l)) return;
      const { target: c } = l,
        f = t(c, l);
      if (typeof f != "function" || !c) return;
      const d = (p) => {
        Wv(p) && (f(p), c.removeEventListener("pointerleave", d));
      };
      c.addEventListener("pointerleave", d, i);
    };
  return (
    r.forEach((l) => {
      l.addEventListener("pointerenter", o, i);
    }),
    s
  );
}
const Ik = (e, t) => (t ? (e === t ? !0 : Ik(e, t.parentElement)) : !1),
  sm = (e) =>
    e.pointerType === "mouse"
      ? typeof e.button != "number" || e.button <= 0
      : e.isPrimary !== !1,
  kH = new Set(["BUTTON", "INPUT", "SELECT", "TEXTAREA", "A"]);
function _H(e) {
  return kH.has(e.tagName) || e.tabIndex !== -1;
}
const ul = new WeakSet();
function zv(e) {
  return (t) => {
    t.key === "Enter" && e(t);
  };
}
function F9(e, t) {
  e.dispatchEvent(
    new PointerEvent("pointer" + t, { isPrimary: !0, bubbles: !0 })
  );
}
const AH = (e, t) => {
  const n = e.currentTarget;
  if (!n) return;
  const r = zv(() => {
    if (ul.has(n)) return;
    F9(n, "down");
    const i = zv(() => {
        F9(n, "up");
      }),
      s = () => F9(n, "cancel");
    n.addEventListener("keyup", i, t), n.addEventListener("blur", s, t);
  });
  n.addEventListener("keydown", r, t),
    n.addEventListener("blur", () => n.removeEventListener("keydown", r), t);
};
function Hv(e) {
  return sm(e) && !Rk();
}
function TH(e, t, n = {}) {
  const [r, i, s] = Lk(e, n),
    o = (l) => {
      const c = l.currentTarget;
      if (!Hv(l) || ul.has(c)) return;
      ul.add(c);
      const f = t(c, l),
        d = (g, w) => {
          window.removeEventListener("pointerup", p),
            window.removeEventListener("pointercancel", m),
            !(!Hv(g) || !ul.has(c)) &&
              (ul.delete(c), typeof f == "function" && f(g, { success: w }));
        },
        p = (g) => {
          d(
            g,
            c === window ||
              c === document ||
              n.useGlobalTarget ||
              Ik(c, g.target)
          );
        },
        m = (g) => {
          d(g, !1);
        };
      window.addEventListener("pointerup", p, i),
        window.addEventListener("pointercancel", m, i);
    };
  return (
    r.forEach((l) => {
      (n.useGlobalTarget ? window : l).addEventListener("pointerdown", o, i),
        l instanceof HTMLElement &&
          (l.addEventListener("focus", (f) => AH(f, i)),
          !_H(l) && !l.hasAttribute("tabindex") && (l.tabIndex = 0));
    }),
    s
  );
}
const qv = 30,
  PH = (e) => !isNaN(parseFloat(e));
class MH {
  constructor(t, n = {}) {
    (this.version = "12.7.4"),
      (this.canTrackVelocity = null),
      (this.events = {}),
      (this.updateAndNotify = (r, i = !0) => {
        const s = d2.now();
        this.updatedAt !== s && this.setPrevFrameValue(),
          (this.prev = this.current),
          this.setCurrent(r),
          this.current !== this.prev &&
            this.events.change &&
            this.events.change.notify(this.current),
          i &&
            this.events.renderRequest &&
            this.events.renderRequest.notify(this.current);
      }),
      (this.hasAnimated = !1),
      this.setCurrent(t),
      (this.owner = n.owner);
  }
  setCurrent(t) {
    (this.current = t),
      (this.updatedAt = d2.now()),
      this.canTrackVelocity === null &&
        t !== void 0 &&
        (this.canTrackVelocity = PH(this.current));
  }
  setPrevFrameValue(t = this.current) {
    (this.prevFrameValue = t), (this.prevUpdatedAt = this.updatedAt);
  }
  onChange(t) {
    return this.on("change", t);
  }
  on(t, n) {
    this.events[t] || (this.events[t] = new Jp());
    const r = this.events[t].add(n);
    return t === "change"
      ? () => {
          r(),
            Xt.read(() => {
              this.events.change.getSize() || this.stop();
            });
        }
      : r;
  }
  clearListeners() {
    for (const t in this.events) this.events[t].clear();
  }
  attach(t, n) {
    (this.passiveEffect = t), (this.stopPassiveEffect = n);
  }
  set(t, n = !0) {
    !n || !this.passiveEffect
      ? this.updateAndNotify(t, n)
      : this.passiveEffect(t, this.updateAndNotify);
  }
  setWithVelocity(t, n, r) {
    this.set(n),
      (this.prev = void 0),
      (this.prevFrameValue = t),
      (this.prevUpdatedAt = this.updatedAt - r);
  }
  jump(t, n = !0) {
    this.updateAndNotify(t),
      (this.prev = t),
      (this.prevUpdatedAt = this.prevFrameValue = void 0),
      n && this.stop(),
      this.stopPassiveEffect && this.stopPassiveEffect();
  }
  get() {
    return this.current;
  }
  getPrevious() {
    return this.prev;
  }
  getVelocity() {
    const t = d2.now();
    if (
      !this.canTrackVelocity ||
      this.prevFrameValue === void 0 ||
      t - this.updatedAt > qv
    )
      return 0;
    const n = Math.min(this.updatedAt - this.prevUpdatedAt, qv);
    return _k(parseFloat(this.current) - parseFloat(this.prevFrameValue), n);
  }
  start(t) {
    return (
      this.stop(),
      new Promise((n) => {
        (this.hasAnimated = !0),
          (this.animation = t(n)),
          this.events.animationStart && this.events.animationStart.notify();
      }).then(() => {
        this.events.animationComplete && this.events.animationComplete.notify(),
          this.clearAnimation();
      })
    );
  }
  stop() {
    this.animation &&
      (this.animation.stop(),
      this.events.animationCancel && this.events.animationCancel.notify()),
      this.clearAnimation();
  }
  isAnimating() {
    return !!this.animation;
  }
  clearAnimation() {
    delete this.animation;
  }
  destroy() {
    this.clearListeners(),
      this.stop(),
      this.stopPassiveEffect && this.stopPassiveEffect();
  }
}
function Gl(e, t) {
  return new MH(e, t);
}
const jk = N.createContext({ strict: !1 }),
  Kv = {
    animation: [
      "animate",
      "variants",
      "whileHover",
      "whileTap",
      "exit",
      "whileInView",
      "whileFocus",
      "whileDrag",
    ],
    exit: ["exit"],
    drag: ["drag", "dragControls"],
    focus: ["whileFocus"],
    hover: ["whileHover", "onHoverStart", "onHoverEnd"],
    tap: ["whileTap", "onTap", "onTapStart", "onTapCancel"],
    pan: ["onPan", "onPanStart", "onPanSessionStart", "onPanEnd"],
    inView: ["whileInView", "onViewportEnter", "onViewportLeave"],
    layout: ["layout", "layoutId"],
  },
  x3 = {};
for (const e in Kv) x3[e] = { isEnabled: (t) => Kv[e].some((n) => !!t[n]) };
function RH(e) {
  for (const t in e) x3[t] = { ...x3[t], ...e[t] };
}
const LH = new Set([
  "animate",
  "exit",
  "variants",
  "initial",
  "style",
  "values",
  "variants",
  "transition",
  "transformTemplate",
  "custom",
  "inherit",
  "onBeforeLayoutMeasure",
  "onAnimationStart",
  "onAnimationComplete",
  "onUpdate",
  "onDragStart",
  "onDrag",
  "onDragEnd",
  "onMeasureDragConstraints",
  "onDirectionLock",
  "onDragTransitionEnd",
  "_dragX",
  "_dragY",
  "onHoverStart",
  "onHoverEnd",
  "onViewportEnter",
  "onViewportLeave",
  "globalTapTarget",
  "ignoreStrict",
  "viewport",
]);
function s4(e) {
  return (
    e.startsWith("while") ||
    (e.startsWith("drag") && e !== "draggable") ||
    e.startsWith("layout") ||
    e.startsWith("onTap") ||
    e.startsWith("onPan") ||
    e.startsWith("onLayout") ||
    LH.has(e)
  );
}
let Nk = (e) => !s4(e);
function IH(e) {
  e && (Nk = (t) => (t.startsWith("on") ? !s4(t) : e(t)));
}
try {
  IH(require("@emotion/is-prop-valid").default);
} catch {}
function jH(e, t, n) {
  const r = {};
  for (const i in e)
    (i === "values" && typeof e.values == "object") ||
      ((Nk(i) ||
        (n === !0 && s4(i)) ||
        (!t && !s4(i)) ||
        (e.draggable && i.startsWith("onDrag"))) &&
        (r[i] = e[i]));
  return r;
}
function NH(e) {
  if (typeof Proxy > "u") return e;
  const t = new Map(),
    n = (...r) => e(...r);
  return new Proxy(n, {
    get: (r, i) =>
      i === "create" ? e : (t.has(i) || t.set(i, e(i)), t.get(i)),
  });
}
const J4 = N.createContext({});
function ef(e) {
  return e !== null && typeof e == "object" && typeof e.start == "function";
}
function Yl(e) {
  return typeof e == "string" || Array.isArray(e);
}
const om = [
    "animate",
    "whileInView",
    "whileFocus",
    "whileHover",
    "whileTap",
    "whileDrag",
    "exit",
  ],
  am = ["initial", ...om];
function tf(e) {
  return ef(e.animate) || am.some((t) => Yl(e[t]));
}
function Ok(e) {
  return !!(tf(e) || e.variants);
}
function OH(e, t) {
  if (tf(e)) {
    const { initial: n, animate: r } = e;
    return {
      initial: n === !1 || Yl(n) ? n : void 0,
      animate: Yl(r) ? r : void 0,
    };
  }
  return e.inherit !== !1 ? t : {};
}
function BH(e) {
  const { initial: t, animate: n } = OH(e, N.useContext(J4));
  return N.useMemo(() => ({ initial: t, animate: n }), [Gv(t), Gv(n)]);
}
function Gv(e) {
  return Array.isArray(e) ? e.join(" ") : e;
}
const DH = Symbol.for("motionComponentSymbol");
function r3(e) {
  return (
    e &&
    typeof e == "object" &&
    Object.prototype.hasOwnProperty.call(e, "current")
  );
}
function FH(e, t, n) {
  return N.useCallback(
    (r) => {
      r && e.onMount && e.onMount(r),
        t && (r ? t.mount(r) : t.unmount()),
        n && (typeof n == "function" ? n(r) : r3(n) && (n.current = r));
    },
    [t]
  );
}
const lm = (e) => e.replace(/([a-z])([A-Z])/gu, "$1-$2").toLowerCase(),
  UH = "framerAppearId",
  Bk = "data-" + lm(UH),
  Dk = N.createContext({});
function $H(e, t, n, r, i) {
  var b, x;
  const { visualElement: s } = N.useContext(J4),
    o = N.useContext(jk),
    l = N.useContext(X4),
    c = N.useContext(Yp).reducedMotion,
    f = N.useRef(null);
  (r = r || o.renderer),
    !f.current &&
      r &&
      (f.current = r(e, {
        visualState: t,
        parent: s,
        props: n,
        presenceContext: l,
        blockInitialAnimation: l ? l.initial === !1 : !1,
        reducedMotionConfig: c,
      }));
  const d = f.current,
    p = N.useContext(Dk);
  d &&
    !d.projection &&
    i &&
    (d.type === "html" || d.type === "svg") &&
    VH(f.current, n, i, p);
  const m = N.useRef(!1);
  N.useInsertionEffect(() => {
    d && m.current && d.update(n, l);
  });
  const g = n[Bk],
    w = N.useRef(
      !!g &&
        !((b = window.MotionHandoffIsComplete) != null && b.call(window, g)) &&
        ((x = window.MotionHasOptimisedAnimation) == null
          ? void 0
          : x.call(window, g))
    );
  return (
    Sk(() => {
      d &&
        ((m.current = !0),
        (window.MotionIsMounted = !0),
        d.updateFeatures(),
        im.render(d.render),
        w.current && d.animationState && d.animationState.animateChanges());
    }),
    N.useEffect(() => {
      d &&
        (!w.current && d.animationState && d.animationState.animateChanges(),
        w.current &&
          (queueMicrotask(() => {
            var E;
            (E = window.MotionHandoffMarkAsComplete) == null ||
              E.call(window, g);
          }),
          (w.current = !1)));
    }),
    d
  );
}
function VH(e, t, n, r) {
  const {
    layoutId: i,
    layout: s,
    drag: o,
    dragConstraints: l,
    layoutScroll: c,
    layoutRoot: f,
    layoutCrossfade: d,
  } = t;
  (e.projection = new n(
    e.latestValues,
    t["data-framer-portal-id"] ? void 0 : Fk(e.parent)
  )),
    e.projection.setOptions({
      layoutId: i,
      layout: s,
      alwaysMeasureLayout: !!o || (l && r3(l)),
      visualElement: e,
      animationType: typeof s == "string" ? s : "both",
      initialPromotionConfig: r,
      crossfade: d,
      layoutScroll: c,
      layoutRoot: f,
    });
}
function Fk(e) {
  if (e) return e.options.allowProjection !== !1 ? e.projection : Fk(e.parent);
}
function WH({
  preloadedFeatures: e,
  createVisualElement: t,
  useRender: n,
  useVisualState: r,
  Component: i,
}) {
  e && RH(e);
  function s(l, c) {
    let f;
    const d = { ...N.useContext(Yp), ...l, layoutId: zH(l) },
      { isStatic: p } = d,
      m = BH(l),
      g = r(l, p);
    if (!p && Gp) {
      HH();
      const w = qH(d);
      (f = w.MeasureLayout),
        (m.visualElement = $H(i, g, d, t, w.ProjectionNode));
    }
    return v.jsxs(J4.Provider, {
      value: m,
      children: [
        f && m.visualElement
          ? v.jsx(f, { visualElement: m.visualElement, ...d })
          : null,
        n(i, l, FH(g, m.visualElement, c), g, p, m.visualElement),
      ],
    });
  }
  s.displayName = `motion.${
    typeof i == "string" ? i : `create(${i.displayName ?? i.name ?? ""})`
  }`;
  const o = N.forwardRef(s);
  return (o[DH] = i), o;
}
function zH({ layoutId: e }) {
  const t = N.useContext(qp).id;
  return t && e !== void 0 ? t + "-" + e : e;
}
function HH(e, t) {
  N.useContext(jk).strict;
}
function qH(e) {
  const { drag: t, layout: n } = x3;
  if (!t && !n) return {};
  const r = { ...t, ...n };
  return {
    MeasureLayout:
      (t != null && t.isEnabled(e)) || (n != null && n.isEnabled(e))
        ? r.MeasureLayout
        : void 0,
    ProjectionNode: r.ProjectionNode,
  };
}
const Uk = (e) => (t) => typeof t == "string" && t.startsWith(e),
  um = Uk("--"),
  KH = Uk("var(--"),
  cm = (e) => (KH(e) ? GH.test(e.split("/*")[0].trim()) : !1),
  GH =
    /var\(--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)$/iu,
  Ql = {};
function YH(e) {
  for (const t in e) (Ql[t] = e[t]), um(t) && (Ql[t].isCSSVariable = !0);
}
const D3 = [
    "transformPerspective",
    "x",
    "y",
    "z",
    "translateX",
    "translateY",
    "translateZ",
    "scale",
    "scaleX",
    "scaleY",
    "rotate",
    "rotateX",
    "rotateY",
    "rotateZ",
    "skew",
    "skewX",
    "skewY",
  ],
  ha = new Set(D3);
function $k(e, { layout: t, layoutId: n }) {
  return (
    ha.has(e) ||
    e.startsWith("origin") ||
    ((t || n !== void 0) && (!!Ql[e] || e === "opacity"))
  );
}
const yr = (e) => !!(e && e.getVelocity),
  Vk = (e, t) => (t && typeof e == "number" ? t.transform(e) : e),
  es = (e, t, n) => (n > t ? t : n < e ? e : n),
  F3 = {
    test: (e) => typeof e == "number",
    parse: parseFloat,
    transform: (e) => e,
  },
  Zl = { ...F3, transform: (e) => es(0, 1, e) },
  Xc = { ...F3, default: 1 },
  Eu = (e) => ({
    test: (t) =>
      typeof t == "string" && t.endsWith(e) && t.split(" ").length === 1,
    parse: parseFloat,
    transform: (t) => `${t}${e}`,
  }),
  As = Eu("deg"),
  f2 = Eu("%"),
  it = Eu("px"),
  QH = Eu("vh"),
  ZH = Eu("vw"),
  Yv = {
    ...f2,
    parse: (e) => f2.parse(e) / 100,
    transform: (e) => f2.transform(e * 100),
  },
  XH = {
    borderWidth: it,
    borderTopWidth: it,
    borderRightWidth: it,
    borderBottomWidth: it,
    borderLeftWidth: it,
    borderRadius: it,
    radius: it,
    borderTopLeftRadius: it,
    borderTopRightRadius: it,
    borderBottomRightRadius: it,
    borderBottomLeftRadius: it,
    width: it,
    maxWidth: it,
    height: it,
    maxHeight: it,
    top: it,
    right: it,
    bottom: it,
    left: it,
    padding: it,
    paddingTop: it,
    paddingRight: it,
    paddingBottom: it,
    paddingLeft: it,
    margin: it,
    marginTop: it,
    marginRight: it,
    marginBottom: it,
    marginLeft: it,
    backgroundPositionX: it,
    backgroundPositionY: it,
  },
  JH = {
    rotate: As,
    rotateX: As,
    rotateY: As,
    rotateZ: As,
    scale: Xc,
    scaleX: Xc,
    scaleY: Xc,
    scaleZ: Xc,
    skew: As,
    skewX: As,
    skewY: As,
    distance: it,
    translateX: it,
    translateY: it,
    translateZ: it,
    x: it,
    y: it,
    z: it,
    perspective: it,
    transformPerspective: it,
    opacity: Zl,
    originX: Yv,
    originY: Yv,
    originZ: it,
  },
  Qv = { ...F3, transform: Math.round },
  dm = {
    ...XH,
    ...JH,
    zIndex: Qv,
    size: it,
    fillOpacity: Zl,
    strokeOpacity: Zl,
    numOctaves: Qv,
  },
  eq = {
    x: "translateX",
    y: "translateY",
    z: "translateZ",
    transformPerspective: "perspective",
  },
  tq = D3.length;
function nq(e, t, n) {
  let r = "",
    i = !0;
  for (let s = 0; s < tq; s++) {
    const o = D3[s],
      l = e[o];
    if (l === void 0) continue;
    let c = !0;
    if (
      (typeof l == "number"
        ? (c = l === (o.startsWith("scale") ? 1 : 0))
        : (c = parseFloat(l) === 0),
      !c || n)
    ) {
      const f = Vk(l, dm[o]);
      if (!c) {
        i = !1;
        const d = eq[o] || o;
        r += `${d}(${f}) `;
      }
      n && (t[o] = f);
    }
  }
  return (r = r.trim()), n ? (r = n(t, i ? "" : r)) : i && (r = "none"), r;
}
function fm(e, t, n) {
  const { style: r, vars: i, transformOrigin: s } = e;
  let o = !1,
    l = !1;
  for (const c in t) {
    const f = t[c];
    if (ha.has(c)) {
      o = !0;
      continue;
    } else if (um(c)) {
      i[c] = f;
      continue;
    } else {
      const d = Vk(f, dm[c]);
      c.startsWith("origin") ? ((l = !0), (s[c] = d)) : (r[c] = d);
    }
  }
  if (
    (t.transform ||
      (o || n
        ? (r.transform = nq(t, e.transform, n))
        : r.transform && (r.transform = "none")),
    l)
  ) {
    const { originX: c = "50%", originY: f = "50%", originZ: d = 0 } = s;
    r.transformOrigin = `${c} ${f} ${d}`;
  }
}
const hm = () => ({ style: {}, transform: {}, transformOrigin: {}, vars: {} });
function Wk(e, t, n) {
  for (const r in t) !yr(t[r]) && !$k(r, n) && (e[r] = t[r]);
}
function rq({ transformTemplate: e }, t) {
  return N.useMemo(() => {
    const n = hm();
    return fm(n, t, e), Object.assign({}, n.vars, n.style);
  }, [t]);
}
function iq(e, t) {
  const n = e.style || {},
    r = {};
  return Wk(r, n, e), Object.assign(r, rq(e, t)), r;
}
function sq(e, t) {
  const n = {},
    r = iq(e, t);
  return (
    e.drag &&
      e.dragListener !== !1 &&
      ((n.draggable = !1),
      (r.userSelect = r.WebkitUserSelect = r.WebkitTouchCallout = "none"),
      (r.touchAction =
        e.drag === !0 ? "none" : `pan-${e.drag === "x" ? "y" : "x"}`)),
    e.tabIndex === void 0 &&
      (e.onTap || e.onTapStart || e.whileTap) &&
      (n.tabIndex = 0),
    (n.style = r),
    n
  );
}
const oq = [
  "animate",
  "circle",
  "defs",
  "desc",
  "ellipse",
  "g",
  "image",
  "line",
  "filter",
  "marker",
  "mask",
  "metadata",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "rect",
  "stop",
  "switch",
  "symbol",
  "svg",
  "text",
  "tspan",
  "use",
  "view",
];
function pm(e) {
  return typeof e != "string" || e.includes("-")
    ? !1
    : !!(oq.indexOf(e) > -1 || /[A-Z]/u.test(e));
}
const aq = { offset: "stroke-dashoffset", array: "stroke-dasharray" },
  lq = { offset: "strokeDashoffset", array: "strokeDasharray" };
function uq(e, t, n = 1, r = 0, i = !0) {
  e.pathLength = 1;
  const s = i ? aq : lq;
  e[s.offset] = it.transform(-r);
  const o = it.transform(t),
    l = it.transform(n);
  e[s.array] = `${o} ${l}`;
}
function Zv(e, t, n) {
  return typeof e == "string" ? e : it.transform(t + n * e);
}
function cq(e, t, n) {
  const r = Zv(t, e.x, e.width),
    i = Zv(n, e.y, e.height);
  return `${r} ${i}`;
}
function mm(
  e,
  {
    attrX: t,
    attrY: n,
    attrScale: r,
    originX: i,
    originY: s,
    pathLength: o,
    pathSpacing: l = 1,
    pathOffset: c = 0,
    ...f
  },
  d,
  p
) {
  if ((fm(e, f, p), d)) {
    e.style.viewBox && (e.attrs.viewBox = e.style.viewBox);
    return;
  }
  (e.attrs = e.style), (e.style = {});
  const { attrs: m, style: g, dimensions: w } = e;
  m.transform && (w && (g.transform = m.transform), delete m.transform),
    w &&
      (i !== void 0 || s !== void 0 || g.transform) &&
      (g.transformOrigin = cq(
        w,
        i !== void 0 ? i : 0.5,
        s !== void 0 ? s : 0.5
      )),
    t !== void 0 && (m.x = t),
    n !== void 0 && (m.y = n),
    r !== void 0 && (m.scale = r),
    o !== void 0 && uq(m, o, l, c, !1);
}
const zk = () => ({ ...hm(), attrs: {} }),
  gm = (e) => typeof e == "string" && e.toLowerCase() === "svg";
function dq(e, t, n, r) {
  const i = N.useMemo(() => {
    const s = zk();
    return (
      mm(s, t, gm(r), e.transformTemplate),
      { ...s.attrs, style: { ...s.style } }
    );
  }, [t]);
  if (e.style) {
    const s = {};
    Wk(s, e.style, e), (i.style = { ...s, ...i.style });
  }
  return i;
}
function fq(e = !1) {
  return (n, r, i, { latestValues: s }, o) => {
    const c = (pm(n) ? dq : sq)(r, s, o, n),
      f = jH(r, typeof n == "string", e),
      d = n !== N.Fragment ? { ...f, ...c, ref: i } : {},
      { children: p } = r,
      m = N.useMemo(() => (yr(p) ? p.get() : p), [p]);
    return N.createElement(n, { ...d, children: m });
  };
}
function Xv(e) {
  const t = [{}, {}];
  return (
    e == null ||
      e.values.forEach((n, r) => {
        (t[0][r] = n.get()), (t[1][r] = n.getVelocity());
      }),
    t
  );
}
function ym(e, t, n, r) {
  if (typeof t == "function") {
    const [i, s] = Xv(r);
    t = t(n !== void 0 ? n : e.custom, i, s);
  }
  if (
    (typeof t == "string" && (t = e.variants && e.variants[t]),
    typeof t == "function")
  ) {
    const [i, s] = Xv(r);
    t = t(n !== void 0 ? n : e.custom, i, s);
  }
  return t;
}
const p6 = (e) => Array.isArray(e),
  hq = (e) => !!(e && typeof e == "object" && e.mix && e.toValue),
  pq = (e) => (p6(e) ? e[e.length - 1] || 0 : e);
function bd(e) {
  const t = yr(e) ? e.get() : e;
  return hq(t) ? t.toValue() : t;
}
function mq(
  { scrapeMotionValuesFromProps: e, createRenderState: t, onUpdate: n },
  r,
  i,
  s
) {
  const o = { latestValues: gq(r, i, s, e), renderState: t() };
  return (
    n &&
      ((o.onMount = (l) => n({ props: r, current: l, ...o })),
      (o.onUpdate = (l) => n(l))),
    o
  );
}
const Hk = (e) => (t, n) => {
  const r = N.useContext(J4),
    i = N.useContext(X4),
    s = () => mq(e, t, r, i);
  return n ? s() : Kp(s);
};
function gq(e, t, n, r) {
  const i = {},
    s = r(e, {});
  for (const m in s) i[m] = bd(s[m]);
  let { initial: o, animate: l } = e;
  const c = tf(e),
    f = Ok(e);
  t &&
    f &&
    !c &&
    e.inherit !== !1 &&
    (o === void 0 && (o = t.initial), l === void 0 && (l = t.animate));
  let d = n ? n.initial === !1 : !1;
  d = d || o === !1;
  const p = d ? l : o;
  if (p && typeof p != "boolean" && !ef(p)) {
    const m = Array.isArray(p) ? p : [p];
    for (let g = 0; g < m.length; g++) {
      const w = ym(e, m[g]);
      if (w) {
        const { transitionEnd: b, transition: x, ...E } = w;
        for (const P in E) {
          let _ = E[P];
          if (Array.isArray(_)) {
            const T = d ? _.length - 1 : 0;
            _ = _[T];
          }
          _ !== null && (i[P] = _);
        }
        for (const P in b) i[P] = b[P];
      }
    }
  }
  return i;
}
function vm(e, t, n) {
  var s;
  const { style: r } = e,
    i = {};
  for (const o in r)
    (yr(r[o]) ||
      (t.style && yr(t.style[o])) ||
      $k(o, e) ||
      ((s = n == null ? void 0 : n.getValue(o)) == null
        ? void 0
        : s.liveStyle) !== void 0) &&
      (i[o] = r[o]);
  return i;
}
const yq = {
  useVisualState: Hk({
    scrapeMotionValuesFromProps: vm,
    createRenderState: hm,
  }),
};
function qk(e, t) {
  try {
    t.dimensions =
      typeof e.getBBox == "function" ? e.getBBox() : e.getBoundingClientRect();
  } catch {
    t.dimensions = { x: 0, y: 0, width: 0, height: 0 };
  }
}
function Kk(e, { style: t, vars: n }, r, i) {
  Object.assign(e.style, t, i && i.getProjectionStyles(r));
  for (const s in n) e.style.setProperty(s, n[s]);
}
const Gk = new Set([
  "baseFrequency",
  "diffuseConstant",
  "kernelMatrix",
  "kernelUnitLength",
  "keySplines",
  "keyTimes",
  "limitingConeAngle",
  "markerHeight",
  "markerWidth",
  "numOctaves",
  "targetX",
  "targetY",
  "surfaceScale",
  "specularConstant",
  "specularExponent",
  "stdDeviation",
  "tableValues",
  "viewBox",
  "gradientTransform",
  "pathLength",
  "startOffset",
  "textLength",
  "lengthAdjust",
]);
function Yk(e, t, n, r) {
  Kk(e, t, void 0, r);
  for (const i in t.attrs) e.setAttribute(Gk.has(i) ? i : lm(i), t.attrs[i]);
}
function Qk(e, t, n) {
  const r = vm(e, t, n);
  for (const i in e)
    if (yr(e[i]) || yr(t[i])) {
      const s =
        D3.indexOf(i) !== -1
          ? "attr" + i.charAt(0).toUpperCase() + i.substring(1)
          : i;
      r[s] = e[i];
    }
  return r;
}
const Jv = ["x", "y", "width", "height", "cx", "cy", "r"],
  vq = {
    useVisualState: Hk({
      scrapeMotionValuesFromProps: Qk,
      createRenderState: zk,
      onUpdate: ({
        props: e,
        prevProps: t,
        current: n,
        renderState: r,
        latestValues: i,
      }) => {
        if (!n) return;
        let s = !!e.drag;
        if (!s) {
          for (const l in i)
            if (ha.has(l)) {
              s = !0;
              break;
            }
        }
        if (!s) return;
        let o = !t;
        if (t)
          for (let l = 0; l < Jv.length; l++) {
            const c = Jv[l];
            e[c] !== t[c] && (o = !0);
          }
        o &&
          Xt.read(() => {
            qk(n, r),
              Xt.render(() => {
                mm(r, i, gm(n.tagName), e.transformTemplate), Yk(n, r);
              });
          });
      },
    }),
  };
function wq(e, t) {
  return function (r, { forwardMotionProps: i } = { forwardMotionProps: !1 }) {
    const o = {
      ...(pm(r) ? vq : yq),
      preloadedFeatures: e,
      useRender: fq(i),
      createVisualElement: t,
      Component: r,
    };
    return WH(o);
  };
}
function Xl(e, t, n) {
  const r = e.getProps();
  return ym(r, t, n !== void 0 ? n : r.custom, e);
}
const Zk = new Set([
  "width",
  "height",
  "top",
  "left",
  "right",
  "bottom",
  ...D3,
]);
function bq(e, t, n) {
  e.hasValue(t) ? e.getValue(t).set(n) : e.addValue(t, Gl(n));
}
function xq(e, t) {
  const n = Xl(e, t);
  let { transitionEnd: r = {}, transition: i = {}, ...s } = n || {};
  s = { ...s, ...r };
  for (const o in s) {
    const l = pq(s[o]);
    bq(e, o, l);
  }
}
function Cq(e) {
  return !!(yr(e) && e.add);
}
function m6(e, t) {
  const n = e.getValue("willChange");
  if (Cq(n)) return n.add(t);
  if (!n && f6.WillChange) {
    const r = new f6.WillChange("auto");
    e.addValue("willChange", r), r.add(t);
  }
}
function Xk(e) {
  return e.props[Bk];
}
const Jk = (e, t, n) =>
    (((1 - 3 * n + 3 * t) * e + (3 * n - 6 * t)) * e + 3 * t) * e,
  Sq = 1e-7,
  Eq = 12;
function kq(e, t, n, r, i) {
  let s,
    o,
    l = 0;
  do (o = t + (n - t) / 2), (s = Jk(o, r, i) - e), s > 0 ? (n = o) : (t = o);
  while (Math.abs(s) > Sq && ++l < Eq);
  return o;
}
function ku(e, t, n, r) {
  if (e === t && n === r) return bi;
  const i = (s) => kq(s, 0, 1, e, n);
  return (s) => (s === 0 || s === 1 ? s : Jk(i(s), t, r));
}
const e_ = (e) => (t) => t <= 0.5 ? e(2 * t) / 2 : (2 - e(2 * (1 - t))) / 2,
  t_ = (e) => (t) => 1 - e(1 - t),
  n_ = ku(0.33, 1.53, 0.69, 0.99),
  wm = t_(n_),
  r_ = e_(wm),
  i_ = (e) =>
    (e *= 2) < 1 ? 0.5 * wm(e) : 0.5 * (2 - Math.pow(2, -10 * (e - 1))),
  bm = (e) => 1 - Math.sin(Math.acos(e)),
  s_ = t_(bm),
  o_ = e_(bm),
  a_ = (e) => /^0[^.\s]+$/u.test(e);
function _q(e) {
  return typeof e == "number"
    ? e === 0
    : e !== null
    ? e === "none" || e === "0" || a_(e)
    : !0;
}
const Sl = (e) => Math.round(e * 1e5) / 1e5,
  xm = /-?(?:\d+(?:\.\d+)?|\.\d+)/gu;
function Aq(e) {
  return e == null;
}
const Tq =
    /^(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))$/iu,
  Cm = (e, t) => (n) =>
    !!(
      (typeof n == "string" && Tq.test(n) && n.startsWith(e)) ||
      (t && !Aq(n) && Object.prototype.hasOwnProperty.call(n, t))
    ),
  l_ = (e, t, n) => (r) => {
    if (typeof r != "string") return r;
    const [i, s, o, l] = r.match(xm);
    return {
      [e]: parseFloat(i),
      [t]: parseFloat(s),
      [n]: parseFloat(o),
      alpha: l !== void 0 ? parseFloat(l) : 1,
    };
  },
  Pq = (e) => es(0, 255, e),
  U9 = { ...F3, transform: (e) => Math.round(Pq(e)) },
  Wo = {
    test: Cm("rgb", "red"),
    parse: l_("red", "green", "blue"),
    transform: ({ red: e, green: t, blue: n, alpha: r = 1 }) =>
      "rgba(" +
      U9.transform(e) +
      ", " +
      U9.transform(t) +
      ", " +
      U9.transform(n) +
      ", " +
      Sl(Zl.transform(r)) +
      ")",
  };
function Mq(e) {
  let t = "",
    n = "",
    r = "",
    i = "";
  return (
    e.length > 5
      ? ((t = e.substring(1, 3)),
        (n = e.substring(3, 5)),
        (r = e.substring(5, 7)),
        (i = e.substring(7, 9)))
      : ((t = e.substring(1, 2)),
        (n = e.substring(2, 3)),
        (r = e.substring(3, 4)),
        (i = e.substring(4, 5)),
        (t += t),
        (n += n),
        (r += r),
        (i += i)),
    {
      red: parseInt(t, 16),
      green: parseInt(n, 16),
      blue: parseInt(r, 16),
      alpha: i ? parseInt(i, 16) / 255 : 1,
    }
  );
}
const g6 = { test: Cm("#"), parse: Mq, transform: Wo.transform },
  i3 = {
    test: Cm("hsl", "hue"),
    parse: l_("hue", "saturation", "lightness"),
    transform: ({ hue: e, saturation: t, lightness: n, alpha: r = 1 }) =>
      "hsla(" +
      Math.round(e) +
      ", " +
      f2.transform(Sl(t)) +
      ", " +
      f2.transform(Sl(n)) +
      ", " +
      Sl(Zl.transform(r)) +
      ")",
  },
  hr = {
    test: (e) => Wo.test(e) || g6.test(e) || i3.test(e),
    parse: (e) =>
      Wo.test(e) ? Wo.parse(e) : i3.test(e) ? i3.parse(e) : g6.parse(e),
    transform: (e) =>
      typeof e == "string"
        ? e
        : e.hasOwnProperty("red")
        ? Wo.transform(e)
        : i3.transform(e),
  },
  Rq =
    /(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))/giu;
function Lq(e) {
  var t, n;
  return (
    isNaN(e) &&
    typeof e == "string" &&
    (((t = e.match(xm)) == null ? void 0 : t.length) || 0) +
      (((n = e.match(Rq)) == null ? void 0 : n.length) || 0) >
      0
  );
}
const u_ = "number",
  c_ = "color",
  Iq = "var",
  jq = "var(",
  ew = "${}",
  Nq =
    /var\s*\(\s*--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)|#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\)|-?(?:\d+(?:\.\d+)?|\.\d+)/giu;
function Jl(e) {
  const t = e.toString(),
    n = [],
    r = { color: [], number: [], var: [] },
    i = [];
  let s = 0;
  const l = t
    .replace(
      Nq,
      (c) => (
        hr.test(c)
          ? (r.color.push(s), i.push(c_), n.push(hr.parse(c)))
          : c.startsWith(jq)
          ? (r.var.push(s), i.push(Iq), n.push(c))
          : (r.number.push(s), i.push(u_), n.push(parseFloat(c))),
        ++s,
        ew
      )
    )
    .split(ew);
  return { values: n, split: l, indexes: r, types: i };
}
function d_(e) {
  return Jl(e).values;
}
function f_(e) {
  const { split: t, types: n } = Jl(e),
    r = t.length;
  return (i) => {
    let s = "";
    for (let o = 0; o < r; o++)
      if (((s += t[o]), i[o] !== void 0)) {
        const l = n[o];
        l === u_
          ? (s += Sl(i[o]))
          : l === c_
          ? (s += hr.transform(i[o]))
          : (s += i[o]);
      }
    return s;
  };
}
const Oq = (e) => (typeof e == "number" ? 0 : e);
function Bq(e) {
  const t = d_(e);
  return f_(e)(t.map(Oq));
}
const Hs = {
    test: Lq,
    parse: d_,
    createTransformer: f_,
    getAnimatableNone: Bq,
  },
  Dq = new Set(["brightness", "contrast", "saturate", "opacity"]);
function Fq(e) {
  const [t, n] = e.slice(0, -1).split("(");
  if (t === "drop-shadow") return e;
  const [r] = n.match(xm) || [];
  if (!r) return e;
  const i = n.replace(r, "");
  let s = Dq.has(t) ? 1 : 0;
  return r !== n && (s *= 100), t + "(" + s + i + ")";
}
const Uq = /\b([a-z-]*)\(.*?\)/gu,
  y6 = {
    ...Hs,
    getAnimatableNone: (e) => {
      const t = e.match(Uq);
      return t ? t.map(Fq).join(" ") : e;
    },
  },
  $q = {
    ...dm,
    color: hr,
    backgroundColor: hr,
    outlineColor: hr,
    fill: hr,
    stroke: hr,
    borderColor: hr,
    borderTopColor: hr,
    borderRightColor: hr,
    borderBottomColor: hr,
    borderLeftColor: hr,
    filter: y6,
    WebkitFilter: y6,
  },
  h_ = (e) => $q[e];
function p_(e, t) {
  let n = h_(e);
  return (
    n !== y6 && (n = Hs), n.getAnimatableNone ? n.getAnimatableNone(t) : void 0
  );
}
const Vq = new Set(["auto", "none", "0"]);
function Wq(e, t, n) {
  let r = 0,
    i;
  for (; r < e.length && !i; ) {
    const s = e[r];
    typeof s == "string" && !Vq.has(s) && Jl(s).values.length && (i = e[r]),
      r++;
  }
  if (i && n) for (const s of t) e[s] = p_(n, i);
}
const zo = (e) => (e * 180) / Math.PI,
  v6 = (e) => {
    const t = zo(Math.atan2(e[1], e[0]));
    return w6(t);
  },
  zq = {
    x: 4,
    y: 5,
    translateX: 4,
    translateY: 5,
    scaleX: 0,
    scaleY: 3,
    scale: (e) => (Math.abs(e[0]) + Math.abs(e[3])) / 2,
    rotate: v6,
    rotateZ: v6,
    skewX: (e) => zo(Math.atan(e[1])),
    skewY: (e) => zo(Math.atan(e[2])),
    skew: (e) => (Math.abs(e[1]) + Math.abs(e[2])) / 2,
  },
  w6 = (e) => ((e = e % 360), e < 0 && (e += 360), e),
  tw = v6,
  nw = (e) => Math.sqrt(e[0] * e[0] + e[1] * e[1]),
  rw = (e) => Math.sqrt(e[4] * e[4] + e[5] * e[5]),
  Hq = {
    x: 12,
    y: 13,
    z: 14,
    translateX: 12,
    translateY: 13,
    translateZ: 14,
    scaleX: nw,
    scaleY: rw,
    scale: (e) => (nw(e) + rw(e)) / 2,
    rotateX: (e) => w6(zo(Math.atan2(e[6], e[5]))),
    rotateY: (e) => w6(zo(Math.atan2(-e[2], e[0]))),
    rotateZ: tw,
    rotate: tw,
    skewX: (e) => zo(Math.atan(e[4])),
    skewY: (e) => zo(Math.atan(e[1])),
    skew: (e) => (Math.abs(e[1]) + Math.abs(e[4])) / 2,
  };
function iw(e) {
  return e.includes("scale") ? 1 : 0;
}
function b6(e, t) {
  if (!e || e === "none") return iw(t);
  const n = e.match(/^matrix3d\(([-\d.e\s,]+)\)$/u);
  let r, i;
  if (n) (r = Hq), (i = n);
  else {
    const l = e.match(/^matrix\(([-\d.e\s,]+)\)$/u);
    (r = zq), (i = l);
  }
  if (!i) return iw(t);
  const s = r[t],
    o = i[1].split(",").map(Kq);
  return typeof s == "function" ? s(o) : o[s];
}
const qq = (e, t) => {
  const { transform: n = "none" } = getComputedStyle(e);
  return b6(n, t);
};
function Kq(e) {
  return parseFloat(e.trim());
}
const sw = (e) => e === F3 || e === it,
  Gq = new Set(["x", "y", "z"]),
  Yq = D3.filter((e) => !Gq.has(e));
function Qq(e) {
  const t = [];
  return (
    Yq.forEach((n) => {
      const r = e.getValue(n);
      r !== void 0 &&
        (t.push([n, r.get()]), r.set(n.startsWith("scale") ? 1 : 0));
    }),
    t
  );
}
const C3 = {
  width: ({ x: e }, { paddingLeft: t = "0", paddingRight: n = "0" }) =>
    e.max - e.min - parseFloat(t) - parseFloat(n),
  height: ({ y: e }, { paddingTop: t = "0", paddingBottom: n = "0" }) =>
    e.max - e.min - parseFloat(t) - parseFloat(n),
  top: (e, { top: t }) => parseFloat(t),
  left: (e, { left: t }) => parseFloat(t),
  bottom: ({ y: e }, { top: t }) => parseFloat(t) + (e.max - e.min),
  right: ({ x: e }, { left: t }) => parseFloat(t) + (e.max - e.min),
  x: (e, { transform: t }) => b6(t, "x"),
  y: (e, { transform: t }) => b6(t, "y"),
};
C3.translateX = C3.x;
C3.translateY = C3.y;
const Qo = new Set();
let x6 = !1,
  C6 = !1;
function m_() {
  if (C6) {
    const e = Array.from(Qo).filter((r) => r.needsMeasurement),
      t = new Set(e.map((r) => r.element)),
      n = new Map();
    t.forEach((r) => {
      const i = Qq(r);
      i.length && (n.set(r, i), r.render());
    }),
      e.forEach((r) => r.measureInitialState()),
      t.forEach((r) => {
        r.render();
        const i = n.get(r);
        i &&
          i.forEach(([s, o]) => {
            var l;
            (l = r.getValue(s)) == null || l.set(o);
          });
      }),
      e.forEach((r) => r.measureEndState()),
      e.forEach((r) => {
        r.suspendedScrollY !== void 0 && window.scrollTo(0, r.suspendedScrollY);
      });
  }
  (C6 = !1), (x6 = !1), Qo.forEach((e) => e.complete()), Qo.clear();
}
function g_() {
  Qo.forEach((e) => {
    e.readKeyframes(), e.needsMeasurement && (C6 = !0);
  });
}
function Zq() {
  g_(), m_();
}
class Sm {
  constructor(t, n, r, i, s, o = !1) {
    (this.isComplete = !1),
      (this.isAsync = !1),
      (this.needsMeasurement = !1),
      (this.isScheduled = !1),
      (this.unresolvedKeyframes = [...t]),
      (this.onComplete = n),
      (this.name = r),
      (this.motionValue = i),
      (this.element = s),
      (this.isAsync = o);
  }
  scheduleResolve() {
    (this.isScheduled = !0),
      this.isAsync
        ? (Qo.add(this),
          x6 || ((x6 = !0), Xt.read(g_), Xt.resolveKeyframes(m_)))
        : (this.readKeyframes(), this.complete());
  }
  readKeyframes() {
    const {
      unresolvedKeyframes: t,
      name: n,
      element: r,
      motionValue: i,
    } = this;
    for (let s = 0; s < t.length; s++)
      if (t[s] === null)
        if (s === 0) {
          const o = i == null ? void 0 : i.get(),
            l = t[t.length - 1];
          if (o !== void 0) t[0] = o;
          else if (r && n) {
            const c = r.readValue(n, l);
            c != null && (t[0] = c);
          }
          t[0] === void 0 && (t[0] = l), i && o === void 0 && i.set(t[0]);
        } else t[s] = t[s - 1];
  }
  setFinalKeyframe() {}
  measureInitialState() {}
  renderEndStyles() {}
  measureEndState() {}
  complete() {
    (this.isComplete = !0),
      this.onComplete(this.unresolvedKeyframes, this.finalKeyframe),
      Qo.delete(this);
  }
  cancel() {
    this.isComplete || ((this.isScheduled = !1), Qo.delete(this));
  }
  resume() {
    this.isComplete || this.scheduleResolve();
  }
}
const y_ = (e) => /^-?(?:\d+(?:\.\d+)?|\.\d+)$/u.test(e),
  Xq = /^var\(--(?:([\w-]+)|([\w-]+), ?([a-zA-Z\d ()%#.,-]+))\)/u;
function Jq(e) {
  const t = Xq.exec(e);
  if (!t) return [,];
  const [, n, r, i] = t;
  return [`--${n ?? r}`, i];
}
function v_(e, t, n = 1) {
  const [r, i] = Jq(e);
  if (!r) return;
  const s = window.getComputedStyle(t).getPropertyValue(r);
  if (s) {
    const o = s.trim();
    return y_(o) ? parseFloat(o) : o;
  }
  return cm(i) ? v_(i, t, n + 1) : i;
}
const w_ = (e) => (t) => t.test(e),
  eK = { test: (e) => e === "auto", parse: (e) => e },
  b_ = [F3, it, f2, As, ZH, QH, eK],
  ow = (e) => b_.find(w_(e));
class x_ extends Sm {
  constructor(t, n, r, i, s) {
    super(t, n, r, i, s, !0);
  }
  readKeyframes() {
    const { unresolvedKeyframes: t, element: n, name: r } = this;
    if (!n || !n.current) return;
    super.readKeyframes();
    for (let c = 0; c < t.length; c++) {
      let f = t[c];
      if (typeof f == "string" && ((f = f.trim()), cm(f))) {
        const d = v_(f, n.current);
        d !== void 0 && (t[c] = d),
          c === t.length - 1 && (this.finalKeyframe = f);
      }
    }
    if ((this.resolveNoneKeyframes(), !Zk.has(r) || t.length !== 2)) return;
    const [i, s] = t,
      o = ow(i),
      l = ow(s);
    if (o !== l)
      if (sw(o) && sw(l))
        for (let c = 0; c < t.length; c++) {
          const f = t[c];
          typeof f == "string" && (t[c] = parseFloat(f));
        }
      else this.needsMeasurement = !0;
  }
  resolveNoneKeyframes() {
    const { unresolvedKeyframes: t, name: n } = this,
      r = [];
    for (let i = 0; i < t.length; i++) _q(t[i]) && r.push(i);
    r.length && Wq(t, r, n);
  }
  measureInitialState() {
    const { element: t, unresolvedKeyframes: n, name: r } = this;
    if (!t || !t.current) return;
    r === "height" && (this.suspendedScrollY = window.pageYOffset),
      (this.measuredOrigin = C3[r](
        t.measureViewportBox(),
        window.getComputedStyle(t.current)
      )),
      (n[0] = this.measuredOrigin);
    const i = n[n.length - 1];
    i !== void 0 && t.getValue(r, i).jump(i, !1);
  }
  measureEndState() {
    var l;
    const { element: t, name: n, unresolvedKeyframes: r } = this;
    if (!t || !t.current) return;
    const i = t.getValue(n);
    i && i.jump(this.measuredOrigin, !1);
    const s = r.length - 1,
      o = r[s];
    (r[s] = C3[n](t.measureViewportBox(), window.getComputedStyle(t.current))),
      o !== null && this.finalKeyframe === void 0 && (this.finalKeyframe = o),
      (l = this.removedTransforms) != null &&
        l.length &&
        this.removedTransforms.forEach(([c, f]) => {
          t.getValue(c).set(f);
        }),
      this.resolveNoneKeyframes();
  }
}
const aw = (e, t) =>
  t === "zIndex"
    ? !1
    : !!(
        typeof e == "number" ||
        Array.isArray(e) ||
        (typeof e == "string" &&
          (Hs.test(e) || e === "0") &&
          !e.startsWith("url("))
      );
function tK(e) {
  const t = e[0];
  if (e.length === 1) return !0;
  for (let n = 0; n < e.length; n++) if (e[n] !== t) return !0;
}
function nK(e, t, n, r) {
  const i = e[0];
  if (i === null) return !1;
  if (t === "display" || t === "visibility") return !0;
  const s = e[e.length - 1],
    o = aw(i, t),
    l = aw(s, t);
  return !o || !l ? !1 : tK(e) || ((n === "spring" || tm(n)) && r);
}
const rK = (e) => e !== null;
function nf(e, { repeat: t, repeatType: n = "loop" }, r) {
  const i = e.filter(rK),
    s = t && n !== "loop" && t % 2 === 1 ? 0 : i.length - 1;
  return !s || r === void 0 ? i[s] : r;
}
const iK = 40;
class C_ {
  constructor({
    autoplay: t = !0,
    delay: n = 0,
    type: r = "keyframes",
    repeat: i = 0,
    repeatDelay: s = 0,
    repeatType: o = "loop",
    ...l
  }) {
    (this.isStopped = !1),
      (this.hasAttemptedResolve = !1),
      (this.createdAt = d2.now()),
      (this.options = {
        autoplay: t,
        delay: n,
        type: r,
        repeat: i,
        repeatDelay: s,
        repeatType: o,
        ...l,
      }),
      this.updateFinishedPromise();
  }
  calcStartTime() {
    return this.resolvedAt
      ? this.resolvedAt - this.createdAt > iK
        ? this.resolvedAt
        : this.createdAt
      : this.createdAt;
  }
  get resolved() {
    return !this._resolved && !this.hasAttemptedResolve && Zq(), this._resolved;
  }
  onKeyframesResolved(t, n) {
    (this.resolvedAt = d2.now()), (this.hasAttemptedResolve = !0);
    const {
      name: r,
      type: i,
      velocity: s,
      delay: o,
      onComplete: l,
      onUpdate: c,
      isGenerator: f,
    } = this.options;
    if (!f && !nK(t, r, i, s))
      if (o) this.options.duration = 0;
      else {
        c && c(nf(t, this.options, n)), l && l(), this.resolveFinishedPromise();
        return;
      }
    const d = this.initPlayback(t, n);
    d !== !1 &&
      ((this._resolved = { keyframes: t, finalKeyframe: n, ...d }),
      this.onPostResolved());
  }
  onPostResolved() {}
  then(t, n) {
    return this.currentFinishedPromise.then(t, n);
  }
  flatten() {
    this.options.allowFlatten &&
      ((this.options.type = "keyframes"), (this.options.ease = "linear"));
  }
  updateFinishedPromise() {
    this.currentFinishedPromise = new Promise((t) => {
      this.resolveFinishedPromise = t;
    });
  }
}
const wn = (e, t, n) => e + (t - e) * n;
function $9(e, t, n) {
  return (
    n < 0 && (n += 1),
    n > 1 && (n -= 1),
    n < 1 / 6
      ? e + (t - e) * 6 * n
      : n < 1 / 2
      ? t
      : n < 2 / 3
      ? e + (t - e) * (2 / 3 - n) * 6
      : e
  );
}
function sK({ hue: e, saturation: t, lightness: n, alpha: r }) {
  (e /= 360), (t /= 100), (n /= 100);
  let i = 0,
    s = 0,
    o = 0;
  if (!t) i = s = o = n;
  else {
    const l = n < 0.5 ? n * (1 + t) : n + t - n * t,
      c = 2 * n - l;
    (i = $9(c, l, e + 1 / 3)), (s = $9(c, l, e)), (o = $9(c, l, e - 1 / 3));
  }
  return {
    red: Math.round(i * 255),
    green: Math.round(s * 255),
    blue: Math.round(o * 255),
    alpha: r,
  };
}
function o4(e, t) {
  return (n) => (n > 0 ? t : e);
}
const V9 = (e, t, n) => {
    const r = e * e,
      i = n * (t * t - r) + r;
    return i < 0 ? 0 : Math.sqrt(i);
  },
  oK = [g6, Wo, i3],
  aK = (e) => oK.find((t) => t.test(e));
function lw(e) {
  const t = aK(e);
  if (!t) return !1;
  let n = t.parse(e);
  return t === i3 && (n = sK(n)), n;
}
const uw = (e, t) => {
    const n = lw(e),
      r = lw(t);
    if (!n || !r) return o4(e, t);
    const i = { ...n };
    return (s) => (
      (i.red = V9(n.red, r.red, s)),
      (i.green = V9(n.green, r.green, s)),
      (i.blue = V9(n.blue, r.blue, s)),
      (i.alpha = wn(n.alpha, r.alpha, s)),
      Wo.transform(i)
    );
  },
  lK = (e, t) => (n) => t(e(n)),
  _u = (...e) => e.reduce(lK),
  S6 = new Set(["none", "hidden"]);
function uK(e, t) {
  return S6.has(e) ? (n) => (n <= 0 ? e : t) : (n) => (n >= 1 ? t : e);
}
function cK(e, t) {
  return (n) => wn(e, t, n);
}
function Em(e) {
  return typeof e == "number"
    ? cK
    : typeof e == "string"
    ? cm(e)
      ? o4
      : hr.test(e)
      ? uw
      : hK
    : Array.isArray(e)
    ? S_
    : typeof e == "object"
    ? hr.test(e)
      ? uw
      : dK
    : o4;
}
function S_(e, t) {
  const n = [...e],
    r = n.length,
    i = e.map((s, o) => Em(s)(s, t[o]));
  return (s) => {
    for (let o = 0; o < r; o++) n[o] = i[o](s);
    return n;
  };
}
function dK(e, t) {
  const n = { ...e, ...t },
    r = {};
  for (const i in n)
    e[i] !== void 0 && t[i] !== void 0 && (r[i] = Em(e[i])(e[i], t[i]));
  return (i) => {
    for (const s in r) n[s] = r[s](i);
    return n;
  };
}
function fK(e, t) {
  const n = [],
    r = { color: 0, var: 0, number: 0 };
  for (let i = 0; i < t.values.length; i++) {
    const s = t.types[i],
      o = e.indexes[s][r[s]],
      l = e.values[o] ?? 0;
    (n[i] = l), r[s]++;
  }
  return n;
}
const hK = (e, t) => {
  const n = Hs.createTransformer(t),
    r = Jl(e),
    i = Jl(t);
  return r.indexes.var.length === i.indexes.var.length &&
    r.indexes.color.length === i.indexes.color.length &&
    r.indexes.number.length >= i.indexes.number.length
    ? (S6.has(e) && !i.values.length) || (S6.has(t) && !r.values.length)
      ? uK(e, t)
      : _u(S_(fK(r, i), i.values), n)
    : o4(e, t);
};
function E_(e, t, n) {
  return typeof e == "number" && typeof t == "number" && typeof n == "number"
    ? wn(e, t, n)
    : Em(e)(e, t);
}
const pK = 5;
function k_(e, t, n) {
  const r = Math.max(t - pK, 0);
  return _k(n - e(r), t - r);
}
const Cn = {
    stiffness: 100,
    damping: 10,
    mass: 1,
    velocity: 0,
    duration: 800,
    bounce: 0.3,
    visualDuration: 0.3,
    restSpeed: { granular: 0.01, default: 2 },
    restDelta: { granular: 0.005, default: 0.5 },
    minDuration: 0.01,
    maxDuration: 10,
    minDamping: 0.05,
    maxDamping: 1,
  },
  cw = 0.001;
function mK({
  duration: e = Cn.duration,
  bounce: t = Cn.bounce,
  velocity: n = Cn.velocity,
  mass: r = Cn.mass,
}) {
  let i,
    s,
    o = 1 - t;
  (o = es(Cn.minDamping, Cn.maxDamping, o)),
    (e = es(Cn.minDuration, Cn.maxDuration, c2(e))),
    o < 1
      ? ((i = (f) => {
          const d = f * o,
            p = d * e,
            m = d - n,
            g = E6(f, o),
            w = Math.exp(-p);
          return cw - (m / g) * w;
        }),
        (s = (f) => {
          const p = f * o * e,
            m = p * n + n,
            g = Math.pow(o, 2) * Math.pow(f, 2) * e,
            w = Math.exp(-p),
            b = E6(Math.pow(f, 2), o);
          return ((-i(f) + cw > 0 ? -1 : 1) * ((m - g) * w)) / b;
        }))
      : ((i = (f) => {
          const d = Math.exp(-f * e),
            p = (f - n) * e + 1;
          return -0.001 + d * p;
        }),
        (s = (f) => {
          const d = Math.exp(-f * e),
            p = (n - f) * (e * e);
          return d * p;
        }));
  const l = 5 / e,
    c = yK(i, s, l);
  if (((e = u2(e)), isNaN(c)))
    return { stiffness: Cn.stiffness, damping: Cn.damping, duration: e };
  {
    const f = Math.pow(c, 2) * r;
    return { stiffness: f, damping: o * 2 * Math.sqrt(r * f), duration: e };
  }
}
const gK = 12;
function yK(e, t, n) {
  let r = n;
  for (let i = 1; i < gK; i++) r = r - e(r) / t(r);
  return r;
}
function E6(e, t) {
  return e * Math.sqrt(1 - t * t);
}
const vK = ["duration", "bounce"],
  wK = ["stiffness", "damping", "mass"];
function dw(e, t) {
  return t.some((n) => e[n] !== void 0);
}
function bK(e) {
  let t = {
    velocity: Cn.velocity,
    stiffness: Cn.stiffness,
    damping: Cn.damping,
    mass: Cn.mass,
    isResolvedFromDuration: !1,
    ...e,
  };
  if (!dw(e, wK) && dw(e, vK))
    if (e.visualDuration) {
      const n = e.visualDuration,
        r = (2 * Math.PI) / (n * 1.2),
        i = r * r,
        s = 2 * es(0.05, 1, 1 - (e.bounce || 0)) * Math.sqrt(i);
      t = { ...t, mass: Cn.mass, stiffness: i, damping: s };
    } else {
      const n = mK(e);
      (t = { ...t, ...n, mass: Cn.mass }), (t.isResolvedFromDuration = !0);
    }
  return t;
}
function a4(e = Cn.visualDuration, t = Cn.bounce) {
  const n =
    typeof e != "object"
      ? { visualDuration: e, keyframes: [0, 1], bounce: t }
      : e;
  let { restSpeed: r, restDelta: i } = n;
  const s = n.keyframes[0],
    o = n.keyframes[n.keyframes.length - 1],
    l = { done: !1, value: s },
    {
      stiffness: c,
      damping: f,
      mass: d,
      duration: p,
      velocity: m,
      isResolvedFromDuration: g,
    } = bK({ ...n, velocity: -c2(n.velocity || 0) }),
    w = m || 0,
    b = f / (2 * Math.sqrt(c * d)),
    x = o - s,
    E = c2(Math.sqrt(c / d)),
    P = Math.abs(x) < 5;
  r || (r = P ? Cn.restSpeed.granular : Cn.restSpeed.default),
    i || (i = P ? Cn.restDelta.granular : Cn.restDelta.default);
  let _;
  if (b < 1) {
    const M = E6(E, b);
    _ = (L) => {
      const O = Math.exp(-b * E * L);
      return (
        o - O * (((w + b * E * x) / M) * Math.sin(M * L) + x * Math.cos(M * L))
      );
    };
  } else if (b === 1) _ = (M) => o - Math.exp(-E * M) * (x + (w + E * x) * M);
  else {
    const M = E * Math.sqrt(b * b - 1);
    _ = (L) => {
      const O = Math.exp(-b * E * L),
        U = Math.min(M * L, 300);
      return (
        o - (O * ((w + b * E * x) * Math.sinh(U) + M * x * Math.cosh(U))) / M
      );
    };
  }
  const T = {
    calculatedDuration: (g && p) || null,
    next: (M) => {
      const L = _(M);
      if (g) l.done = M >= p;
      else {
        let O = 0;
        b < 1 && (O = M === 0 ? u2(w) : k_(_, M, L));
        const U = Math.abs(O) <= r,
          D = Math.abs(o - L) <= i;
        l.done = U && D;
      }
      return (l.value = l.done ? o : L), l;
    },
    toString: () => {
      const M = Math.min(rm(T), i4),
        L = Ak((O) => T.next(M * O).value, M, 30);
      return M + "ms " + L;
    },
    toTransition: () => {},
  };
  return T;
}
a4.applyToOptions = (e) => {
  const t = vH(e, 100, a4);
  return (
    (e.ease = Kl() ? t.ease : "easeOut"),
    (e.duration = u2(t.duration)),
    (e.type = "keyframes"),
    e
  );
};
function fw({
  keyframes: e,
  velocity: t = 0,
  power: n = 0.8,
  timeConstant: r = 325,
  bounceDamping: i = 10,
  bounceStiffness: s = 500,
  modifyTarget: o,
  min: l,
  max: c,
  restDelta: f = 0.5,
  restSpeed: d,
}) {
  const p = e[0],
    m = { done: !1, value: p },
    g = (U) => (l !== void 0 && U < l) || (c !== void 0 && U > c),
    w = (U) =>
      l === void 0
        ? c
        : c === void 0 || Math.abs(l - U) < Math.abs(c - U)
        ? l
        : c;
  let b = n * t;
  const x = p + b,
    E = o === void 0 ? x : o(x);
  E !== x && (b = E - p);
  const P = (U) => -b * Math.exp(-U / r),
    _ = (U) => E + P(U),
    T = (U) => {
      const D = P(U),
        H = _(U);
      (m.done = Math.abs(D) <= f), (m.value = m.done ? E : H);
    };
  let M, L;
  const O = (U) => {
    g(m.value) &&
      ((M = U),
      (L = a4({
        keyframes: [m.value, w(m.value)],
        velocity: k_(_, U, m.value),
        damping: i,
        stiffness: s,
        restDelta: f,
        restSpeed: d,
      })));
  };
  return (
    O(0),
    {
      calculatedDuration: null,
      next: (U) => {
        let D = !1;
        return (
          !L && M === void 0 && ((D = !0), T(U), O(U)),
          M !== void 0 && U >= M ? L.next(U - M) : (!D && T(U), m)
        );
      },
    }
  );
}
const xK = ku(0.42, 0, 1, 1),
  CK = ku(0, 0, 0.58, 1),
  __ = ku(0.42, 0, 0.58, 1),
  SK = (e) => Array.isArray(e) && typeof e[0] != "number",
  EK = {
    linear: bi,
    easeIn: xK,
    easeInOut: __,
    easeOut: CK,
    circIn: bm,
    circInOut: o_,
    circOut: s_,
    backIn: wm,
    backInOut: r_,
    backOut: n_,
    anticipate: i_,
  },
  hw = (e) => {
    if (em(e)) {
      kk(e.length === 4);
      const [t, n, r, i] = e;
      return ku(t, n, r, i);
    } else if (typeof e == "string") return EK[e];
    return e;
  };
function kK(e, t, n) {
  const r = [],
    i = n || E_,
    s = e.length - 1;
  for (let o = 0; o < s; o++) {
    let l = i(e[o], e[o + 1]);
    if (t) {
      const c = Array.isArray(t) ? t[o] || bi : t;
      l = _u(c, l);
    }
    r.push(l);
  }
  return r;
}
function _K(e, t, { clamp: n = !0, ease: r, mixer: i } = {}) {
  const s = e.length;
  if ((kk(s === t.length), s === 1)) return () => t[0];
  if (s === 2 && t[0] === t[1]) return () => t[1];
  const o = e[0] === e[1];
  e[0] > e[s - 1] && ((e = [...e].reverse()), (t = [...t].reverse()));
  const l = kK(t, r, i),
    c = l.length,
    f = (d) => {
      if (o && d < e[0]) return t[0];
      let p = 0;
      if (c > 1) for (; p < e.length - 2 && !(d < e[p + 1]); p++);
      const m = ql(e[p], e[p + 1], d);
      return l[p](m);
    };
  return n ? (d) => f(es(e[0], e[s - 1], d)) : f;
}
function AK(e, t) {
  const n = e[e.length - 1];
  for (let r = 1; r <= t; r++) {
    const i = ql(0, t, r);
    e.push(wn(n, 1, i));
  }
}
function TK(e) {
  const t = [0];
  return AK(t, e.length - 1), t;
}
function PK(e, t) {
  return e.map((n) => n * t);
}
function MK(e, t) {
  return e.map(() => t || __).splice(0, e.length - 1);
}
function l4({
  duration: e = 300,
  keyframes: t,
  times: n,
  ease: r = "easeInOut",
}) {
  const i = SK(r) ? r.map(hw) : hw(r),
    s = { done: !1, value: t[0] },
    o = PK(n && n.length === t.length ? n : TK(t), e),
    l = _K(o, t, { ease: Array.isArray(i) ? i : MK(t, i) });
  return {
    calculatedDuration: e,
    next: (c) => ((s.value = l(c)), (s.done = c >= e), s),
  };
}
const RK = (e) => {
    const t = ({ timestamp: n }) => e(n);
    return {
      start: () => Xt.update(t, !0),
      stop: () => zs(t),
      now: () => (er.isProcessing ? er.timestamp : d2.now()),
    };
  },
  LK = { decay: fw, inertia: fw, tween: l4, keyframes: l4, spring: a4 },
  IK = (e) => e / 100;
class km extends C_ {
  constructor(t) {
    super(t),
      (this.holdTime = null),
      (this.cancelTime = null),
      (this.currentTime = 0),
      (this.playbackSpeed = 1),
      (this.pendingPlayState = "running"),
      (this.startTime = null),
      (this.state = "idle"),
      (this.stop = () => {
        if (
          (this.resolver.cancel(), (this.isStopped = !0), this.state === "idle")
        )
          return;
        this.teardown();
        const { onStop: c } = this.options;
        c && c();
      });
    const { name: n, motionValue: r, element: i, keyframes: s } = this.options,
      o = (i == null ? void 0 : i.KeyframeResolver) || Sm,
      l = (c, f) => this.onKeyframesResolved(c, f);
    (this.resolver = new o(s, l, n, r, i)), this.resolver.scheduleResolve();
  }
  flatten() {
    super.flatten(),
      this._resolved &&
        Object.assign(
          this._resolved,
          this.initPlayback(this._resolved.keyframes)
        );
  }
  initPlayback(t) {
    const {
        type: n = "keyframes",
        repeat: r = 0,
        repeatDelay: i = 0,
        repeatType: s,
        velocity: o = 0,
      } = this.options,
      l = tm(n) ? n : LK[n] || l4;
    let c, f;
    l !== l4 &&
      typeof t[0] != "number" &&
      ((c = _u(IK, E_(t[0], t[1]))), (t = [0, 100]));
    const d = l({ ...this.options, keyframes: t });
    s === "mirror" &&
      (f = l({ ...this.options, keyframes: [...t].reverse(), velocity: -o })),
      d.calculatedDuration === null && (d.calculatedDuration = rm(d));
    const { calculatedDuration: p } = d,
      m = p + i,
      g = m * (r + 1) - i;
    return {
      generator: d,
      mirroredGenerator: f,
      mapPercentToKeyframes: c,
      calculatedDuration: p,
      resolvedDuration: m,
      totalDuration: g,
    };
  }
  onPostResolved() {
    const { autoplay: t = !0 } = this.options;
    this.play(),
      this.pendingPlayState === "paused" || !t
        ? this.pause()
        : (this.state = this.pendingPlayState);
  }
  tick(t, n = !1) {
    const { resolved: r } = this;
    if (!r) {
      const { keyframes: U } = this.options;
      return { done: !0, value: U[U.length - 1] };
    }
    const {
      finalKeyframe: i,
      generator: s,
      mirroredGenerator: o,
      mapPercentToKeyframes: l,
      keyframes: c,
      calculatedDuration: f,
      totalDuration: d,
      resolvedDuration: p,
    } = r;
    if (this.startTime === null) return s.next(0);
    const {
      delay: m,
      repeat: g,
      repeatType: w,
      repeatDelay: b,
      onUpdate: x,
    } = this.options;
    this.speed > 0
      ? (this.startTime = Math.min(this.startTime, t))
      : this.speed < 0 &&
        (this.startTime = Math.min(t - d / this.speed, this.startTime)),
      n
        ? (this.currentTime = t)
        : this.holdTime !== null
        ? (this.currentTime = this.holdTime)
        : (this.currentTime = Math.round(t - this.startTime) * this.speed);
    const E = this.currentTime - m * (this.speed >= 0 ? 1 : -1),
      P = this.speed >= 0 ? E < 0 : E > d;
    (this.currentTime = Math.max(E, 0)),
      this.state === "finished" &&
        this.holdTime === null &&
        (this.currentTime = d);
    let _ = this.currentTime,
      T = s;
    if (g) {
      const U = Math.min(this.currentTime, d) / p;
      let D = Math.floor(U),
        H = U % 1;
      !H && U >= 1 && (H = 1),
        H === 1 && D--,
        (D = Math.min(D, g + 1)),
        !!(D % 2) &&
          (w === "reverse"
            ? ((H = 1 - H), b && (H -= b / p))
            : w === "mirror" && (T = o)),
        (_ = es(0, 1, H) * p);
    }
    const M = P ? { done: !1, value: c[0] } : T.next(_);
    l && (M.value = l(M.value));
    let { done: L } = M;
    !P &&
      f !== null &&
      (L = this.speed >= 0 ? this.currentTime >= d : this.currentTime <= 0);
    const O =
      this.holdTime === null &&
      (this.state === "finished" || (this.state === "running" && L));
    return (
      O && i !== void 0 && (M.value = nf(c, this.options, i)),
      x && x(M.value),
      O && this.finish(),
      M
    );
  }
  get duration() {
    const { resolved: t } = this;
    return t ? c2(t.calculatedDuration) : 0;
  }
  get time() {
    return c2(this.currentTime);
  }
  set time(t) {
    (t = u2(t)),
      (this.currentTime = t),
      this.holdTime !== null || this.speed === 0
        ? (this.holdTime = t)
        : this.driver && (this.startTime = this.driver.now() - t / this.speed);
  }
  get speed() {
    return this.playbackSpeed;
  }
  set speed(t) {
    const n = this.playbackSpeed !== t;
    (this.playbackSpeed = t), n && (this.time = c2(this.currentTime));
  }
  play() {
    if (
      (this.resolver.isScheduled || this.resolver.resume(), !this._resolved)
    ) {
      this.pendingPlayState = "running";
      return;
    }
    if (this.isStopped) return;
    const { driver: t = RK, onPlay: n, startTime: r } = this.options;
    this.driver || (this.driver = t((s) => this.tick(s))), n && n();
    const i = this.driver.now();
    this.holdTime !== null
      ? (this.startTime = i - this.holdTime)
      : this.startTime
      ? this.state === "finished" && (this.startTime = i)
      : (this.startTime = r ?? this.calcStartTime()),
      this.state === "finished" && this.updateFinishedPromise(),
      (this.cancelTime = this.startTime),
      (this.holdTime = null),
      (this.state = "running"),
      this.driver.start();
  }
  pause() {
    if (!this._resolved) {
      this.pendingPlayState = "paused";
      return;
    }
    (this.state = "paused"), (this.holdTime = this.currentTime ?? 0);
  }
  complete() {
    this.state !== "running" && this.play(),
      (this.pendingPlayState = this.state = "finished"),
      (this.holdTime = null);
  }
  finish() {
    this.teardown(), (this.state = "finished");
    const { onComplete: t } = this.options;
    t && t();
  }
  cancel() {
    this.cancelTime !== null && this.tick(this.cancelTime),
      this.teardown(),
      this.updateFinishedPromise();
  }
  teardown() {
    (this.state = "idle"),
      this.stopDriver(),
      this.resolveFinishedPromise(),
      this.updateFinishedPromise(),
      (this.startTime = this.cancelTime = null),
      this.resolver.cancel();
  }
  stopDriver() {
    this.driver && (this.driver.stop(), (this.driver = void 0));
  }
  sample(t) {
    return (this.startTime = 0), this.tick(t, !0);
  }
  get finished() {
    return this.currentFinishedPromise;
  }
}
const jK = new Set(["opacity", "clipPath", "filter", "transform"]),
  NK = Xp(() => Object.hasOwnProperty.call(Element.prototype, "animate")),
  u4 = 10,
  OK = 2e4;
function BK(e) {
  return tm(e.type) || e.type === "spring" || !Pk(e.ease);
}
function DK(e, t) {
  const n = new km({
    ...t,
    keyframes: e,
    repeat: 0,
    delay: 0,
    isGenerator: !0,
  });
  let r = { done: !1, value: e[0] };
  const i = [];
  let s = 0;
  for (; !r.done && s < OK; ) (r = n.sample(s)), i.push(r.value), (s += u4);
  return { times: void 0, keyframes: i, duration: s - u4, ease: "linear" };
}
const A_ = { anticipate: i_, backInOut: r_, circInOut: o_ };
function FK(e) {
  return e in A_;
}
class pw extends C_ {
  constructor(t) {
    super(t);
    const { name: n, motionValue: r, element: i, keyframes: s } = this.options;
    (this.resolver = new x_(
      s,
      (o, l) => this.onKeyframesResolved(o, l),
      n,
      r,
      i
    )),
      this.resolver.scheduleResolve();
  }
  initPlayback(t, n) {
    let {
      duration: r = 300,
      times: i,
      ease: s,
      type: o,
      motionValue: l,
      name: c,
      startTime: f,
    } = this.options;
    if (!l.owner || !l.owner.current) return !1;
    if (
      (typeof s == "string" && Kl() && FK(s) && (s = A_[s]), BK(this.options))
    ) {
      const {
          onComplete: p,
          onUpdate: m,
          motionValue: g,
          element: w,
          ...b
        } = this.options,
        x = DK(t, b);
      (t = x.keyframes),
        t.length === 1 && (t[1] = t[0]),
        (r = x.duration),
        (i = x.times),
        (s = x.ease),
        (o = "keyframes");
    }
    const d = yH(l.owner.current, c, t, {
      ...this.options,
      duration: r,
      times: i,
      ease: s,
    });
    return (
      (d.startTime = f ?? this.calcStartTime()),
      this.pendingTimeline
        ? (Vv(d, this.pendingTimeline), (this.pendingTimeline = void 0))
        : (d.onfinish = () => {
            const { onComplete: p } = this.options;
            l.set(nf(t, this.options, n)),
              p && p(),
              this.cancel(),
              this.resolveFinishedPromise();
          }),
      { animation: d, duration: r, times: i, type: o, ease: s, keyframes: t }
    );
  }
  get duration() {
    const { resolved: t } = this;
    if (!t) return 0;
    const { duration: n } = t;
    return c2(n);
  }
  get time() {
    const { resolved: t } = this;
    if (!t) return 0;
    const { animation: n } = t;
    return c2(n.currentTime || 0);
  }
  set time(t) {
    const { resolved: n } = this;
    if (!n) return;
    const { animation: r } = n;
    r.currentTime = u2(t);
  }
  get speed() {
    const { resolved: t } = this;
    if (!t) return 1;
    const { animation: n } = t;
    return n.playbackRate;
  }
  get finished() {
    return this.resolved.animation.finished;
  }
  set speed(t) {
    const { resolved: n } = this;
    if (!n) return;
    const { animation: r } = n;
    r.playbackRate = t;
  }
  get state() {
    const { resolved: t } = this;
    if (!t) return "idle";
    const { animation: n } = t;
    return n.playState;
  }
  get startTime() {
    const { resolved: t } = this;
    if (!t) return null;
    const { animation: n } = t;
    return n.startTime;
  }
  attachTimeline(t) {
    if (!this._resolved) this.pendingTimeline = t;
    else {
      const { resolved: n } = this;
      if (!n) return bi;
      const { animation: r } = n;
      Vv(r, t);
    }
    return bi;
  }
  play() {
    if (this.isStopped) return;
    const { resolved: t } = this;
    if (!t) return;
    const { animation: n } = t;
    n.playState === "finished" && this.updateFinishedPromise(), n.play();
  }
  pause() {
    const { resolved: t } = this;
    if (!t) return;
    const { animation: n } = t;
    n.pause();
  }
  stop() {
    if ((this.resolver.cancel(), (this.isStopped = !0), this.state === "idle"))
      return;
    this.resolveFinishedPromise(), this.updateFinishedPromise();
    const { resolved: t } = this;
    if (!t) return;
    const {
      animation: n,
      keyframes: r,
      duration: i,
      type: s,
      ease: o,
      times: l,
    } = t;
    if (n.playState === "idle" || n.playState === "finished") return;
    if (this.time) {
      const {
          motionValue: f,
          onUpdate: d,
          onComplete: p,
          element: m,
          ...g
        } = this.options,
        w = new km({
          ...g,
          keyframes: r,
          duration: i,
          type: s,
          ease: o,
          times: l,
          isGenerator: !0,
        }),
        b = u2(this.time);
      f.setWithVelocity(w.sample(b - u4).value, w.sample(b).value, u4);
    }
    const { onStop: c } = this.options;
    c && c(), this.cancel();
  }
  complete() {
    const { resolved: t } = this;
    t && t.animation.finish();
  }
  cancel() {
    const { resolved: t } = this;
    t && t.animation.cancel();
  }
  static supports(t) {
    const {
      motionValue: n,
      name: r,
      repeatDelay: i,
      repeatType: s,
      damping: o,
      type: l,
    } = t;
    if (!n || !n.owner || !(n.owner.current instanceof HTMLElement)) return !1;
    const { onUpdate: c, transformTemplate: f } = n.owner.getProps();
    return (
      NK() &&
      r &&
      jK.has(r) &&
      (r !== "transform" || !f) &&
      !c &&
      !i &&
      s !== "mirror" &&
      o !== 0 &&
      l !== "inertia"
    );
  }
}
const UK = { type: "spring", stiffness: 500, damping: 25, restSpeed: 10 },
  $K = (e) => ({
    type: "spring",
    stiffness: 550,
    damping: e === 0 ? 2 * Math.sqrt(550) : 30,
    restSpeed: 10,
  }),
  VK = { type: "keyframes", duration: 0.8 },
  WK = { type: "keyframes", ease: [0.25, 0.1, 0.35, 1], duration: 0.3 },
  zK = (e, { keyframes: t }) =>
    t.length > 2
      ? VK
      : ha.has(e)
      ? e.startsWith("scale")
        ? $K(t[1])
        : UK
      : WK;
function HK({
  when: e,
  delay: t,
  delayChildren: n,
  staggerChildren: r,
  staggerDirection: i,
  repeat: s,
  repeatType: o,
  repeatDelay: l,
  from: c,
  elapsed: f,
  ...d
}) {
  return !!Object.keys(d).length;
}
const _m =
  (e, t, n, r = {}, i, s) =>
  (o) => {
    const l = nm(r, e) || {},
      c = l.delay || r.delay || 0;
    let { elapsed: f = 0 } = r;
    f = f - u2(c);
    let d = {
      keyframes: Array.isArray(n) ? n : [null, n],
      ease: "easeOut",
      velocity: t.getVelocity(),
      ...l,
      delay: -f,
      onUpdate: (m) => {
        t.set(m), l.onUpdate && l.onUpdate(m);
      },
      onComplete: () => {
        o(), l.onComplete && l.onComplete();
      },
      name: e,
      motionValue: t,
      element: s ? void 0 : i,
    };
    HK(l) || (d = { ...d, ...zK(e, d) }),
      d.duration && (d.duration = u2(d.duration)),
      d.repeatDelay && (d.repeatDelay = u2(d.repeatDelay)),
      d.from !== void 0 && (d.keyframes[0] = d.from);
    let p = !1;
    if (
      ((d.type === !1 || (d.duration === 0 && !d.repeatDelay)) &&
        ((d.duration = 0), d.delay === 0 && (p = !0)),
      (d.allowFlatten = !l.type && !l.ease),
      p && !s && t.get() !== void 0)
    ) {
      const m = nf(d.keyframes, l);
      if (m !== void 0)
        return (
          Xt.update(() => {
            d.onUpdate(m), d.onComplete();
          }),
          new pH([])
        );
    }
    return !s && pw.supports(d) ? new pw(d) : new km(d);
  };
function qK({ protectedKeys: e, needsAnimating: t }, n) {
  const r = e.hasOwnProperty(n) && t[n] !== !0;
  return (t[n] = !1), r;
}
function T_(e, t, { delay: n = 0, transitionOverride: r, type: i } = {}) {
  let { transition: s = e.getDefaultTransition(), transitionEnd: o, ...l } = t;
  r && (s = r);
  const c = [],
    f = i && e.animationState && e.animationState.getState()[i];
  for (const d in l) {
    const p = e.getValue(d, e.latestValues[d] ?? null),
      m = l[d];
    if (m === void 0 || (f && qK(f, d))) continue;
    const g = { delay: n, ...nm(s || {}, d) };
    let w = !1;
    if (window.MotionHandoffAnimation) {
      const x = Xk(e);
      if (x) {
        const E = window.MotionHandoffAnimation(x, d, Xt);
        E !== null && ((g.startTime = E), (w = !0));
      }
    }
    m6(e, d),
      p.start(
        _m(d, p, m, e.shouldReduceMotion && Zk.has(d) ? { type: !1 } : g, e, w)
      );
    const b = p.animation;
    b && c.push(b);
  }
  return (
    o &&
      Promise.all(c).then(() => {
        Xt.update(() => {
          o && xq(e, o);
        });
      }),
    c
  );
}
function k6(e, t, n = {}) {
  var c;
  const r = Xl(
    e,
    t,
    n.type === "exit"
      ? (c = e.presenceContext) == null
        ? void 0
        : c.custom
      : void 0
  );
  let { transition: i = e.getDefaultTransition() || {} } = r || {};
  n.transitionOverride && (i = n.transitionOverride);
  const s = r ? () => Promise.all(T_(e, r, n)) : () => Promise.resolve(),
    o =
      e.variantChildren && e.variantChildren.size
        ? (f = 0) => {
            const {
              delayChildren: d = 0,
              staggerChildren: p,
              staggerDirection: m,
            } = i;
            return KK(e, t, d + f, p, m, n);
          }
        : () => Promise.resolve(),
    { when: l } = i;
  if (l) {
    const [f, d] = l === "beforeChildren" ? [s, o] : [o, s];
    return f().then(() => d());
  } else return Promise.all([s(), o(n.delay)]);
}
function KK(e, t, n = 0, r = 0, i = 1, s) {
  const o = [],
    l = (e.variantChildren.size - 1) * r,
    c = i === 1 ? (f = 0) => f * r : (f = 0) => l - f * r;
  return (
    Array.from(e.variantChildren)
      .sort(GK)
      .forEach((f, d) => {
        f.notify("AnimationStart", t),
          o.push(
            k6(f, t, { ...s, delay: n + c(d) }).then(() =>
              f.notify("AnimationComplete", t)
            )
          );
      }),
    Promise.all(o)
  );
}
function GK(e, t) {
  return e.sortNodePosition(t);
}
function YK(e, t, n = {}) {
  e.notify("AnimationStart", t);
  let r;
  if (Array.isArray(t)) {
    const i = t.map((s) => k6(e, s, n));
    r = Promise.all(i);
  } else if (typeof t == "string") r = k6(e, t, n);
  else {
    const i = typeof t == "function" ? Xl(e, t, n.custom) : t;
    r = Promise.all(T_(e, i, n));
  }
  return r.then(() => {
    e.notify("AnimationComplete", t);
  });
}
function P_(e, t) {
  if (!Array.isArray(t)) return !1;
  const n = t.length;
  if (n !== e.length) return !1;
  for (let r = 0; r < n; r++) if (t[r] !== e[r]) return !1;
  return !0;
}
const QK = am.length;
function M_(e) {
  if (!e) return;
  if (!e.isControllingVariants) {
    const n = e.parent ? M_(e.parent) || {} : {};
    return e.props.initial !== void 0 && (n.initial = e.props.initial), n;
  }
  const t = {};
  for (let n = 0; n < QK; n++) {
    const r = am[n],
      i = e.props[r];
    (Yl(i) || i === !1) && (t[r] = i);
  }
  return t;
}
const ZK = [...om].reverse(),
  XK = om.length;
function JK(e) {
  return (t) =>
    Promise.all(t.map(({ animation: n, options: r }) => YK(e, n, r)));
}
function eG(e) {
  let t = JK(e),
    n = mw(),
    r = !0;
  const i = (c) => (f, d) => {
    var m;
    const p = Xl(
      e,
      d,
      c === "exit"
        ? (m = e.presenceContext) == null
          ? void 0
          : m.custom
        : void 0
    );
    if (p) {
      const { transition: g, transitionEnd: w, ...b } = p;
      f = { ...f, ...b, ...w };
    }
    return f;
  };
  function s(c) {
    t = c(e);
  }
  function o(c) {
    const { props: f } = e,
      d = M_(e.parent) || {},
      p = [],
      m = new Set();
    let g = {},
      w = 1 / 0;
    for (let x = 0; x < XK; x++) {
      const E = ZK[x],
        P = n[E],
        _ = f[E] !== void 0 ? f[E] : d[E],
        T = Yl(_),
        M = E === c ? P.isActive : null;
      M === !1 && (w = x);
      let L = _ === d[E] && _ !== f[E] && T;
      if (
        (L && r && e.manuallyAnimateOnMount && (L = !1),
        (P.protectedKeys = { ...g }),
        (!P.isActive && M === null) ||
          (!_ && !P.prevProp) ||
          ef(_) ||
          typeof _ == "boolean")
      )
        continue;
      const O = tG(P.prevProp, _);
      let U = O || (E === c && P.isActive && !L && T) || (x > w && T),
        D = !1;
      const H = Array.isArray(_) ? _ : [_];
      let $ = H.reduce(i(E), {});
      M === !1 && ($ = {});
      const { prevResolvedValues: F = {} } = P,
        B = { ...F, ...$ },
        j = (e1) => {
          (U = !0),
            m.has(e1) && ((D = !0), m.delete(e1)),
            (P.needsAnimating[e1] = !0);
          const i1 = e.getValue(e1);
          i1 && (i1.liveStyle = !1);
        };
      for (const e1 in B) {
        const i1 = $[e1],
          Z = F[e1];
        if (g.hasOwnProperty(e1)) continue;
        let b1 = !1;
        p6(i1) && p6(Z) ? (b1 = !P_(i1, Z)) : (b1 = i1 !== Z),
          b1
            ? i1 != null
              ? j(e1)
              : m.add(e1)
            : i1 !== void 0 && m.has(e1)
            ? j(e1)
            : (P.protectedKeys[e1] = !0);
      }
      (P.prevProp = _),
        (P.prevResolvedValues = $),
        P.isActive && (g = { ...g, ...$ }),
        r && e.blockInitialAnimation && (U = !1),
        U &&
          (!(L && O) || D) &&
          p.push(...H.map((e1) => ({ animation: e1, options: { type: E } })));
    }
    if (m.size) {
      const x = {};
      if (typeof f.initial != "boolean") {
        const E = Xl(e, Array.isArray(f.initial) ? f.initial[0] : f.initial);
        E && E.transition && (x.transition = E.transition);
      }
      m.forEach((E) => {
        const P = e.getBaseTarget(E),
          _ = e.getValue(E);
        _ && (_.liveStyle = !0), (x[E] = P ?? null);
      }),
        p.push({ animation: x });
    }
    let b = !!p.length;
    return (
      r &&
        (f.initial === !1 || f.initial === f.animate) &&
        !e.manuallyAnimateOnMount &&
        (b = !1),
      (r = !1),
      b ? t(p) : Promise.resolve()
    );
  }
  function l(c, f) {
    var p;
    if (n[c].isActive === f) return Promise.resolve();
    (p = e.variantChildren) == null ||
      p.forEach((m) => {
        var g;
        return (g = m.animationState) == null ? void 0 : g.setActive(c, f);
      }),
      (n[c].isActive = f);
    const d = o(c);
    for (const m in n) n[m].protectedKeys = {};
    return d;
  }
  return {
    animateChanges: o,
    setActive: l,
    setAnimateFunction: s,
    getState: () => n,
    reset: () => {
      (n = mw()), (r = !0);
    },
  };
}
function tG(e, t) {
  return typeof t == "string" ? t !== e : Array.isArray(t) ? !P_(t, e) : !1;
}
function vo(e = !1) {
  return {
    isActive: e,
    protectedKeys: {},
    needsAnimating: {},
    prevResolvedValues: {},
  };
}
function mw() {
  return {
    animate: vo(!0),
    whileInView: vo(),
    whileHover: vo(),
    whileTap: vo(),
    whileDrag: vo(),
    whileFocus: vo(),
    exit: vo(),
  };
}
class Xs {
  constructor(t) {
    (this.isMounted = !1), (this.node = t);
  }
  update() {}
}
class nG extends Xs {
  constructor(t) {
    super(t), t.animationState || (t.animationState = eG(t));
  }
  updateAnimationControlsSubscription() {
    const { animate: t } = this.node.getProps();
    ef(t) && (this.unmountControls = t.subscribe(this.node));
  }
  mount() {
    this.updateAnimationControlsSubscription();
  }
  update() {
    const { animate: t } = this.node.getProps(),
      { animate: n } = this.node.prevProps || {};
    t !== n && this.updateAnimationControlsSubscription();
  }
  unmount() {
    var t;
    this.node.animationState.reset(),
      (t = this.unmountControls) == null || t.call(this);
  }
}
let rG = 0;
class iG extends Xs {
  constructor() {
    super(...arguments), (this.id = rG++);
  }
  update() {
    if (!this.node.presenceContext) return;
    const { isPresent: t, onExitComplete: n } = this.node.presenceContext,
      { isPresent: r } = this.node.prevPresenceContext || {};
    if (!this.node.animationState || t === r) return;
    const i = this.node.animationState.setActive("exit", !t);
    n &&
      !t &&
      i.then(() => {
        n(this.id);
      });
  }
  mount() {
    const { register: t, onExitComplete: n } = this.node.presenceContext || {};
    n && n(this.id), t && (this.unmount = t(this.id));
  }
  unmount() {}
}
const sG = { animation: { Feature: nG }, exit: { Feature: iG } };
function eu(e, t, n, r = { passive: !0 }) {
  return e.addEventListener(t, n, r), () => e.removeEventListener(t, n);
}
function Au(e) {
  return { point: { x: e.pageX, y: e.pageY } };
}
const oG = (e) => (t) => sm(t) && e(t, Au(t));
function El(e, t, n, r) {
  return eu(e, t, oG(n), r);
}
function R_({ top: e, left: t, right: n, bottom: r }) {
  return { x: { min: t, max: n }, y: { min: e, max: r } };
}
function aG({ x: e, y: t }) {
  return { top: t.min, right: e.max, bottom: t.max, left: e.min };
}
function lG(e, t) {
  if (!t) return e;
  const n = t({ x: e.left, y: e.top }),
    r = t({ x: e.right, y: e.bottom });
  return { top: n.y, left: n.x, bottom: r.y, right: r.x };
}
const L_ = 1e-4,
  uG = 1 - L_,
  cG = 1 + L_,
  I_ = 0.01,
  dG = 0 - I_,
  fG = 0 + I_;
function Ar(e) {
  return e.max - e.min;
}
function hG(e, t, n) {
  return Math.abs(e - t) <= n;
}
function gw(e, t, n, r = 0.5) {
  (e.origin = r),
    (e.originPoint = wn(t.min, t.max, e.origin)),
    (e.scale = Ar(n) / Ar(t)),
    (e.translate = wn(n.min, n.max, e.origin) - e.originPoint),
    ((e.scale >= uG && e.scale <= cG) || isNaN(e.scale)) && (e.scale = 1),
    ((e.translate >= dG && e.translate <= fG) || isNaN(e.translate)) &&
      (e.translate = 0);
}
function kl(e, t, n, r) {
  gw(e.x, t.x, n.x, r ? r.originX : void 0),
    gw(e.y, t.y, n.y, r ? r.originY : void 0);
}
function yw(e, t, n) {
  (e.min = n.min + t.min), (e.max = e.min + Ar(t));
}
function pG(e, t, n) {
  yw(e.x, t.x, n.x), yw(e.y, t.y, n.y);
}
function vw(e, t, n) {
  (e.min = t.min - n.min), (e.max = e.min + Ar(t));
}
function _l(e, t, n) {
  vw(e.x, t.x, n.x), vw(e.y, t.y, n.y);
}
const ww = () => ({ translate: 0, scale: 1, origin: 0, originPoint: 0 }),
  s3 = () => ({ x: ww(), y: ww() }),
  bw = () => ({ min: 0, max: 0 }),
  An = () => ({ x: bw(), y: bw() });
function mi(e) {
  return [e("x"), e("y")];
}
function W9(e) {
  return e === void 0 || e === 1;
}
function _6({ scale: e, scaleX: t, scaleY: n }) {
  return !W9(e) || !W9(t) || !W9(n);
}
function Io(e) {
  return (
    _6(e) ||
    j_(e) ||
    e.z ||
    e.rotate ||
    e.rotateX ||
    e.rotateY ||
    e.skewX ||
    e.skewY
  );
}
function j_(e) {
  return xw(e.x) || xw(e.y);
}
function xw(e) {
  return e && e !== "0%";
}
function c4(e, t, n) {
  const r = e - n,
    i = t * r;
  return n + i;
}
function Cw(e, t, n, r, i) {
  return i !== void 0 && (e = c4(e, i, r)), c4(e, n, r) + t;
}
function A6(e, t = 0, n = 1, r, i) {
  (e.min = Cw(e.min, t, n, r, i)), (e.max = Cw(e.max, t, n, r, i));
}
function N_(e, { x: t, y: n }) {
  A6(e.x, t.translate, t.scale, t.originPoint),
    A6(e.y, n.translate, n.scale, n.originPoint);
}
const Sw = 0.999999999999,
  Ew = 1.0000000000001;
function mG(e, t, n, r = !1) {
  const i = n.length;
  if (!i) return;
  t.x = t.y = 1;
  let s, o;
  for (let l = 0; l < i; l++) {
    (s = n[l]), (o = s.projectionDelta);
    const { visualElement: c } = s.options;
    (c && c.props.style && c.props.style.display === "contents") ||
      (r &&
        s.options.layoutScroll &&
        s.scroll &&
        s !== s.root &&
        a3(e, { x: -s.scroll.offset.x, y: -s.scroll.offset.y }),
      o && ((t.x *= o.x.scale), (t.y *= o.y.scale), N_(e, o)),
      r && Io(s.latestValues) && a3(e, s.latestValues));
  }
  t.x < Ew && t.x > Sw && (t.x = 1), t.y < Ew && t.y > Sw && (t.y = 1);
}
function o3(e, t) {
  (e.min = e.min + t), (e.max = e.max + t);
}
function kw(e, t, n, r, i = 0.5) {
  const s = wn(e.min, e.max, i);
  A6(e, t, n, s, r);
}
function a3(e, t) {
  kw(e.x, t.x, t.scaleX, t.scale, t.originX),
    kw(e.y, t.y, t.scaleY, t.scale, t.originY);
}
function O_(e, t) {
  return R_(lG(e.getBoundingClientRect(), t));
}
function gG(e, t, n) {
  const r = O_(e, n),
    { scroll: i } = t;
  return i && (o3(r.x, i.offset.x), o3(r.y, i.offset.y)), r;
}
const B_ = ({ current: e }) => (e ? e.ownerDocument.defaultView : null),
  _w = (e, t) => Math.abs(e - t);
function yG(e, t) {
  const n = _w(e.x, t.x),
    r = _w(e.y, t.y);
  return Math.sqrt(n ** 2 + r ** 2);
}
class D_ {
  constructor(
    t,
    n,
    { transformPagePoint: r, contextWindow: i, dragSnapToOrigin: s = !1 } = {}
  ) {
    if (
      ((this.startEvent = null),
      (this.lastMoveEvent = null),
      (this.lastMoveEventInfo = null),
      (this.handlers = {}),
      (this.contextWindow = window),
      (this.updatePoint = () => {
        if (!(this.lastMoveEvent && this.lastMoveEventInfo)) return;
        const p = H9(this.lastMoveEventInfo, this.history),
          m = this.startEvent !== null,
          g = yG(p.offset, { x: 0, y: 0 }) >= 3;
        if (!m && !g) return;
        const { point: w } = p,
          { timestamp: b } = er;
        this.history.push({ ...w, timestamp: b });
        const { onStart: x, onMove: E } = this.handlers;
        m ||
          (x && x(this.lastMoveEvent, p),
          (this.startEvent = this.lastMoveEvent)),
          E && E(this.lastMoveEvent, p);
      }),
      (this.handlePointerMove = (p, m) => {
        (this.lastMoveEvent = p),
          (this.lastMoveEventInfo = z9(m, this.transformPagePoint)),
          Xt.update(this.updatePoint, !0);
      }),
      (this.handlePointerUp = (p, m) => {
        this.end();
        const { onEnd: g, onSessionEnd: w, resumeAnimation: b } = this.handlers;
        if (
          (this.dragSnapToOrigin && b && b(),
          !(this.lastMoveEvent && this.lastMoveEventInfo))
        )
          return;
        const x = H9(
          p.type === "pointercancel"
            ? this.lastMoveEventInfo
            : z9(m, this.transformPagePoint),
          this.history
        );
        this.startEvent && g && g(p, x), w && w(p, x);
      }),
      !sm(t))
    )
      return;
    (this.dragSnapToOrigin = s),
      (this.handlers = n),
      (this.transformPagePoint = r),
      (this.contextWindow = i || window);
    const o = Au(t),
      l = z9(o, this.transformPagePoint),
      { point: c } = l,
      { timestamp: f } = er;
    this.history = [{ ...c, timestamp: f }];
    const { onSessionStart: d } = n;
    d && d(t, H9(l, this.history)),
      (this.removeListeners = _u(
        El(this.contextWindow, "pointermove", this.handlePointerMove),
        El(this.contextWindow, "pointerup", this.handlePointerUp),
        El(this.contextWindow, "pointercancel", this.handlePointerUp)
      ));
  }
  updateHandlers(t) {
    this.handlers = t;
  }
  end() {
    this.removeListeners && this.removeListeners(), zs(this.updatePoint);
  }
}
function z9(e, t) {
  return t ? { point: t(e.point) } : e;
}
function Aw(e, t) {
  return { x: e.x - t.x, y: e.y - t.y };
}
function H9({ point: e }, t) {
  return {
    point: e,
    delta: Aw(e, F_(t)),
    offset: Aw(e, vG(t)),
    velocity: wG(t, 0.1),
  };
}
function vG(e) {
  return e[0];
}
function F_(e) {
  return e[e.length - 1];
}
function wG(e, t) {
  if (e.length < 2) return { x: 0, y: 0 };
  let n = e.length - 1,
    r = null;
  const i = F_(e);
  for (; n >= 0 && ((r = e[n]), !(i.timestamp - r.timestamp > u2(t))); ) n--;
  if (!r) return { x: 0, y: 0 };
  const s = c2(i.timestamp - r.timestamp);
  if (s === 0) return { x: 0, y: 0 };
  const o = { x: (i.x - r.x) / s, y: (i.y - r.y) / s };
  return o.x === 1 / 0 && (o.x = 0), o.y === 1 / 0 && (o.y = 0), o;
}
function bG(e, { min: t, max: n }, r) {
  return (
    t !== void 0 && e < t
      ? (e = r ? wn(t, e, r.min) : Math.max(e, t))
      : n !== void 0 && e > n && (e = r ? wn(n, e, r.max) : Math.min(e, n)),
    e
  );
}
function Tw(e, t, n) {
  return {
    min: t !== void 0 ? e.min + t : void 0,
    max: n !== void 0 ? e.max + n - (e.max - e.min) : void 0,
  };
}
function xG(e, { top: t, left: n, bottom: r, right: i }) {
  return { x: Tw(e.x, n, i), y: Tw(e.y, t, r) };
}
function Pw(e, t) {
  let n = t.min - e.min,
    r = t.max - e.max;
  return t.max - t.min < e.max - e.min && ([n, r] = [r, n]), { min: n, max: r };
}
function CG(e, t) {
  return { x: Pw(e.x, t.x), y: Pw(e.y, t.y) };
}
function SG(e, t) {
  let n = 0.5;
  const r = Ar(e),
    i = Ar(t);
  return (
    i > r
      ? (n = ql(t.min, t.max - r, e.min))
      : r > i && (n = ql(e.min, e.max - i, t.min)),
    es(0, 1, n)
  );
}
function EG(e, t) {
  const n = {};
  return (
    t.min !== void 0 && (n.min = t.min - e.min),
    t.max !== void 0 && (n.max = t.max - e.min),
    n
  );
}
const T6 = 0.35;
function kG(e = T6) {
  return (
    e === !1 ? (e = 0) : e === !0 && (e = T6),
    { x: Mw(e, "left", "right"), y: Mw(e, "top", "bottom") }
  );
}
function Mw(e, t, n) {
  return { min: Rw(e, t), max: Rw(e, n) };
}
function Rw(e, t) {
  return typeof e == "number" ? e : e[t] || 0;
}
const _G = new WeakMap();
class AG {
  constructor(t) {
    (this.openDragLock = null),
      (this.isDragging = !1),
      (this.currentDirection = null),
      (this.originPoint = { x: 0, y: 0 }),
      (this.constraints = !1),
      (this.hasMutatedConstraints = !1),
      (this.elastic = An()),
      (this.visualElement = t);
  }
  start(t, { snapToCursor: n = !1 } = {}) {
    const { presenceContext: r } = this.visualElement;
    if (r && r.isPresent === !1) return;
    const i = (d) => {
        const { dragSnapToOrigin: p } = this.getProps();
        p ? this.pauseAnimation() : this.stopAnimation(),
          n && this.snapToCursor(Au(d).point);
      },
      s = (d, p) => {
        const { drag: m, dragPropagation: g, onDragStart: w } = this.getProps();
        if (
          m &&
          !g &&
          (this.openDragLock && this.openDragLock(),
          (this.openDragLock = CH(m)),
          !this.openDragLock)
        )
          return;
        (this.isDragging = !0),
          (this.currentDirection = null),
          this.resolveConstraints(),
          this.visualElement.projection &&
            ((this.visualElement.projection.isAnimationBlocked = !0),
            (this.visualElement.projection.target = void 0)),
          mi((x) => {
            let E = this.getAxisMotionValue(x).get() || 0;
            if (f2.test(E)) {
              const { projection: P } = this.visualElement;
              if (P && P.layout) {
                const _ = P.layout.layoutBox[x];
                _ && (E = Ar(_) * (parseFloat(E) / 100));
              }
            }
            this.originPoint[x] = E;
          }),
          w && Xt.postRender(() => w(d, p)),
          m6(this.visualElement, "transform");
        const { animationState: b } = this.visualElement;
        b && b.setActive("whileDrag", !0);
      },
      o = (d, p) => {
        const {
          dragPropagation: m,
          dragDirectionLock: g,
          onDirectionLock: w,
          onDrag: b,
        } = this.getProps();
        if (!m && !this.openDragLock) return;
        const { offset: x } = p;
        if (g && this.currentDirection === null) {
          (this.currentDirection = TG(x)),
            this.currentDirection !== null && w && w(this.currentDirection);
          return;
        }
        this.updateAxis("x", p.point, x),
          this.updateAxis("y", p.point, x),
          this.visualElement.render(),
          b && b(d, p);
      },
      l = (d, p) => this.stop(d, p),
      c = () =>
        mi((d) => {
          var p;
          return (
            this.getAnimationState(d) === "paused" &&
            ((p = this.getAxisMotionValue(d).animation) == null
              ? void 0
              : p.play())
          );
        }),
      { dragSnapToOrigin: f } = this.getProps();
    this.panSession = new D_(
      t,
      {
        onSessionStart: i,
        onStart: s,
        onMove: o,
        onSessionEnd: l,
        resumeAnimation: c,
      },
      {
        transformPagePoint: this.visualElement.getTransformPagePoint(),
        dragSnapToOrigin: f,
        contextWindow: B_(this.visualElement),
      }
    );
  }
  stop(t, n) {
    const r = this.isDragging;
    if ((this.cancel(), !r)) return;
    const { velocity: i } = n;
    this.startAnimation(i);
    const { onDragEnd: s } = this.getProps();
    s && Xt.postRender(() => s(t, n));
  }
  cancel() {
    this.isDragging = !1;
    const { projection: t, animationState: n } = this.visualElement;
    t && (t.isAnimationBlocked = !1),
      this.panSession && this.panSession.end(),
      (this.panSession = void 0);
    const { dragPropagation: r } = this.getProps();
    !r &&
      this.openDragLock &&
      (this.openDragLock(), (this.openDragLock = null)),
      n && n.setActive("whileDrag", !1);
  }
  updateAxis(t, n, r) {
    const { drag: i } = this.getProps();
    if (!r || !Jc(t, i, this.currentDirection)) return;
    const s = this.getAxisMotionValue(t);
    let o = this.originPoint[t] + r[t];
    this.constraints &&
      this.constraints[t] &&
      (o = bG(o, this.constraints[t], this.elastic[t])),
      s.set(o);
  }
  resolveConstraints() {
    var s;
    const { dragConstraints: t, dragElastic: n } = this.getProps(),
      r =
        this.visualElement.projection && !this.visualElement.projection.layout
          ? this.visualElement.projection.measure(!1)
          : (s = this.visualElement.projection) == null
          ? void 0
          : s.layout,
      i = this.constraints;
    t && r3(t)
      ? this.constraints || (this.constraints = this.resolveRefConstraints())
      : t && r
      ? (this.constraints = xG(r.layoutBox, t))
      : (this.constraints = !1),
      (this.elastic = kG(n)),
      i !== this.constraints &&
        r &&
        this.constraints &&
        !this.hasMutatedConstraints &&
        mi((o) => {
          this.constraints !== !1 &&
            this.getAxisMotionValue(o) &&
            (this.constraints[o] = EG(r.layoutBox[o], this.constraints[o]));
        });
  }
  resolveRefConstraints() {
    const { dragConstraints: t, onMeasureDragConstraints: n } = this.getProps();
    if (!t || !r3(t)) return !1;
    const r = t.current,
      { projection: i } = this.visualElement;
    if (!i || !i.layout) return !1;
    const s = gG(r, i.root, this.visualElement.getTransformPagePoint());
    let o = CG(i.layout.layoutBox, s);
    if (n) {
      const l = n(aG(o));
      (this.hasMutatedConstraints = !!l), l && (o = R_(l));
    }
    return o;
  }
  startAnimation(t) {
    const {
        drag: n,
        dragMomentum: r,
        dragElastic: i,
        dragTransition: s,
        dragSnapToOrigin: o,
        onDragTransitionEnd: l,
      } = this.getProps(),
      c = this.constraints || {},
      f = mi((d) => {
        if (!Jc(d, n, this.currentDirection)) return;
        let p = (c && c[d]) || {};
        o && (p = { min: 0, max: 0 });
        const m = i ? 200 : 1e6,
          g = i ? 40 : 1e7,
          w = {
            type: "inertia",
            velocity: r ? t[d] : 0,
            bounceStiffness: m,
            bounceDamping: g,
            timeConstant: 750,
            restDelta: 1,
            restSpeed: 10,
            ...s,
            ...p,
          };
        return this.startAxisValueAnimation(d, w);
      });
    return Promise.all(f).then(l);
  }
  startAxisValueAnimation(t, n) {
    const r = this.getAxisMotionValue(t);
    return (
      m6(this.visualElement, t), r.start(_m(t, r, 0, n, this.visualElement, !1))
    );
  }
  stopAnimation() {
    mi((t) => this.getAxisMotionValue(t).stop());
  }
  pauseAnimation() {
    mi((t) => {
      var n;
      return (n = this.getAxisMotionValue(t).animation) == null
        ? void 0
        : n.pause();
    });
  }
  getAnimationState(t) {
    var n;
    return (n = this.getAxisMotionValue(t).animation) == null
      ? void 0
      : n.state;
  }
  getAxisMotionValue(t) {
    const n = `_drag${t.toUpperCase()}`,
      r = this.visualElement.getProps(),
      i = r[n];
    return (
      i ||
      this.visualElement.getValue(t, (r.initial ? r.initial[t] : void 0) || 0)
    );
  }
  snapToCursor(t) {
    mi((n) => {
      const { drag: r } = this.getProps();
      if (!Jc(n, r, this.currentDirection)) return;
      const { projection: i } = this.visualElement,
        s = this.getAxisMotionValue(n);
      if (i && i.layout) {
        const { min: o, max: l } = i.layout.layoutBox[n];
        s.set(t[n] - wn(o, l, 0.5));
      }
    });
  }
  scalePositionWithinConstraints() {
    if (!this.visualElement.current) return;
    const { drag: t, dragConstraints: n } = this.getProps(),
      { projection: r } = this.visualElement;
    if (!r3(n) || !r || !this.constraints) return;
    this.stopAnimation();
    const i = { x: 0, y: 0 };
    mi((o) => {
      const l = this.getAxisMotionValue(o);
      if (l && this.constraints !== !1) {
        const c = l.get();
        i[o] = SG({ min: c, max: c }, this.constraints[o]);
      }
    });
    const { transformTemplate: s } = this.visualElement.getProps();
    (this.visualElement.current.style.transform = s ? s({}, "") : "none"),
      r.root && r.root.updateScroll(),
      r.updateLayout(),
      this.resolveConstraints(),
      mi((o) => {
        if (!Jc(o, t, null)) return;
        const l = this.getAxisMotionValue(o),
          { min: c, max: f } = this.constraints[o];
        l.set(wn(c, f, i[o]));
      });
  }
  addListeners() {
    if (!this.visualElement.current) return;
    _G.set(this.visualElement, this);
    const t = this.visualElement.current,
      n = El(t, "pointerdown", (c) => {
        const { drag: f, dragListener: d = !0 } = this.getProps();
        f && d && this.start(c);
      }),
      r = () => {
        const { dragConstraints: c } = this.getProps();
        r3(c) && c.current && (this.constraints = this.resolveRefConstraints());
      },
      { projection: i } = this.visualElement,
      s = i.addEventListener("measure", r);
    i && !i.layout && (i.root && i.root.updateScroll(), i.updateLayout()),
      Xt.read(r);
    const o = eu(window, "resize", () => this.scalePositionWithinConstraints()),
      l = i.addEventListener(
        "didUpdate",
        ({ delta: c, hasLayoutChanged: f }) => {
          this.isDragging &&
            f &&
            (mi((d) => {
              const p = this.getAxisMotionValue(d);
              p &&
                ((this.originPoint[d] += c[d].translate),
                p.set(p.get() + c[d].translate));
            }),
            this.visualElement.render());
        }
      );
    return () => {
      o(), n(), s(), l && l();
    };
  }
  getProps() {
    const t = this.visualElement.getProps(),
      {
        drag: n = !1,
        dragDirectionLock: r = !1,
        dragPropagation: i = !1,
        dragConstraints: s = !1,
        dragElastic: o = T6,
        dragMomentum: l = !0,
      } = t;
    return {
      ...t,
      drag: n,
      dragDirectionLock: r,
      dragPropagation: i,
      dragConstraints: s,
      dragElastic: o,
      dragMomentum: l,
    };
  }
}
function Jc(e, t, n) {
  return (t === !0 || t === e) && (n === null || n === e);
}
function TG(e, t = 10) {
  let n = null;
  return Math.abs(e.y) > t ? (n = "y") : Math.abs(e.x) > t && (n = "x"), n;
}
class PG extends Xs {
  constructor(t) {
    super(t),
      (this.removeGroupControls = bi),
      (this.removeListeners = bi),
      (this.controls = new AG(t));
  }
  mount() {
    const { dragControls: t } = this.node.getProps();
    t && (this.removeGroupControls = t.subscribe(this.controls)),
      (this.removeListeners = this.controls.addListeners() || bi);
  }
  unmount() {
    this.removeGroupControls(), this.removeListeners();
  }
}
const Lw = (e) => (t, n) => {
  e && Xt.postRender(() => e(t, n));
};
class MG extends Xs {
  constructor() {
    super(...arguments), (this.removePointerDownListener = bi);
  }
  onPointerDown(t) {
    this.session = new D_(t, this.createPanHandlers(), {
      transformPagePoint: this.node.getTransformPagePoint(),
      contextWindow: B_(this.node),
    });
  }
  createPanHandlers() {
    const {
      onPanSessionStart: t,
      onPanStart: n,
      onPan: r,
      onPanEnd: i,
    } = this.node.getProps();
    return {
      onSessionStart: Lw(t),
      onStart: Lw(n),
      onMove: r,
      onEnd: (s, o) => {
        delete this.session, i && Xt.postRender(() => i(s, o));
      },
    };
  }
  mount() {
    this.removePointerDownListener = El(this.node.current, "pointerdown", (t) =>
      this.onPointerDown(t)
    );
  }
  update() {
    this.session && this.session.updateHandlers(this.createPanHandlers());
  }
  unmount() {
    this.removePointerDownListener(), this.session && this.session.end();
  }
}
const xd = { hasAnimatedSinceResize: !0, hasEverUpdated: !1 };
function Iw(e, t) {
  return t.max === t.min ? 0 : (e / (t.max - t.min)) * 100;
}
const C0 = {
    correct: (e, t) => {
      if (!t.target) return e;
      if (typeof e == "string")
        if (it.test(e)) e = parseFloat(e);
        else return e;
      const n = Iw(e, t.target.x),
        r = Iw(e, t.target.y);
      return `${n}% ${r}%`;
    },
  },
  RG = {
    correct: (e, { treeScale: t, projectionDelta: n }) => {
      const r = e,
        i = Hs.parse(e);
      if (i.length > 5) return r;
      const s = Hs.createTransformer(e),
        o = typeof i[0] != "number" ? 1 : 0,
        l = n.x.scale * t.x,
        c = n.y.scale * t.y;
      (i[0 + o] /= l), (i[1 + o] /= c);
      const f = wn(l, c, 0.5);
      return (
        typeof i[2 + o] == "number" && (i[2 + o] /= f),
        typeof i[3 + o] == "number" && (i[3 + o] /= f),
        s(i)
      );
    },
  };
class LG extends N.Component {
  componentDidMount() {
    const {
        visualElement: t,
        layoutGroup: n,
        switchLayoutGroup: r,
        layoutId: i,
      } = this.props,
      { projection: s } = t;
    YH(IG),
      s &&
        (n.group && n.group.add(s),
        r && r.register && i && r.register(s),
        s.root.didUpdate(),
        s.addEventListener("animationComplete", () => {
          this.safeToRemove();
        }),
        s.setOptions({
          ...s.options,
          onExitComplete: () => this.safeToRemove(),
        })),
      (xd.hasEverUpdated = !0);
  }
  getSnapshotBeforeUpdate(t) {
    const {
        layoutDependency: n,
        visualElement: r,
        drag: i,
        isPresent: s,
      } = this.props,
      o = r.projection;
    return (
      o &&
        ((o.isPresent = s),
        i || t.layoutDependency !== n || n === void 0 || t.isPresent !== s
          ? o.willUpdate()
          : this.safeToRemove(),
        t.isPresent !== s &&
          (s
            ? o.promote()
            : o.relegate() ||
              Xt.postRender(() => {
                const l = o.getStack();
                (!l || !l.members.length) && this.safeToRemove();
              }))),
      null
    );
  }
  componentDidUpdate() {
    const { projection: t } = this.props.visualElement;
    t &&
      (t.root.didUpdate(),
      im.postRender(() => {
        !t.currentAnimation && t.isLead() && this.safeToRemove();
      }));
  }
  componentWillUnmount() {
    const {
        visualElement: t,
        layoutGroup: n,
        switchLayoutGroup: r,
      } = this.props,
      { projection: i } = t;
    i &&
      (i.scheduleCheckAfterUnmount(),
      n && n.group && n.group.remove(i),
      r && r.deregister && r.deregister(i));
  }
  safeToRemove() {
    const { safeToRemove: t } = this.props;
    t && t();
  }
  render() {
    return null;
  }
}
function U_(e) {
  const [t, n] = Ek(),
    r = N.useContext(qp);
  return v.jsx(LG, {
    ...e,
    layoutGroup: r,
    switchLayoutGroup: N.useContext(Dk),
    isPresent: t,
    safeToRemove: n,
  });
}
const IG = {
  borderRadius: {
    ...C0,
    applyTo: [
      "borderTopLeftRadius",
      "borderTopRightRadius",
      "borderBottomLeftRadius",
      "borderBottomRightRadius",
    ],
  },
  borderTopLeftRadius: C0,
  borderTopRightRadius: C0,
  borderBottomLeftRadius: C0,
  borderBottomRightRadius: C0,
  boxShadow: RG,
};
function jG(e, t, n) {
  const r = yr(e) ? e : Gl(e);
  return r.start(_m("", r, t, n)), r.animation;
}
function NG(e) {
  return e instanceof SVGElement && e.tagName !== "svg";
}
const OG = (e, t) => e.depth - t.depth;
class BG {
  constructor() {
    (this.children = []), (this.isDirty = !1);
  }
  add(t) {
    Qp(this.children, t), (this.isDirty = !0);
  }
  remove(t) {
    Zp(this.children, t), (this.isDirty = !0);
  }
  forEach(t) {
    this.isDirty && this.children.sort(OG),
      (this.isDirty = !1),
      this.children.forEach(t);
  }
}
function DG(e, t) {
  const n = d2.now(),
    r = ({ timestamp: i }) => {
      const s = i - n;
      s >= t && (zs(r), e(s - t));
    };
  return Xt.read(r, !0), () => zs(r);
}
const $_ = ["TopLeft", "TopRight", "BottomLeft", "BottomRight"],
  FG = $_.length,
  jw = (e) => (typeof e == "string" ? parseFloat(e) : e),
  Nw = (e) => typeof e == "number" || it.test(e);
function UG(e, t, n, r, i, s) {
  i
    ? ((e.opacity = wn(0, n.opacity ?? 1, $G(r))),
      (e.opacityExit = wn(t.opacity ?? 1, 0, VG(r))))
    : s && (e.opacity = wn(t.opacity ?? 1, n.opacity ?? 1, r));
  for (let o = 0; o < FG; o++) {
    const l = `border${$_[o]}Radius`;
    let c = Ow(t, l),
      f = Ow(n, l);
    if (c === void 0 && f === void 0) continue;
    c || (c = 0),
      f || (f = 0),
      c === 0 || f === 0 || Nw(c) === Nw(f)
        ? ((e[l] = Math.max(wn(jw(c), jw(f), r), 0)),
          (f2.test(f) || f2.test(c)) && (e[l] += "%"))
        : (e[l] = f);
  }
  (t.rotate || n.rotate) && (e.rotate = wn(t.rotate || 0, n.rotate || 0, r));
}
function Ow(e, t) {
  return e[t] !== void 0 ? e[t] : e.borderRadius;
}
const $G = V_(0, 0.5, s_),
  VG = V_(0.5, 0.95, bi);
function V_(e, t, n) {
  return (r) => (r < e ? 0 : r > t ? 1 : n(ql(e, t, r)));
}
function Bw(e, t) {
  (e.min = t.min), (e.max = t.max);
}
function hi(e, t) {
  Bw(e.x, t.x), Bw(e.y, t.y);
}
function Dw(e, t) {
  (e.translate = t.translate),
    (e.scale = t.scale),
    (e.originPoint = t.originPoint),
    (e.origin = t.origin);
}
function Fw(e, t, n, r, i) {
  return (
    (e -= t), (e = c4(e, 1 / n, r)), i !== void 0 && (e = c4(e, 1 / i, r)), e
  );
}
function WG(e, t = 0, n = 1, r = 0.5, i, s = e, o = e) {
  if (
    (f2.test(t) &&
      ((t = parseFloat(t)), (t = wn(o.min, o.max, t / 100) - o.min)),
    typeof t != "number")
  )
    return;
  let l = wn(s.min, s.max, r);
  e === s && (l -= t),
    (e.min = Fw(e.min, t, n, l, i)),
    (e.max = Fw(e.max, t, n, l, i));
}
function Uw(e, t, [n, r, i], s, o) {
  WG(e, t[n], t[r], t[i], t.scale, s, o);
}
const zG = ["x", "scaleX", "originX"],
  HG = ["y", "scaleY", "originY"];
function $w(e, t, n, r) {
  Uw(e.x, t, zG, n ? n.x : void 0, r ? r.x : void 0),
    Uw(e.y, t, HG, n ? n.y : void 0, r ? r.y : void 0);
}
function Vw(e) {
  return e.translate === 0 && e.scale === 1;
}
function W_(e) {
  return Vw(e.x) && Vw(e.y);
}
function Ww(e, t) {
  return e.min === t.min && e.max === t.max;
}
function qG(e, t) {
  return Ww(e.x, t.x) && Ww(e.y, t.y);
}
function zw(e, t) {
  return (
    Math.round(e.min) === Math.round(t.min) &&
    Math.round(e.max) === Math.round(t.max)
  );
}
function z_(e, t) {
  return zw(e.x, t.x) && zw(e.y, t.y);
}
function Hw(e) {
  return Ar(e.x) / Ar(e.y);
}
function qw(e, t) {
  return (
    e.translate === t.translate &&
    e.scale === t.scale &&
    e.originPoint === t.originPoint
  );
}
class KG {
  constructor() {
    this.members = [];
  }
  add(t) {
    Qp(this.members, t), t.scheduleRender();
  }
  remove(t) {
    if (
      (Zp(this.members, t),
      t === this.prevLead && (this.prevLead = void 0),
      t === this.lead)
    ) {
      const n = this.members[this.members.length - 1];
      n && this.promote(n);
    }
  }
  relegate(t) {
    const n = this.members.findIndex((i) => t === i);
    if (n === 0) return !1;
    let r;
    for (let i = n; i >= 0; i--) {
      const s = this.members[i];
      if (s.isPresent !== !1) {
        r = s;
        break;
      }
    }
    return r ? (this.promote(r), !0) : !1;
  }
  promote(t, n) {
    const r = this.lead;
    if (t !== r && ((this.prevLead = r), (this.lead = t), t.show(), r)) {
      r.instance && r.scheduleRender(),
        t.scheduleRender(),
        (t.resumeFrom = r),
        n && (t.resumeFrom.preserveOpacity = !0),
        r.snapshot &&
          ((t.snapshot = r.snapshot),
          (t.snapshot.latestValues = r.animationValues || r.latestValues)),
        t.root && t.root.isUpdating && (t.isLayoutDirty = !0);
      const { crossfade: i } = t.options;
      i === !1 && r.hide();
    }
  }
  exitAnimationComplete() {
    this.members.forEach((t) => {
      const { options: n, resumingFrom: r } = t;
      n.onExitComplete && n.onExitComplete(),
        r && r.options.onExitComplete && r.options.onExitComplete();
    });
  }
  scheduleRender() {
    this.members.forEach((t) => {
      t.instance && t.scheduleRender(!1);
    });
  }
  removeLeadSnapshot() {
    this.lead && this.lead.snapshot && (this.lead.snapshot = void 0);
  }
}
function GG(e, t, n) {
  let r = "";
  const i = e.x.translate / t.x,
    s = e.y.translate / t.y,
    o = (n == null ? void 0 : n.z) || 0;
  if (
    ((i || s || o) && (r = `translate3d(${i}px, ${s}px, ${o}px) `),
    (t.x !== 1 || t.y !== 1) && (r += `scale(${1 / t.x}, ${1 / t.y}) `),
    n)
  ) {
    const {
      transformPerspective: f,
      rotate: d,
      rotateX: p,
      rotateY: m,
      skewX: g,
      skewY: w,
    } = n;
    f && (r = `perspective(${f}px) ${r}`),
      d && (r += `rotate(${d}deg) `),
      p && (r += `rotateX(${p}deg) `),
      m && (r += `rotateY(${m}deg) `),
      g && (r += `skewX(${g}deg) `),
      w && (r += `skewY(${w}deg) `);
  }
  const l = e.x.scale * t.x,
    c = e.y.scale * t.y;
  return (l !== 1 || c !== 1) && (r += `scale(${l}, ${c})`), r || "none";
}
const q9 = ["", "X", "Y", "Z"],
  YG = { visibility: "hidden" },
  Kw = 1e3;
let QG = 0;
function K9(e, t, n, r) {
  const { latestValues: i } = t;
  i[e] && ((n[e] = i[e]), t.setStaticValue(e, 0), r && (r[e] = 0));
}
function H_(e) {
  if (((e.hasCheckedOptimisedAppear = !0), e.root === e)) return;
  const { visualElement: t } = e.options;
  if (!t) return;
  const n = Xk(t);
  if (window.MotionHasOptimisedAnimation(n, "transform")) {
    const { layout: i, layoutId: s } = e.options;
    window.MotionCancelOptimisedAnimation(n, "transform", Xt, !(i || s));
  }
  const { parent: r } = e;
  r && !r.hasCheckedOptimisedAppear && H_(r);
}
function q_({
  attachResizeListener: e,
  defaultParent: t,
  measureScroll: n,
  checkIsScrollRoot: r,
  resetTransform: i,
}) {
  return class {
    constructor(o = {}, l = t == null ? void 0 : t()) {
      (this.id = QG++),
        (this.animationId = 0),
        (this.children = new Set()),
        (this.options = {}),
        (this.isTreeAnimating = !1),
        (this.isAnimationBlocked = !1),
        (this.isLayoutDirty = !1),
        (this.isProjectionDirty = !1),
        (this.isSharedProjectionDirty = !1),
        (this.isTransformDirty = !1),
        (this.updateManuallyBlocked = !1),
        (this.updateBlockedByResize = !1),
        (this.isUpdating = !1),
        (this.isSVG = !1),
        (this.needsReset = !1),
        (this.shouldResetTransform = !1),
        (this.hasCheckedOptimisedAppear = !1),
        (this.treeScale = { x: 1, y: 1 }),
        (this.eventHandlers = new Map()),
        (this.hasTreeAnimated = !1),
        (this.updateScheduled = !1),
        (this.scheduleUpdate = () => this.update()),
        (this.projectionUpdateScheduled = !1),
        (this.checkUpdateFailed = () => {
          this.isUpdating && ((this.isUpdating = !1), this.clearAllSnapshots());
        }),
        (this.updateProjection = () => {
          (this.projectionUpdateScheduled = !1),
            this.nodes.forEach(JG),
            this.nodes.forEach(iY),
            this.nodes.forEach(sY),
            this.nodes.forEach(eY);
        }),
        (this.resolvedRelativeTargetAt = 0),
        (this.hasProjected = !1),
        (this.isVisible = !0),
        (this.animationProgress = 0),
        (this.sharedNodes = new Map()),
        (this.latestValues = o),
        (this.root = l ? l.root || l : this),
        (this.path = l ? [...l.path, l] : []),
        (this.parent = l),
        (this.depth = l ? l.depth + 1 : 0);
      for (let c = 0; c < this.path.length; c++)
        this.path[c].shouldResetTransform = !0;
      this.root === this && (this.nodes = new BG());
    }
    addEventListener(o, l) {
      return (
        this.eventHandlers.has(o) || this.eventHandlers.set(o, new Jp()),
        this.eventHandlers.get(o).add(l)
      );
    }
    notifyListeners(o, ...l) {
      const c = this.eventHandlers.get(o);
      c && c.notify(...l);
    }
    hasListeners(o) {
      return this.eventHandlers.has(o);
    }
    mount(o, l = this.root.hasTreeAnimated) {
      if (this.instance) return;
      (this.isSVG = NG(o)), (this.instance = o);
      const { layoutId: c, layout: f, visualElement: d } = this.options;
      if (
        (d && !d.current && d.mount(o),
        this.root.nodes.add(this),
        this.parent && this.parent.children.add(this),
        l && (f || c) && (this.isLayoutDirty = !0),
        e)
      ) {
        let p;
        const m = () => (this.root.updateBlockedByResize = !1);
        e(o, () => {
          (this.root.updateBlockedByResize = !0),
            p && p(),
            (p = DG(m, 250)),
            xd.hasAnimatedSinceResize &&
              ((xd.hasAnimatedSinceResize = !1), this.nodes.forEach(Yw));
        });
      }
      c && this.root.registerSharedNode(c, this),
        this.options.animate !== !1 &&
          d &&
          (c || f) &&
          this.addEventListener(
            "didUpdate",
            ({
              delta: p,
              hasLayoutChanged: m,
              hasRelativeLayoutChanged: g,
              layout: w,
            }) => {
              if (this.isTreeAnimationBlocked()) {
                (this.target = void 0), (this.relativeTarget = void 0);
                return;
              }
              const b =
                  this.options.transition || d.getDefaultTransition() || cY,
                { onLayoutAnimationStart: x, onLayoutAnimationComplete: E } =
                  d.getProps(),
                P = !this.targetLayout || !z_(this.targetLayout, w),
                _ = !m && g;
              if (
                this.options.layoutRoot ||
                this.resumeFrom ||
                _ ||
                (m && (P || !this.currentAnimation))
              ) {
                this.resumeFrom &&
                  ((this.resumingFrom = this.resumeFrom),
                  (this.resumingFrom.resumingFrom = void 0)),
                  this.setAnimationOrigin(p, _);
                const T = { ...nm(b, "layout"), onPlay: x, onComplete: E };
                (d.shouldReduceMotion || this.options.layoutRoot) &&
                  ((T.delay = 0), (T.type = !1)),
                  this.startAnimation(T);
              } else
                m || Yw(this),
                  this.isLead() &&
                    this.options.onExitComplete &&
                    this.options.onExitComplete();
              this.targetLayout = w;
            }
          );
    }
    unmount() {
      this.options.layoutId && this.willUpdate(), this.root.nodes.remove(this);
      const o = this.getStack();
      o && o.remove(this),
        this.parent && this.parent.children.delete(this),
        (this.instance = void 0),
        zs(this.updateProjection);
    }
    blockUpdate() {
      this.updateManuallyBlocked = !0;
    }
    unblockUpdate() {
      this.updateManuallyBlocked = !1;
    }
    isUpdateBlocked() {
      return this.updateManuallyBlocked || this.updateBlockedByResize;
    }
    isTreeAnimationBlocked() {
      return (
        this.isAnimationBlocked ||
        (this.parent && this.parent.isTreeAnimationBlocked()) ||
        !1
      );
    }
    startUpdate() {
      this.isUpdateBlocked() ||
        ((this.isUpdating = !0),
        this.nodes && this.nodes.forEach(oY),
        this.animationId++);
    }
    getTransformTemplate() {
      const { visualElement: o } = this.options;
      return o && o.getProps().transformTemplate;
    }
    willUpdate(o = !0) {
      if (((this.root.hasTreeAnimated = !0), this.root.isUpdateBlocked())) {
        this.options.onExitComplete && this.options.onExitComplete();
        return;
      }
      if (
        (window.MotionCancelOptimisedAnimation &&
          !this.hasCheckedOptimisedAppear &&
          H_(this),
        !this.root.isUpdating && this.root.startUpdate(),
        this.isLayoutDirty)
      )
        return;
      this.isLayoutDirty = !0;
      for (let d = 0; d < this.path.length; d++) {
        const p = this.path[d];
        (p.shouldResetTransform = !0),
          p.updateScroll("snapshot"),
          p.options.layoutRoot && p.willUpdate(!1);
      }
      const { layoutId: l, layout: c } = this.options;
      if (l === void 0 && !c) return;
      const f = this.getTransformTemplate();
      (this.prevTransformTemplateValue = f ? f(this.latestValues, "") : void 0),
        this.updateSnapshot(),
        o && this.notifyListeners("willUpdate");
    }
    update() {
      if (((this.updateScheduled = !1), this.isUpdateBlocked())) {
        this.unblockUpdate(), this.clearAllSnapshots(), this.nodes.forEach(Gw);
        return;
      }
      this.isUpdating || this.nodes.forEach(nY),
        (this.isUpdating = !1),
        this.nodes.forEach(rY),
        this.nodes.forEach(ZG),
        this.nodes.forEach(XG),
        this.clearAllSnapshots();
      const l = d2.now();
      (er.delta = es(0, 1e3 / 60, l - er.timestamp)),
        (er.timestamp = l),
        (er.isProcessing = !0),
        D9.update.process(er),
        D9.preRender.process(er),
        D9.render.process(er),
        (er.isProcessing = !1);
    }
    didUpdate() {
      this.updateScheduled ||
        ((this.updateScheduled = !0), im.read(this.scheduleUpdate));
    }
    clearAllSnapshots() {
      this.nodes.forEach(tY), this.sharedNodes.forEach(aY);
    }
    scheduleUpdateProjection() {
      this.projectionUpdateScheduled ||
        ((this.projectionUpdateScheduled = !0),
        Xt.preRender(this.updateProjection, !1, !0));
    }
    scheduleCheckAfterUnmount() {
      Xt.postRender(() => {
        this.isLayoutDirty
          ? this.root.didUpdate()
          : this.root.checkUpdateFailed();
      });
    }
    updateSnapshot() {
      this.snapshot ||
        !this.instance ||
        ((this.snapshot = this.measure()),
        this.snapshot &&
          !Ar(this.snapshot.measuredBox.x) &&
          !Ar(this.snapshot.measuredBox.y) &&
          (this.snapshot = void 0));
    }
    updateLayout() {
      if (
        !this.instance ||
        (this.updateScroll(),
        !(this.options.alwaysMeasureLayout && this.isLead()) &&
          !this.isLayoutDirty)
      )
        return;
      if (this.resumeFrom && !this.resumeFrom.instance)
        for (let c = 0; c < this.path.length; c++) this.path[c].updateScroll();
      const o = this.layout;
      (this.layout = this.measure(!1)),
        (this.layoutCorrected = An()),
        (this.isLayoutDirty = !1),
        (this.projectionDelta = void 0),
        this.notifyListeners("measure", this.layout.layoutBox);
      const { visualElement: l } = this.options;
      l &&
        l.notify(
          "LayoutMeasure",
          this.layout.layoutBox,
          o ? o.layoutBox : void 0
        );
    }
    updateScroll(o = "measure") {
      let l = !!(this.options.layoutScroll && this.instance);
      if (
        (this.scroll &&
          this.scroll.animationId === this.root.animationId &&
          this.scroll.phase === o &&
          (l = !1),
        l)
      ) {
        const c = r(this.instance);
        this.scroll = {
          animationId: this.root.animationId,
          phase: o,
          isRoot: c,
          offset: n(this.instance),
          wasRoot: this.scroll ? this.scroll.isRoot : c,
        };
      }
    }
    resetTransform() {
      if (!i) return;
      const o =
          this.isLayoutDirty ||
          this.shouldResetTransform ||
          this.options.alwaysMeasureLayout,
        l = this.projectionDelta && !W_(this.projectionDelta),
        c = this.getTransformTemplate(),
        f = c ? c(this.latestValues, "") : void 0,
        d = f !== this.prevTransformTemplateValue;
      o &&
        (l || Io(this.latestValues) || d) &&
        (i(this.instance, f),
        (this.shouldResetTransform = !1),
        this.scheduleRender());
    }
    measure(o = !0) {
      const l = this.measurePageBox();
      let c = this.removeElementScroll(l);
      return (
        o && (c = this.removeTransform(c)),
        dY(c),
        {
          animationId: this.root.animationId,
          measuredBox: l,
          layoutBox: c,
          latestValues: {},
          source: this.id,
        }
      );
    }
    measurePageBox() {
      var f;
      const { visualElement: o } = this.options;
      if (!o) return An();
      const l = o.measureViewportBox();
      if (
        !(
          ((f = this.scroll) == null ? void 0 : f.wasRoot) || this.path.some(fY)
        )
      ) {
        const { scroll: d } = this.root;
        d && (o3(l.x, d.offset.x), o3(l.y, d.offset.y));
      }
      return l;
    }
    removeElementScroll(o) {
      var c;
      const l = An();
      if ((hi(l, o), (c = this.scroll) != null && c.wasRoot)) return l;
      for (let f = 0; f < this.path.length; f++) {
        const d = this.path[f],
          { scroll: p, options: m } = d;
        d !== this.root &&
          p &&
          m.layoutScroll &&
          (p.wasRoot && hi(l, o), o3(l.x, p.offset.x), o3(l.y, p.offset.y));
      }
      return l;
    }
    applyTransform(o, l = !1) {
      const c = An();
      hi(c, o);
      for (let f = 0; f < this.path.length; f++) {
        const d = this.path[f];
        !l &&
          d.options.layoutScroll &&
          d.scroll &&
          d !== d.root &&
          a3(c, { x: -d.scroll.offset.x, y: -d.scroll.offset.y }),
          Io(d.latestValues) && a3(c, d.latestValues);
      }
      return Io(this.latestValues) && a3(c, this.latestValues), c;
    }
    removeTransform(o) {
      const l = An();
      hi(l, o);
      for (let c = 0; c < this.path.length; c++) {
        const f = this.path[c];
        if (!f.instance || !Io(f.latestValues)) continue;
        _6(f.latestValues) && f.updateSnapshot();
        const d = An(),
          p = f.measurePageBox();
        hi(d, p),
          $w(l, f.latestValues, f.snapshot ? f.snapshot.layoutBox : void 0, d);
      }
      return Io(this.latestValues) && $w(l, this.latestValues), l;
    }
    setTargetDelta(o) {
      (this.targetDelta = o),
        this.root.scheduleUpdateProjection(),
        (this.isProjectionDirty = !0);
    }
    setOptions(o) {
      this.options = {
        ...this.options,
        ...o,
        crossfade: o.crossfade !== void 0 ? o.crossfade : !0,
      };
    }
    clearMeasurements() {
      (this.scroll = void 0),
        (this.layout = void 0),
        (this.snapshot = void 0),
        (this.prevTransformTemplateValue = void 0),
        (this.targetDelta = void 0),
        (this.target = void 0),
        (this.isLayoutDirty = !1);
    }
    forceRelativeParentToResolveTarget() {
      this.relativeParent &&
        this.relativeParent.resolvedRelativeTargetAt !== er.timestamp &&
        this.relativeParent.resolveTargetDelta(!0);
    }
    resolveTargetDelta(o = !1) {
      var m;
      const l = this.getLead();
      this.isProjectionDirty || (this.isProjectionDirty = l.isProjectionDirty),
        this.isTransformDirty || (this.isTransformDirty = l.isTransformDirty),
        this.isSharedProjectionDirty ||
          (this.isSharedProjectionDirty = l.isSharedProjectionDirty);
      const c = !!this.resumingFrom || this !== l;
      if (
        !(
          o ||
          (c && this.isSharedProjectionDirty) ||
          this.isProjectionDirty ||
          ((m = this.parent) != null && m.isProjectionDirty) ||
          this.attemptToResolveRelativeTarget ||
          this.root.updateBlockedByResize
        )
      )
        return;
      const { layout: d, layoutId: p } = this.options;
      if (!(!this.layout || !(d || p))) {
        if (
          ((this.resolvedRelativeTargetAt = er.timestamp),
          !this.targetDelta && !this.relativeTarget)
        ) {
          const g = this.getClosestProjectingParent();
          g && g.layout && this.animationProgress !== 1
            ? ((this.relativeParent = g),
              this.forceRelativeParentToResolveTarget(),
              (this.relativeTarget = An()),
              (this.relativeTargetOrigin = An()),
              _l(
                this.relativeTargetOrigin,
                this.layout.layoutBox,
                g.layout.layoutBox
              ),
              hi(this.relativeTarget, this.relativeTargetOrigin))
            : (this.relativeParent = this.relativeTarget = void 0);
        }
        if (
          !(!this.relativeTarget && !this.targetDelta) &&
          (this.target ||
            ((this.target = An()), (this.targetWithTransforms = An())),
          this.relativeTarget &&
          this.relativeTargetOrigin &&
          this.relativeParent &&
          this.relativeParent.target
            ? (this.forceRelativeParentToResolveTarget(),
              pG(this.target, this.relativeTarget, this.relativeParent.target))
            : this.targetDelta
            ? (this.resumingFrom
                ? (this.target = this.applyTransform(this.layout.layoutBox))
                : hi(this.target, this.layout.layoutBox),
              N_(this.target, this.targetDelta))
            : hi(this.target, this.layout.layoutBox),
          this.attemptToResolveRelativeTarget)
        ) {
          this.attemptToResolveRelativeTarget = !1;
          const g = this.getClosestProjectingParent();
          g &&
          !!g.resumingFrom == !!this.resumingFrom &&
          !g.options.layoutScroll &&
          g.target &&
          this.animationProgress !== 1
            ? ((this.relativeParent = g),
              this.forceRelativeParentToResolveTarget(),
              (this.relativeTarget = An()),
              (this.relativeTargetOrigin = An()),
              _l(this.relativeTargetOrigin, this.target, g.target),
              hi(this.relativeTarget, this.relativeTargetOrigin))
            : (this.relativeParent = this.relativeTarget = void 0);
        }
      }
    }
    getClosestProjectingParent() {
      if (
        !(
          !this.parent ||
          _6(this.parent.latestValues) ||
          j_(this.parent.latestValues)
        )
      )
        return this.parent.isProjecting()
          ? this.parent
          : this.parent.getClosestProjectingParent();
    }
    isProjecting() {
      return !!(
        (this.relativeTarget || this.targetDelta || this.options.layoutRoot) &&
        this.layout
      );
    }
    calcProjection() {
      var w;
      const o = this.getLead(),
        l = !!this.resumingFrom || this !== o;
      let c = !0;
      if (
        ((this.isProjectionDirty ||
          ((w = this.parent) != null && w.isProjectionDirty)) &&
          (c = !1),
        l &&
          (this.isSharedProjectionDirty || this.isTransformDirty) &&
          (c = !1),
        this.resolvedRelativeTargetAt === er.timestamp && (c = !1),
        c)
      )
        return;
      const { layout: f, layoutId: d } = this.options;
      if (
        ((this.isTreeAnimating = !!(
          (this.parent && this.parent.isTreeAnimating) ||
          this.currentAnimation ||
          this.pendingAnimation
        )),
        this.isTreeAnimating ||
          (this.targetDelta = this.relativeTarget = void 0),
        !this.layout || !(f || d))
      )
        return;
      hi(this.layoutCorrected, this.layout.layoutBox);
      const p = this.treeScale.x,
        m = this.treeScale.y;
      mG(this.layoutCorrected, this.treeScale, this.path, l),
        o.layout &&
          !o.target &&
          (this.treeScale.x !== 1 || this.treeScale.y !== 1) &&
          ((o.target = o.layout.layoutBox), (o.targetWithTransforms = An()));
      const { target: g } = o;
      if (!g) {
        this.prevProjectionDelta &&
          (this.createProjectionDeltas(), this.scheduleRender());
        return;
      }
      !this.projectionDelta || !this.prevProjectionDelta
        ? this.createProjectionDeltas()
        : (Dw(this.prevProjectionDelta.x, this.projectionDelta.x),
          Dw(this.prevProjectionDelta.y, this.projectionDelta.y)),
        kl(this.projectionDelta, this.layoutCorrected, g, this.latestValues),
        (this.treeScale.x !== p ||
          this.treeScale.y !== m ||
          !qw(this.projectionDelta.x, this.prevProjectionDelta.x) ||
          !qw(this.projectionDelta.y, this.prevProjectionDelta.y)) &&
          ((this.hasProjected = !0),
          this.scheduleRender(),
          this.notifyListeners("projectionUpdate", g));
    }
    hide() {
      this.isVisible = !1;
    }
    show() {
      this.isVisible = !0;
    }
    scheduleRender(o = !0) {
      var l;
      if (((l = this.options.visualElement) == null || l.scheduleRender(), o)) {
        const c = this.getStack();
        c && c.scheduleRender();
      }
      this.resumingFrom &&
        !this.resumingFrom.instance &&
        (this.resumingFrom = void 0);
    }
    createProjectionDeltas() {
      (this.prevProjectionDelta = s3()),
        (this.projectionDelta = s3()),
        (this.projectionDeltaWithTransform = s3());
    }
    setAnimationOrigin(o, l = !1) {
      const c = this.snapshot,
        f = c ? c.latestValues : {},
        d = { ...this.latestValues },
        p = s3();
      (!this.relativeParent || !this.relativeParent.options.layoutRoot) &&
        (this.relativeTarget = this.relativeTargetOrigin = void 0),
        (this.attemptToResolveRelativeTarget = !l);
      const m = An(),
        g = c ? c.source : void 0,
        w = this.layout ? this.layout.source : void 0,
        b = g !== w,
        x = this.getStack(),
        E = !x || x.members.length <= 1,
        P = !!(b && !E && this.options.crossfade === !0 && !this.path.some(uY));
      this.animationProgress = 0;
      let _;
      (this.mixTargetDelta = (T) => {
        const M = T / 1e3;
        Qw(p.x, o.x, M),
          Qw(p.y, o.y, M),
          this.setTargetDelta(p),
          this.relativeTarget &&
            this.relativeTargetOrigin &&
            this.layout &&
            this.relativeParent &&
            this.relativeParent.layout &&
            (_l(m, this.layout.layoutBox, this.relativeParent.layout.layoutBox),
            lY(this.relativeTarget, this.relativeTargetOrigin, m, M),
            _ && qG(this.relativeTarget, _) && (this.isProjectionDirty = !1),
            _ || (_ = An()),
            hi(_, this.relativeTarget)),
          b &&
            ((this.animationValues = d), UG(d, f, this.latestValues, M, P, E)),
          this.root.scheduleUpdateProjection(),
          this.scheduleRender(),
          (this.animationProgress = M);
      }),
        this.mixTargetDelta(this.options.layoutRoot ? 1e3 : 0);
    }
    startAnimation(o) {
      this.notifyListeners("animationStart"),
        this.currentAnimation && this.currentAnimation.stop(),
        this.resumingFrom &&
          this.resumingFrom.currentAnimation &&
          this.resumingFrom.currentAnimation.stop(),
        this.pendingAnimation &&
          (zs(this.pendingAnimation), (this.pendingAnimation = void 0)),
        (this.pendingAnimation = Xt.update(() => {
          (xd.hasAnimatedSinceResize = !0),
            (this.currentAnimation = jG(0, Kw, {
              ...o,
              onUpdate: (l) => {
                this.mixTargetDelta(l), o.onUpdate && o.onUpdate(l);
              },
              onStop: () => {},
              onComplete: () => {
                o.onComplete && o.onComplete(), this.completeAnimation();
              },
            })),
            this.resumingFrom &&
              (this.resumingFrom.currentAnimation = this.currentAnimation),
            (this.pendingAnimation = void 0);
        }));
    }
    completeAnimation() {
      this.resumingFrom &&
        ((this.resumingFrom.currentAnimation = void 0),
        (this.resumingFrom.preserveOpacity = void 0));
      const o = this.getStack();
      o && o.exitAnimationComplete(),
        (this.resumingFrom =
          this.currentAnimation =
          this.animationValues =
            void 0),
        this.notifyListeners("animationComplete");
    }
    finishAnimation() {
      this.currentAnimation &&
        (this.mixTargetDelta && this.mixTargetDelta(Kw),
        this.currentAnimation.stop()),
        this.completeAnimation();
    }
    applyTransformsToTarget() {
      const o = this.getLead();
      let {
        targetWithTransforms: l,
        target: c,
        layout: f,
        latestValues: d,
      } = o;
      if (!(!l || !c || !f)) {
        if (
          this !== o &&
          this.layout &&
          f &&
          K_(this.options.animationType, this.layout.layoutBox, f.layoutBox)
        ) {
          c = this.target || An();
          const p = Ar(this.layout.layoutBox.x);
          (c.x.min = o.target.x.min), (c.x.max = c.x.min + p);
          const m = Ar(this.layout.layoutBox.y);
          (c.y.min = o.target.y.min), (c.y.max = c.y.min + m);
        }
        hi(l, c),
          a3(l, d),
          kl(this.projectionDeltaWithTransform, this.layoutCorrected, l, d);
      }
    }
    registerSharedNode(o, l) {
      this.sharedNodes.has(o) || this.sharedNodes.set(o, new KG()),
        this.sharedNodes.get(o).add(l);
      const f = l.options.initialPromotionConfig;
      l.promote({
        transition: f ? f.transition : void 0,
        preserveFollowOpacity:
          f && f.shouldPreserveFollowOpacity
            ? f.shouldPreserveFollowOpacity(l)
            : void 0,
      });
    }
    isLead() {
      const o = this.getStack();
      return o ? o.lead === this : !0;
    }
    getLead() {
      var l;
      const { layoutId: o } = this.options;
      return o
        ? ((l = this.getStack()) == null ? void 0 : l.lead) || this
        : this;
    }
    getPrevLead() {
      var l;
      const { layoutId: o } = this.options;
      return o ? ((l = this.getStack()) == null ? void 0 : l.prevLead) : void 0;
    }
    getStack() {
      const { layoutId: o } = this.options;
      if (o) return this.root.sharedNodes.get(o);
    }
    promote({ needsReset: o, transition: l, preserveFollowOpacity: c } = {}) {
      const f = this.getStack();
      f && f.promote(this, c),
        o && ((this.projectionDelta = void 0), (this.needsReset = !0)),
        l && this.setOptions({ transition: l });
    }
    relegate() {
      const o = this.getStack();
      return o ? o.relegate(this) : !1;
    }
    resetSkewAndRotation() {
      const { visualElement: o } = this.options;
      if (!o) return;
      let l = !1;
      const { latestValues: c } = o;
      if (
        ((c.z ||
          c.rotate ||
          c.rotateX ||
          c.rotateY ||
          c.rotateZ ||
          c.skewX ||
          c.skewY) &&
          (l = !0),
        !l)
      )
        return;
      const f = {};
      c.z && K9("z", o, f, this.animationValues);
      for (let d = 0; d < q9.length; d++)
        K9(`rotate${q9[d]}`, o, f, this.animationValues),
          K9(`skew${q9[d]}`, o, f, this.animationValues);
      o.render();
      for (const d in f)
        o.setStaticValue(d, f[d]),
          this.animationValues && (this.animationValues[d] = f[d]);
      o.scheduleRender();
    }
    getProjectionStyles(o) {
      if (!this.instance || this.isSVG) return;
      if (!this.isVisible) return YG;
      const l = { visibility: "" },
        c = this.getTransformTemplate();
      if (this.needsReset)
        return (
          (this.needsReset = !1),
          (l.opacity = ""),
          (l.pointerEvents = bd(o == null ? void 0 : o.pointerEvents) || ""),
          (l.transform = c ? c(this.latestValues, "") : "none"),
          l
        );
      const f = this.getLead();
      if (!this.projectionDelta || !this.layout || !f.target) {
        const g = {};
        return (
          this.options.layoutId &&
            ((g.opacity =
              this.latestValues.opacity !== void 0
                ? this.latestValues.opacity
                : 1),
            (g.pointerEvents = bd(o == null ? void 0 : o.pointerEvents) || "")),
          this.hasProjected &&
            !Io(this.latestValues) &&
            ((g.transform = c ? c({}, "") : "none"), (this.hasProjected = !1)),
          g
        );
      }
      const d = f.animationValues || f.latestValues;
      this.applyTransformsToTarget(),
        (l.transform = GG(
          this.projectionDeltaWithTransform,
          this.treeScale,
          d
        )),
        c && (l.transform = c(d, l.transform));
      const { x: p, y: m } = this.projectionDelta;
      (l.transformOrigin = `${p.origin * 100}% ${m.origin * 100}% 0`),
        f.animationValues
          ? (l.opacity =
              f === this
                ? d.opacity ?? this.latestValues.opacity ?? 1
                : this.preserveOpacity
                ? this.latestValues.opacity
                : d.opacityExit)
          : (l.opacity =
              f === this
                ? d.opacity !== void 0
                  ? d.opacity
                  : ""
                : d.opacityExit !== void 0
                ? d.opacityExit
                : 0);
      for (const g in Ql) {
        if (d[g] === void 0) continue;
        const { correct: w, applyTo: b, isCSSVariable: x } = Ql[g],
          E = l.transform === "none" ? d[g] : w(d[g], f);
        if (b) {
          const P = b.length;
          for (let _ = 0; _ < P; _++) l[b[_]] = E;
        } else
          x ? (this.options.visualElement.renderState.vars[g] = E) : (l[g] = E);
      }
      return (
        this.options.layoutId &&
          (l.pointerEvents =
            f === this
              ? bd(o == null ? void 0 : o.pointerEvents) || ""
              : "none"),
        l
      );
    }
    clearSnapshot() {
      this.resumeFrom = this.snapshot = void 0;
    }
    resetTree() {
      this.root.nodes.forEach((o) => {
        var l;
        return (l = o.currentAnimation) == null ? void 0 : l.stop();
      }),
        this.root.nodes.forEach(Gw),
        this.root.sharedNodes.clear();
    }
  };
}
function ZG(e) {
  e.updateLayout();
}
function XG(e) {
  var n;
  const t = ((n = e.resumeFrom) == null ? void 0 : n.snapshot) || e.snapshot;
  if (e.isLead() && e.layout && t && e.hasListeners("didUpdate")) {
    const { layoutBox: r, measuredBox: i } = e.layout,
      { animationType: s } = e.options,
      o = t.source !== e.layout.source;
    s === "size"
      ? mi((p) => {
          const m = o ? t.measuredBox[p] : t.layoutBox[p],
            g = Ar(m);
          (m.min = r[p].min), (m.max = m.min + g);
        })
      : K_(s, t.layoutBox, r) &&
        mi((p) => {
          const m = o ? t.measuredBox[p] : t.layoutBox[p],
            g = Ar(r[p]);
          (m.max = m.min + g),
            e.relativeTarget &&
              !e.currentAnimation &&
              ((e.isProjectionDirty = !0),
              (e.relativeTarget[p].max = e.relativeTarget[p].min + g));
        });
    const l = s3();
    kl(l, r, t.layoutBox);
    const c = s3();
    o ? kl(c, e.applyTransform(i, !0), t.measuredBox) : kl(c, r, t.layoutBox);
    const f = !W_(l);
    let d = !1;
    if (!e.resumeFrom) {
      const p = e.getClosestProjectingParent();
      if (p && !p.resumeFrom) {
        const { snapshot: m, layout: g } = p;
        if (m && g) {
          const w = An();
          _l(w, t.layoutBox, m.layoutBox);
          const b = An();
          _l(b, r, g.layoutBox),
            z_(w, b) || (d = !0),
            p.options.layoutRoot &&
              ((e.relativeTarget = b),
              (e.relativeTargetOrigin = w),
              (e.relativeParent = p));
        }
      }
    }
    e.notifyListeners("didUpdate", {
      layout: r,
      snapshot: t,
      delta: c,
      layoutDelta: l,
      hasLayoutChanged: f,
      hasRelativeLayoutChanged: d,
    });
  } else if (e.isLead()) {
    const { onExitComplete: r } = e.options;
    r && r();
  }
  e.options.transition = void 0;
}
function JG(e) {
  e.parent &&
    (e.isProjecting() || (e.isProjectionDirty = e.parent.isProjectionDirty),
    e.isSharedProjectionDirty ||
      (e.isSharedProjectionDirty = !!(
        e.isProjectionDirty ||
        e.parent.isProjectionDirty ||
        e.parent.isSharedProjectionDirty
      )),
    e.isTransformDirty || (e.isTransformDirty = e.parent.isTransformDirty));
}
function eY(e) {
  e.isProjectionDirty = e.isSharedProjectionDirty = e.isTransformDirty = !1;
}
function tY(e) {
  e.clearSnapshot();
}
function Gw(e) {
  e.clearMeasurements();
}
function nY(e) {
  e.isLayoutDirty = !1;
}
function rY(e) {
  const { visualElement: t } = e.options;
  t && t.getProps().onBeforeLayoutMeasure && t.notify("BeforeLayoutMeasure"),
    e.resetTransform();
}
function Yw(e) {
  e.finishAnimation(),
    (e.targetDelta = e.relativeTarget = e.target = void 0),
    (e.isProjectionDirty = !0);
}
function iY(e) {
  e.resolveTargetDelta();
}
function sY(e) {
  e.calcProjection();
}
function oY(e) {
  e.resetSkewAndRotation();
}
function aY(e) {
  e.removeLeadSnapshot();
}
function Qw(e, t, n) {
  (e.translate = wn(t.translate, 0, n)),
    (e.scale = wn(t.scale, 1, n)),
    (e.origin = t.origin),
    (e.originPoint = t.originPoint);
}
function Zw(e, t, n, r) {
  (e.min = wn(t.min, n.min, r)), (e.max = wn(t.max, n.max, r));
}
function lY(e, t, n, r) {
  Zw(e.x, t.x, n.x, r), Zw(e.y, t.y, n.y, r);
}
function uY(e) {
  return e.animationValues && e.animationValues.opacityExit !== void 0;
}
const cY = { duration: 0.45, ease: [0.4, 0, 0.1, 1] },
  Xw = (e) =>
    typeof navigator < "u" &&
    navigator.userAgent &&
    navigator.userAgent.toLowerCase().includes(e),
  Jw = Xw("applewebkit/") && !Xw("chrome/") ? Math.round : bi;
function eb(e) {
  (e.min = Jw(e.min)), (e.max = Jw(e.max));
}
function dY(e) {
  eb(e.x), eb(e.y);
}
function K_(e, t, n) {
  return (
    e === "position" || (e === "preserve-aspect" && !hG(Hw(t), Hw(n), 0.2))
  );
}
function fY(e) {
  var t;
  return e !== e.root && ((t = e.scroll) == null ? void 0 : t.wasRoot);
}
const hY = q_({
    attachResizeListener: (e, t) => eu(e, "resize", t),
    measureScroll: () => ({
      x: document.documentElement.scrollLeft || document.body.scrollLeft,
      y: document.documentElement.scrollTop || document.body.scrollTop,
    }),
    checkIsScrollRoot: () => !0,
  }),
  G9 = { current: void 0 },
  G_ = q_({
    measureScroll: (e) => ({ x: e.scrollLeft, y: e.scrollTop }),
    defaultParent: () => {
      if (!G9.current) {
        const e = new hY({});
        e.mount(window), e.setOptions({ layoutScroll: !0 }), (G9.current = e);
      }
      return G9.current;
    },
    resetTransform: (e, t) => {
      e.style.transform = t !== void 0 ? t : "none";
    },
    checkIsScrollRoot: (e) => window.getComputedStyle(e).position === "fixed",
  }),
  pY = {
    pan: { Feature: MG },
    drag: { Feature: PG, ProjectionNode: G_, MeasureLayout: U_ },
  };
function tb(e, t, n) {
  const { props: r } = e;
  e.animationState &&
    r.whileHover &&
    e.animationState.setActive("whileHover", n === "Start");
  const i = "onHover" + n,
    s = r[i];
  s && Xt.postRender(() => s(t, Au(t)));
}
class mY extends Xs {
  mount() {
    const { current: t } = this.node;
    t &&
      (this.unmount = EH(
        t,
        (n, r) => (tb(this.node, r, "Start"), (i) => tb(this.node, i, "End"))
      ));
  }
  unmount() {}
}
class gY extends Xs {
  constructor() {
    super(...arguments), (this.isActive = !1);
  }
  onFocus() {
    let t = !1;
    try {
      t = this.node.current.matches(":focus-visible");
    } catch {
      t = !0;
    }
    !t ||
      !this.node.animationState ||
      (this.node.animationState.setActive("whileFocus", !0),
      (this.isActive = !0));
  }
  onBlur() {
    !this.isActive ||
      !this.node.animationState ||
      (this.node.animationState.setActive("whileFocus", !1),
      (this.isActive = !1));
  }
  mount() {
    this.unmount = _u(
      eu(this.node.current, "focus", () => this.onFocus()),
      eu(this.node.current, "blur", () => this.onBlur())
    );
  }
  unmount() {}
}
function nb(e, t, n) {
  const { props: r } = e;
  if (e.current instanceof HTMLButtonElement && e.current.disabled) return;
  e.animationState &&
    r.whileTap &&
    e.animationState.setActive("whileTap", n === "Start");
  const i = "onTap" + (n === "End" ? "" : n),
    s = r[i];
  s && Xt.postRender(() => s(t, Au(t)));
}
class yY extends Xs {
  mount() {
    const { current: t } = this.node;
    t &&
      (this.unmount = TH(
        t,
        (n, r) => (
          nb(this.node, r, "Start"),
          (i, { success: s }) => nb(this.node, i, s ? "End" : "Cancel")
        ),
        { useGlobalTarget: this.node.props.globalTapTarget }
      ));
  }
  unmount() {}
}
const P6 = new WeakMap(),
  Y9 = new WeakMap(),
  vY = (e) => {
    const t = P6.get(e.target);
    t && t(e);
  },
  wY = (e) => {
    e.forEach(vY);
  };
function bY({ root: e, ...t }) {
  const n = e || document;
  Y9.has(n) || Y9.set(n, {});
  const r = Y9.get(n),
    i = JSON.stringify(t);
  return r[i] || (r[i] = new IntersectionObserver(wY, { root: e, ...t })), r[i];
}
function xY(e, t, n) {
  const r = bY(t);
  return (
    P6.set(e, n),
    r.observe(e),
    () => {
      P6.delete(e), r.unobserve(e);
    }
  );
}
const CY = { some: 0, all: 1 };
class SY extends Xs {
  constructor() {
    super(...arguments), (this.hasEnteredView = !1), (this.isInView = !1);
  }
  startObserver() {
    this.unmount();
    const { viewport: t = {} } = this.node.getProps(),
      { root: n, margin: r, amount: i = "some", once: s } = t,
      o = {
        root: n ? n.current : void 0,
        rootMargin: r,
        threshold: typeof i == "number" ? i : CY[i],
      },
      l = (c) => {
        const { isIntersecting: f } = c;
        if (
          this.isInView === f ||
          ((this.isInView = f), s && !f && this.hasEnteredView)
        )
          return;
        f && (this.hasEnteredView = !0),
          this.node.animationState &&
            this.node.animationState.setActive("whileInView", f);
        const { onViewportEnter: d, onViewportLeave: p } = this.node.getProps(),
          m = f ? d : p;
        m && m(c);
      };
    return xY(this.node.current, o, l);
  }
  mount() {
    this.startObserver();
  }
  update() {
    if (typeof IntersectionObserver > "u") return;
    const { props: t, prevProps: n } = this.node;
    ["amount", "margin", "root"].some(EY(t, n)) && this.startObserver();
  }
  unmount() {}
}
function EY({ viewport: e = {} }, { viewport: t = {} } = {}) {
  return (n) => e[n] !== t[n];
}
const kY = {
    inView: { Feature: SY },
    tap: { Feature: yY },
    focus: { Feature: gY },
    hover: { Feature: mY },
  },
  _Y = { layout: { ProjectionNode: G_, MeasureLayout: U_ } },
  M6 = { current: null },
  Y_ = { current: !1 };
function AY() {
  if (((Y_.current = !0), !!Gp))
    if (window.matchMedia) {
      const e = window.matchMedia("(prefers-reduced-motion)"),
        t = () => (M6.current = e.matches);
      e.addListener(t), t();
    } else M6.current = !1;
}
const TY = [...b_, hr, Hs],
  PY = (e) => TY.find(w_(e)),
  MY = new WeakMap();
function RY(e, t, n) {
  for (const r in t) {
    const i = t[r],
      s = n[r];
    if (yr(i)) e.addValue(r, i);
    else if (yr(s)) e.addValue(r, Gl(i, { owner: e }));
    else if (s !== i)
      if (e.hasValue(r)) {
        const o = e.getValue(r);
        o.liveStyle === !0 ? o.jump(i) : o.hasAnimated || o.set(i);
      } else {
        const o = e.getStaticValue(r);
        e.addValue(r, Gl(o !== void 0 ? o : i, { owner: e }));
      }
  }
  for (const r in n) t[r] === void 0 && e.removeValue(r);
  return t;
}
const rb = [
  "AnimationStart",
  "AnimationComplete",
  "Update",
  "BeforeLayoutMeasure",
  "LayoutMeasure",
  "LayoutAnimationStart",
  "LayoutAnimationComplete",
];
class LY {
  scrapeMotionValuesFromProps(t, n, r) {
    return {};
  }
  constructor(
    {
      parent: t,
      props: n,
      presenceContext: r,
      reducedMotionConfig: i,
      blockInitialAnimation: s,
      visualState: o,
    },
    l = {}
  ) {
    (this.current = null),
      (this.children = new Set()),
      (this.isVariantNode = !1),
      (this.isControllingVariants = !1),
      (this.shouldReduceMotion = null),
      (this.values = new Map()),
      (this.KeyframeResolver = Sm),
      (this.features = {}),
      (this.valueSubscriptions = new Map()),
      (this.prevMotionValues = {}),
      (this.events = {}),
      (this.propEventSubscriptions = {}),
      (this.notifyUpdate = () => this.notify("Update", this.latestValues)),
      (this.render = () => {
        this.current &&
          (this.triggerBuild(),
          this.renderInstance(
            this.current,
            this.renderState,
            this.props.style,
            this.projection
          ));
      }),
      (this.renderScheduledAt = 0),
      (this.scheduleRender = () => {
        const g = d2.now();
        this.renderScheduledAt < g &&
          ((this.renderScheduledAt = g), Xt.render(this.render, !1, !0));
      });
    const { latestValues: c, renderState: f, onUpdate: d } = o;
    (this.onUpdate = d),
      (this.latestValues = c),
      (this.baseTarget = { ...c }),
      (this.initialValues = n.initial ? { ...c } : {}),
      (this.renderState = f),
      (this.parent = t),
      (this.props = n),
      (this.presenceContext = r),
      (this.depth = t ? t.depth + 1 : 0),
      (this.reducedMotionConfig = i),
      (this.options = l),
      (this.blockInitialAnimation = !!s),
      (this.isControllingVariants = tf(n)),
      (this.isVariantNode = Ok(n)),
      this.isVariantNode && (this.variantChildren = new Set()),
      (this.manuallyAnimateOnMount = !!(t && t.current));
    const { willChange: p, ...m } = this.scrapeMotionValuesFromProps(
      n,
      {},
      this
    );
    for (const g in m) {
      const w = m[g];
      c[g] !== void 0 && yr(w) && w.set(c[g], !1);
    }
  }
  mount(t) {
    (this.current = t),
      MY.set(t, this),
      this.projection && !this.projection.instance && this.projection.mount(t),
      this.parent &&
        this.isVariantNode &&
        !this.isControllingVariants &&
        (this.removeFromVariantTree = this.parent.addVariantChild(this)),
      this.values.forEach((n, r) => this.bindToMotionValue(r, n)),
      Y_.current || AY(),
      (this.shouldReduceMotion =
        this.reducedMotionConfig === "never"
          ? !1
          : this.reducedMotionConfig === "always"
          ? !0
          : M6.current),
      this.parent && this.parent.children.add(this),
      this.update(this.props, this.presenceContext);
  }
  unmount() {
    this.projection && this.projection.unmount(),
      zs(this.notifyUpdate),
      zs(this.render),
      this.valueSubscriptions.forEach((t) => t()),
      this.valueSubscriptions.clear(),
      this.removeFromVariantTree && this.removeFromVariantTree(),
      this.parent && this.parent.children.delete(this);
    for (const t in this.events) this.events[t].clear();
    for (const t in this.features) {
      const n = this.features[t];
      n && (n.unmount(), (n.isMounted = !1));
    }
    this.current = null;
  }
  bindToMotionValue(t, n) {
    this.valueSubscriptions.has(t) && this.valueSubscriptions.get(t)();
    const r = ha.has(t);
    r && this.onBindTransform && this.onBindTransform();
    const i = n.on("change", (l) => {
        (this.latestValues[t] = l),
          this.props.onUpdate && Xt.preRender(this.notifyUpdate),
          r && this.projection && (this.projection.isTransformDirty = !0);
      }),
      s = n.on("renderRequest", this.scheduleRender);
    let o;
    window.MotionCheckAppearSync &&
      (o = window.MotionCheckAppearSync(this, t, n)),
      this.valueSubscriptions.set(t, () => {
        i(), s(), o && o(), n.owner && n.stop();
      });
  }
  sortNodePosition(t) {
    return !this.current ||
      !this.sortInstanceNodePosition ||
      this.type !== t.type
      ? 0
      : this.sortInstanceNodePosition(this.current, t.current);
  }
  updateFeatures() {
    let t = "animation";
    for (t in x3) {
      const n = x3[t];
      if (!n) continue;
      const { isEnabled: r, Feature: i } = n;
      if (
        (!this.features[t] &&
          i &&
          r(this.props) &&
          (this.features[t] = new i(this)),
        this.features[t])
      ) {
        const s = this.features[t];
        s.isMounted ? s.update() : (s.mount(), (s.isMounted = !0));
      }
    }
  }
  triggerBuild() {
    this.build(this.renderState, this.latestValues, this.props);
  }
  measureViewportBox() {
    return this.current
      ? this.measureInstanceViewportBox(this.current, this.props)
      : An();
  }
  getStaticValue(t) {
    return this.latestValues[t];
  }
  setStaticValue(t, n) {
    this.latestValues[t] = n;
  }
  update(t, n) {
    (t.transformTemplate || this.props.transformTemplate) &&
      this.scheduleRender(),
      (this.prevProps = this.props),
      (this.props = t),
      (this.prevPresenceContext = this.presenceContext),
      (this.presenceContext = n);
    for (let r = 0; r < rb.length; r++) {
      const i = rb[r];
      this.propEventSubscriptions[i] &&
        (this.propEventSubscriptions[i](),
        delete this.propEventSubscriptions[i]);
      const s = "on" + i,
        o = t[s];
      o && (this.propEventSubscriptions[i] = this.on(i, o));
    }
    (this.prevMotionValues = RY(
      this,
      this.scrapeMotionValuesFromProps(t, this.prevProps, this),
      this.prevMotionValues
    )),
      this.handleChildMotionValue && this.handleChildMotionValue(),
      this.onUpdate && this.onUpdate(this);
  }
  getProps() {
    return this.props;
  }
  getVariant(t) {
    return this.props.variants ? this.props.variants[t] : void 0;
  }
  getDefaultTransition() {
    return this.props.transition;
  }
  getTransformPagePoint() {
    return this.props.transformPagePoint;
  }
  getClosestVariantNode() {
    return this.isVariantNode
      ? this
      : this.parent
      ? this.parent.getClosestVariantNode()
      : void 0;
  }
  addVariantChild(t) {
    const n = this.getClosestVariantNode();
    if (n)
      return (
        n.variantChildren && n.variantChildren.add(t),
        () => n.variantChildren.delete(t)
      );
  }
  addValue(t, n) {
    const r = this.values.get(t);
    n !== r &&
      (r && this.removeValue(t),
      this.bindToMotionValue(t, n),
      this.values.set(t, n),
      (this.latestValues[t] = n.get()));
  }
  removeValue(t) {
    this.values.delete(t);
    const n = this.valueSubscriptions.get(t);
    n && (n(), this.valueSubscriptions.delete(t)),
      delete this.latestValues[t],
      this.removeValueFromRenderState(t, this.renderState);
  }
  hasValue(t) {
    return this.values.has(t);
  }
  getValue(t, n) {
    if (this.props.values && this.props.values[t]) return this.props.values[t];
    let r = this.values.get(t);
    return (
      r === void 0 &&
        n !== void 0 &&
        ((r = Gl(n === null ? void 0 : n, { owner: this })),
        this.addValue(t, r)),
      r
    );
  }
  readValue(t, n) {
    let r =
      this.latestValues[t] !== void 0 || !this.current
        ? this.latestValues[t]
        : this.getBaseTargetFromProps(this.props, t) ??
          this.readValueFromInstance(this.current, t, this.options);
    return (
      r != null &&
        (typeof r == "string" && (y_(r) || a_(r))
          ? (r = parseFloat(r))
          : !PY(r) && Hs.test(n) && (r = p_(t, n)),
        this.setBaseTarget(t, yr(r) ? r.get() : r)),
      yr(r) ? r.get() : r
    );
  }
  setBaseTarget(t, n) {
    this.baseTarget[t] = n;
  }
  getBaseTarget(t) {
    var s;
    const { initial: n } = this.props;
    let r;
    if (typeof n == "string" || typeof n == "object") {
      const o = ym(
        this.props,
        n,
        (s = this.presenceContext) == null ? void 0 : s.custom
      );
      o && (r = o[t]);
    }
    if (n && r !== void 0) return r;
    const i = this.getBaseTargetFromProps(this.props, t);
    return i !== void 0 && !yr(i)
      ? i
      : this.initialValues[t] !== void 0 && r === void 0
      ? void 0
      : this.baseTarget[t];
  }
  on(t, n) {
    return this.events[t] || (this.events[t] = new Jp()), this.events[t].add(n);
  }
  notify(t, ...n) {
    this.events[t] && this.events[t].notify(...n);
  }
}
class Q_ extends LY {
  constructor() {
    super(...arguments), (this.KeyframeResolver = x_);
  }
  sortInstanceNodePosition(t, n) {
    return t.compareDocumentPosition(n) & 2 ? 1 : -1;
  }
  getBaseTargetFromProps(t, n) {
    return t.style ? t.style[n] : void 0;
  }
  removeValueFromRenderState(t, { vars: n, style: r }) {
    delete n[t], delete r[t];
  }
  handleChildMotionValue() {
    this.childSubscription &&
      (this.childSubscription(), delete this.childSubscription);
    const { children: t } = this.props;
    yr(t) &&
      (this.childSubscription = t.on("change", (n) => {
        this.current && (this.current.textContent = `${n}`);
      }));
  }
}
function IY(e) {
  return window.getComputedStyle(e);
}
class jY extends Q_ {
  constructor() {
    super(...arguments), (this.type = "html"), (this.renderInstance = Kk);
  }
  readValueFromInstance(t, n) {
    if (ha.has(n)) return qq(t, n);
    {
      const r = IY(t),
        i = (um(n) ? r.getPropertyValue(n) : r[n]) || 0;
      return typeof i == "string" ? i.trim() : i;
    }
  }
  measureInstanceViewportBox(t, { transformPagePoint: n }) {
    return O_(t, n);
  }
  build(t, n, r) {
    fm(t, n, r.transformTemplate);
  }
  scrapeMotionValuesFromProps(t, n, r) {
    return vm(t, n, r);
  }
}
class NY extends Q_ {
  constructor() {
    super(...arguments),
      (this.type = "svg"),
      (this.isSVGTag = !1),
      (this.measureInstanceViewportBox = An),
      (this.updateDimensions = () => {
        this.current &&
          !this.renderState.dimensions &&
          qk(this.current, this.renderState);
      });
  }
  getBaseTargetFromProps(t, n) {
    return t[n];
  }
  readValueFromInstance(t, n) {
    if (ha.has(n)) {
      const r = h_(n);
      return (r && r.default) || 0;
    }
    return (n = Gk.has(n) ? n : lm(n)), t.getAttribute(n);
  }
  scrapeMotionValuesFromProps(t, n, r) {
    return Qk(t, n, r);
  }
  onBindTransform() {
    this.current &&
      !this.renderState.dimensions &&
      Xt.postRender(this.updateDimensions);
  }
  build(t, n, r) {
    mm(t, n, this.isSVGTag, r.transformTemplate);
  }
  renderInstance(t, n, r, i) {
    Yk(t, n, r, i);
  }
  mount(t) {
    (this.isSVGTag = gm(t.tagName)), super.mount(t);
  }
}
const OY = (e, t) =>
    pm(e) ? new NY(t) : new jY(t, { allowProjection: e !== N.Fragment }),
  BY = wq({ ...sG, ...kY, ...pY, ..._Y }, OY),
  Sn = NH(BY),
  He = N.forwardRef(
    (
      {
        text: e,
        children: t,
        classes: n,
        loading: r,
        leftIcon: i,
        rightIcon: s,
        disabled: o,
        textClasses: l,
        ...c
      },
      f
    ) =>
      v.jsx(Sn.button, {
        type: "button",
        ref: f,
        disabled: o || r,
        whileTap: { scale: J2 },
        className: me(
          "flex justify-center items-center bg-blue-300 rounded-lg text-[14px] leading-[14px] font-bold px-2 py-[5px]",
          n
        ),
        ...c,
        children: r
          ? v.jsx(Fn, { className: "animate-spin", width: 17, height: 17 })
          : v.jsxs(v.Fragment, {
              children: [
                i &&
                  v.jsx("div", {
                    className: "mr-1 grid place-items-center",
                    children: i,
                  }),
                v.jsx("div", {
                  className: me("inline", l, o && "opacity-50"),
                  children: e || t,
                }),
                s &&
                  v.jsx("div", {
                    className: "ml-[5px] grid place-items-center",
                    children: s,
                  }),
              ],
            }),
      })
  );
He.displayName = "Button";
const ib = (e) => {
    const t = ia(N3.telegram.getToken),
      [n, r] = N.useState([]),
      [i, s] = N.useState(!1);
    N.useEffect(() => {
      za.isConnected || za.connect(fR, t);
      const l = (d) => {
          d.type === e && r((p) => [d, ...p].slice(0, 100));
        },
        c = (d) => {
          s(d);
        };
      za.addMessageHandler(l);
      const f = za.subscribe(c);
      return () => {
        za.removeMessageHandler(l), f();
      };
    }, [e]);
    const o = N.useCallback((l) => {
      za.send(l);
    }, []);
    return { messages: n, sendMessage: o, isConnected: i };
  },
  U3 = ({ url: e, onBack: t }) => {
    const n = or();
    N.useEffect(() => {
      const r = () => {
        if (t) return t();
        if (e) return n(e);
      };
      try {
        const i = window.Telegram.WebApp.BackButton;
        return (
          i.onClick(r),
          i.show(),
          () => {
            i.hide(), i.offClick(r);
          }
        );
      } catch (i) {
        console.log(i);
      }
    }, []);
  },
  DY = /giveaway_(\d+)/,
  FY = "to_inventory",
  UY = () => {
    const e = or();
    N.useEffect(() => {
      var r;
      const t =
        ((r = window.Telegram.WebApp.initDataUnsafe) == null
          ? void 0
          : r.start_param) || "";
      if (t === FY) {
        e(se.PAGES.PROFILE.TO_FULL_ROUTE_INVENTORY);
        return;
      }
      const n = t.match(DY);
      n && e(se.PAGES.GIVEAWAYS.TO_FULL_ROUTE_GIVEAWAY(n[1]));
    }, []);
  },
  $Y = ({ name: e, children: t }) =>
    v.jsxs("div", {
      className: "flex flex-col h-full",
      children: [
        v.jsx("h1", {
          className:
            "text-white text-center text-[17px] font-bold leading-[21px]",
          children: e,
        }),
        v.jsx("div", { className: "flex flex-col mt-4 gap-8", children: t }),
      ],
    }),
  Am = ({ url: e, color: t, ...n }) =>
    v.jsx("div", {
      style: {
        backgroundColor: t,
        maskImage: `url(${e})`,
        maskSize: "contain",
        maskRepeat: "no-repeat",
        maskPosition: "center",
        WebkitMaskImage: `url(${e})`,
        WebkitMaskSize: "contain",
        WebkitMaskRepeat: "no-repeat",
        WebkitMaskPosition: "center",
        position: "absolute",
        opacity: 0.25,
        ...n,
      },
    });
var VY = Object.defineProperty,
  WY = Object.defineProperties,
  zY = Object.getOwnPropertyDescriptors,
  d4 = Object.getOwnPropertySymbols,
  Z_ = Object.prototype.hasOwnProperty,
  X_ = Object.prototype.propertyIsEnumerable,
  R6 = (e, t, n) =>
    t in e
      ? VY(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n })
      : (e[t] = n),
  tr = (e, t) => {
    for (var n in t || (t = {})) Z_.call(t, n) && R6(e, n, t[n]);
    if (d4) for (var n of d4(t)) X_.call(t, n) && R6(e, n, t[n]);
    return e;
  },
  Ur = (e, t) => WY(e, zY(t)),
  J_ = (e, t) => {
    var n = {};
    for (var r in e) Z_.call(e, r) && t.indexOf(r) < 0 && (n[r] = e[r]);
    if (e != null && d4)
      for (var r of d4(e)) t.indexOf(r) < 0 && X_.call(e, r) && (n[r] = e[r]);
    return n;
  },
  wt = (e, t, n) => R6(e, typeof t != "symbol" ? t + "" : t, n),
  Tt = (e, t, n) =>
    new Promise((r, i) => {
      var s = (c) => {
          try {
            l(n.next(c));
          } catch (f) {
            i(f);
          }
        },
        o = (c) => {
          try {
            l(n.throw(c));
          } catch (f) {
            i(f);
          }
        },
        l = (c) => (c.done ? r(c.value) : Promise.resolve(c.value).then(s, o));
      l((n = n.apply(e, t)).next());
    }),
  HY = class {
    requestAnimationFrame(e) {
      return requestAnimationFrame(e);
    }
    cancelAnimationFrame(e) {
      cancelAnimationFrame(e);
    }
  },
  qY = class {
    constructor() {
      wt(this, "_lastHandleId", 0), wt(this, "_lastImmediate", null);
    }
    requestAnimationFrame(e) {
      return (
        this._lastHandleId >= Number.MAX_SAFE_INTEGER &&
          (this._lastHandleId = 0),
        (this._lastHandleId += 1),
        (this._lastImmediate = setImmediate(() => {
          e(Date.now());
        })),
        this._lastHandleId
      );
    }
    cancelAnimationFrame(e) {
      this._lastImmediate && clearImmediate(this._lastImmediate);
    }
  },
  KY = class {
    constructor() {
      wt(this, "_strategy"),
        (this._strategy =
          typeof requestAnimationFrame == "function" ? new HY() : new qY());
    }
    requestAnimationFrame(e) {
      return this._strategy.requestAnimationFrame(e);
    }
    cancelAnimationFrame(e) {
      this._strategy.cancelAnimationFrame(e);
    }
  },
  mr = typeof window < "u" && typeof window.document < "u",
  Q9 = new Uint8Array([80, 75, 3, 4]),
  GY = ["v", "ip", "op", "layers", "fr", "w", "h"],
  eA = "0.40.1",
  tA = "@lottiefiles/dotlottie-web",
  YY = 0.75,
  QY = (() => {
    var e,
      t =
        typeof document < "u"
          ? (e = document.currentScript) == null
            ? void 0
            : e.src
          : void 0;
    return function (n = {}) {
      var r,
        i = n,
        s,
        o,
        l = new Promise((W, z) => {
          (s = W), (o = z);
        }),
        c = Object.assign({}, i),
        f = "./this.program",
        d = "",
        p;
      typeof document < "u" &&
        document.currentScript &&
        (d = document.currentScript.src),
        t && (d = t),
        d.startsWith("blob:")
          ? (d = "")
          : (d = d.substr(0, d.replace(/[?#].*/, "").lastIndexOf("/") + 1)),
        (p = (W) =>
          fetch(W, { credentials: "same-origin" }).then((z) =>
            z.ok
              ? z.arrayBuffer()
              : Promise.reject(Error(z.status + " : " + z.url))
          ));
      var m = i.printErr || console.error.bind(console);
      Object.assign(i, c), (c = null), i.thisProgram && (f = i.thisProgram);
      var g = i.wasmBinary,
        w,
        b = !1,
        x,
        E,
        P,
        _,
        T,
        M,
        L,
        O,
        U;
      function D() {
        var W = w.buffer;
        (i.HEAP8 = E = new Int8Array(W)),
          (i.HEAP16 = _ = new Int16Array(W)),
          (i.HEAPU8 = P = new Uint8Array(W)),
          (i.HEAPU16 = T = new Uint16Array(W)),
          (i.HEAP32 = M = new Int32Array(W)),
          (i.HEAPU32 = L = new Uint32Array(W)),
          (i.HEAPF32 = O = new Float32Array(W)),
          (i.HEAPF64 = U = new Float64Array(W));
      }
      var H = [],
        $ = [],
        F = [];
      function B() {
        var W = i.preRun.shift();
        H.unshift(W);
      }
      var j = 0,
        G = null;
      function u1(W) {
        var z;
        throw (
          ((z = i.onAbort) == null || z.call(i, W),
          (W = "Aborted(" + W + ")"),
          m(W),
          (b = !0),
          (W = new WebAssembly.RuntimeError(
            W + ". Build with -sASSERTIONS for more info."
          )),
          o(W),
          W)
        );
      }
      var e1 = (W) => W.startsWith("data:application/octet-stream;base64,"),
        i1;
      function Z(W) {
        if (W == i1 && g) return new Uint8Array(g);
        throw "both async and sync fetching of the wasm failed";
      }
      function b1(W) {
        return g
          ? Promise.resolve().then(() => Z(W))
          : p(W).then(
              (z) => new Uint8Array(z),
              () => Z(W)
            );
      }
      function o1(W, z, l1) {
        return b1(W)
          .then((c1) => WebAssembly.instantiate(c1, z))
          .then(l1, (c1) => {
            m(`failed to asynchronously prepare wasm: ${c1}`), u1(c1);
          });
      }
      function k1(W, z) {
        var l1 = i1;
        return g ||
          typeof WebAssembly.instantiateStreaming != "function" ||
          e1(l1) ||
          typeof fetch != "function"
          ? o1(l1, W, z)
          : fetch(l1, { credentials: "same-origin" }).then((c1) =>
              WebAssembly.instantiateStreaming(c1, W).then(z, function (S1) {
                return (
                  m(`wasm streaming compile failed: ${S1}`),
                  m("falling back to ArrayBuffer instantiation"),
                  o1(l1, W, z)
                );
              })
            );
      }
      class Y1 {
        constructor(z) {
          wt(this, "name", "ExitStatus"),
            (this.message = `Program terminated with exit(${z})`),
            (this.status = z);
        }
      }
      var G1 = (W) => {
          for (; 0 < W.length; ) W.shift()(i);
        },
        M1 = i.noExitRuntime || !0,
        Q1 = typeof TextDecoder < "u" ? new TextDecoder() : void 0,
        re = (W = 0, z = NaN) => {
          var l1 = P,
            c1 = W + z;
          for (z = W; l1[z] && !(z >= c1); ) ++z;
          if (16 < z - W && l1.buffer && Q1)
            return Q1.decode(l1.subarray(W, z));
          for (c1 = ""; W < z; ) {
            var S1 = l1[W++];
            if (S1 & 128) {
              var B1 = l1[W++] & 63;
              if ((S1 & 224) == 192)
                c1 += String.fromCharCode(((S1 & 31) << 6) | B1);
              else {
                var te = l1[W++] & 63;
                (S1 =
                  (S1 & 240) == 224
                    ? ((S1 & 15) << 12) | (B1 << 6) | te
                    : ((S1 & 7) << 18) |
                      (B1 << 12) |
                      (te << 6) |
                      (l1[W++] & 63)),
                  65536 > S1
                    ? (c1 += String.fromCharCode(S1))
                    : ((S1 -= 65536),
                      (c1 += String.fromCharCode(
                        55296 | (S1 >> 10),
                        56320 | (S1 & 1023)
                      )));
              }
            } else c1 += String.fromCharCode(S1);
          }
          return c1;
        };
      class d1 {
        constructor(z) {
          this.va = z - 24;
        }
      }
      var h1 = 0,
        y1 = (W, z, l1) => {
          var c1 = P;
          if (0 < l1) {
            l1 = z + l1 - 1;
            for (var S1 = 0; S1 < W.length; ++S1) {
              var B1 = W.charCodeAt(S1);
              if (55296 <= B1 && 57343 >= B1) {
                var te = W.charCodeAt(++S1);
                B1 = (65536 + ((B1 & 1023) << 10)) | (te & 1023);
              }
              if (127 >= B1) {
                if (z >= l1) break;
                c1[z++] = B1;
              } else {
                if (2047 >= B1) {
                  if (z + 1 >= l1) break;
                  c1[z++] = 192 | (B1 >> 6);
                } else {
                  if (65535 >= B1) {
                    if (z + 2 >= l1) break;
                    c1[z++] = 224 | (B1 >> 12);
                  } else {
                    if (z + 3 >= l1) break;
                    (c1[z++] = 240 | (B1 >> 18)),
                      (c1[z++] = 128 | ((B1 >> 12) & 63));
                  }
                  c1[z++] = 128 | ((B1 >> 6) & 63);
                }
                c1[z++] = 128 | (B1 & 63);
              }
            }
            c1[z] = 0;
          }
        },
        A1 = {},
        L1 = (W) => {
          for (; W.length; ) {
            var z = W.pop();
            W.pop()(z);
          }
        };
      function V1(W) {
        return this.fromWireType(L[W >> 2]);
      }
      var ie = {},
        ae = {},
        Be = {},
        Ve,
        ce = (W, z, l1) => {
          function c1(K1) {
            if (((K1 = l1(K1)), K1.length !== W.length))
              throw new Ve("Mismatched type converter count");
            for (var Pe = 0; Pe < W.length; ++Pe) E1(W[Pe], K1[Pe]);
          }
          W.forEach((K1) => (Be[K1] = z));
          var S1 = Array(z.length),
            B1 = [],
            te = 0;
          z.forEach((K1, Pe) => {
            ae.hasOwnProperty(K1)
              ? (S1[Pe] = ae[K1])
              : (B1.push(K1),
                ie.hasOwnProperty(K1) || (ie[K1] = []),
                ie[K1].push(() => {
                  (S1[Pe] = ae[K1]), ++te, te === B1.length && c1(S1);
                }));
          }),
            B1.length === 0 && c1(S1);
        },
        gt,
        qe = (W) => {
          for (var z = ""; P[W]; ) z += gt[P[W++]];
          return z;
        },
        je;
      function g1(W, z, l1 = {}) {
        var c1 = z.name;
        if (!W)
          throw new je(
            `type "${c1}" must have a positive integer typeid pointer`
          );
        if (ae.hasOwnProperty(W)) {
          if (l1.$a) return;
          throw new je(`Cannot register type '${c1}' twice`);
        }
        (ae[W] = z),
          delete Be[W],
          ie.hasOwnProperty(W) &&
            ((z = ie[W]), delete ie[W], z.forEach((S1) => S1()));
      }
      function E1(W, z, l1 = {}) {
        return g1(W, z, l1);
      }
      var j1 = (W) => {
          throw new je(W.ta.wa.ua.name + " instance already deleted");
        },
        a1 = !1,
        K = () => {},
        t1 = (W, z, l1) =>
          z === l1
            ? W
            : l1.za === void 0
            ? null
            : ((W = t1(W, z, l1.za)), W === null ? null : l1.Ta(W)),
        r1 = {},
        m1 = {},
        R = (W, z) => {
          if (z === void 0) throw new je("ptr should not be undefined");
          for (; W.za; ) (z = W.Ja(z)), (W = W.za);
          return m1[z];
        },
        C = (W, z) => {
          if (!z.wa || !z.va)
            throw new Ve("makeClassHandle requires ptr and ptrType");
          if (!!z.Aa != !!z.ya)
            throw new Ve("Both smartPtrType and smartPtr must be specified");
          return (
            (z.count = { value: 1 }),
            k(Object.create(W, { ta: { value: z, writable: !0 } }))
          );
        },
        k = (W) =>
          typeof FinalizationRegistry > "u"
            ? ((k = (z) => z), W)
            : ((a1 = new FinalizationRegistry((z) => {
                (z = z.ta),
                  --z.count.value,
                  z.count.value === 0 &&
                    (z.ya ? z.Aa.Da(z.ya) : z.wa.ua.Da(z.va));
              })),
              (k = (z) => {
                var l1 = z.ta;
                return l1.ya && a1.register(z, { ta: l1 }, z), z;
              }),
              (K = (z) => {
                a1.unregister(z);
              }),
              k(W));
      function q() {}
      var s1 = (W, z) => Object.defineProperty(z, "name", { value: W }),
        v1 = (W, z, l1) => {
          if (W[z].xa === void 0) {
            var c1 = W[z];
            (W[z] = function (...S1) {
              if (!W[z].xa.hasOwnProperty(S1.length))
                throw new je(
                  `Function '${l1}' called with an invalid number of arguments (${S1.length}) - expects one of (${W[z].xa})!`
                );
              return W[z].xa[S1.length].apply(this, S1);
            }),
              (W[z].xa = []),
              (W[z].xa[c1.Ga] = c1);
          }
        },
        w1 = (W, z, l1) => {
          if (i.hasOwnProperty(W)) {
            if (l1 === void 0 || (i[W].xa !== void 0 && i[W].xa[l1] !== void 0))
              throw new je(`Cannot register public name '${W}' twice`);
            if ((v1(i, W, W), i[W].xa.hasOwnProperty(l1)))
              throw new je(
                `Cannot register multiple overloads of a function with the same number of arguments (${l1})!`
              );
            i[W].xa[l1] = z;
          } else (i[W] = z), (i[W].Ga = l1);
        },
        $1 = (W) => {
          W = W.replace(/[^a-zA-Z0-9_]/g, "$");
          var z = W.charCodeAt(0);
          return 48 <= z && 57 >= z ? `_${W}` : W;
        };
      function he(W, z, l1, c1, S1, B1, te, K1) {
        (this.name = W),
          (this.constructor = z),
          (this.Fa = l1),
          (this.Da = c1),
          (this.za = S1),
          (this.Va = B1),
          (this.Ja = te),
          (this.Ta = K1),
          (this.bb = []);
      }
      var U1 = (W, z, l1) => {
        for (; z !== l1; ) {
          if (!z.Ja)
            throw new je(
              `Expected null or instance of ${l1.name}, got an instance of ${z.name}`
            );
          (W = z.Ja(W)), (z = z.za);
        }
        return W;
      };
      function Le(W, z) {
        if (z === null) {
          if (this.Ma) throw new je(`null is not a valid ${this.name}`);
          return 0;
        }
        if (!z.ta) throw new je(`Cannot pass "${St(z)}" as a ${this.name}`);
        if (!z.ta.va)
          throw new je(
            `Cannot pass deleted object as a pointer of type ${this.name}`
          );
        return U1(z.ta.va, z.ta.wa.ua, this.ua);
      }
      function pe(W, z) {
        if (z === null) {
          if (this.Ma) throw new je(`null is not a valid ${this.name}`);
          if (this.La) {
            var l1 = this.Na();
            return W !== null && W.push(this.Da, l1), l1;
          }
          return 0;
        }
        if (!z || !z.ta)
          throw new je(`Cannot pass "${St(z)}" as a ${this.name}`);
        if (!z.ta.va)
          throw new je(
            `Cannot pass deleted object as a pointer of type ${this.name}`
          );
        if (!this.Ka && z.ta.wa.Ka)
          throw new je(
            `Cannot convert argument of type ${
              z.ta.Aa ? z.ta.Aa.name : z.ta.wa.name
            } to parameter type ${this.name}`
          );
        if (((l1 = U1(z.ta.va, z.ta.wa.ua, this.ua)), this.La)) {
          if (z.ta.ya === void 0)
            throw new je("Passing raw pointer to smart pointer is illegal");
          switch (this.hb) {
            case 0:
              if (z.ta.Aa === this) l1 = z.ta.ya;
              else
                throw new je(
                  `Cannot convert argument of type ${
                    z.ta.Aa ? z.ta.Aa.name : z.ta.wa.name
                  } to parameter type ${this.name}`
                );
              break;
            case 1:
              l1 = z.ta.ya;
              break;
            case 2:
              if (z.ta.Aa === this) l1 = z.ta.ya;
              else {
                var c1 = z.clone();
                (l1 = this.cb(
                  l1,
                  W1(() => c1.delete())
                )),
                  W !== null && W.push(this.Da, l1);
              }
              break;
            default:
              throw new je("Unsupporting sharing policy");
          }
        }
        return l1;
      }
      function bt(W, z) {
        if (z === null) {
          if (this.Ma) throw new je(`null is not a valid ${this.name}`);
          return 0;
        }
        if (!z.ta) throw new je(`Cannot pass "${St(z)}" as a ${this.name}`);
        if (!z.ta.va)
          throw new je(
            `Cannot pass deleted object as a pointer of type ${this.name}`
          );
        if (z.ta.wa.Ka)
          throw new je(
            `Cannot convert argument of type ${z.ta.wa.name} to parameter type ${this.name}`
          );
        return U1(z.ta.va, z.ta.wa.ua, this.ua);
      }
      function It(W, z, l1, c1, S1, B1, te, K1, Pe, _e, Ue) {
        (this.name = W),
          (this.ua = z),
          (this.Ma = l1),
          (this.Ka = c1),
          (this.La = S1),
          (this.ab = B1),
          (this.hb = te),
          (this.Ra = K1),
          (this.Na = Pe),
          (this.cb = _e),
          (this.Da = Ue),
          S1 || z.za !== void 0
            ? (this.toWireType = pe)
            : ((this.toWireType = c1 ? Le : bt), (this.Ca = null));
      }
      var en = (W, z, l1) => {
          if (!i.hasOwnProperty(W))
            throw new Ve("Replacing nonexistent public symbol");
          i[W].xa !== void 0 && l1 !== void 0
            ? (i[W].xa[l1] = z)
            : ((i[W] = z), (i[W].Ga = l1));
        },
        At,
        hn = (W, z, l1 = []) => (
          W.includes("j")
            ? ((W = W.replace(/p/g, "i")),
              (z = (0, i["dynCall_" + W])(z, ...l1)))
            : (z = At.get(z)(...l1)),
          z
        ),
        si =
          (W, z) =>
          (...l1) =>
            hn(W, z, l1),
        Ht = (W, z) => {
          W = qe(W);
          var l1 = W.includes("j") ? si(W, z) : At.get(z);
          if (typeof l1 != "function")
            throw new je(`unknown function pointer with signature ${W}: ${z}`);
          return l1;
        },
        Lr,
        xr = (W) => {
          W = mt(W);
          var z = qe(W);
          return ht(W), z;
        },
        on = (W, z) => {
          function l1(B1) {
            S1[B1] ||
              ae[B1] ||
              (Be[B1] ? Be[B1].forEach(l1) : (c1.push(B1), (S1[B1] = !0)));
          }
          var c1 = [],
            S1 = {};
          throw (z.forEach(l1), new Lr(`${W}: ` + c1.map(xr).join([", "])));
        },
        oi = (W, z) => {
          for (var l1 = [], c1 = 0; c1 < W; c1++) l1.push(L[(z + 4 * c1) >> 2]);
          return l1;
        };
      function V(W) {
        for (var z = 1; z < W.length; ++z)
          if (W[z] !== null && W[z].Ca === void 0) return !0;
        return !1;
      }
      function X(W, z, l1, c1, S1) {
        var B1 = z.length;
        if (2 > B1)
          throw new je(
            "argTypes array size mismatch! Must at least get return value and 'this' types!"
          );
        var te = z[1] !== null && l1 !== null,
          K1 = V(z),
          Pe = z[0].name !== "void",
          _e = B1 - 2,
          Ue = Array(_e),
          kt = [],
          Ot = [];
        return s1(W, function (...Cr) {
          if (((Ot.length = 0), (kt.length = te ? 2 : 1), (kt[0] = S1), te)) {
            var pn = z[1].toWireType(Ot, this);
            kt[1] = pn;
          }
          for (var ln = 0; ln < _e; ++ln)
            (Ue[ln] = z[ln + 2].toWireType(Ot, Cr[ln])), kt.push(Ue[ln]);
          if (((Cr = c1(...kt)), K1)) L1(Ot);
          else
            for (ln = te ? 1 : 2; ln < z.length; ln++) {
              var ar = ln === 1 ? pn : Ue[ln - 2];
              z[ln].Ca !== null && z[ln].Ca(ar);
            }
          return (pn = Pe ? z[0].fromWireType(Cr) : void 0), pn;
        });
      }
      var Q = (W) => {
          W = W.trim();
          let z = W.indexOf("(");
          return z !== -1 ? W.substr(0, z) : W;
        },
        A = [],
        n1 = [],
        _1 = (W) => {
          9 < W && --n1[W + 1] === 0 && ((n1[W] = void 0), A.push(W));
        },
        T1 = (W) => {
          if (!W) throw new je("Cannot use deleted val. handle = " + W);
          return n1[W];
        },
        W1 = (W) => {
          switch (W) {
            case void 0:
              return 2;
            case null:
              return 4;
            case !0:
              return 6;
            case !1:
              return 8;
            default:
              let z = A.pop() || n1.length;
              return (n1[z] = W), (n1[z + 1] = 1), z;
          }
        },
        X1 = {
          name: "emscripten::val",
          fromWireType: (W) => {
            var z = T1(W);
            return _1(W), z;
          },
          toWireType: (W, z) => W1(z),
          Ba: 8,
          readValueFromPointer: V1,
          Ca: null,
        },
        Me = (W, z, l1) => {
          switch (z) {
            case 1:
              return l1
                ? function (c1) {
                    return this.fromWireType(E[c1]);
                  }
                : function (c1) {
                    return this.fromWireType(P[c1]);
                  };
            case 2:
              return l1
                ? function (c1) {
                    return this.fromWireType(_[c1 >> 1]);
                  }
                : function (c1) {
                    return this.fromWireType(T[c1 >> 1]);
                  };
            case 4:
              return l1
                ? function (c1) {
                    return this.fromWireType(M[c1 >> 2]);
                  }
                : function (c1) {
                    return this.fromWireType(L[c1 >> 2]);
                  };
            default:
              throw new TypeError(`invalid integer width (${z}): ${W}`);
          }
        },
        de = (W, z) => {
          var l1 = ae[W];
          if (l1 === void 0)
            throw ((W = `${z} has unknown type ${xr(W)}`), new je(W));
          return l1;
        },
        St = (W) => {
          if (W === null) return "null";
          var z = typeof W;
          return z === "object" || z === "array" || z === "function"
            ? W.toString()
            : "" + W;
        },
        ye = (W, z) => {
          switch (z) {
            case 4:
              return function (l1) {
                return this.fromWireType(O[l1 >> 2]);
              };
            case 8:
              return function (l1) {
                return this.fromWireType(U[l1 >> 3]);
              };
            default:
              throw new TypeError(`invalid float width (${z}): ${W}`);
          }
        },
        Ge = (W, z, l1) => {
          switch (z) {
            case 1:
              return l1 ? (c1) => E[c1] : (c1) => P[c1];
            case 2:
              return l1 ? (c1) => _[c1 >> 1] : (c1) => T[c1 >> 1];
            case 4:
              return l1 ? (c1) => M[c1 >> 2] : (c1) => L[c1 >> 2];
            default:
              throw new TypeError(`invalid integer width (${z}): ${W}`);
          }
        },
        Xe = Object.assign({ optional: !0 }, X1),
        at = typeof TextDecoder < "u" ? new TextDecoder("utf-16le") : void 0,
        ut = (W, z) => {
          for (var l1 = W >> 1, c1 = l1 + z / 2; !(l1 >= c1) && T[l1]; ) ++l1;
          if (((l1 <<= 1), 32 < l1 - W && at))
            return at.decode(P.subarray(W, l1));
          for (l1 = "", c1 = 0; !(c1 >= z / 2); ++c1) {
            var S1 = _[(W + 2 * c1) >> 1];
            if (S1 == 0) break;
            l1 += String.fromCharCode(S1);
          }
          return l1;
        },
        tt = (W, z, l1) => {
          if ((l1 != null || (l1 = 2147483647), 2 > l1)) return 0;
          l1 -= 2;
          var c1 = z;
          l1 = l1 < 2 * W.length ? l1 / 2 : W.length;
          for (var S1 = 0; S1 < l1; ++S1)
            (_[z >> 1] = W.charCodeAt(S1)), (z += 2);
          return (_[z >> 1] = 0), z - c1;
        },
        Ce = (W) => 2 * W.length,
        nt = (W, z) => {
          for (var l1 = 0, c1 = ""; !(l1 >= z / 4); ) {
            var S1 = M[(W + 4 * l1) >> 2];
            if (S1 == 0) break;
            ++l1,
              65536 <= S1
                ? ((S1 -= 65536),
                  (c1 += String.fromCharCode(
                    55296 | (S1 >> 10),
                    56320 | (S1 & 1023)
                  )))
                : (c1 += String.fromCharCode(S1));
          }
          return c1;
        },
        ve = (W, z, l1) => {
          if ((l1 != null || (l1 = 2147483647), 4 > l1)) return 0;
          var c1 = z;
          l1 = c1 + l1 - 4;
          for (var S1 = 0; S1 < W.length; ++S1) {
            var B1 = W.charCodeAt(S1);
            if (55296 <= B1 && 57343 >= B1) {
              var te = W.charCodeAt(++S1);
              B1 = (65536 + ((B1 & 1023) << 10)) | (te & 1023);
            }
            if (((M[z >> 2] = B1), (z += 4), z + 4 > l1)) break;
          }
          return (M[z >> 2] = 0), z - c1;
        },
        Ne = (W) => {
          for (var z = 0, l1 = 0; l1 < W.length; ++l1) {
            var c1 = W.charCodeAt(l1);
            55296 <= c1 && 57343 >= c1 && ++l1, (z += 4);
          }
          return z;
        },
        fe = 0,
        we = [],
        Te = (W) => {
          var z = we.length;
          return we.push(W), z;
        },
        le = (W, z) => {
          for (var l1 = Array(W), c1 = 0; c1 < W; ++c1)
            l1[c1] = de(L[(z + 4 * c1) >> 2], "parameter " + c1);
          return l1;
        },
        I1 = Reflect.construct,
        N1 = {},
        H1 = (W) => {
          if (!(W instanceof Y1 || W == "unwind")) throw W;
        },
        z1 = (W) => {
          var z;
          throw (
            ((x = W),
            M1 || 0 < fe || ((z = i.onExit) == null || z.call(i, W), (b = !0)),
            new Y1(W))
          );
        },
        q1 = (W) => {
          if (!b)
            try {
              if ((W(), !(M1 || 0 < fe)))
                try {
                  (x = W = x), z1(W);
                } catch (z) {
                  H1(z);
                }
            } catch (z) {
              H1(z);
            }
        },
        J1 = {},
        De = () => {
          if (!Je) {
            var W = {
                USER: "web_user",
                LOGNAME: "web_user",
                PATH: "/",
                PWD: "/",
                HOME: "/home/web_user",
                LANG:
                  (
                    (typeof navigator == "object" &&
                      navigator.languages &&
                      navigator.languages[0]) ||
                    "C"
                  ).replace("-", "_") + ".UTF-8",
                _: f || "./this.program",
              },
              z;
            for (z in J1) J1[z] === void 0 ? delete W[z] : (W[z] = J1[z]);
            var l1 = [];
            for (z in W) l1.push(`${z}=${W[z]}`);
            Je = l1;
          }
          return Je;
        },
        Je,
        ot = () => {
          if (
            typeof crypto == "object" &&
            typeof crypto.getRandomValues == "function"
          )
            return (W) => crypto.getRandomValues(W);
          u1("initRandomDevice");
        },
        rt = (W) => (rt = ot())(W);
      Ve = i.InternalError = class extends Error {
        constructor(W) {
          super(W), (this.name = "InternalError");
        }
      };
      for (var p1 = Array(256), ft = 0; 256 > ft; ++ft)
        p1[ft] = String.fromCharCode(ft);
      (gt = p1),
        (je = i.BindingError =
          class extends Error {
            constructor(W) {
              super(W), (this.name = "BindingError");
            }
          }),
        Object.assign(q.prototype, {
          isAliasOf: function (W) {
            if (!(this instanceof q && W instanceof q)) return !1;
            var z = this.ta.wa.ua,
              l1 = this.ta.va;
            W.ta = W.ta;
            var c1 = W.ta.wa.ua;
            for (W = W.ta.va; z.za; ) (l1 = z.Ja(l1)), (z = z.za);
            for (; c1.za; ) (W = c1.Ja(W)), (c1 = c1.za);
            return z === c1 && l1 === W;
          },
          clone: function () {
            if ((this.ta.va || j1(this), this.ta.Ia))
              return (this.ta.count.value += 1), this;
            var W = k,
              z = Object,
              l1 = z.create,
              c1 = Object.getPrototypeOf(this),
              S1 = this.ta;
            return (
              (W = W(
                l1.call(z, c1, {
                  ta: {
                    value: {
                      count: S1.count,
                      Ha: S1.Ha,
                      Ia: S1.Ia,
                      va: S1.va,
                      wa: S1.wa,
                      ya: S1.ya,
                      Aa: S1.Aa,
                    },
                  },
                })
              )),
              (W.ta.count.value += 1),
              (W.ta.Ha = !1),
              W
            );
          },
          delete() {
            if ((this.ta.va || j1(this), this.ta.Ha && !this.ta.Ia))
              throw new je("Object already scheduled for deletion");
            K(this);
            var W = this.ta;
            --W.count.value,
              W.count.value === 0 && (W.ya ? W.Aa.Da(W.ya) : W.wa.ua.Da(W.va)),
              this.ta.Ia || ((this.ta.ya = void 0), (this.ta.va = void 0));
          },
          isDeleted: function () {
            return !this.ta.va;
          },
          deleteLater: function () {
            if ((this.ta.va || j1(this), this.ta.Ha && !this.ta.Ia))
              throw new je("Object already scheduled for deletion");
            return (this.ta.Ha = !0), this;
          },
        }),
        Object.assign(It.prototype, {
          Wa(W) {
            return this.Ra && (W = this.Ra(W)), W;
          },
          Pa(W) {
            var z;
            (z = this.Da) == null || z.call(this, W);
          },
          Ba: 8,
          readValueFromPointer: V1,
          fromWireType: function (W) {
            function z() {
              return this.La
                ? C(this.ua.Fa, { wa: this.ab, va: l1, Aa: this, ya: W })
                : C(this.ua.Fa, { wa: this, va: W });
            }
            var l1 = this.Wa(W);
            if (!l1) return this.Pa(W), null;
            var c1 = R(this.ua, l1);
            if (c1 !== void 0)
              return c1.ta.count.value === 0
                ? ((c1.ta.va = l1), (c1.ta.ya = W), c1.clone())
                : ((c1 = c1.clone()), this.Pa(W), c1);
            if (((c1 = this.ua.Va(l1)), (c1 = r1[c1]), !c1))
              return z.call(this);
            c1 = this.Ka ? c1.Sa : c1.pointerType;
            var S1 = t1(l1, this.ua, c1.ua);
            return S1 === null
              ? z.call(this)
              : this.La
              ? C(c1.ua.Fa, { wa: c1, va: S1, Aa: this, ya: W })
              : C(c1.ua.Fa, { wa: c1, va: S1 });
          },
        }),
        (Lr = i.UnboundTypeError =
          ((W, z) => {
            var l1 = s1(z, function (c1) {
              (this.name = z),
                (this.message = c1),
                (c1 = Error(c1).stack),
                c1 !== void 0 &&
                  (this.stack =
                    this.toString() +
                    `
` +
                    c1.replace(/^Error(:[^\n]*)?\n/, ""));
            });
            return (
              (l1.prototype = Object.create(W.prototype)),
              (l1.prototype.constructor = l1),
              (l1.prototype.toString = function () {
                return this.message === void 0
                  ? this.name
                  : `${this.name}: ${this.message}`;
              }),
              l1
            );
          })(Error, "UnboundTypeError")),
        n1.push(0, 1, void 0, 1, null, 1, !0, 1, !1, 1),
        (i.count_emval_handles = () => n1.length / 2 - 5 - A.length);
      var Et = {
          c: (W, z, l1, c1) =>
            u1(
              `Assertion failed: ${W ? re(W) : ""}, at: ` +
                [
                  z ? (z ? re(z) : "") : "unknown filename",
                  l1,
                  c1 ? (c1 ? re(c1) : "") : "unknown function",
                ]
            ),
          m: (W, z, l1) => {
            var c1 = new d1(W);
            throw (
              ((L[(c1.va + 16) >> 2] = 0),
              (L[(c1.va + 4) >> 2] = z),
              (L[(c1.va + 8) >> 2] = l1),
              (h1 = W),
              h1)
            );
          },
          M: () => {},
          J: () => {},
          K: () => {},
          O: function () {},
          L: () => {},
          Q: () => u1(""),
          v: (W) => {
            var z = A1[W];
            delete A1[W];
            var l1 = z.Na,
              c1 = z.Da,
              S1 = z.Qa,
              B1 = S1.map((te) => te.Za).concat(S1.map((te) => te.fb));
            ce([W], B1, (te) => {
              var K1 = {};
              return (
                S1.forEach((Pe, _e) => {
                  var Ue = te[_e],
                    kt = Pe.Xa,
                    Ot = Pe.Ya,
                    Cr = te[_e + S1.length],
                    pn = Pe.eb,
                    ln = Pe.gb;
                  K1[Pe.Ua] = {
                    read: (ar) => Ue.fromWireType(kt(Ot, ar)),
                    write: (ar, C2) => {
                      var lr = [];
                      pn(ln, ar, Cr.toWireType(lr, C2)), L1(lr);
                    },
                  };
                }),
                [
                  {
                    name: z.name,
                    fromWireType: (Pe) => {
                      var _e = {},
                        Ue;
                      for (Ue in K1) _e[Ue] = K1[Ue].read(Pe);
                      return c1(Pe), _e;
                    },
                    toWireType: (Pe, _e) => {
                      for (var Ue in K1)
                        if (!(Ue in _e))
                          throw new TypeError(`Missing field: "${Ue}"`);
                      var kt = l1();
                      for (Ue in K1) K1[Ue].write(kt, _e[Ue]);
                      return Pe !== null && Pe.push(c1, kt), kt;
                    },
                    Ba: 8,
                    readValueFromPointer: V1,
                    Ca: c1,
                  },
                ]
              );
            });
          },
          C: () => {},
          V: (W, z, l1, c1) => {
            (z = qe(z)),
              E1(W, {
                name: z,
                fromWireType: function (S1) {
                  return !!S1;
                },
                toWireType: function (S1, B1) {
                  return B1 ? l1 : c1;
                },
                Ba: 8,
                readValueFromPointer: function (S1) {
                  return this.fromWireType(P[S1]);
                },
                Ca: null,
              });
          },
          r: (W, z, l1, c1, S1, B1, te, K1, Pe, _e, Ue, kt, Ot) => {
            (Ue = qe(Ue)),
              (B1 = Ht(S1, B1)),
              K1 && (K1 = Ht(te, K1)),
              _e && (_e = Ht(Pe, _e)),
              (Ot = Ht(kt, Ot));
            var Cr = $1(Ue);
            w1(Cr, function () {
              on(`Cannot construct ${Ue} due to unbound types`, [c1]);
            }),
              ce([W, z, l1], c1 ? [c1] : [], (pn) => {
                if (((pn = pn[0]), c1))
                  var ln = pn.ua,
                    ar = ln.Fa;
                else ar = q.prototype;
                pn = s1(Ue, function (...Js) {
                  if (Object.getPrototypeOf(this) !== C2)
                    throw new je("Use 'new' to construct " + Ue);
                  if (lr.Ea === void 0)
                    throw new je(Ue + " has no accessible constructor");
                  var eo = lr.Ea[Js.length];
                  if (eo === void 0)
                    throw new je(
                      `Tried to invoke ctor of ${Ue} with invalid number of parameters (${
                        Js.length
                      }) - expected (${Object.keys(
                        lr.Ea
                      ).toString()}) parameters instead!`
                    );
                  return eo.apply(this, Js);
                });
                var C2 = Object.create(ar, { constructor: { value: pn } });
                pn.prototype = C2;
                var lr = new he(Ue, pn, C2, Ot, ln, B1, K1, _e);
                if (lr.za) {
                  var Ir;
                  (Ir = lr.za).Oa != null || (Ir.Oa = []), lr.za.Oa.push(lr);
                }
                return (
                  (ln = new It(Ue, lr, !0, !1, !1)),
                  (Ir = new It(Ue + "*", lr, !1, !1, !1)),
                  (ar = new It(Ue + " const*", lr, !1, !0, !1)),
                  (r1[W] = { pointerType: Ir, Sa: ar }),
                  en(Cr, pn),
                  [ln, Ir, ar]
                );
              });
          },
          q: (W, z, l1, c1, S1, B1) => {
            var te = oi(z, l1);
            (S1 = Ht(c1, S1)),
              ce([], [W], (K1) => {
                K1 = K1[0];
                var Pe = `constructor ${K1.name}`;
                if (
                  (K1.ua.Ea === void 0 && (K1.ua.Ea = []),
                  K1.ua.Ea[z - 1] !== void 0)
                )
                  throw new je(
                    `Cannot register multiple constructors with identical number of parameters (${
                      z - 1
                    }) for class '${
                      K1.name
                    }'! Overload resolution is currently only performed using the parameter count, not actual type info!`
                  );
                return (
                  (K1.ua.Ea[z - 1] = () => {
                    on(`Cannot construct ${K1.name} due to unbound types`, te);
                  }),
                  ce(
                    [],
                    te,
                    (_e) => (
                      _e.splice(1, 0, null),
                      (K1.ua.Ea[z - 1] = X(Pe, _e, null, S1, B1)),
                      []
                    )
                  ),
                  []
                );
              });
          },
          f: (W, z, l1, c1, S1, B1, te, K1) => {
            var Pe = oi(l1, c1);
            (z = qe(z)),
              (z = Q(z)),
              (B1 = Ht(S1, B1)),
              ce([], [W], (_e) => {
                function Ue() {
                  on(`Cannot call ${kt} due to unbound types`, Pe);
                }
                _e = _e[0];
                var kt = `${_e.name}.${z}`;
                z.startsWith("@@") && (z = Symbol[z.substring(2)]),
                  K1 && _e.ua.bb.push(z);
                var Ot = _e.ua.Fa,
                  Cr = Ot[z];
                return (
                  Cr === void 0 ||
                  (Cr.xa === void 0 &&
                    Cr.className !== _e.name &&
                    Cr.Ga === l1 - 2)
                    ? ((Ue.Ga = l1 - 2), (Ue.className = _e.name), (Ot[z] = Ue))
                    : (v1(Ot, z, kt), (Ot[z].xa[l1 - 2] = Ue)),
                  ce(
                    [],
                    Pe,
                    (pn) => (
                      (pn = X(kt, pn, _e, B1, te)),
                      Ot[z].xa === void 0
                        ? ((pn.Ga = l1 - 2), (Ot[z] = pn))
                        : (Ot[z].xa[l1 - 2] = pn),
                      []
                    )
                  ),
                  []
                );
              });
          },
          U: (W) => E1(W, X1),
          x: (W, z, l1, c1) => {
            function S1() {}
            (z = qe(z)),
              (S1.values = {}),
              E1(W, {
                name: z,
                constructor: S1,
                fromWireType: function (B1) {
                  return this.constructor.values[B1];
                },
                toWireType: (B1, te) => te.value,
                Ba: 8,
                readValueFromPointer: Me(z, l1, c1),
                Ca: null,
              }),
              w1(z, S1);
          },
          k: (W, z, l1) => {
            var c1 = de(W, "enum");
            (z = qe(z)),
              (W = c1.constructor),
              (c1 = Object.create(c1.constructor.prototype, {
                value: { value: l1 },
                constructor: { value: s1(`${c1.name}_${z}`, function () {}) },
              })),
              (W.values[l1] = c1),
              (W[z] = c1);
          },
          z: (W, z, l1) => {
            (z = qe(z)),
              E1(W, {
                name: z,
                fromWireType: (c1) => c1,
                toWireType: (c1, S1) => S1,
                Ba: 8,
                readValueFromPointer: ye(z, l1),
                Ca: null,
              });
          },
          u: (W, z, l1, c1, S1, B1) => {
            var te = oi(z, l1);
            (W = qe(W)),
              (W = Q(W)),
              (S1 = Ht(c1, S1)),
              w1(
                W,
                function () {
                  on(`Cannot call ${W} due to unbound types`, te);
                },
                z - 1
              ),
              ce(
                [],
                te,
                (K1) => (
                  en(
                    W,
                    X(W, [K1[0], null].concat(K1.slice(1)), null, S1, B1),
                    z - 1
                  ),
                  []
                )
              );
          },
          l: (W, z, l1, c1, S1) => {
            if (
              ((z = qe(z)),
              S1 === -1 && (S1 = 4294967295),
              (S1 = (K1) => K1),
              c1 === 0)
            ) {
              var B1 = 32 - 8 * l1;
              S1 = (K1) => (K1 << B1) >>> B1;
            }
            var te = z.includes("unsigned")
              ? function (K1, Pe) {
                  return Pe >>> 0;
                }
              : function (K1, Pe) {
                  return Pe;
                };
            E1(W, {
              name: z,
              fromWireType: S1,
              toWireType: te,
              Ba: 8,
              readValueFromPointer: Ge(z, l1, c1 !== 0),
              Ca: null,
            });
          },
          h: (W, z, l1) => {
            function c1(B1) {
              return new S1(E.buffer, L[(B1 + 4) >> 2], L[B1 >> 2]);
            }
            var S1 = [
              Int8Array,
              Uint8Array,
              Int16Array,
              Uint16Array,
              Int32Array,
              Uint32Array,
              Float32Array,
              Float64Array,
            ][z];
            (l1 = qe(l1)),
              E1(
                W,
                { name: l1, fromWireType: c1, Ba: 8, readValueFromPointer: c1 },
                { $a: !0 }
              );
          },
          t: (W) => {
            E1(W, Xe);
          },
          $: (W, z, l1, c1, S1, B1, te, K1, Pe, _e, Ue, kt) => {
            (l1 = qe(l1)),
              (B1 = Ht(S1, B1)),
              (K1 = Ht(te, K1)),
              (_e = Ht(Pe, _e)),
              (kt = Ht(Ue, kt)),
              ce(
                [W],
                [z],
                (Ot) => (
                  (Ot = Ot[0]),
                  [new It(l1, Ot.ua, !1, !1, !0, Ot, c1, B1, K1, _e, kt)]
                )
              );
          },
          A: (W, z) => {
            z = qe(z);
            var l1 = z === "std::string";
            E1(W, {
              name: z,
              fromWireType: function (c1) {
                var S1 = L[c1 >> 2],
                  B1 = c1 + 4;
                if (l1)
                  for (var te = B1, K1 = 0; K1 <= S1; ++K1) {
                    var Pe = B1 + K1;
                    if (K1 == S1 || P[Pe] == 0) {
                      if (((te = te ? re(te, Pe - te) : ""), _e === void 0))
                        var _e = te;
                      else (_e += "\0"), (_e += te);
                      te = Pe + 1;
                    }
                  }
                else {
                  for (_e = Array(S1), K1 = 0; K1 < S1; ++K1)
                    _e[K1] = String.fromCharCode(P[B1 + K1]);
                  _e = _e.join("");
                }
                return ht(c1), _e;
              },
              toWireType: function (c1, S1) {
                S1 instanceof ArrayBuffer && (S1 = new Uint8Array(S1));
                var B1,
                  te = typeof S1 == "string";
                if (
                  !(
                    te ||
                    S1 instanceof Uint8Array ||
                    S1 instanceof Uint8ClampedArray ||
                    S1 instanceof Int8Array
                  )
                )
                  throw new je("Cannot pass non-string to std::string");
                if (l1 && te)
                  for (var K1 = (B1 = 0); K1 < S1.length; ++K1) {
                    var Pe = S1.charCodeAt(K1);
                    127 >= Pe
                      ? B1++
                      : 2047 >= Pe
                      ? (B1 += 2)
                      : 55296 <= Pe && 57343 >= Pe
                      ? ((B1 += 4), ++K1)
                      : (B1 += 3);
                  }
                else B1 = S1.length;
                if (
                  ((K1 = lt(4 + B1 + 1)),
                  (Pe = K1 + 4),
                  (L[K1 >> 2] = B1),
                  l1 && te)
                )
                  y1(S1, Pe, B1 + 1);
                else if (te)
                  for (te = 0; te < B1; ++te) {
                    var _e = S1.charCodeAt(te);
                    if (255 < _e)
                      throw (
                        (ht(Pe),
                        new je(
                          "String has UTF-16 code units that do not fit in 8 bits"
                        ))
                      );
                    P[Pe + te] = _e;
                  }
                else for (te = 0; te < B1; ++te) P[Pe + te] = S1[te];
                return c1 !== null && c1.push(ht, K1), K1;
              },
              Ba: 8,
              readValueFromPointer: V1,
              Ca(c1) {
                ht(c1);
              },
            });
          },
          s: (W, z, l1) => {
            if (((l1 = qe(l1)), z === 2))
              var c1 = ut,
                S1 = tt,
                B1 = Ce,
                te = (K1) => T[K1 >> 1];
            else
              z === 4 &&
                ((c1 = nt), (S1 = ve), (B1 = Ne), (te = (K1) => L[K1 >> 2]));
            E1(W, {
              name: l1,
              fromWireType: (K1) => {
                for (
                  var Pe = L[K1 >> 2], _e, Ue = K1 + 4, kt = 0;
                  kt <= Pe;
                  ++kt
                ) {
                  var Ot = K1 + 4 + kt * z;
                  (kt == Pe || te(Ot) == 0) &&
                    ((Ue = c1(Ue, Ot - Ue)),
                    _e === void 0 ? (_e = Ue) : ((_e += "\0"), (_e += Ue)),
                    (Ue = Ot + z));
                }
                return ht(K1), _e;
              },
              toWireType: (K1, Pe) => {
                if (typeof Pe != "string")
                  throw new je(
                    `Cannot pass non-string to C++ string type ${l1}`
                  );
                var _e = B1(Pe),
                  Ue = lt(4 + _e + z);
                return (
                  (L[Ue >> 2] = _e / z),
                  S1(Pe, Ue + 4, _e + z),
                  K1 !== null && K1.push(ht, Ue),
                  Ue
                );
              },
              Ba: 8,
              readValueFromPointer: V1,
              Ca(K1) {
                ht(K1);
              },
            });
          },
          w: (W, z, l1, c1, S1, B1) => {
            A1[W] = { name: qe(z), Na: Ht(l1, c1), Da: Ht(S1, B1), Qa: [] };
          },
          j: (W, z, l1, c1, S1, B1, te, K1, Pe, _e) => {
            A1[W].Qa.push({
              Ua: qe(z),
              Za: l1,
              Xa: Ht(c1, S1),
              Ya: B1,
              fb: te,
              eb: Ht(K1, Pe),
              gb: _e,
            });
          },
          W: (W, z) => {
            (z = qe(z)),
              E1(W, {
                ib: !0,
                name: z,
                Ba: 0,
                fromWireType: () => {},
                toWireType: () => {},
              });
          },
          H: () => {
            (M1 = !1), (fe = 0);
          },
          D: () => {
            throw 1 / 0;
          },
          Z: (W, z, l1, c1) => ((W = we[W]), (z = T1(z)), W(null, z, l1, c1)),
          B: _1,
          Y: (W, z, l1) => {
            var c1 = le(W, z),
              S1 = c1.shift();
            W--;
            var B1 = Array(W);
            return (
              (z = `methodCaller<(${c1.map((te) => te.name).join(", ")}) => ${
                S1.name
              }>`),
              Te(
                s1(z, (te, K1, Pe, _e) => {
                  for (var Ue = 0, kt = 0; kt < W; ++kt)
                    (B1[kt] = c1[kt].readValueFromPointer(_e + Ue)),
                      (Ue += c1[kt].Ba);
                  return (
                    (K1 = l1 === 1 ? I1(K1, B1) : K1.apply(te, B1)),
                    (te = []),
                    (K1 = S1.toWireType(te, K1)),
                    te.length && (L[Pe >> 2] = W1(te)),
                    K1
                  );
                })
              )
            );
          },
          _: (W) => {
            9 < W && (n1[W + 1] += 1);
          },
          X: (W) => {
            var z = T1(W);
            L1(z), _1(W);
          },
          o: (W, z) => (
            (W = de(W, "_emval_take_value")),
            (W = W.readValueFromPointer(z)),
            W1(W)
          ),
          E: (W, z) => {
            if ((N1[W] && (clearTimeout(N1[W].id), delete N1[W]), !z)) return 0;
            var l1 = setTimeout(() => {
              delete N1[W], q1(() => qt(W, performance.now()));
            }, z);
            return (N1[W] = { id: l1, jb: z }), 0;
          },
          F: (W, z, l1, c1) => {
            var S1 = new Date().getFullYear(),
              B1 = new Date(S1, 0, 1).getTimezoneOffset();
            (S1 = new Date(S1, 6, 1).getTimezoneOffset()),
              (L[W >> 2] = 60 * Math.max(B1, S1)),
              (M[z >> 2] = +(B1 != S1)),
              (z = (te) => {
                var K1 = Math.abs(te);
                return `UTC${0 <= te ? "-" : "+"}${String(
                  Math.floor(K1 / 60)
                ).padStart(2, "0")}${String(K1 % 60).padStart(2, "0")}`;
              }),
              (W = z(B1)),
              (z = z(S1)),
              S1 < B1
                ? (y1(W, l1, 17), y1(z, c1, 17))
                : (y1(W, c1, 17), y1(z, l1, 17));
          },
          aa: () => performance.now(),
          G: (W) => {
            var z = P.length;
            if (((W >>>= 0), 2147483648 < W)) return !1;
            for (var l1 = 1; 4 >= l1; l1 *= 2) {
              var c1 = z * (1 + 0.2 / l1);
              c1 = Math.min(c1, W + 100663296);
              e: {
                c1 =
                  ((Math.min(
                    2147483648,
                    65536 * Math.ceil(Math.max(W, c1) / 65536)
                  ) -
                    w.buffer.byteLength +
                    65535) /
                    65536) |
                  0;
                try {
                  w.grow(c1), D();
                  var S1 = 1;
                  break e;
                } catch {}
                S1 = void 0;
              }
              if (S1) return !0;
            }
            return !1;
          },
          S: (W, z) => {
            var l1 = 0;
            return (
              De().forEach((c1, S1) => {
                var B1 = z + l1;
                for (
                  S1 = L[(W + 4 * S1) >> 2] = B1, B1 = 0;
                  B1 < c1.length;
                  ++B1
                )
                  E[S1++] = c1.charCodeAt(B1);
                (E[S1] = 0), (l1 += c1.length + 1);
              }),
              0
            );
          },
          T: (W, z) => {
            var l1 = De();
            L[W >> 2] = l1.length;
            var c1 = 0;
            return (
              l1.forEach((S1) => (c1 += S1.length + 1)), (L[z >> 2] = c1), 0
            );
          },
          P: () => 52,
          N: () => 52,
          i: bn,
          d: kn,
          e: En,
          p: ga,
          y: qi,
          b: an,
          a: Kt,
          g: Hi,
          n: zi,
          R: z1,
          I: (W, z) => (rt(P.subarray(W, W + z)), 0),
        },
        $e = (function () {
          var W;
          function z(c1) {
            var S1;
            return (
              ($e = c1.exports),
              (w = $e.ba),
              D(),
              (At = $e.fa),
              $.unshift($e.ca),
              j--,
              (S1 = i.monitorRunDependencies) == null || S1.call(i, j),
              j == 0 && G && ((c1 = G), (G = null), c1()),
              $e
            );
          }
          j++, (W = i.monitorRunDependencies) == null || W.call(i, j);
          var l1 = { a: Et };
          if (i.instantiateWasm)
            try {
              return i.instantiateWasm(l1, z);
            } catch (c1) {
              m(`Module.instantiateWasm callback failed with error: ${c1}`),
                o(c1);
            }
          return (
            i1 != null ||
              (i1 = e1("DotLottiePlayer.wasm")
                ? "DotLottiePlayer.wasm"
                : i.locateFile
                ? i.locateFile("DotLottiePlayer.wasm", d)
                : d + "DotLottiePlayer.wasm"),
            k1(l1, function (c1) {
              z(c1.instance);
            }).catch(o),
            {}
          );
        })(),
        lt = (W) => (lt = $e.da)(W),
        mt = (W) => (mt = $e.ea)(W),
        ht = (W) => (ht = $e.ga)(W),
        qt = (W, z) => (qt = $e.ha)(W, z),
        be = (W, z) => (be = $e.ia)(W, z),
        Pt = (W) => (Pt = $e.ja)(W),
        Mt = () => (Mt = $e.ka)();
      (i.dynCall_iijj = (W, z, l1, c1, S1, B1) =>
        (i.dynCall_iijj = $e.la)(W, z, l1, c1, S1, B1)),
        (i.dynCall_vijj = (W, z, l1, c1, S1, B1) =>
          (i.dynCall_vijj = $e.ma)(W, z, l1, c1, S1, B1)),
        (i.dynCall_jiii = (W, z, l1, c1) =>
          (i.dynCall_jiii = $e.na)(W, z, l1, c1)),
        (i.dynCall_jii = (W, z, l1) => (i.dynCall_jii = $e.oa)(W, z, l1)),
        (i.dynCall_viijii = (W, z, l1, c1, S1, B1, te) =>
          (i.dynCall_viijii = $e.pa)(W, z, l1, c1, S1, B1, te)),
        (i.dynCall_iiiiij = (W, z, l1, c1, S1, B1, te) =>
          (i.dynCall_iiiiij = $e.qa)(W, z, l1, c1, S1, B1, te)),
        (i.dynCall_iiiiijj = (W, z, l1, c1, S1, B1, te, K1, Pe) =>
          (i.dynCall_iiiiijj = $e.ra)(W, z, l1, c1, S1, B1, te, K1, Pe)),
        (i.dynCall_iiiiiijj = (W, z, l1, c1, S1, B1, te, K1, Pe, _e) =>
          (i.dynCall_iiiiiijj = $e.sa)(W, z, l1, c1, S1, B1, te, K1, Pe, _e));
      function Kt(W, z, l1) {
        var c1 = Mt();
        try {
          At.get(W)(z, l1);
        } catch (S1) {
          if ((Pt(c1), S1 !== S1 + 0)) throw S1;
          be(1, 0);
        }
      }
      function an(W, z) {
        var l1 = Mt();
        try {
          At.get(W)(z);
        } catch (c1) {
          if ((Pt(l1), c1 !== c1 + 0)) throw c1;
          be(1, 0);
        }
      }
      function En(W, z, l1, c1) {
        var S1 = Mt();
        try {
          return At.get(W)(z, l1, c1);
        } catch (B1) {
          if ((Pt(S1), B1 !== B1 + 0)) throw B1;
          be(1, 0);
        }
      }
      function kn(W, z, l1) {
        var c1 = Mt();
        try {
          return At.get(W)(z, l1);
        } catch (S1) {
          if ((Pt(c1), S1 !== S1 + 0)) throw S1;
          be(1, 0);
        }
      }
      function bn(W, z) {
        var l1 = Mt();
        try {
          return At.get(W)(z);
        } catch (c1) {
          if ((Pt(l1), c1 !== c1 + 0)) throw c1;
          be(1, 0);
        }
      }
      function ga(W, z, l1, c1, S1, B1) {
        var te = Mt();
        try {
          return At.get(W)(z, l1, c1, S1, B1);
        } catch (K1) {
          if ((Pt(te), K1 !== K1 + 0)) throw K1;
          be(1, 0);
        }
      }
      function zi(W, z, l1, c1, S1) {
        var B1 = Mt();
        try {
          At.get(W)(z, l1, c1, S1);
        } catch (te) {
          if ((Pt(B1), te !== te + 0)) throw te;
          be(1, 0);
        }
      }
      function Hi(W, z, l1, c1) {
        var S1 = Mt();
        try {
          At.get(W)(z, l1, c1);
        } catch (B1) {
          if ((Pt(S1), B1 !== B1 + 0)) throw B1;
          be(1, 0);
        }
      }
      function qi(W) {
        var z = Mt();
        try {
          At.get(W)();
        } catch (l1) {
          if ((Pt(z), l1 !== l1 + 0)) throw l1;
          be(1, 0);
        }
      }
      var Ki;
      G = function W() {
        Ki || ls(), Ki || (G = W);
      };
      function ls() {
        function W() {
          var z;
          if (!Ki && ((Ki = !0), (i.calledRun = !0), !b)) {
            if (
              (G1($),
              s(i),
              (z = i.onRuntimeInitialized) == null || z.call(i),
              i.postRun)
            )
              for (
                typeof i.postRun == "function" && (i.postRun = [i.postRun]);
                i.postRun.length;

              ) {
                var l1 = i.postRun.shift();
                F.unshift(l1);
              }
            G1(F);
          }
        }
        if (!(0 < j)) {
          if (i.preRun)
            for (
              typeof i.preRun == "function" && (i.preRun = [i.preRun]);
              i.preRun.length;

            )
              B();
          G1(H),
            0 < j ||
              (i.setStatus
                ? (i.setStatus("Running..."),
                  setTimeout(() => {
                    setTimeout(() => i.setStatus(""), 1), W();
                  }, 1))
                : W());
        }
      }
      if (i.preInit)
        for (
          typeof i.preInit == "function" && (i.preInit = [i.preInit]);
          0 < i.preInit.length;

        )
          i.preInit.pop()();
      return ls(), (r = l), r;
    };
  })(),
  ZY = QY,
  f4 = class {
    constructor() {
      throw new Error(
        "RendererLoader is a static class and cannot be instantiated."
      );
    }
    static _tryLoad(e) {
      return Tt(this, null, function* () {
        return yield ZY({ locateFile: () => e });
      });
    }
    static _loadWithBackup() {
      return Tt(this, null, function* () {
        return (
          this._ModulePromise ||
            (this._ModulePromise = this._tryLoad(this._wasmURL).catch((e) =>
              Tt(this, null, function* () {
                let t = `https://unpkg.com/${tA}@${eA}/dist/dotlottie-player.wasm`;
                console.warn(
                  `Primary WASM load failed from ${this._wasmURL}. Error: ${e.message}`
                ),
                  console.warn(`Attempting to load WASM from backup URL: ${t}`);
                try {
                  return yield this._tryLoad(t);
                } catch (n) {
                  throw (
                    (console.error(`Primary WASM URL failed: ${e.message}`),
                    console.error(`Backup WASM URL failed: ${n.message}`),
                    new Error("WASM loading failed from all sources."))
                  );
                }
              })
            )),
          this._ModulePromise
        );
      });
    }
    static load() {
      return Tt(this, null, function* () {
        return this._loadWithBackup();
      });
    }
    static setWasmUrl(e) {
      e !== this._wasmURL &&
        ((this._wasmURL = e), (this._ModulePromise = null));
    }
  };
wt(f4, "_ModulePromise", null),
  wt(
    f4,
    "_wasmURL",
    `https://cdn.jsdelivr.net/npm/${tA}@${eA}/dist/dotlottie-player.wasm`
  );
var nA = class {
    constructor() {
      wt(this, "_eventListeners", new Map());
    }
    addEventListener(e, t) {
      let n = this._eventListeners.get(e);
      n || ((n = new Set()), this._eventListeners.set(e, n)), n.add(t);
    }
    removeEventListener(e, t) {
      let n = this._eventListeners.get(e);
      n &&
        (t
          ? (n.delete(t), n.size === 0 && this._eventListeners.delete(e))
          : this._eventListeners.delete(e));
    }
    dispatch(e) {
      let t = this._eventListeners.get(e.type);
      t == null || t.forEach((n) => n(e));
    }
    removeAllEventListeners() {
      this._eventListeners.clear();
    }
  },
  i2 = class {
    static _initializeObserver() {
      if (this._observer) return;
      let e = (t) => {
        t.forEach((n) => {
          let r = this._observedCanvases.get(n.target);
          r && (n.isIntersecting ? r.unfreeze() : r.freeze());
        });
      };
      this._observer = new IntersectionObserver(e, { threshold: 0 });
    }
    static observe(e, t) {
      var n;
      this._initializeObserver(),
        !this._observedCanvases.has(e) &&
          (this._observedCanvases.set(e, t),
          (n = this._observer) == null || n.observe(e));
    }
    static unobserve(e) {
      var t, n;
      (t = this._observer) == null || t.unobserve(e),
        this._observedCanvases.delete(e),
        this._observedCanvases.size === 0 &&
          ((n = this._observer) == null || n.disconnect(),
          (this._observer = null));
    }
  };
wt(i2, "_observer", null), wt(i2, "_observedCanvases", new Map());
var s2 = class {
  static _initializeObserver() {
    if (this._observer) return;
    let e = (t) => {
      t.forEach((n) => {
        let r = this._observedCanvases.get(n.target);
        if (!r) return;
        let [i, s] = r;
        clearTimeout(s);
        let o = setTimeout(() => {
          i.resize();
        }, 100);
        this._observedCanvases.set(n.target, [i, o]);
      });
    };
    this._observer = new ResizeObserver(e);
  }
  static observe(e, t) {
    var n;
    this._initializeObserver(),
      !this._observedCanvases.has(e) &&
        (this._observedCanvases.set(e, [t, 0]),
        (n = this._observer) == null || n.observe(e));
  }
  static unobserve(e) {
    var t, n;
    (t = this._observer) == null || t.unobserve(e),
      this._observedCanvases.delete(e),
      this._observedCanvases.size === 0 &&
        ((n = this._observer) == null || n.disconnect(),
        (this._observer = null));
  }
};
wt(s2, "_observer", null), wt(s2, "_observedCanvases", new Map());
function XY(e) {
  return /^#([\da-f]{6}|[\da-f]{8})$/iu.test(e);
}
function JY(e) {
  if (!XY(e)) return 0;
  let t = e.replace("#", "");
  return (t = t.length === 6 ? `${t}ff` : t), parseInt(t, 16);
}
function sb(e) {
  if (e.byteLength < 4) return !1;
  let t = new Uint8Array(e.slice(0, Q9.byteLength));
  for (let n = 0; n < Q9.length; n += 1) if (Q9[n] !== t[n]) return !1;
  return !0;
}
function ob(e) {
  return GY.every((t) => Object.prototype.hasOwnProperty.call(e, t));
}
function ab(e) {
  if (typeof e == "string")
    try {
      return ob(JSON.parse(e));
    } catch {
      return !1;
    }
  else return ob(e);
}
function Do() {
  return 1 + ((mr ? window.devicePixelRatio : 1) - 1) * YY;
}
function rA(e) {
  let t = e.getBoundingClientRect();
  return (
    t.top >= 0 &&
    t.left >= 0 &&
    t.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&
    t.right <= (window.innerWidth || document.documentElement.clientWidth)
  );
}
var Z9 = (e, t) =>
    e === "reverse"
      ? t.Mode.Reverse
      : e === "bounce"
      ? t.Mode.Bounce
      : e === "reverse-bounce"
      ? t.Mode.ReverseBounce
      : t.Mode.Forward,
  X9 = (e, t) =>
    e === "contain"
      ? t.Fit.Contain
      : e === "cover"
      ? t.Fit.Cover
      : e === "fill"
      ? t.Fit.Fill
      : e === "fit-height"
      ? t.Fit.FitHeight
      : e === "fit-width"
      ? t.Fit.FitWidth
      : t.Fit.None,
  J9 = (e, t) => {
    let n = new t.VectorFloat();
    return n.push_back(e[0]), n.push_back(e[1]), n;
  },
  e5 = (e, t) => {
    let n = new t.VectorFloat();
    return e.length !== 2 || (n.push_back(e[0]), n.push_back(e[1])), n;
  },
  iA = class rn {
    constructor(t) {
      wt(this, "_canvas"),
        wt(this, "_context", null),
        wt(this, "_eventManager"),
        wt(this, "_animationFrameId", null),
        wt(this, "_frameManager"),
        wt(this, "_dotLottieCore", null),
        wt(this, "_renderConfig", {}),
        wt(this, "_isFrozen", !1),
        wt(this, "_backgroundColor", null),
        wt(this, "_pointerUpMethod"),
        wt(this, "_pointerDownMethod"),
        wt(this, "_pointerMoveMethod"),
        wt(this, "_pointerEnterMethod"),
        wt(this, "_pointerExitMethod");
      var n, r, i;
      (this._canvas = t.canvas),
        (this._context = this._canvas.getContext("2d")),
        (this._eventManager = new nA()),
        (this._frameManager = new KY()),
        (this._renderConfig = Ur(tr({}, t.renderConfig), {
          devicePixelRatio:
            ((n = t.renderConfig) == null ? void 0 : n.devicePixelRatio) ||
            Do(),
          freezeOnOffscreen:
            (i = (r = t.renderConfig) == null ? void 0 : r.freezeOnOffscreen) !=
            null
              ? i
              : !0,
        })),
        f4
          .load()
          .then((s) => {
            var o, l, c, f, d, p, m, g;
            (rn._wasmModule = s),
              (this._dotLottieCore = new s.DotLottiePlayer({
                themeId: (o = t.themeId) != null ? o : "",
                autoplay: (l = t.autoplay) != null ? l : !1,
                backgroundColor: 0,
                loopAnimation: (c = t.loop) != null ? c : !1,
                mode: Z9((f = t.mode) != null ? f : "forward", s),
                segment: e5((d = t.segment) != null ? d : [], s),
                speed: (p = t.speed) != null ? p : 1,
                useFrameInterpolation:
                  (m = t.useFrameInterpolation) != null ? m : !0,
                marker: (g = t.marker) != null ? g : "",
                layout: t.layout
                  ? { align: J9(t.layout.align, s), fit: X9(t.layout.fit, s) }
                  : s.createDefaultLayout(),
              })),
              this._eventManager.dispatch({ type: "ready" }),
              t.data
                ? this._loadFromData(t.data)
                : t.src && this._loadFromSrc(t.src),
              t.backgroundColor && this.setBackgroundColor(t.backgroundColor);
          })
          .catch((s) => {
            this._eventManager.dispatch({
              type: "loadError",
              error: new Error(`Failed to load wasm module: ${s}`),
            });
          }),
        (this._pointerUpMethod = this._onPointerUp.bind(this)),
        (this._pointerDownMethod = this._onPointerDown.bind(this)),
        (this._pointerMoveMethod = this._onPointerMove.bind(this)),
        (this._pointerEnterMethod = this._onPointerEnter.bind(this)),
        (this._pointerExitMethod = this._onPointerLeave.bind(this));
    }
    _dispatchError(t) {
      console.error(t),
        this._eventManager.dispatch({ type: "loadError", error: new Error(t) });
    }
    _fetchData(t) {
      return Tt(this, null, function* () {
        let n = yield fetch(t);
        if (!n.ok)
          throw new Error(
            `Failed to fetch animation data from URL: ${t}. ${n.status}: ${n.statusText}`
          );
        let r = yield n.arrayBuffer();
        return sb(r) ? r : new TextDecoder().decode(r);
      });
    }
    _loadFromData(t) {
      if (this._dotLottieCore === null) return;
      let n = this._canvas.width,
        r = this._canvas.height,
        i = !1;
      if (typeof t == "string") {
        if (!ab(t)) {
          this._dispatchError(
            "Invalid Lottie JSON string: The provided string does not conform to the Lottie JSON format."
          );
          return;
        }
        i = this._dotLottieCore.loadAnimationData(t, n, r);
      } else if (t instanceof ArrayBuffer) {
        if (!sb(t)) {
          this._dispatchError(
            "Invalid dotLottie ArrayBuffer: The provided ArrayBuffer does not conform to the dotLottie format."
          );
          return;
        }
        i = this._dotLottieCore.loadDotLottieData(t, n, r);
      } else if (typeof t == "object") {
        if (!ab(t)) {
          this._dispatchError(
            "Invalid Lottie JSON object: The provided object does not conform to the Lottie JSON format."
          );
          return;
        }
        i = this._dotLottieCore.loadAnimationData(JSON.stringify(t), n, r);
      } else {
        this
          ._dispatchError(`Unsupported data type for animation data. Expected: 
          - string (Lottie JSON),
          - ArrayBuffer (dotLottie),
          - object (Lottie JSON). 
          Received: ${typeof t}`);
        return;
      }
      i
        ? (this._eventManager.dispatch({ type: "load" }),
          mr && this.resize(),
          this._eventManager.dispatch({
            type: "frame",
            currentFrame: this.currentFrame,
          }),
          this._render(),
          this._dotLottieCore.config().autoplay &&
            (this._dotLottieCore.play(),
            this._dotLottieCore.isPlaying()
              ? (this._eventManager.dispatch({ type: "play" }),
                (this._animationFrameId =
                  this._frameManager.requestAnimationFrame(
                    this._draw.bind(this)
                  )))
              : console.error(
                  "something went wrong, the animation was suppose to autoplay"
                )),
          mr &&
            this._canvas instanceof HTMLCanvasElement &&
            (this._renderConfig.freezeOnOffscreen &&
              i2.observe(this._canvas, this),
            this._renderConfig.autoResize && s2.observe(this._canvas, this)))
        : this._dispatchError("Failed to load animation data");
    }
    _loadFromSrc(t) {
      this._fetchData(t)
        .then((n) => this._loadFromData(n))
        .catch((n) =>
          this._dispatchError(
            `Failed to load animation data from URL: ${t}. ${n}`
          )
        );
    }
    get activeAnimationId() {
      var t;
      return (t = this._dotLottieCore) == null ? void 0 : t.activeAnimationId();
    }
    get activeThemeId() {
      var t;
      return (t = this._dotLottieCore) == null ? void 0 : t.activeThemeId();
    }
    get layout() {
      var t;
      let n = (t = this._dotLottieCore) == null ? void 0 : t.config().layout;
      if (n)
        return {
          align: [n.align.get(0), n.align.get(1)],
          fit: (() => {
            var r, i, s, o, l, c;
            switch (n.fit) {
              case (r = rn._wasmModule) == null ? void 0 : r.Fit.Contain:
                return "contain";
              case (i = rn._wasmModule) == null ? void 0 : i.Fit.Cover:
                return "cover";
              case (s = rn._wasmModule) == null ? void 0 : s.Fit.Fill:
                return "fill";
              case (o = rn._wasmModule) == null ? void 0 : o.Fit.FitHeight:
                return "fit-height";
              case (l = rn._wasmModule) == null ? void 0 : l.Fit.FitWidth:
                return "fit-width";
              case (c = rn._wasmModule) == null ? void 0 : c.Fit.None:
                return "none";
              default:
                return "contain";
            }
          })(),
        };
    }
    get marker() {
      var t;
      return (t = this._dotLottieCore) == null ? void 0 : t.config().marker;
    }
    get manifest() {
      var t;
      try {
        let n = (t = this._dotLottieCore) == null ? void 0 : t.manifestString();
        if (this._dotLottieCore === null || !n) return null;
        let r = JSON.parse(n);
        return Object.keys(r).length === 0 ? null : r;
      } catch {
        return null;
      }
    }
    get renderConfig() {
      return this._renderConfig;
    }
    get segment() {
      var t;
      let n = (t = this._dotLottieCore) == null ? void 0 : t.config().segment;
      if (n && n.size() === 2) return [n.get(0), n.get(1)];
    }
    get loop() {
      var t, n;
      return (n =
        (t = this._dotLottieCore) == null
          ? void 0
          : t.config().loopAnimation) != null
        ? n
        : !1;
    }
    get mode() {
      var t, n, r, i;
      let s = (t = this._dotLottieCore) == null ? void 0 : t.config().mode;
      return s === ((n = rn._wasmModule) == null ? void 0 : n.Mode.Reverse)
        ? "reverse"
        : s === ((r = rn._wasmModule) == null ? void 0 : r.Mode.Bounce)
        ? "bounce"
        : s === ((i = rn._wasmModule) == null ? void 0 : i.Mode.ReverseBounce)
        ? "reverse-bounce"
        : "forward";
    }
    get isFrozen() {
      return this._isFrozen;
    }
    get backgroundColor() {
      var t;
      return (t = this._backgroundColor) != null ? t : "";
    }
    get autoplay() {
      var t, n;
      return (n =
        (t = this._dotLottieCore) == null ? void 0 : t.config().autoplay) !=
        null
        ? n
        : !1;
    }
    get useFrameInterpolation() {
      var t, n;
      return (n =
        (t = this._dotLottieCore) == null
          ? void 0
          : t.config().useFrameInterpolation) != null
        ? n
        : !1;
    }
    get speed() {
      var t, n;
      return (n =
        (t = this._dotLottieCore) == null ? void 0 : t.config().speed) != null
        ? n
        : 0;
    }
    get isReady() {
      return this._dotLottieCore !== null;
    }
    get isLoaded() {
      var t, n;
      return (n = (t = this._dotLottieCore) == null ? void 0 : t.isLoaded()) !=
        null
        ? n
        : !1;
    }
    get isPlaying() {
      var t, n;
      return (n = (t = this._dotLottieCore) == null ? void 0 : t.isPlaying()) !=
        null
        ? n
        : !1;
    }
    get isPaused() {
      var t, n;
      return (n = (t = this._dotLottieCore) == null ? void 0 : t.isPaused()) !=
        null
        ? n
        : !1;
    }
    get isStopped() {
      var t, n;
      return (n = (t = this._dotLottieCore) == null ? void 0 : t.isStopped()) !=
        null
        ? n
        : !1;
    }
    get currentFrame() {
      return this._dotLottieCore
        ? Math.round(this._dotLottieCore.currentFrame() * 100) / 100
        : 0;
    }
    get loopCount() {
      var t, n;
      return (n = (t = this._dotLottieCore) == null ? void 0 : t.loopCount()) !=
        null
        ? n
        : 0;
    }
    get totalFrames() {
      var t, n;
      return (n =
        (t = this._dotLottieCore) == null ? void 0 : t.totalFrames()) != null
        ? n
        : 0;
    }
    get duration() {
      var t, n;
      return (n = (t = this._dotLottieCore) == null ? void 0 : t.duration()) !=
        null
        ? n
        : 0;
    }
    get segmentDuration() {
      var t, n;
      return (n =
        (t = this._dotLottieCore) == null ? void 0 : t.segmentDuration()) !=
        null
        ? n
        : 0;
    }
    get canvas() {
      return this._canvas;
    }
    load(t) {
      var n, r, i, s, o, l, c, f, d;
      this._dotLottieCore === null ||
        rn._wasmModule === null ||
        (this._animationFrameId !== null &&
          (this._frameManager.cancelAnimationFrame(this._animationFrameId),
          (this._animationFrameId = null)),
        this._dotLottieCore.setConfig({
          themeId: (n = t.themeId) != null ? n : "",
          autoplay: (r = t.autoplay) != null ? r : !1,
          backgroundColor: 0,
          loopAnimation: (i = t.loop) != null ? i : !1,
          mode: Z9((s = t.mode) != null ? s : "forward", rn._wasmModule),
          segment: e5((o = t.segment) != null ? o : [], rn._wasmModule),
          speed: (l = t.speed) != null ? l : 1,
          useFrameInterpolation: (c = t.useFrameInterpolation) != null ? c : !0,
          marker: (f = t.marker) != null ? f : "",
          layout: t.layout
            ? {
                align: J9(t.layout.align, rn._wasmModule),
                fit: X9(t.layout.fit, rn._wasmModule),
              }
            : rn._wasmModule.createDefaultLayout(),
        }),
        t.data ? this._loadFromData(t.data) : t.src && this._loadFromSrc(t.src),
        this.setBackgroundColor((d = t.backgroundColor) != null ? d : ""));
    }
    _render() {
      if (this._dotLottieCore === null || this._context === null) return !1;
      if (this._dotLottieCore.render()) {
        let t = this._dotLottieCore.buffer(),
          n = new Uint8ClampedArray(
            t,
            0,
            this._canvas.width * this._canvas.height * 4
          ),
          r = null;
        return (
          typeof ImageData > "u"
            ? ((r = this._context.createImageData(
                this._canvas.width,
                this._canvas.height
              )),
              r.data.set(n))
            : (r = new ImageData(n, this._canvas.width, this._canvas.height)),
          this._context.putImageData(r, 0, 0),
          this._eventManager.dispatch({
            type: "render",
            currentFrame: this.currentFrame,
          }),
          !0
        );
      }
      return !1;
    }
    _draw() {
      if (
        this._dotLottieCore === null ||
        this._context === null ||
        !this._dotLottieCore.isPlaying()
      )
        return;
      let t = Math.round(this._dotLottieCore.requestFrame() * 100) / 100;
      this._dotLottieCore.setFrame(t) &&
        (this._eventManager.dispatch({
          type: "frame",
          currentFrame: this.currentFrame,
        }),
        this._render() &&
          this._dotLottieCore.isComplete() &&
          (this._dotLottieCore.config().loopAnimation
            ? this._eventManager.dispatch({
                type: "loop",
                loopCount: this._dotLottieCore.loopCount(),
              })
            : this._eventManager.dispatch({ type: "complete" }))),
        (this._animationFrameId = this._frameManager.requestAnimationFrame(
          this._draw.bind(this)
        ));
    }
    play() {
      this._dotLottieCore !== null &&
        ((this._dotLottieCore.play() || this._dotLottieCore.isPlaying()) &&
          ((this._isFrozen = !1),
          this._eventManager.dispatch({ type: "play" }),
          (this._animationFrameId = this._frameManager.requestAnimationFrame(
            this._draw.bind(this)
          ))),
        mr &&
          this._canvas instanceof HTMLCanvasElement &&
          this._renderConfig.freezeOnOffscreen &&
          !rA(this._canvas) &&
          this.freeze());
    }
    pause() {
      this._dotLottieCore !== null &&
        (this._dotLottieCore.pause() || this._dotLottieCore.isPaused()) &&
        this._eventManager.dispatch({ type: "pause" });
    }
    stop() {
      this._dotLottieCore !== null &&
        this._dotLottieCore.stop() &&
        (this._eventManager.dispatch({
          type: "frame",
          currentFrame: this.currentFrame,
        }),
        this._render(),
        this._eventManager.dispatch({ type: "stop" }));
    }
    setFrame(t) {
      this._dotLottieCore === null ||
        t < 0 ||
        t > this._dotLottieCore.totalFrames() ||
        (this._dotLottieCore.seek(t) &&
          (this._eventManager.dispatch({
            type: "frame",
            currentFrame: this.currentFrame,
          }),
          this._render()));
    }
    setSpeed(t) {
      this._dotLottieCore !== null &&
        this._dotLottieCore.setConfig(
          Ur(tr({}, this._dotLottieCore.config()), { speed: t })
        );
    }
    setBackgroundColor(t) {
      this._dotLottieCore !== null &&
        (mr && this._canvas instanceof HTMLCanvasElement
          ? (this._canvas.style.backgroundColor = t)
          : this._dotLottieCore.setConfig(
              Ur(tr({}, this._dotLottieCore.config()), {
                backgroundColor: JY(t),
              })
            ),
        (this._backgroundColor = t));
    }
    setLoop(t) {
      this._dotLottieCore !== null &&
        this._dotLottieCore.setConfig(
          Ur(tr({}, this._dotLottieCore.config()), { loopAnimation: t })
        );
    }
    setUseFrameInterpolation(t) {
      this._dotLottieCore !== null &&
        this._dotLottieCore.setConfig(
          Ur(tr({}, this._dotLottieCore.config()), { useFrameInterpolation: t })
        );
    }
    addEventListener(t, n) {
      this._eventManager.addEventListener(t, n);
    }
    removeEventListener(t, n) {
      this._eventManager.removeEventListener(t, n);
    }
    destroy() {
      var t;
      mr &&
        this._canvas instanceof HTMLCanvasElement &&
        (i2.unobserve(this._canvas), s2.unobserve(this._canvas)),
        (t = this._dotLottieCore) == null || t.delete(),
        (this._dotLottieCore = null),
        (this._context = null),
        this._eventManager.dispatch({ type: "destroy" }),
        this._eventManager.removeAllEventListeners(),
        this._cleanupStateMachineListeners();
    }
    freeze() {
      this._animationFrameId !== null &&
        (this._frameManager.cancelAnimationFrame(this._animationFrameId),
        (this._animationFrameId = null),
        (this._isFrozen = !0),
        this._eventManager.dispatch({ type: "freeze" }));
    }
    unfreeze() {
      this._animationFrameId === null &&
        ((this._animationFrameId = this._frameManager.requestAnimationFrame(
          this._draw.bind(this)
        )),
        (this._isFrozen = !1),
        this._eventManager.dispatch({ type: "unfreeze" }));
    }
    resize() {
      if (!(!this._dotLottieCore || !this.isLoaded)) {
        if (mr && this._canvas instanceof HTMLCanvasElement) {
          let t =
              this._renderConfig.devicePixelRatio ||
              window.devicePixelRatio ||
              1,
            { height: n, width: r } = this._canvas.getBoundingClientRect();
          n !== 0 &&
            r !== 0 &&
            ((this._canvas.width = r * t), (this._canvas.height = n * t));
        }
        this._dotLottieCore.resize(this._canvas.width, this._canvas.height) &&
          this._render();
      }
    }
    setSegment(t, n) {
      this._dotLottieCore === null ||
        rn._wasmModule === null ||
        this._dotLottieCore.setConfig(
          Ur(tr({}, this._dotLottieCore.config()), {
            segment: e5([t, n], rn._wasmModule),
          })
        );
    }
    setMode(t) {
      this._dotLottieCore === null ||
        rn._wasmModule === null ||
        this._dotLottieCore.setConfig(
          Ur(tr({}, this._dotLottieCore.config()), {
            mode: Z9(t, rn._wasmModule),
          })
        );
    }
    setRenderConfig(t) {
      let n = t,
        { devicePixelRatio: r, freezeOnOffscreen: i } = n,
        s = J_(n, ["devicePixelRatio", "freezeOnOffscreen"]);
      (this._renderConfig = Ur(tr(tr({}, this._renderConfig), s), {
        devicePixelRatio: r || Do(),
        freezeOnOffscreen: i ?? !0,
      })),
        mr &&
          this._canvas instanceof HTMLCanvasElement &&
          (this._renderConfig.autoResize
            ? s2.observe(this._canvas, this)
            : s2.unobserve(this._canvas),
          this._renderConfig.freezeOnOffscreen
            ? i2.observe(this._canvas, this)
            : (i2.unobserve(this._canvas), this._isFrozen && this.unfreeze()));
    }
    loadAnimation(t) {
      this._dotLottieCore === null ||
        this._dotLottieCore.activeAnimationId() === t ||
        (this._dotLottieCore.loadAnimation(
          t,
          this._canvas.width,
          this._canvas.height
        )
          ? (this._eventManager.dispatch({ type: "load" }), this.resize())
          : this._eventManager.dispatch({
              type: "loadError",
              error: new Error(`Failed to animation :${t}`),
            }));
    }
    setMarker(t) {
      this._dotLottieCore !== null &&
        this._dotLottieCore.setConfig(
          Ur(tr({}, this._dotLottieCore.config()), { marker: t })
        );
    }
    markers() {
      var t;
      let n = (t = this._dotLottieCore) == null ? void 0 : t.markers();
      if (n) {
        let r = [];
        for (let i = 0; i < n.size(); i += 1) {
          let s = n.get(i);
          r.push({ name: s.name, time: s.time, duration: s.duration });
        }
        return r;
      }
      return [];
    }
    setTheme(t) {
      if (this._dotLottieCore === null) return !1;
      let n = this._dotLottieCore.setTheme(t);
      return this._render(), n;
    }
    resetTheme() {
      return this._dotLottieCore === null
        ? !1
        : this._dotLottieCore.resetTheme();
    }
    setThemeData(t) {
      if (this._dotLottieCore === null) return !1;
      let n = this._dotLottieCore.setThemeData(t);
      return this._render(), n;
    }
    setSlots(t) {
      this._dotLottieCore !== null && this._dotLottieCore.setSlots(t);
    }
    setLayout(t) {
      this._dotLottieCore === null ||
        rn._wasmModule === null ||
        this._dotLottieCore.setConfig(
          Ur(tr({}, this._dotLottieCore.config()), {
            layout: {
              align: J9(t.align, rn._wasmModule),
              fit: X9(t.fit, rn._wasmModule),
            },
          })
        );
    }
    setViewport(t, n, r, i) {
      return this._dotLottieCore === null
        ? !1
        : this._dotLottieCore.setViewport(t, n, r, i);
    }
    static setWasmUrl(t) {
      f4.setWasmUrl(t);
    }
    loadStateMachine(t) {
      var n, r;
      return (r =
        (n = this._dotLottieCore) == null ? void 0 : n.loadStateMachine(t)) !=
        null
        ? r
        : !1;
    }
    startStateMachine() {
      var t, n;
      let r =
        (n =
          (t = this._dotLottieCore) == null ? void 0 : t.startStateMachine()) !=
        null
          ? n
          : !1;
      return r && this._setupStateMachineListeners(), r;
    }
    stopStateMachine() {
      var t, n;
      let r =
        (n =
          (t = this._dotLottieCore) == null ? void 0 : t.stopStateMachine()) !=
        null
          ? n
          : !1;
      return r && this._cleanupStateMachineListeners(), r;
    }
    _getPointerPosition(t) {
      let n = this._canvas.getBoundingClientRect(),
        r = this._canvas.width / n.width,
        i = this._canvas.height / n.height,
        s = this._renderConfig.devicePixelRatio || window.devicePixelRatio || 1,
        o = ((t.clientX - n.left) * r) / s,
        l = ((t.clientY - n.top) * i) / s;
      return { x: o, y: l };
    }
    _onPointerUp(t) {
      let { x: n, y: r } = this._getPointerPosition(t);
      this.postPointerUpEvent(n, r);
    }
    _onPointerDown(t) {
      let { x: n, y: r } = this._getPointerPosition(t);
      this.postPointerDownEvent(n, r);
    }
    _onPointerMove(t) {
      let { x: n, y: r } = this._getPointerPosition(t);
      this.postPointerMoveEvent(n, r);
    }
    _onPointerEnter(t) {
      let { x: n, y: r } = this._getPointerPosition(t);
      this.postPointerEnterEvent(n, r);
    }
    _onPointerLeave(t) {
      let { x: n, y: r } = this._getPointerPosition(t);
      this.postPointerExitEvent(n, r);
    }
    postPointerUpEvent(t, n) {
      var r;
      return (r = this._dotLottieCore) == null
        ? void 0
        : r.postPointerUpEvent(t, n);
    }
    postPointerDownEvent(t, n) {
      var r;
      return (r = this._dotLottieCore) == null
        ? void 0
        : r.postPointerDownEvent(t, n);
    }
    postPointerMoveEvent(t, n) {
      var r;
      return (r = this._dotLottieCore) == null
        ? void 0
        : r.postPointerMoveEvent(t, n);
    }
    postPointerEnterEvent(t, n) {
      var r;
      return (r = this._dotLottieCore) == null
        ? void 0
        : r.postPointerEnterEvent(t, n);
    }
    postPointerExitEvent(t, n) {
      var r;
      return (r = this._dotLottieCore) == null
        ? void 0
        : r.postPointerExitEvent(t, n);
    }
    getStateMachineListeners() {
      if (!this._dotLottieCore) return [];
      let t = this._dotLottieCore.stateMachineFrameworkSetup(),
        n = [];
      for (let r = 0; r < t.size(); r += 1) n.push(t.get(r));
      return n;
    }
    _setupStateMachineListeners() {
      if (
        mr &&
        this._canvas instanceof HTMLCanvasElement &&
        this._dotLottieCore !== null &&
        this.isLoaded
      ) {
        let t = this.getStateMachineListeners();
        t.includes("PointerUp") &&
          this._canvas.addEventListener("pointerup", this._pointerUpMethod),
          t.includes("PointerDown") &&
            this._canvas.addEventListener(
              "pointerdown",
              this._pointerDownMethod
            ),
          t.includes("PointerMove") &&
            this._canvas.addEventListener(
              "pointermove",
              this._pointerMoveMethod
            ),
          t.includes("PointerEnter") &&
            this._canvas.addEventListener(
              "pointerenter",
              this._pointerEnterMethod
            ),
          t.includes("PointerExit") &&
            this._canvas.addEventListener(
              "pointerleave",
              this._pointerExitMethod
            );
      }
    }
    _cleanupStateMachineListeners() {
      mr &&
        this._canvas instanceof HTMLCanvasElement &&
        (this._canvas.removeEventListener("pointerup", this._pointerUpMethod),
        this._canvas.removeEventListener(
          "pointerdown",
          this._pointerDownMethod
        ),
        this._canvas.removeEventListener(
          "pointermove",
          this._pointerMoveMethod
        ),
        this._canvas.removeEventListener(
          "pointerenter",
          this._pointerEnterMethod
        ),
        this._canvas.removeEventListener(
          "pointerleave",
          this._pointerExitMethod
        ));
    }
    loadStateMachineData(t) {
      var n, r;
      return (r =
        (n = this._dotLottieCore) == null
          ? void 0
          : n.loadStateMachineData(t)) != null
        ? r
        : !1;
    }
    animationSize() {
      var t, n, r, i;
      let s =
          (n =
            (t = this._dotLottieCore) == null
              ? void 0
              : t.animationSize().get(0)) != null
            ? n
            : 0,
        o =
          (i =
            (r = this._dotLottieCore) == null
              ? void 0
              : r.animationSize().get(1)) != null
            ? i
            : 0;
      return { width: s, height: o };
    }
    setStateMachineBooleanContext(t, n) {
      var r, i;
      return (i =
        (r = this._dotLottieCore) == null
          ? void 0
          : r.setStateMachineBooleanContext(t, n)) != null
        ? i
        : !1;
    }
    setStateMachineNumericContext(t, n) {
      var r, i;
      return (i =
        (r = this._dotLottieCore) == null
          ? void 0
          : r.setStateMachineNumericContext(t, n)) != null
        ? i
        : !1;
    }
    setStateMachineStringContext(t, n) {
      var r, i;
      return (i =
        (r = this._dotLottieCore) == null
          ? void 0
          : r.setStateMachineStringContext(t, n)) != null
        ? i
        : !1;
    }
    getLayerBoundingBox(t) {
      var n;
      let r = (n = this._dotLottieCore) == null ? void 0 : n.getLayerBounds(t);
      if (!r || r.size() !== 4) return;
      let i = r.get(0),
        s = r.get(1),
        o = r.get(2),
        l = r.get(3);
      return { x: i, y: s, width: o, height: l };
    }
    static transformThemeToLottieSlots(t, n) {
      var r, i;
      return (i =
        (r = rn._wasmModule) == null
          ? void 0
          : r.transformThemeToLottieSlots(t, n)) != null
        ? i
        : "";
    }
  };
wt(iA, "_wasmModule", null);
var eQ = iA,
  tQ = class {
    constructor() {
      if (typeof Worker > "u")
        throw new Error("Worker is not supported in this environment.");
      let e = new Blob(
          [
            new Uint8Array([
              34, 117, 115, 101, 32, 115, 116, 114, 105, 99, 116, 34, 59, 10,
              40, 40, 41, 32, 61, 62, 32, 123, 10, 32, 32, 118, 97, 114, 32, 95,
              95, 100, 101, 102, 80, 114, 111, 112, 32, 61, 32, 79, 98, 106,
              101, 99, 116, 46, 100, 101, 102, 105, 110, 101, 80, 114, 111, 112,
              101, 114, 116, 121, 59, 10, 32, 32, 118, 97, 114, 32, 95, 95, 100,
              101, 102, 80, 114, 111, 112, 115, 32, 61, 32, 79, 98, 106, 101,
              99, 116, 46, 100, 101, 102, 105, 110, 101, 80, 114, 111, 112, 101,
              114, 116, 105, 101, 115, 59, 10, 32, 32, 118, 97, 114, 32, 95, 95,
              103, 101, 116, 79, 119, 110, 80, 114, 111, 112, 68, 101, 115, 99,
              115, 32, 61, 32, 79, 98, 106, 101, 99, 116, 46, 103, 101, 116, 79,
              119, 110, 80, 114, 111, 112, 101, 114, 116, 121, 68, 101, 115, 99,
              114, 105, 112, 116, 111, 114, 115, 59, 10, 32, 32, 118, 97, 114,
              32, 95, 95, 103, 101, 116, 79, 119, 110, 80, 114, 111, 112, 83,
              121, 109, 98, 111, 108, 115, 32, 61, 32, 79, 98, 106, 101, 99,
              116, 46, 103, 101, 116, 79, 119, 110, 80, 114, 111, 112, 101, 114,
              116, 121, 83, 121, 109, 98, 111, 108, 115, 59, 10, 32, 32, 118,
              97, 114, 32, 95, 95, 104, 97, 115, 79, 119, 110, 80, 114, 111,
              112, 32, 61, 32, 79, 98, 106, 101, 99, 116, 46, 112, 114, 111,
              116, 111, 116, 121, 112, 101, 46, 104, 97, 115, 79, 119, 110, 80,
              114, 111, 112, 101, 114, 116, 121, 59, 10, 32, 32, 118, 97, 114,
              32, 95, 95, 112, 114, 111, 112, 73, 115, 69, 110, 117, 109, 32,
              61, 32, 79, 98, 106, 101, 99, 116, 46, 112, 114, 111, 116, 111,
              116, 121, 112, 101, 46, 112, 114, 111, 112, 101, 114, 116, 121,
              73, 115, 69, 110, 117, 109, 101, 114, 97, 98, 108, 101, 59, 10,
              32, 32, 118, 97, 114, 32, 95, 95, 100, 101, 102, 78, 111, 114,
              109, 97, 108, 80, 114, 111, 112, 32, 61, 32, 40, 111, 98, 106, 44,
              32, 107, 101, 121, 44, 32, 118, 97, 108, 117, 101, 41, 32, 61, 62,
              32, 107, 101, 121, 32, 105, 110, 32, 111, 98, 106, 32, 63, 32, 95,
              95, 100, 101, 102, 80, 114, 111, 112, 40, 111, 98, 106, 44, 32,
              107, 101, 121, 44, 32, 123, 32, 101, 110, 117, 109, 101, 114, 97,
              98, 108, 101, 58, 32, 116, 114, 117, 101, 44, 32, 99, 111, 110,
              102, 105, 103, 117, 114, 97, 98, 108, 101, 58, 32, 116, 114, 117,
              101, 44, 32, 119, 114, 105, 116, 97, 98, 108, 101, 58, 32, 116,
              114, 117, 101, 44, 32, 118, 97, 108, 117, 101, 32, 125, 41, 32,
              58, 32, 111, 98, 106, 91, 107, 101, 121, 93, 32, 61, 32, 118, 97,
              108, 117, 101, 59, 10, 32, 32, 118, 97, 114, 32, 95, 95, 115, 112,
              114, 101, 97, 100, 86, 97, 108, 117, 101, 115, 32, 61, 32, 40, 97,
              44, 32, 98, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 102, 111,
              114, 32, 40, 118, 97, 114, 32, 112, 114, 111, 112, 32, 105, 110,
              32, 98, 32, 124, 124, 32, 40, 98, 32, 61, 32, 123, 125, 41, 41,
              10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 95, 95, 104, 97,
              115, 79, 119, 110, 80, 114, 111, 112, 46, 99, 97, 108, 108, 40,
              98, 44, 32, 112, 114, 111, 112, 41, 41, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 95, 95, 100, 101, 102, 78, 111, 114, 109, 97, 108, 80,
              114, 111, 112, 40, 97, 44, 32, 112, 114, 111, 112, 44, 32, 98, 91,
              112, 114, 111, 112, 93, 41, 59, 10, 32, 32, 32, 32, 105, 102, 32,
              40, 95, 95, 103, 101, 116, 79, 119, 110, 80, 114, 111, 112, 83,
              121, 109, 98, 111, 108, 115, 41, 10, 32, 32, 32, 32, 32, 32, 102,
              111, 114, 32, 40, 118, 97, 114, 32, 112, 114, 111, 112, 32, 111,
              102, 32, 95, 95, 103, 101, 116, 79, 119, 110, 80, 114, 111, 112,
              83, 121, 109, 98, 111, 108, 115, 40, 98, 41, 41, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 95, 95, 112, 114,
              111, 112, 73, 115, 69, 110, 117, 109, 46, 99, 97, 108, 108, 40,
              98, 44, 32, 112, 114, 111, 112, 41, 41, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 95, 95, 100, 101, 102, 78, 111, 114, 109, 97,
              108, 80, 114, 111, 112, 40, 97, 44, 32, 112, 114, 111, 112, 44,
              32, 98, 91, 112, 114, 111, 112, 93, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 125, 10, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32,
              97, 59, 10, 32, 32, 125, 59, 10, 32, 32, 118, 97, 114, 32, 95, 95,
              115, 112, 114, 101, 97, 100, 80, 114, 111, 112, 115, 32, 61, 32,
              40, 97, 44, 32, 98, 41, 32, 61, 62, 32, 95, 95, 100, 101, 102, 80,
              114, 111, 112, 115, 40, 97, 44, 32, 95, 95, 103, 101, 116, 79,
              119, 110, 80, 114, 111, 112, 68, 101, 115, 99, 115, 40, 98, 41,
              41, 59, 10, 32, 32, 118, 97, 114, 32, 95, 95, 111, 98, 106, 82,
              101, 115, 116, 32, 61, 32, 40, 115, 111, 117, 114, 99, 101, 44,
              32, 101, 120, 99, 108, 117, 100, 101, 41, 32, 61, 62, 32, 123, 10,
              32, 32, 32, 32, 118, 97, 114, 32, 116, 97, 114, 103, 101, 116, 32,
              61, 32, 123, 125, 59, 10, 32, 32, 32, 32, 102, 111, 114, 32, 40,
              118, 97, 114, 32, 112, 114, 111, 112, 32, 105, 110, 32, 115, 111,
              117, 114, 99, 101, 41, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32,
              40, 95, 95, 104, 97, 115, 79, 119, 110, 80, 114, 111, 112, 46, 99,
              97, 108, 108, 40, 115, 111, 117, 114, 99, 101, 44, 32, 112, 114,
              111, 112, 41, 32, 38, 38, 32, 101, 120, 99, 108, 117, 100, 101,
              46, 105, 110, 100, 101, 120, 79, 102, 40, 112, 114, 111, 112, 41,
              32, 60, 32, 48, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 97,
              114, 103, 101, 116, 91, 112, 114, 111, 112, 93, 32, 61, 32, 115,
              111, 117, 114, 99, 101, 91, 112, 114, 111, 112, 93, 59, 10, 32,
              32, 32, 32, 105, 102, 32, 40, 115, 111, 117, 114, 99, 101, 32, 33,
              61, 32, 110, 117, 108, 108, 32, 38, 38, 32, 95, 95, 103, 101, 116,
              79, 119, 110, 80, 114, 111, 112, 83, 121, 109, 98, 111, 108, 115,
              41, 10, 32, 32, 32, 32, 32, 32, 102, 111, 114, 32, 40, 118, 97,
              114, 32, 112, 114, 111, 112, 32, 111, 102, 32, 95, 95, 103, 101,
              116, 79, 119, 110, 80, 114, 111, 112, 83, 121, 109, 98, 111, 108,
              115, 40, 115, 111, 117, 114, 99, 101, 41, 41, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 101, 120, 99, 108, 117,
              100, 101, 46, 105, 110, 100, 101, 120, 79, 102, 40, 112, 114, 111,
              112, 41, 32, 60, 32, 48, 32, 38, 38, 32, 95, 95, 112, 114, 111,
              112, 73, 115, 69, 110, 117, 109, 46, 99, 97, 108, 108, 40, 115,
              111, 117, 114, 99, 101, 44, 32, 112, 114, 111, 112, 41, 41, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 97, 114, 103, 101,
              116, 91, 112, 114, 111, 112, 93, 32, 61, 32, 115, 111, 117, 114,
              99, 101, 91, 112, 114, 111, 112, 93, 59, 10, 32, 32, 32, 32, 32,
              32, 125, 10, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32,
              116, 97, 114, 103, 101, 116, 59, 10, 32, 32, 125, 59, 10, 32, 32,
              118, 97, 114, 32, 95, 95, 112, 117, 98, 108, 105, 99, 70, 105,
              101, 108, 100, 32, 61, 32, 40, 111, 98, 106, 44, 32, 107, 101,
              121, 44, 32, 118, 97, 108, 117, 101, 41, 32, 61, 62, 32, 95, 95,
              100, 101, 102, 78, 111, 114, 109, 97, 108, 80, 114, 111, 112, 40,
              111, 98, 106, 44, 32, 116, 121, 112, 101, 111, 102, 32, 107, 101,
              121, 32, 33, 61, 61, 32, 34, 115, 121, 109, 98, 111, 108, 34, 32,
              63, 32, 107, 101, 121, 32, 43, 32, 34, 34, 32, 58, 32, 107, 101,
              121, 44, 32, 118, 97, 108, 117, 101, 41, 59, 10, 32, 32, 118, 97,
              114, 32, 95, 95, 97, 115, 121, 110, 99, 32, 61, 32, 40, 95, 95,
              116, 104, 105, 115, 44, 32, 95, 95, 97, 114, 103, 117, 109, 101,
              110, 116, 115, 44, 32, 103, 101, 110, 101, 114, 97, 116, 111, 114,
              41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 114, 101, 116, 117,
              114, 110, 32, 110, 101, 119, 32, 80, 114, 111, 109, 105, 115, 101,
              40, 40, 114, 101, 115, 111, 108, 118, 101, 44, 32, 114, 101, 106,
              101, 99, 116, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32,
              118, 97, 114, 32, 102, 117, 108, 102, 105, 108, 108, 101, 100, 32,
              61, 32, 40, 118, 97, 108, 117, 101, 41, 32, 61, 62, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 116, 114, 121, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 115, 116, 101, 112, 40, 103,
              101, 110, 101, 114, 97, 116, 111, 114, 46, 110, 101, 120, 116, 40,
              118, 97, 108, 117, 101, 41, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 125, 32, 99, 97, 116, 99, 104, 32, 40, 101, 41, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 106, 101,
              99, 116, 40, 101, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125,
              10, 32, 32, 32, 32, 32, 32, 125, 59, 10, 32, 32, 32, 32, 32, 32,
              118, 97, 114, 32, 114, 101, 106, 101, 99, 116, 101, 100, 32, 61,
              32, 40, 118, 97, 108, 117, 101, 41, 32, 61, 62, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 116, 114, 121, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 115, 116, 101, 112, 40, 103, 101,
              110, 101, 114, 97, 116, 111, 114, 46, 116, 104, 114, 111, 119, 40,
              118, 97, 108, 117, 101, 41, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 125, 32, 99, 97, 116, 99, 104, 32, 40, 101, 41, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 106, 101,
              99, 116, 40, 101, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125,
              10, 32, 32, 32, 32, 32, 32, 125, 59, 10, 32, 32, 32, 32, 32, 32,
              118, 97, 114, 32, 115, 116, 101, 112, 32, 61, 32, 40, 120, 41, 32,
              61, 62, 32, 120, 46, 100, 111, 110, 101, 32, 63, 32, 114, 101,
              115, 111, 108, 118, 101, 40, 120, 46, 118, 97, 108, 117, 101, 41,
              32, 58, 32, 80, 114, 111, 109, 105, 115, 101, 46, 114, 101, 115,
              111, 108, 118, 101, 40, 120, 46, 118, 97, 108, 117, 101, 41, 46,
              116, 104, 101, 110, 40, 102, 117, 108, 102, 105, 108, 108, 101,
              100, 44, 32, 114, 101, 106, 101, 99, 116, 101, 100, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 115, 116, 101, 112, 40, 40, 103, 101, 110,
              101, 114, 97, 116, 111, 114, 32, 61, 32, 103, 101, 110, 101, 114,
              97, 116, 111, 114, 46, 97, 112, 112, 108, 121, 40, 95, 95, 116,
              104, 105, 115, 44, 32, 95, 95, 97, 114, 103, 117, 109, 101, 110,
              116, 115, 41, 41, 46, 110, 101, 120, 116, 40, 41, 41, 59, 10, 32,
              32, 32, 32, 125, 41, 59, 10, 32, 32, 125, 59, 10, 10, 32, 32, 47,
              47, 32, 115, 114, 99, 47, 97, 110, 105, 109, 97, 116, 105, 111,
              110, 45, 102, 114, 97, 109, 101, 45, 109, 97, 110, 97, 103, 101,
              114, 46, 116, 115, 10, 32, 32, 118, 97, 114, 32, 87, 101, 98, 65,
              110, 105, 109, 97, 116, 105, 111, 110, 70, 114, 97, 109, 101, 83,
              116, 114, 97, 116, 101, 103, 121, 32, 61, 32, 99, 108, 97, 115,
              115, 32, 123, 10, 32, 32, 32, 32, 114, 101, 113, 117, 101, 115,
              116, 65, 110, 105, 109, 97, 116, 105, 111, 110, 70, 114, 97, 109,
              101, 40, 99, 97, 108, 108, 98, 97, 99, 107, 41, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 114, 101,
              113, 117, 101, 115, 116, 65, 110, 105, 109, 97, 116, 105, 111,
              110, 70, 114, 97, 109, 101, 40, 99, 97, 108, 108, 98, 97, 99, 107,
              41, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 99, 97, 110,
              99, 101, 108, 65, 110, 105, 109, 97, 116, 105, 111, 110, 70, 114,
              97, 109, 101, 40, 105, 100, 41, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 99, 97, 110, 99, 101, 108, 65, 110, 105, 109, 97, 116, 105,
              111, 110, 70, 114, 97, 109, 101, 40, 105, 100, 41, 59, 10, 32, 32,
              32, 32, 125, 10, 32, 32, 125, 59, 10, 32, 32, 118, 97, 114, 32,
              78, 111, 100, 101, 65, 110, 105, 109, 97, 116, 105, 111, 110, 70,
              114, 97, 109, 101, 83, 116, 114, 97, 116, 101, 103, 121, 32, 61,
              32, 99, 108, 97, 115, 115, 32, 123, 10, 32, 32, 32, 32, 99, 111,
              110, 115, 116, 114, 117, 99, 116, 111, 114, 40, 41, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 95, 95, 112, 117, 98, 108, 105, 99, 70,
              105, 101, 108, 100, 40, 116, 104, 105, 115, 44, 32, 34, 95, 108,
              97, 115, 116, 72, 97, 110, 100, 108, 101, 73, 100, 34, 44, 32, 48,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 95, 95, 112, 117, 98, 108,
              105, 99, 70, 105, 101, 108, 100, 40, 116, 104, 105, 115, 44, 32,
              34, 95, 108, 97, 115, 116, 73, 109, 109, 101, 100, 105, 97, 116,
              101, 34, 44, 32, 110, 117, 108, 108, 41, 59, 10, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 114, 101, 113, 117, 101, 115, 116, 65,
              110, 105, 109, 97, 116, 105, 111, 110, 70, 114, 97, 109, 101, 40,
              99, 97, 108, 108, 98, 97, 99, 107, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 105, 102, 32, 40, 116, 104, 105, 115, 46, 95, 108, 97,
              115, 116, 72, 97, 110, 100, 108, 101, 73, 100, 32, 62, 61, 32, 78,
              117, 109, 98, 101, 114, 46, 77, 65, 88, 95, 83, 65, 70, 69, 95,
              73, 78, 84, 69, 71, 69, 82, 41, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 116, 104, 105, 115, 46, 95, 108, 97, 115, 116, 72, 97,
              110, 100, 108, 101, 73, 100, 32, 61, 32, 48, 59, 10, 32, 32, 32,
              32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115,
              46, 95, 108, 97, 115, 116, 72, 97, 110, 100, 108, 101, 73, 100,
              32, 43, 61, 32, 49, 59, 10, 32, 32, 32, 32, 32, 32, 116, 104, 105,
              115, 46, 95, 108, 97, 115, 116, 73, 109, 109, 101, 100, 105, 97,
              116, 101, 32, 61, 32, 115, 101, 116, 73, 109, 109, 101, 100, 105,
              97, 116, 101, 40, 40, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 99, 97, 108, 108, 98, 97, 99, 107, 40, 68, 97,
              116, 101, 46, 110, 111, 119, 40, 41, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 125, 41, 59, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116,
              117, 114, 110, 32, 116, 104, 105, 115, 46, 95, 108, 97, 115, 116,
              72, 97, 110, 100, 108, 101, 73, 100, 59, 10, 32, 32, 32, 32, 125,
              10, 32, 32, 32, 32, 99, 97, 110, 99, 101, 108, 65, 110, 105, 109,
              97, 116, 105, 111, 110, 70, 114, 97, 109, 101, 40, 95, 105, 100,
              41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 116,
              104, 105, 115, 46, 95, 108, 97, 115, 116, 73, 109, 109, 101, 100,
              105, 97, 116, 101, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 99, 108, 101, 97, 114, 73, 109, 109, 101, 100, 105, 97, 116,
              101, 40, 116, 104, 105, 115, 46, 95, 108, 97, 115, 116, 73, 109,
              109, 101, 100, 105, 97, 116, 101, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 125, 10, 32, 32, 32, 32, 125, 10, 32, 32, 125, 59, 10, 32, 32,
              118, 97, 114, 32, 65, 110, 105, 109, 97, 116, 105, 111, 110, 70,
              114, 97, 109, 101, 77, 97, 110, 97, 103, 101, 114, 32, 61, 32, 99,
              108, 97, 115, 115, 32, 123, 10, 32, 32, 32, 32, 99, 111, 110, 115,
              116, 114, 117, 99, 116, 111, 114, 40, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 95, 95, 112, 117, 98, 108, 105, 99, 70, 105, 101, 108,
              100, 40, 116, 104, 105, 115, 44, 32, 34, 95, 115, 116, 114, 97,
              116, 101, 103, 121, 34, 41, 59, 10, 32, 32, 32, 32, 32, 32, 116,
              104, 105, 115, 46, 95, 115, 116, 114, 97, 116, 101, 103, 121, 32,
              61, 32, 116, 121, 112, 101, 111, 102, 32, 114, 101, 113, 117, 101,
              115, 116, 65, 110, 105, 109, 97, 116, 105, 111, 110, 70, 114, 97,
              109, 101, 32, 61, 61, 61, 32, 34, 102, 117, 110, 99, 116, 105,
              111, 110, 34, 32, 63, 32, 110, 101, 119, 32, 87, 101, 98, 65, 110,
              105, 109, 97, 116, 105, 111, 110, 70, 114, 97, 109, 101, 83, 116,
              114, 97, 116, 101, 103, 121, 40, 41, 32, 58, 32, 110, 101, 119,
              32, 78, 111, 100, 101, 65, 110, 105, 109, 97, 116, 105, 111, 110,
              70, 114, 97, 109, 101, 83, 116, 114, 97, 116, 101, 103, 121, 40,
              41, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 114, 101,
              113, 117, 101, 115, 116, 65, 110, 105, 109, 97, 116, 105, 111,
              110, 70, 114, 97, 109, 101, 40, 99, 97, 108, 108, 98, 97, 99, 107,
              41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114,
              110, 32, 116, 104, 105, 115, 46, 95, 115, 116, 114, 97, 116, 101,
              103, 121, 46, 114, 101, 113, 117, 101, 115, 116, 65, 110, 105,
              109, 97, 116, 105, 111, 110, 70, 114, 97, 109, 101, 40, 99, 97,
              108, 108, 98, 97, 99, 107, 41, 59, 10, 32, 32, 32, 32, 125, 10,
              32, 32, 32, 32, 99, 97, 110, 99, 101, 108, 65, 110, 105, 109, 97,
              116, 105, 111, 110, 70, 114, 97, 109, 101, 40, 105, 100, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 115,
              116, 114, 97, 116, 101, 103, 121, 46, 99, 97, 110, 99, 101, 108,
              65, 110, 105, 109, 97, 116, 105, 111, 110, 70, 114, 97, 109, 101,
              40, 105, 100, 41, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 125,
              59, 10, 10, 32, 32, 47, 47, 32, 115, 114, 99, 47, 99, 111, 110,
              115, 116, 97, 110, 116, 115, 46, 116, 115, 10, 32, 32, 118, 97,
              114, 32, 73, 83, 95, 66, 82, 79, 87, 83, 69, 82, 32, 61, 32, 116,
              121, 112, 101, 111, 102, 32, 119, 105, 110, 100, 111, 119, 32, 33,
              61, 61, 32, 34, 117, 110, 100, 101, 102, 105, 110, 101, 100, 34,
              32, 38, 38, 32, 116, 121, 112, 101, 111, 102, 32, 119, 105, 110,
              100, 111, 119, 46, 100, 111, 99, 117, 109, 101, 110, 116, 32, 33,
              61, 61, 32, 34, 117, 110, 100, 101, 102, 105, 110, 101, 100, 34,
              59, 10, 32, 32, 118, 97, 114, 32, 90, 73, 80, 95, 83, 73, 71, 78,
              65, 84, 85, 82, 69, 32, 61, 32, 110, 101, 119, 32, 85, 105, 110,
              116, 56, 65, 114, 114, 97, 121, 40, 91, 56, 48, 44, 32, 55, 53,
              44, 32, 51, 44, 32, 52, 93, 41, 59, 10, 32, 32, 118, 97, 114, 32,
              76, 79, 84, 84, 73, 69, 95, 74, 83, 79, 78, 95, 77, 65, 78, 68,
              65, 84, 79, 82, 89, 95, 70, 73, 69, 76, 68, 83, 32, 61, 32, 91,
              34, 118, 34, 44, 32, 34, 105, 112, 34, 44, 32, 34, 111, 112, 34,
              44, 32, 34, 108, 97, 121, 101, 114, 115, 34, 44, 32, 34, 102, 114,
              34, 44, 32, 34, 119, 34, 44, 32, 34, 104, 34, 93, 59, 10, 32, 32,
              118, 97, 114, 32, 80, 65, 67, 75, 65, 71, 69, 95, 86, 69, 82, 83,
              73, 79, 78, 32, 61, 32, 34, 48, 46, 52, 48, 46, 49, 34, 59, 10,
              32, 32, 118, 97, 114, 32, 80, 65, 67, 75, 65, 71, 69, 95, 78, 65,
              77, 69, 32, 61, 32, 34, 64, 108, 111, 116, 116, 105, 101, 102,
              105, 108, 101, 115, 47, 100, 111, 116, 108, 111, 116, 116, 105,
              101, 45, 119, 101, 98, 34, 59, 10, 32, 32, 118, 97, 114, 32, 68,
              69, 70, 65, 85, 76, 84, 95, 68, 80, 82, 95, 70, 65, 67, 84, 79,
              82, 32, 61, 32, 48, 46, 55, 53, 59, 10, 10, 32, 32, 47, 47, 32,
              115, 114, 99, 47, 99, 111, 114, 101, 47, 100, 111, 116, 108, 111,
              116, 116, 105, 101, 45, 112, 108, 97, 121, 101, 114, 46, 106, 115,
              10, 32, 32, 118, 97, 114, 32, 99, 114, 101, 97, 116, 101, 68, 111,
              116, 76, 111, 116, 116, 105, 101, 80, 108, 97, 121, 101, 114, 77,
              111, 100, 117, 108, 101, 32, 61, 32, 40, 40, 41, 32, 61, 62, 32,
              123, 10, 32, 32, 32, 32, 118, 97, 114, 32, 95, 97, 59, 10, 32, 32,
              32, 32, 118, 97, 114, 32, 95, 115, 99, 114, 105, 112, 116, 78, 97,
              109, 101, 32, 61, 32, 116, 121, 112, 101, 111, 102, 32, 100, 111,
              99, 117, 109, 101, 110, 116, 32, 33, 61, 32, 34, 117, 110, 100,
              101, 102, 105, 110, 101, 100, 34, 32, 63, 32, 40, 95, 97, 32, 61,
              32, 100, 111, 99, 117, 109, 101, 110, 116, 46, 99, 117, 114, 114,
              101, 110, 116, 83, 99, 114, 105, 112, 116, 41, 32, 61, 61, 32,
              110, 117, 108, 108, 32, 63, 32, 118, 111, 105, 100, 32, 48, 32,
              58, 32, 95, 97, 46, 115, 114, 99, 32, 58, 32, 118, 111, 105, 100,
              32, 48, 59, 10, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32,
              102, 117, 110, 99, 116, 105, 111, 110, 40, 109, 111, 100, 117,
              108, 101, 65, 114, 103, 32, 61, 32, 123, 125, 41, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 118, 97, 114, 32, 109, 111, 100, 117, 108,
              101, 82, 116, 110, 59, 10, 32, 32, 32, 32, 32, 32, 118, 97, 114,
              32, 107, 32, 61, 32, 109, 111, 100, 117, 108, 101, 65, 114, 103,
              44, 32, 97, 97, 44, 32, 98, 97, 44, 32, 101, 97, 32, 61, 32, 110,
              101, 119, 32, 80, 114, 111, 109, 105, 115, 101, 40, 40, 97, 44,
              32, 98, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 97, 97, 32, 61, 32, 97, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 98, 97, 32, 61, 32, 98, 59, 10, 32, 32, 32, 32, 32, 32, 125,
              41, 44, 32, 102, 97, 32, 61, 32, 79, 98, 106, 101, 99, 116, 46,
              97, 115, 115, 105, 103, 110, 40, 123, 125, 44, 32, 107, 41, 44,
              32, 104, 97, 32, 61, 32, 34, 46, 47, 116, 104, 105, 115, 46, 112,
              114, 111, 103, 114, 97, 109, 34, 44, 32, 112, 32, 61, 32, 34, 34,
              44, 32, 105, 97, 59, 10, 32, 32, 32, 32, 32, 32, 34, 117, 110,
              100, 101, 102, 105, 110, 101, 100, 34, 32, 33, 61, 32, 116, 121,
              112, 101, 111, 102, 32, 100, 111, 99, 117, 109, 101, 110, 116, 32,
              38, 38, 32, 100, 111, 99, 117, 109, 101, 110, 116, 46, 99, 117,
              114, 114, 101, 110, 116, 83, 99, 114, 105, 112, 116, 32, 38, 38,
              32, 40, 112, 32, 61, 32, 100, 111, 99, 117, 109, 101, 110, 116,
              46, 99, 117, 114, 114, 101, 110, 116, 83, 99, 114, 105, 112, 116,
              46, 115, 114, 99, 41, 59, 10, 32, 32, 32, 32, 32, 32, 95, 115, 99,
              114, 105, 112, 116, 78, 97, 109, 101, 32, 38, 38, 32, 40, 112, 32,
              61, 32, 95, 115, 99, 114, 105, 112, 116, 78, 97, 109, 101, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 112, 46, 115, 116, 97, 114, 116, 115,
              87, 105, 116, 104, 40, 34, 98, 108, 111, 98, 58, 34, 41, 32, 63,
              32, 112, 32, 61, 32, 34, 34, 32, 58, 32, 112, 32, 61, 32, 112, 46,
              115, 117, 98, 115, 116, 114, 40, 48, 44, 32, 112, 46, 114, 101,
              112, 108, 97, 99, 101, 40, 47, 91, 63, 35, 93, 46, 42, 47, 44, 32,
              34, 34, 41, 46, 108, 97, 115, 116, 73, 110, 100, 101, 120, 79,
              102, 40, 34, 47, 34, 41, 32, 43, 32, 49, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 105, 97, 32, 61, 32, 40, 97, 41, 32, 61, 62, 32, 102,
              101, 116, 99, 104, 40, 97, 44, 32, 123, 32, 99, 114, 101, 100,
              101, 110, 116, 105, 97, 108, 115, 58, 32, 34, 115, 97, 109, 101,
              45, 111, 114, 105, 103, 105, 110, 34, 32, 125, 41, 46, 116, 104,
              101, 110, 40, 10, 32, 32, 32, 32, 32, 32, 32, 32, 40, 98, 41, 32,
              61, 62, 32, 98, 46, 111, 107, 32, 63, 32, 98, 46, 97, 114, 114,
              97, 121, 66, 117, 102, 102, 101, 114, 40, 41, 32, 58, 32, 80, 114,
              111, 109, 105, 115, 101, 46, 114, 101, 106, 101, 99, 116, 40, 69,
              114, 114, 111, 114, 40, 98, 46, 115, 116, 97, 116, 117, 115, 32,
              43, 32, 34, 32, 58, 32, 34, 32, 43, 32, 98, 46, 117, 114, 108, 41,
              41, 10, 32, 32, 32, 32, 32, 32, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 118, 97, 114, 32, 116, 32, 61, 32, 107, 46, 112, 114, 105,
              110, 116, 69, 114, 114, 32, 124, 124, 32, 99, 111, 110, 115, 111,
              108, 101, 46, 101, 114, 114, 111, 114, 46, 98, 105, 110, 100, 40,
              99, 111, 110, 115, 111, 108, 101, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 79, 98, 106, 101, 99, 116, 46, 97, 115, 115, 105, 103, 110,
              40, 107, 44, 32, 102, 97, 41, 59, 10, 32, 32, 32, 32, 32, 32, 102,
              97, 32, 61, 32, 110, 117, 108, 108, 59, 10, 32, 32, 32, 32, 32,
              32, 107, 46, 116, 104, 105, 115, 80, 114, 111, 103, 114, 97, 109,
              32, 38, 38, 32, 40, 104, 97, 32, 61, 32, 107, 46, 116, 104, 105,
              115, 80, 114, 111, 103, 114, 97, 109, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 118, 97, 114, 32, 106, 97, 32, 61, 32, 107, 46, 119, 97,
              115, 109, 66, 105, 110, 97, 114, 121, 44, 32, 107, 97, 44, 32,
              108, 97, 32, 61, 32, 102, 97, 108, 115, 101, 44, 32, 109, 97, 44,
              32, 119, 44, 32, 120, 44, 32, 121, 44, 32, 122, 44, 32, 67, 44,
              32, 68, 44, 32, 110, 97, 44, 32, 111, 97, 59, 10, 32, 32, 32, 32,
              32, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 112, 97, 40,
              41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32,
              97, 32, 61, 32, 107, 97, 46, 98, 117, 102, 102, 101, 114, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 107, 46, 72, 69, 65, 80, 56, 32,
              61, 32, 119, 32, 61, 32, 110, 101, 119, 32, 73, 110, 116, 56, 65,
              114, 114, 97, 121, 40, 97, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 107, 46, 72, 69, 65, 80, 49, 54, 32, 61, 32, 121, 32, 61, 32,
              110, 101, 119, 32, 73, 110, 116, 49, 54, 65, 114, 114, 97, 121,
              40, 97, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 107, 46, 72,
              69, 65, 80, 85, 56, 32, 61, 32, 120, 32, 61, 32, 110, 101, 119,
              32, 85, 105, 110, 116, 56, 65, 114, 114, 97, 121, 40, 97, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 107, 46, 72, 69, 65, 80, 85,
              49, 54, 32, 61, 32, 122, 32, 61, 32, 110, 101, 119, 32, 85, 105,
              110, 116, 49, 54, 65, 114, 114, 97, 121, 40, 97, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 107, 46, 72, 69, 65, 80, 51, 50, 32,
              61, 32, 67, 32, 61, 32, 110, 101, 119, 32, 73, 110, 116, 51, 50,
              65, 114, 114, 97, 121, 40, 97, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 107, 46, 72, 69, 65, 80, 85, 51, 50, 32, 61, 32, 68, 32,
              61, 32, 110, 101, 119, 32, 85, 105, 110, 116, 51, 50, 65, 114,
              114, 97, 121, 40, 97, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              107, 46, 72, 69, 65, 80, 70, 51, 50, 32, 61, 32, 110, 97, 32, 61,
              32, 110, 101, 119, 32, 70, 108, 111, 97, 116, 51, 50, 65, 114,
              114, 97, 121, 40, 97, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              107, 46, 72, 69, 65, 80, 70, 54, 52, 32, 61, 32, 111, 97, 32, 61,
              32, 110, 101, 119, 32, 70, 108, 111, 97, 116, 54, 52, 65, 114,
              114, 97, 121, 40, 97, 41, 59, 10, 32, 32, 32, 32, 32, 32, 125, 10,
              32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 113, 97, 32, 61, 32, 91,
              93, 44, 32, 114, 97, 32, 61, 32, 91, 93, 44, 32, 115, 97, 32, 61,
              32, 91, 93, 59, 10, 32, 32, 32, 32, 32, 32, 102, 117, 110, 99,
              116, 105, 111, 110, 32, 116, 97, 40, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 118, 97, 114, 32, 97, 32, 61, 32, 107, 46,
              112, 114, 101, 82, 117, 110, 46, 115, 104, 105, 102, 116, 40, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 113, 97, 46, 117, 110,
              115, 104, 105, 102, 116, 40, 97, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 125, 10, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 70, 32, 61,
              32, 48, 44, 32, 117, 97, 32, 61, 32, 110, 117, 108, 108, 44, 32,
              71, 32, 61, 32, 110, 117, 108, 108, 59, 10, 32, 32, 32, 32, 32,
              32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 118, 97, 40, 97,
              41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32,
              95, 97, 50, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 40, 95, 97,
              50, 32, 61, 32, 107, 46, 111, 110, 65, 98, 111, 114, 116, 41, 32,
              61, 61, 32, 110, 117, 108, 108, 32, 63, 32, 118, 111, 105, 100,
              32, 48, 32, 58, 32, 95, 97, 50, 46, 99, 97, 108, 108, 40, 107, 44,
              32, 97, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 97, 32, 61,
              32, 34, 65, 98, 111, 114, 116, 101, 100, 40, 34, 32, 43, 32, 97,
              32, 43, 32, 34, 41, 34, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              116, 40, 97, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 108, 97,
              32, 61, 32, 116, 114, 117, 101, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 97, 32, 61, 32, 110, 101, 119, 32, 87, 101, 98, 65, 115,
              115, 101, 109, 98, 108, 121, 46, 82, 117, 110, 116, 105, 109, 101,
              69, 114, 114, 111, 114, 40, 97, 32, 43, 32, 34, 46, 32, 66, 117,
              105, 108, 100, 32, 119, 105, 116, 104, 32, 45, 115, 65, 83, 83,
              69, 82, 84, 73, 79, 78, 83, 32, 102, 111, 114, 32, 109, 111, 114,
              101, 32, 105, 110, 102, 111, 46, 34, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 98, 97, 40, 97, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 116, 104, 114, 111, 119, 32, 97, 59, 10, 32, 32, 32,
              32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32,
              119, 97, 32, 61, 32, 40, 97, 41, 32, 61, 62, 32, 97, 46, 115, 116,
              97, 114, 116, 115, 87, 105, 116, 104, 40, 34, 100, 97, 116, 97,
              58, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111,
              99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109, 59, 98, 97,
              115, 101, 54, 52, 44, 34, 41, 44, 32, 120, 97, 59, 10, 32, 32, 32,
              32, 32, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 121, 97,
              40, 97, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102,
              32, 40, 97, 32, 61, 61, 32, 120, 97, 32, 38, 38, 32, 106, 97, 41,
              32, 114, 101, 116, 117, 114, 110, 32, 110, 101, 119, 32, 85, 105,
              110, 116, 56, 65, 114, 114, 97, 121, 40, 106, 97, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 116, 104, 114, 111, 119, 32, 34, 98,
              111, 116, 104, 32, 97, 115, 121, 110, 99, 32, 97, 110, 100, 32,
              115, 121, 110, 99, 32, 102, 101, 116, 99, 104, 105, 110, 103, 32,
              111, 102, 32, 116, 104, 101, 32, 119, 97, 115, 109, 32, 102, 97,
              105, 108, 101, 100, 34, 59, 10, 32, 32, 32, 32, 32, 32, 125, 10,
              32, 32, 32, 32, 32, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32,
              122, 97, 40, 97, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              114, 101, 116, 117, 114, 110, 32, 106, 97, 32, 63, 32, 80, 114,
              111, 109, 105, 115, 101, 46, 114, 101, 115, 111, 108, 118, 101,
              40, 41, 46, 116, 104, 101, 110, 40, 40, 41, 32, 61, 62, 32, 121,
              97, 40, 97, 41, 41, 32, 58, 32, 105, 97, 40, 97, 41, 46, 116, 104,
              101, 110, 40, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 40, 98,
              41, 32, 61, 62, 32, 110, 101, 119, 32, 85, 105, 110, 116, 56, 65,
              114, 114, 97, 121, 40, 98, 41, 44, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 40, 41, 32, 61, 62, 32, 121, 97, 40, 97, 41, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 32, 32, 102, 117, 110, 99, 116, 105, 111,
              110, 32, 65, 97, 40, 97, 44, 32, 98, 44, 32, 99, 41, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32,
              122, 97, 40, 97, 41, 46, 116, 104, 101, 110, 40, 40, 100, 41, 32,
              61, 62, 32, 87, 101, 98, 65, 115, 115, 101, 109, 98, 108, 121, 46,
              105, 110, 115, 116, 97, 110, 116, 105, 97, 116, 101, 40, 100, 44,
              32, 98, 41, 41, 46, 116, 104, 101, 110, 40, 99, 44, 32, 40, 100,
              41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 116, 40, 96, 102, 97, 105, 108, 101, 100, 32, 116, 111, 32,
              97, 115, 121, 110, 99, 104, 114, 111, 110, 111, 117, 115, 108,
              121, 32, 112, 114, 101, 112, 97, 114, 101, 32, 119, 97, 115, 109,
              58, 32, 36, 123, 100, 125, 96, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 118, 97, 40, 100, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 125, 41, 59, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32,
              32, 32, 32, 32, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 66,
              97, 40, 97, 44, 32, 98, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 118, 97, 114, 32, 99, 32, 61, 32, 120, 97, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 106, 97,
              32, 124, 124, 32, 34, 102, 117, 110, 99, 116, 105, 111, 110, 34,
              32, 33, 61, 32, 116, 121, 112, 101, 111, 102, 32, 87, 101, 98, 65,
              115, 115, 101, 109, 98, 108, 121, 46, 105, 110, 115, 116, 97, 110,
              116, 105, 97, 116, 101, 83, 116, 114, 101, 97, 109, 105, 110, 103,
              32, 124, 124, 32, 119, 97, 40, 99, 41, 32, 124, 124, 32, 34, 102,
              117, 110, 99, 116, 105, 111, 110, 34, 32, 33, 61, 32, 116, 121,
              112, 101, 111, 102, 32, 102, 101, 116, 99, 104, 32, 63, 32, 65,
              97, 40, 99, 44, 32, 97, 44, 32, 98, 41, 32, 58, 32, 102, 101, 116,
              99, 104, 40, 99, 44, 32, 123, 32, 99, 114, 101, 100, 101, 110,
              116, 105, 97, 108, 115, 58, 32, 34, 115, 97, 109, 101, 45, 111,
              114, 105, 103, 105, 110, 34, 32, 125, 41, 46, 116, 104, 101, 110,
              40, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 40, 100, 41, 32,
              61, 62, 32, 87, 101, 98, 65, 115, 115, 101, 109, 98, 108, 121, 46,
              105, 110, 115, 116, 97, 110, 116, 105, 97, 116, 101, 83, 116, 114,
              101, 97, 109, 105, 110, 103, 40, 100, 44, 32, 97, 41, 46, 116,
              104, 101, 110, 40, 98, 44, 32, 102, 117, 110, 99, 116, 105, 111,
              110, 40, 101, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 116, 40, 96, 119, 97, 115, 109, 32, 115, 116, 114,
              101, 97, 109, 105, 110, 103, 32, 99, 111, 109, 112, 105, 108, 101,
              32, 102, 97, 105, 108, 101, 100, 58, 32, 36, 123, 101, 125, 96,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116,
              40, 34, 102, 97, 108, 108, 105, 110, 103, 32, 98, 97, 99, 107, 32,
              116, 111, 32, 65, 114, 114, 97, 121, 66, 117, 102, 102, 101, 114,
              32, 105, 110, 115, 116, 97, 110, 116, 105, 97, 116, 105, 111, 110,
              34, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              114, 101, 116, 117, 114, 110, 32, 65, 97, 40, 99, 44, 32, 97, 44,
              32, 98, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125,
              41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 99, 108, 97, 115,
              115, 32, 67, 97, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 99,
              111, 110, 115, 116, 114, 117, 99, 116, 111, 114, 40, 97, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 95, 95, 112, 117,
              98, 108, 105, 99, 70, 105, 101, 108, 100, 40, 116, 104, 105, 115,
              44, 32, 34, 110, 97, 109, 101, 34, 44, 32, 34, 69, 120, 105, 116,
              83, 116, 97, 116, 117, 115, 34, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 109, 101, 115, 115,
              97, 103, 101, 32, 61, 32, 96, 80, 114, 111, 103, 114, 97, 109, 32,
              116, 101, 114, 109, 105, 110, 97, 116, 101, 100, 32, 119, 105,
              116, 104, 32, 101, 120, 105, 116, 40, 36, 123, 97, 125, 41, 96,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105,
              115, 46, 115, 116, 97, 116, 117, 115, 32, 61, 32, 97, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 125,
              10, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 68, 97, 32, 61, 32,
              40, 97, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 102, 111, 114, 32, 40, 59, 32, 48, 32, 60, 32, 97, 46, 108,
              101, 110, 103, 116, 104, 59, 32, 41, 32, 97, 46, 115, 104, 105,
              102, 116, 40, 41, 40, 107, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              125, 44, 32, 69, 97, 32, 61, 32, 107, 46, 110, 111, 69, 120, 105,
              116, 82, 117, 110, 116, 105, 109, 101, 32, 124, 124, 32, 116, 114,
              117, 101, 44, 32, 70, 97, 32, 61, 32, 34, 117, 110, 100, 101, 102,
              105, 110, 101, 100, 34, 32, 33, 61, 32, 116, 121, 112, 101, 111,
              102, 32, 84, 101, 120, 116, 68, 101, 99, 111, 100, 101, 114, 32,
              63, 32, 110, 101, 119, 32, 84, 101, 120, 116, 68, 101, 99, 111,
              100, 101, 114, 40, 41, 32, 58, 32, 118, 111, 105, 100, 32, 48, 44,
              32, 71, 97, 32, 61, 32, 40, 97, 32, 61, 32, 48, 44, 32, 98, 32,
              61, 32, 78, 97, 78, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 118, 97, 114, 32, 99, 32, 61, 32, 120, 44, 32,
              100, 32, 61, 32, 97, 32, 43, 32, 98, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 102, 111, 114, 32, 40, 98, 32, 61, 32, 97, 59, 32, 99,
              91, 98, 93, 32, 38, 38, 32, 33, 40, 98, 32, 62, 61, 32, 100, 41,
              59, 32, 41, 32, 43, 43, 98, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 105, 102, 32, 40, 49, 54, 32, 60, 32, 98, 32, 45, 32, 97, 32,
              38, 38, 32, 99, 46, 98, 117, 102, 102, 101, 114, 32, 38, 38, 32,
              70, 97, 41, 32, 114, 101, 116, 117, 114, 110, 32, 70, 97, 46, 100,
              101, 99, 111, 100, 101, 40, 99, 46, 115, 117, 98, 97, 114, 114,
              97, 121, 40, 97, 44, 32, 98, 41, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 102, 111, 114, 32, 40, 100, 32, 61, 32, 34, 34, 59,
              32, 97, 32, 60, 32, 98, 59, 32, 41, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 101, 32, 61, 32, 99, 91,
              97, 43, 43, 93, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              105, 102, 32, 40, 101, 32, 38, 32, 49, 50, 56, 41, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32,
              102, 32, 61, 32, 99, 91, 97, 43, 43, 93, 32, 38, 32, 54, 51, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32,
              40, 49, 57, 50, 32, 61, 61, 32, 40, 101, 32, 38, 32, 50, 50, 52,
              41, 41, 32, 100, 32, 43, 61, 32, 83, 116, 114, 105, 110, 103, 46,
              102, 114, 111, 109, 67, 104, 97, 114, 67, 111, 100, 101, 40, 40,
              101, 32, 38, 32, 51, 49, 41, 32, 60, 60, 32, 54, 32, 124, 32, 102,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 101,
              108, 115, 101, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 118, 97, 114, 32, 104, 32, 61, 32, 99, 91, 97,
              43, 43, 93, 32, 38, 32, 54, 51, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 101, 32, 61, 32, 50, 50, 52, 32,
              61, 61, 32, 40, 101, 32, 38, 32, 50, 52, 48, 41, 32, 63, 32, 40,
              101, 32, 38, 32, 49, 53, 41, 32, 60, 60, 32, 49, 50, 32, 124, 32,
              102, 32, 60, 60, 32, 54, 32, 124, 32, 104, 32, 58, 32, 40, 101,
              32, 38, 32, 55, 41, 32, 60, 60, 32, 49, 56, 32, 124, 32, 102, 32,
              60, 60, 32, 49, 50, 32, 124, 32, 104, 32, 60, 60, 32, 54, 32, 124,
              32, 99, 91, 97, 43, 43, 93, 32, 38, 32, 54, 51, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 54, 53, 53, 51,
              54, 32, 62, 32, 101, 32, 63, 32, 100, 32, 43, 61, 32, 83, 116,
              114, 105, 110, 103, 46, 102, 114, 111, 109, 67, 104, 97, 114, 67,
              111, 100, 101, 40, 101, 41, 32, 58, 32, 40, 101, 32, 45, 61, 32,
              54, 53, 53, 51, 54, 44, 32, 100, 32, 43, 61, 32, 83, 116, 114,
              105, 110, 103, 46, 102, 114, 111, 109, 67, 104, 97, 114, 67, 111,
              100, 101, 40, 53, 53, 50, 57, 54, 32, 124, 32, 101, 32, 62, 62,
              32, 49, 48, 44, 32, 53, 54, 51, 50, 48, 32, 124, 32, 101, 32, 38,
              32, 49, 48, 50, 51, 41, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 125, 32, 101, 108, 115, 101, 32, 100, 32, 43, 61, 32, 83, 116,
              114, 105, 110, 103, 46, 102, 114, 111, 109, 67, 104, 97, 114, 67,
              111, 100, 101, 40, 101, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117,
              114, 110, 32, 100, 59, 10, 32, 32, 32, 32, 32, 32, 125, 59, 10,
              32, 32, 32, 32, 32, 32, 99, 108, 97, 115, 115, 32, 72, 97, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116,
              114, 117, 99, 116, 111, 114, 40, 97, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 118, 97, 32,
              61, 32, 97, 32, 45, 32, 50, 52, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32,
              32, 32, 118, 97, 114, 32, 73, 97, 32, 61, 32, 48, 44, 32, 74, 97,
              32, 61, 32, 48, 44, 32, 72, 32, 61, 32, 40, 97, 44, 32, 98, 44,
              32, 99, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 118, 97, 114, 32, 100, 32, 61, 32, 120, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 105, 102, 32, 40, 48, 32, 60, 32, 99, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 99, 32, 61, 32,
              98, 32, 43, 32, 99, 32, 45, 32, 49, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 102, 111, 114, 32, 40, 118, 97, 114, 32, 101,
              32, 61, 32, 48, 59, 32, 101, 32, 60, 32, 97, 46, 108, 101, 110,
              103, 116, 104, 59, 32, 43, 43, 101, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 102, 32, 61,
              32, 97, 46, 99, 104, 97, 114, 67, 111, 100, 101, 65, 116, 40, 101,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105,
              102, 32, 40, 53, 53, 50, 57, 54, 32, 60, 61, 32, 102, 32, 38, 38,
              32, 53, 55, 51, 52, 51, 32, 62, 61, 32, 102, 41, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114,
              32, 104, 32, 61, 32, 97, 46, 99, 104, 97, 114, 67, 111, 100, 101,
              65, 116, 40, 43, 43, 101, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 102, 32, 61, 32, 54, 53, 53, 51, 54,
              32, 43, 32, 40, 40, 102, 32, 38, 32, 49, 48, 50, 51, 41, 32, 60,
              60, 32, 49, 48, 41, 32, 124, 32, 104, 32, 38, 32, 49, 48, 50, 51,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40,
              49, 50, 55, 32, 62, 61, 32, 102, 41, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 98, 32,
              62, 61, 32, 99, 41, 32, 98, 114, 101, 97, 107, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 100, 91, 98, 43, 43,
              93, 32, 61, 32, 102, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 125, 32, 101, 108, 115, 101, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 50,
              48, 52, 55, 32, 62, 61, 32, 102, 41, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40,
              98, 32, 43, 32, 49, 32, 62, 61, 32, 99, 41, 32, 98, 114, 101, 97,
              107, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 100, 91, 98, 43, 43, 93, 32, 61, 32, 49, 57, 50, 32,
              124, 32, 102, 32, 62, 62, 32, 54, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 125, 32, 101, 108, 115, 101, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 105, 102, 32, 40, 54, 53, 53, 51, 53, 32, 62, 61, 32, 102,
              41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 98, 32, 43, 32, 50, 32,
              62, 61, 32, 99, 41, 32, 98, 114, 101, 97, 107, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 100,
              91, 98, 43, 43, 93, 32, 61, 32, 50, 50, 52, 32, 124, 32, 102, 32,
              62, 62, 32, 49, 50, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 125, 32, 101, 108, 115, 101, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 105, 102, 32, 40, 98, 32, 43, 32, 51, 32, 62, 61, 32,
              99, 41, 32, 98, 114, 101, 97, 107, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 100, 91, 98, 43,
              43, 93, 32, 61, 32, 50, 52, 48, 32, 124, 32, 102, 32, 62, 62, 32,
              49, 56, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 100, 91, 98, 43, 43, 93, 32, 61, 32, 49,
              50, 56, 32, 124, 32, 102, 32, 62, 62, 32, 49, 50, 32, 38, 32, 54,
              51, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 100, 91, 98, 43, 43, 93, 32, 61, 32, 49, 50,
              56, 32, 124, 32, 102, 32, 62, 62, 32, 54, 32, 38, 32, 54, 51, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 100,
              91, 98, 43, 43, 93, 32, 61, 32, 49, 50, 56, 32, 124, 32, 102, 32,
              38, 32, 54, 51, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 100, 91, 98, 93, 32, 61,
              32, 48, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32,
              32, 32, 32, 32, 125, 44, 32, 75, 97, 32, 61, 32, 123, 125, 44, 32,
              76, 97, 32, 61, 32, 40, 97, 41, 32, 61, 62, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 102, 111, 114, 32, 40, 59, 32, 97, 46,
              108, 101, 110, 103, 116, 104, 59, 32, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 98, 32, 61, 32, 97,
              46, 112, 111, 112, 40, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 97, 46, 112, 111, 112, 40, 41, 40, 98, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 125, 59,
              10, 32, 32, 32, 32, 32, 32, 102, 117, 110, 99, 116, 105, 111, 110,
              32, 73, 40, 97, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              114, 101, 116, 117, 114, 110, 32, 116, 104, 105, 115, 46, 102,
              114, 111, 109, 87, 105, 114, 101, 84, 121, 112, 101, 40, 68, 91,
              97, 32, 62, 62, 32, 50, 93, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 74, 32, 61, 32,
              123, 125, 44, 32, 75, 32, 61, 32, 123, 125, 44, 32, 77, 97, 32,
              61, 32, 123, 125, 44, 32, 76, 44, 32, 78, 32, 61, 32, 40, 97, 44,
              32, 98, 44, 32, 99, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 100,
              40, 103, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              103, 32, 61, 32, 99, 40, 103, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 105, 102, 32, 40, 103, 46, 108, 101, 110, 103,
              116, 104, 32, 33, 61, 61, 32, 97, 46, 108, 101, 110, 103, 116,
              104, 41, 32, 116, 104, 114, 111, 119, 32, 110, 101, 119, 32, 76,
              40, 34, 77, 105, 115, 109, 97, 116, 99, 104, 101, 100, 32, 116,
              121, 112, 101, 32, 99, 111, 110, 118, 101, 114, 116, 101, 114, 32,
              99, 111, 117, 110, 116, 34, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 102, 111, 114, 32, 40, 118, 97, 114, 32, 108, 32,
              61, 32, 48, 59, 32, 108, 32, 60, 32, 97, 46, 108, 101, 110, 103,
              116, 104, 59, 32, 43, 43, 108, 41, 32, 77, 40, 97, 91, 108, 93,
              44, 32, 103, 91, 108, 93, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 97, 46, 102, 111,
              114, 69, 97, 99, 104, 40, 40, 103, 41, 32, 61, 62, 32, 77, 97, 91,
              103, 93, 32, 61, 32, 98, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 118, 97, 114, 32, 101, 32, 61, 32, 65, 114, 114, 97, 121, 40,
              98, 46, 108, 101, 110, 103, 116, 104, 41, 44, 32, 102, 32, 61, 32,
              91, 93, 44, 32, 104, 32, 61, 32, 48, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 98, 46, 102, 111, 114, 69, 97, 99, 104, 40, 40, 103,
              44, 32, 108, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 75, 46, 104, 97, 115, 79, 119, 110, 80, 114, 111,
              112, 101, 114, 116, 121, 40, 103, 41, 32, 63, 32, 101, 91, 108,
              93, 32, 61, 32, 75, 91, 103, 93, 32, 58, 32, 40, 102, 46, 112,
              117, 115, 104, 40, 103, 41, 44, 32, 74, 46, 104, 97, 115, 79, 119,
              110, 80, 114, 111, 112, 101, 114, 116, 121, 40, 103, 41, 32, 124,
              124, 32, 40, 74, 91, 103, 93, 32, 61, 32, 91, 93, 41, 44, 32, 74,
              91, 103, 93, 46, 112, 117, 115, 104, 40, 40, 41, 32, 61, 62, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 101, 91,
              108, 93, 32, 61, 32, 75, 91, 103, 93, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 43, 43, 104, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 104, 32, 61, 61, 61, 32, 102, 46,
              108, 101, 110, 103, 116, 104, 32, 38, 38, 32, 100, 40, 101, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 41, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 48, 32, 61, 61, 61, 32, 102, 46, 108, 101,
              110, 103, 116, 104, 32, 38, 38, 32, 100, 40, 101, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 125, 44, 32, 78, 97, 44, 32, 79, 32, 61, 32,
              40, 97, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 102, 111, 114, 32, 40, 118, 97, 114, 32, 98, 32, 61, 32, 34,
              34, 59, 32, 120, 91, 97, 93, 59, 32, 41, 32, 98, 32, 43, 61, 32,
              78, 97, 91, 120, 91, 97, 43, 43, 93, 93, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 98, 59, 10, 32,
              32, 32, 32, 32, 32, 125, 44, 32, 80, 59, 10, 32, 32, 32, 32, 32,
              32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 80, 97, 40, 97, 44,
              32, 98, 44, 32, 99, 32, 61, 32, 123, 125, 41, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 100, 32, 61, 32, 98, 46,
              110, 97, 109, 101, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105,
              102, 32, 40, 33, 97, 41, 32, 116, 104, 114, 111, 119, 32, 110,
              101, 119, 32, 80, 40, 96, 116, 121, 112, 101, 32, 34, 36, 123,
              100, 125, 34, 32, 109, 117, 115, 116, 32, 104, 97, 118, 101, 32,
              97, 32, 112, 111, 115, 105, 116, 105, 118, 101, 32, 105, 110, 116,
              101, 103, 101, 114, 32, 116, 121, 112, 101, 105, 100, 32, 112,
              111, 105, 110, 116, 101, 114, 96, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 105, 102, 32, 40, 75, 46, 104, 97, 115, 79, 119, 110,
              80, 114, 111, 112, 101, 114, 116, 121, 40, 97, 41, 41, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 99,
              46, 36, 97, 41, 32, 114, 101, 116, 117, 114, 110, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 114, 111, 119, 32, 110,
              101, 119, 32, 80, 40, 96, 67, 97, 110, 110, 111, 116, 32, 114,
              101, 103, 105, 115, 116, 101, 114, 32, 116, 121, 112, 101, 32, 39,
              36, 123, 100, 125, 39, 32, 116, 119, 105, 99, 101, 96, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 75, 91, 97, 93, 32, 61, 32, 98, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 100, 101, 108, 101, 116, 101, 32, 77, 97, 91, 97,
              93, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 74, 46, 104, 97, 115,
              79, 119, 110, 80, 114, 111, 112, 101, 114, 116, 121, 40, 97, 41,
              32, 38, 38, 32, 40, 98, 32, 61, 32, 74, 91, 97, 93, 44, 32, 100,
              101, 108, 101, 116, 101, 32, 74, 91, 97, 93, 44, 32, 98, 46, 102,
              111, 114, 69, 97, 99, 104, 40, 40, 101, 41, 32, 61, 62, 32, 101,
              40, 41, 41, 41, 59, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32,
              32, 32, 32, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 77, 40,
              97, 44, 32, 98, 44, 32, 99, 32, 61, 32, 123, 125, 41, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32,
              80, 97, 40, 97, 44, 32, 98, 44, 32, 99, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 81,
              97, 32, 61, 32, 40, 97, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 116, 104, 114, 111, 119, 32, 110, 101, 119,
              32, 80, 40, 97, 46, 116, 97, 46, 119, 97, 46, 117, 97, 46, 110,
              97, 109, 101, 32, 43, 32, 34, 32, 105, 110, 115, 116, 97, 110, 99,
              101, 32, 97, 108, 114, 101, 97, 100, 121, 32, 100, 101, 108, 101,
              116, 101, 100, 34, 41, 59, 10, 32, 32, 32, 32, 32, 32, 125, 44,
              32, 82, 97, 32, 61, 32, 102, 97, 108, 115, 101, 44, 32, 83, 97,
              32, 61, 32, 40, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 125, 44, 32, 84, 97, 32, 61, 32, 40, 97, 44, 32, 98, 44, 32,
              99, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              105, 102, 32, 40, 98, 32, 61, 61, 61, 32, 99, 41, 32, 114, 101,
              116, 117, 114, 110, 32, 97, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 105, 102, 32, 40, 118, 111, 105, 100, 32, 48, 32, 61, 61, 61,
              32, 99, 46, 122, 97, 41, 32, 114, 101, 116, 117, 114, 110, 32,
              110, 117, 108, 108, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 97,
              32, 61, 32, 84, 97, 40, 97, 44, 32, 98, 44, 32, 99, 46, 122, 97,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117,
              114, 110, 32, 110, 117, 108, 108, 32, 61, 61, 61, 32, 97, 32, 63,
              32, 110, 117, 108, 108, 32, 58, 32, 99, 46, 84, 97, 40, 97, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 125, 44, 32, 85, 97, 32, 61, 32,
              123, 125, 44, 32, 86, 97, 32, 61, 32, 123, 125, 44, 32, 87, 97,
              32, 61, 32, 40, 97, 44, 32, 98, 41, 32, 61, 62, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 118, 111, 105, 100,
              32, 48, 32, 61, 61, 61, 32, 98, 41, 32, 116, 104, 114, 111, 119,
              32, 110, 101, 119, 32, 80, 40, 34, 112, 116, 114, 32, 115, 104,
              111, 117, 108, 100, 32, 110, 111, 116, 32, 98, 101, 32, 117, 110,
              100, 101, 102, 105, 110, 101, 100, 34, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 102, 111, 114, 32, 40, 59, 32, 97, 46, 122, 97,
              59, 32, 41, 32, 98, 32, 61, 32, 97, 46, 74, 97, 40, 98, 41, 44,
              32, 97, 32, 61, 32, 97, 46, 122, 97, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 86, 97, 91, 98, 93,
              59, 10, 32, 32, 32, 32, 32, 32, 125, 44, 32, 88, 97, 32, 61, 32,
              40, 97, 44, 32, 98, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 105, 102, 32, 40, 33, 98, 46, 119, 97, 32, 124,
              124, 32, 33, 98, 46, 118, 97, 41, 32, 116, 104, 114, 111, 119, 32,
              110, 101, 119, 32, 76, 40, 34, 109, 97, 107, 101, 67, 108, 97,
              115, 115, 72, 97, 110, 100, 108, 101, 32, 114, 101, 113, 117, 105,
              114, 101, 115, 32, 112, 116, 114, 32, 97, 110, 100, 32, 112, 116,
              114, 84, 121, 112, 101, 34, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 105, 102, 32, 40, 33, 33, 98, 46, 65, 97, 32, 33, 61, 61,
              32, 33, 33, 98, 46, 121, 97, 41, 32, 116, 104, 114, 111, 119, 32,
              110, 101, 119, 32, 76, 40, 34, 66, 111, 116, 104, 32, 115, 109,
              97, 114, 116, 80, 116, 114, 84, 121, 112, 101, 32, 97, 110, 100,
              32, 115, 109, 97, 114, 116, 80, 116, 114, 32, 109, 117, 115, 116,
              32, 98, 101, 32, 115, 112, 101, 99, 105, 102, 105, 101, 100, 34,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 98, 46, 99, 111, 117,
              110, 116, 32, 61, 32, 123, 32, 118, 97, 108, 117, 101, 58, 32, 49,
              32, 125, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116,
              117, 114, 110, 32, 81, 40, 79, 98, 106, 101, 99, 116, 46, 99, 114,
              101, 97, 116, 101, 40, 97, 44, 32, 123, 32, 116, 97, 58, 32, 123,
              32, 118, 97, 108, 117, 101, 58, 32, 98, 44, 32, 119, 114, 105,
              116, 97, 98, 108, 101, 58, 32, 116, 114, 117, 101, 32, 125, 32,
              125, 41, 41, 59, 10, 32, 32, 32, 32, 32, 32, 125, 44, 32, 81, 32,
              61, 32, 40, 97, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 105, 102, 32, 40, 34, 117, 110, 100, 101, 102, 105,
              110, 101, 100, 34, 32, 61, 61, 61, 32, 116, 121, 112, 101, 111,
              102, 32, 70, 105, 110, 97, 108, 105, 122, 97, 116, 105, 111, 110,
              82, 101, 103, 105, 115, 116, 114, 121, 41, 32, 114, 101, 116, 117,
              114, 110, 32, 81, 32, 61, 32, 40, 98, 41, 32, 61, 62, 32, 98, 44,
              32, 97, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 82, 97, 32, 61,
              32, 110, 101, 119, 32, 70, 105, 110, 97, 108, 105, 122, 97, 116,
              105, 111, 110, 82, 101, 103, 105, 115, 116, 114, 121, 40, 40, 98,
              41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 98, 32, 61, 32, 98, 46, 116, 97, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 45, 45, 98, 46, 99, 111, 117, 110, 116, 46,
              118, 97, 108, 117, 101, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 48, 32, 61, 61, 61, 32, 98, 46, 99, 111, 117, 110, 116,
              46, 118, 97, 108, 117, 101, 32, 38, 38, 32, 40, 98, 46, 121, 97,
              32, 63, 32, 98, 46, 65, 97, 46, 68, 97, 40, 98, 46, 121, 97, 41,
              32, 58, 32, 98, 46, 119, 97, 46, 117, 97, 46, 68, 97, 40, 98, 46,
              118, 97, 41, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 81, 32, 61, 32, 40, 98,
              41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 118, 97, 114, 32, 99, 32, 61, 32, 98, 46, 116, 97, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 99, 46, 121, 97, 32, 38, 38,
              32, 82, 97, 46, 114, 101, 103, 105, 115, 116, 101, 114, 40, 98,
              44, 32, 123, 32, 116, 97, 58, 32, 99, 32, 125, 44, 32, 98, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117,
              114, 110, 32, 98, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 83, 97, 32, 61, 32, 40, 98,
              41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 82, 97, 46, 117, 110, 114, 101, 103, 105, 115, 116, 101, 114,
              40, 98, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32,
              81, 40, 97, 41, 59, 10, 32, 32, 32, 32, 32, 32, 125, 44, 32, 89,
              97, 32, 61, 32, 91, 93, 59, 10, 32, 32, 32, 32, 32, 32, 102, 117,
              110, 99, 116, 105, 111, 110, 32, 90, 97, 40, 41, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 118, 97, 114,
              32, 82, 32, 61, 32, 40, 97, 44, 32, 98, 41, 32, 61, 62, 32, 79,
              98, 106, 101, 99, 116, 46, 100, 101, 102, 105, 110, 101, 80, 114,
              111, 112, 101, 114, 116, 121, 40, 98, 44, 32, 34, 110, 97, 109,
              101, 34, 44, 32, 123, 32, 118, 97, 108, 117, 101, 58, 32, 97, 32,
              125, 41, 44, 32, 36, 97, 32, 61, 32, 40, 97, 44, 32, 98, 44, 32,
              99, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              105, 102, 32, 40, 118, 111, 105, 100, 32, 48, 32, 61, 61, 61, 32,
              97, 91, 98, 93, 46, 120, 97, 41, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 118, 97, 114, 32, 100, 32, 61, 32, 97, 91, 98,
              93, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 97, 91, 98,
              93, 32, 61, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 46, 46,
              46, 101, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 105, 102, 32, 40, 33, 97, 91, 98, 93, 46, 120, 97, 46,
              104, 97, 115, 79, 119, 110, 80, 114, 111, 112, 101, 114, 116, 121,
              40, 101, 46, 108, 101, 110, 103, 116, 104, 41, 41, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 114, 111,
              119, 32, 110, 101, 119, 32, 80, 40, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 96, 70, 117, 110, 99, 116,
              105, 111, 110, 32, 39, 36, 123, 99, 125, 39, 32, 99, 97, 108, 108,
              101, 100, 32, 119, 105, 116, 104, 32, 97, 110, 32, 105, 110, 118,
              97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102,
              32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 40, 36, 123,
              101, 46, 108, 101, 110, 103, 116, 104, 125, 41, 32, 45, 32, 101,
              120, 112, 101, 99, 116, 115, 32, 111, 110, 101, 32, 111, 102, 32,
              40, 36, 123, 97, 91, 98, 93, 46, 120, 97, 125, 41, 33, 96, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116,
              117, 114, 110, 32, 97, 91, 98, 93, 46, 120, 97, 91, 101, 46, 108,
              101, 110, 103, 116, 104, 93, 46, 97, 112, 112, 108, 121, 40, 116,
              104, 105, 115, 44, 32, 101, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 125, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 97, 91, 98, 93, 46, 120, 97, 32, 61, 32, 91, 93, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 97, 91, 98, 93, 46, 120, 97,
              91, 100, 46, 71, 97, 93, 32, 61, 32, 100, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 125, 44, 32, 97,
              98, 32, 61, 32, 40, 97, 44, 32, 98, 44, 32, 99, 41, 32, 61, 62,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40,
              107, 46, 104, 97, 115, 79, 119, 110, 80, 114, 111, 112, 101, 114,
              116, 121, 40, 97, 41, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 105, 102, 32, 40, 118, 111, 105, 100, 32, 48, 32, 61,
              61, 61, 32, 99, 32, 124, 124, 32, 118, 111, 105, 100, 32, 48, 32,
              33, 61, 61, 32, 107, 91, 97, 93, 46, 120, 97, 32, 38, 38, 32, 118,
              111, 105, 100, 32, 48, 32, 33, 61, 61, 32, 107, 91, 97, 93, 46,
              120, 97, 91, 99, 93, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 116, 104, 114, 111, 119, 32, 110, 101, 119, 32, 80,
              40, 96, 67, 97, 110, 110, 111, 116, 32, 114, 101, 103, 105, 115,
              116, 101, 114, 32, 112, 117, 98, 108, 105, 99, 32, 110, 97, 109,
              101, 32, 39, 36, 123, 97, 125, 39, 32, 116, 119, 105, 99, 101, 96,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 36, 97, 40,
              107, 44, 32, 97, 44, 32, 97, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 105, 102, 32, 40, 107, 91, 97, 93, 46, 120, 97,
              46, 104, 97, 115, 79, 119, 110, 80, 114, 111, 112, 101, 114, 116,
              121, 40, 99, 41, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 116, 104, 114, 111, 119, 32, 110, 101, 119, 32, 80, 40,
              96, 67, 97, 110, 110, 111, 116, 32, 114, 101, 103, 105, 115, 116,
              101, 114, 32, 109, 117, 108, 116, 105, 112, 108, 101, 32, 111,
              118, 101, 114, 108, 111, 97, 100, 115, 32, 111, 102, 32, 97, 32,
              102, 117, 110, 99, 116, 105, 111, 110, 32, 119, 105, 116, 104, 32,
              116, 104, 101, 32, 115, 97, 109, 101, 32, 110, 117, 109, 98, 101,
              114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115,
              32, 40, 36, 123, 99, 125, 41, 33, 96, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 107, 91, 97, 93, 46, 120, 97, 91, 99, 93,
              32, 61, 32, 98, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 32,
              101, 108, 115, 101, 32, 107, 91, 97, 93, 32, 61, 32, 98, 44, 32,
              107, 91, 97, 93, 46, 71, 97, 32, 61, 32, 99, 59, 10, 32, 32, 32,
              32, 32, 32, 125, 44, 32, 98, 98, 32, 61, 32, 40, 97, 41, 32, 61,
              62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 97, 32, 61, 32,
              97, 46, 114, 101, 112, 108, 97, 99, 101, 40, 47, 91, 94, 97, 45,
              122, 65, 45, 90, 48, 45, 57, 95, 93, 47, 103, 44, 32, 34, 36, 34,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 98,
              32, 61, 32, 97, 46, 99, 104, 97, 114, 67, 111, 100, 101, 65, 116,
              40, 48, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116,
              117, 114, 110, 32, 52, 56, 32, 60, 61, 32, 98, 32, 38, 38, 32, 53,
              55, 32, 62, 61, 32, 98, 32, 63, 32, 96, 95, 36, 123, 97, 125, 96,
              32, 58, 32, 97, 59, 10, 32, 32, 32, 32, 32, 32, 125, 59, 10, 32,
              32, 32, 32, 32, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 99,
              98, 40, 97, 44, 32, 98, 44, 32, 99, 44, 32, 100, 44, 32, 101, 44,
              32, 102, 44, 32, 104, 44, 32, 103, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 110, 97, 109, 101, 32,
              61, 32, 97, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105,
              115, 46, 99, 111, 110, 115, 116, 114, 117, 99, 116, 111, 114, 32,
              61, 32, 98, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105,
              115, 46, 70, 97, 32, 61, 32, 99, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 116, 104, 105, 115, 46, 68, 97, 32, 61, 32, 100, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 122, 97,
              32, 61, 32, 101, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104,
              105, 115, 46, 86, 97, 32, 61, 32, 102, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 116, 104, 105, 115, 46, 74, 97, 32, 61, 32, 104, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 84,
              97, 32, 61, 32, 103, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116,
              104, 105, 115, 46, 98, 98, 32, 61, 32, 91, 93, 59, 10, 32, 32, 32,
              32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32,
              100, 98, 32, 61, 32, 40, 97, 44, 32, 98, 44, 32, 99, 41, 32, 61,
              62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 102, 111, 114,
              32, 40, 59, 32, 98, 32, 33, 61, 61, 32, 99, 59, 32, 41, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33,
              98, 46, 74, 97, 41, 32, 116, 104, 114, 111, 119, 32, 110, 101,
              119, 32, 80, 40, 96, 69, 120, 112, 101, 99, 116, 101, 100, 32,
              110, 117, 108, 108, 32, 111, 114, 32, 105, 110, 115, 116, 97, 110,
              99, 101, 32, 111, 102, 32, 36, 123, 99, 46, 110, 97, 109, 101,
              125, 44, 32, 103, 111, 116, 32, 97, 110, 32, 105, 110, 115, 116,
              97, 110, 99, 101, 32, 111, 102, 32, 36, 123, 98, 46, 110, 97, 109,
              101, 125, 96, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              97, 32, 61, 32, 98, 46, 74, 97, 40, 97, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 98, 32, 61, 32, 98, 46, 122, 97, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 97, 59, 10, 32, 32,
              32, 32, 32, 32, 125, 59, 10, 32, 32, 32, 32, 32, 32, 102, 117,
              110, 99, 116, 105, 111, 110, 32, 101, 98, 40, 97, 44, 32, 98, 41,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40,
              110, 117, 108, 108, 32, 61, 61, 61, 32, 98, 41, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 116, 104,
              105, 115, 46, 77, 97, 41, 32, 116, 104, 114, 111, 119, 32, 110,
              101, 119, 32, 80, 40, 96, 110, 117, 108, 108, 32, 105, 115, 32,
              110, 111, 116, 32, 97, 32, 118, 97, 108, 105, 100, 32, 36, 123,
              116, 104, 105, 115, 46, 110, 97, 109, 101, 125, 96, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114,
              110, 32, 48, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33, 98, 46, 116, 97,
              41, 32, 116, 104, 114, 111, 119, 32, 110, 101, 119, 32, 80, 40,
              96, 67, 97, 110, 110, 111, 116, 32, 112, 97, 115, 115, 32, 34, 36,
              123, 102, 98, 40, 98, 41, 125, 34, 32, 97, 115, 32, 97, 32, 36,
              123, 116, 104, 105, 115, 46, 110, 97, 109, 101, 125, 96, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33, 98, 46,
              116, 97, 46, 118, 97, 41, 32, 116, 104, 114, 111, 119, 32, 110,
              101, 119, 32, 80, 40, 96, 67, 97, 110, 110, 111, 116, 32, 112, 97,
              115, 115, 32, 100, 101, 108, 101, 116, 101, 100, 32, 111, 98, 106,
              101, 99, 116, 32, 97, 115, 32, 97, 32, 112, 111, 105, 110, 116,
              101, 114, 32, 111, 102, 32, 116, 121, 112, 101, 32, 36, 123, 116,
              104, 105, 115, 46, 110, 97, 109, 101, 125, 96, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 100, 98,
              40, 98, 46, 116, 97, 46, 118, 97, 44, 32, 98, 46, 116, 97, 46,
              119, 97, 46, 117, 97, 44, 32, 116, 104, 105, 115, 46, 117, 97, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32,
              102, 117, 110, 99, 116, 105, 111, 110, 32, 103, 98, 40, 97, 44,
              32, 98, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102,
              32, 40, 110, 117, 108, 108, 32, 61, 61, 61, 32, 98, 41, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 116,
              104, 105, 115, 46, 77, 97, 41, 32, 116, 104, 114, 111, 119, 32,
              110, 101, 119, 32, 80, 40, 96, 110, 117, 108, 108, 32, 105, 115,
              32, 110, 111, 116, 32, 97, 32, 118, 97, 108, 105, 100, 32, 36,
              123, 116, 104, 105, 115, 46, 110, 97, 109, 101, 125, 96, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 116,
              104, 105, 115, 46, 76, 97, 41, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 99, 32, 61, 32, 116,
              104, 105, 115, 46, 78, 97, 40, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 110, 117, 108, 108, 32, 33, 61, 61, 32,
              97, 32, 38, 38, 32, 97, 46, 112, 117, 115, 104, 40, 116, 104, 105,
              115, 46, 68, 97, 44, 32, 99, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 99, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 48,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 105, 102, 32, 40, 33, 98, 32, 124, 124, 32, 33,
              98, 46, 116, 97, 41, 32, 116, 104, 114, 111, 119, 32, 110, 101,
              119, 32, 80, 40, 96, 67, 97, 110, 110, 111, 116, 32, 112, 97, 115,
              115, 32, 34, 36, 123, 102, 98, 40, 98, 41, 125, 34, 32, 97, 115,
              32, 97, 32, 36, 123, 116, 104, 105, 115, 46, 110, 97, 109, 101,
              125, 96, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32,
              40, 33, 98, 46, 116, 97, 46, 118, 97, 41, 32, 116, 104, 114, 111,
              119, 32, 110, 101, 119, 32, 80, 40, 96, 67, 97, 110, 110, 111,
              116, 32, 112, 97, 115, 115, 32, 100, 101, 108, 101, 116, 101, 100,
              32, 111, 98, 106, 101, 99, 116, 32, 97, 115, 32, 97, 32, 112, 111,
              105, 110, 116, 101, 114, 32, 111, 102, 32, 116, 121, 112, 101, 32,
              36, 123, 116, 104, 105, 115, 46, 110, 97, 109, 101, 125, 96, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33, 116,
              104, 105, 115, 46, 75, 97, 32, 38, 38, 32, 98, 46, 116, 97, 46,
              119, 97, 46, 75, 97, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 116, 104, 114, 111, 119, 32, 110, 101, 119, 32, 80, 40, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 96, 67, 97, 110,
              110, 111, 116, 32, 99, 111, 110, 118, 101, 114, 116, 32, 97, 114,
              103, 117, 109, 101, 110, 116, 32, 111, 102, 32, 116, 121, 112,
              101, 32, 36, 123, 98, 46, 116, 97, 46, 65, 97, 32, 63, 32, 98, 46,
              116, 97, 46, 65, 97, 46, 110, 97, 109, 101, 32, 58, 32, 98, 46,
              116, 97, 46, 119, 97, 46, 110, 97, 109, 101, 125, 32, 116, 111,
              32, 112, 97, 114, 97, 109, 101, 116, 101, 114, 32, 116, 121, 112,
              101, 32, 36, 123, 116, 104, 105, 115, 46, 110, 97, 109, 101, 125,
              96, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 99, 32, 61, 32, 100, 98, 40, 98, 46,
              116, 97, 46, 118, 97, 44, 32, 98, 46, 116, 97, 46, 119, 97, 46,
              117, 97, 44, 32, 116, 104, 105, 115, 46, 117, 97, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 116, 104, 105, 115,
              46, 76, 97, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 105, 102, 32, 40, 118, 111, 105, 100, 32, 48, 32, 61, 61, 61,
              32, 98, 46, 116, 97, 46, 121, 97, 41, 32, 116, 104, 114, 111, 119,
              32, 110, 101, 119, 32, 80, 40, 34, 80, 97, 115, 115, 105, 110,
              103, 32, 114, 97, 119, 32, 112, 111, 105, 110, 116, 101, 114, 32,
              116, 111, 32, 115, 109, 97, 114, 116, 32, 112, 111, 105, 110, 116,
              101, 114, 32, 105, 115, 32, 105, 108, 108, 101, 103, 97, 108, 34,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 115, 119, 105,
              116, 99, 104, 32, 40, 116, 104, 105, 115, 46, 104, 98, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 99, 97,
              115, 101, 32, 48, 58, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 105, 102, 32, 40, 98, 46, 116, 97, 46, 65, 97, 32,
              61, 61, 61, 32, 116, 104, 105, 115, 41, 32, 99, 32, 61, 32, 98,
              46, 116, 97, 46, 121, 97, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 101, 108, 115, 101, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 114,
              111, 119, 32, 110, 101, 119, 32, 80, 40, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 96, 67, 97,
              110, 110, 111, 116, 32, 99, 111, 110, 118, 101, 114, 116, 32, 97,
              114, 103, 117, 109, 101, 110, 116, 32, 111, 102, 32, 116, 121,
              112, 101, 32, 36, 123, 98, 46, 116, 97, 46, 65, 97, 32, 63, 32,
              98, 46, 116, 97, 46, 65, 97, 46, 110, 97, 109, 101, 32, 58, 32,
              98, 46, 116, 97, 46, 119, 97, 46, 110, 97, 109, 101, 125, 32, 116,
              111, 32, 112, 97, 114, 97, 109, 101, 116, 101, 114, 32, 116, 121,
              112, 101, 32, 36, 123, 116, 104, 105, 115, 46, 110, 97, 109, 101,
              125, 96, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 98, 114, 101, 97, 107, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 99, 97, 115, 101, 32, 49, 58, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 99, 32, 61,
              32, 98, 46, 116, 97, 46, 121, 97, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 98, 114, 101, 97, 107, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 99, 97, 115, 101, 32,
              50, 58, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 105, 102, 32, 40, 98, 46, 116, 97, 46, 65, 97, 32, 61, 61, 61,
              32, 116, 104, 105, 115, 41, 32, 99, 32, 61, 32, 98, 46, 116, 97,
              46, 121, 97, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 101, 108, 115, 101, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 100,
              32, 61, 32, 98, 46, 99, 108, 111, 110, 101, 40, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 99,
              32, 61, 32, 116, 104, 105, 115, 46, 99, 98, 40, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 99,
              44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 104, 98, 40, 40, 41, 32, 61, 62, 32, 100, 91, 34,
              100, 101, 108, 101, 116, 101, 34, 93, 40, 41, 41, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              110, 117, 108, 108, 32, 33, 61, 61, 32, 97, 32, 38, 38, 32, 97,
              46, 112, 117, 115, 104, 40, 116, 104, 105, 115, 46, 68, 97, 44,
              32, 99, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 98, 114, 101, 97, 107, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 100, 101, 102, 97, 117, 108, 116, 58, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104,
              114, 111, 119, 32, 110, 101, 119, 32, 80, 40, 34, 85, 110, 115,
              117, 112, 112, 111, 114, 116, 105, 110, 103, 32, 115, 104, 97,
              114, 105, 110, 103, 32, 112, 111, 108, 105, 99, 121, 34, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 114,
              101, 116, 117, 114, 110, 32, 99, 59, 10, 32, 32, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 32, 32, 102, 117, 110, 99, 116, 105, 111,
              110, 32, 105, 98, 40, 97, 44, 32, 98, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 105, 102, 32, 40, 110, 117, 108, 108, 32, 61,
              61, 61, 32, 98, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 105, 102, 32, 40, 116, 104, 105, 115, 46, 77, 97, 41, 32,
              116, 104, 114, 111, 119, 32, 110, 101, 119, 32, 80, 40, 96, 110,
              117, 108, 108, 32, 105, 115, 32, 110, 111, 116, 32, 97, 32, 118,
              97, 108, 105, 100, 32, 36, 123, 116, 104, 105, 115, 46, 110, 97,
              109, 101, 125, 96, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 114, 101, 116, 117, 114, 110, 32, 48, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102,
              32, 40, 33, 98, 46, 116, 97, 41, 32, 116, 104, 114, 111, 119, 32,
              110, 101, 119, 32, 80, 40, 96, 67, 97, 110, 110, 111, 116, 32,
              112, 97, 115, 115, 32, 34, 36, 123, 102, 98, 40, 98, 41, 125, 34,
              32, 97, 115, 32, 97, 32, 36, 123, 116, 104, 105, 115, 46, 110, 97,
              109, 101, 125, 96, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              105, 102, 32, 40, 33, 98, 46, 116, 97, 46, 118, 97, 41, 32, 116,
              104, 114, 111, 119, 32, 110, 101, 119, 32, 80, 40, 96, 67, 97,
              110, 110, 111, 116, 32, 112, 97, 115, 115, 32, 100, 101, 108, 101,
              116, 101, 100, 32, 111, 98, 106, 101, 99, 116, 32, 97, 115, 32,
              97, 32, 112, 111, 105, 110, 116, 101, 114, 32, 111, 102, 32, 116,
              121, 112, 101, 32, 36, 123, 116, 104, 105, 115, 46, 110, 97, 109,
              101, 125, 96, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105,
              102, 32, 40, 98, 46, 116, 97, 46, 119, 97, 46, 75, 97, 41, 32,
              116, 104, 114, 111, 119, 32, 110, 101, 119, 32, 80, 40, 96, 67,
              97, 110, 110, 111, 116, 32, 99, 111, 110, 118, 101, 114, 116, 32,
              97, 114, 103, 117, 109, 101, 110, 116, 32, 111, 102, 32, 116, 121,
              112, 101, 32, 36, 123, 98, 46, 116, 97, 46, 119, 97, 46, 110, 97,
              109, 101, 125, 32, 116, 111, 32, 112, 97, 114, 97, 109, 101, 116,
              101, 114, 32, 116, 121, 112, 101, 32, 36, 123, 116, 104, 105, 115,
              46, 110, 97, 109, 101, 125, 96, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 100, 98, 40, 98, 46,
              116, 97, 46, 118, 97, 44, 32, 98, 46, 116, 97, 46, 119, 97, 46,
              117, 97, 44, 32, 116, 104, 105, 115, 46, 117, 97, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 102, 117,
              110, 99, 116, 105, 111, 110, 32, 106, 98, 40, 97, 44, 32, 98, 44,
              32, 99, 44, 32, 100, 44, 32, 101, 44, 32, 102, 44, 32, 104, 44,
              32, 103, 44, 32, 108, 44, 32, 109, 44, 32, 110, 41, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 110, 97,
              109, 101, 32, 61, 32, 97, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              116, 104, 105, 115, 46, 117, 97, 32, 61, 32, 98, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 77, 97, 32, 61,
              32, 99, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105,
              115, 46, 75, 97, 32, 61, 32, 100, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 116, 104, 105, 115, 46, 76, 97, 32, 61, 32, 101, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 97, 98,
              32, 61, 32, 102, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104,
              105, 115, 46, 104, 98, 32, 61, 32, 104, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 116, 104, 105, 115, 46, 82, 97, 32, 61, 32, 103,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46,
              78, 97, 32, 61, 32, 108, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              116, 104, 105, 115, 46, 99, 98, 32, 61, 32, 109, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 68, 97, 32, 61,
              32, 110, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 101, 32, 124,
              124, 32, 118, 111, 105, 100, 32, 48, 32, 33, 61, 61, 32, 98, 46,
              122, 97, 32, 63, 32, 116, 104, 105, 115, 46, 116, 111, 87, 105,
              114, 101, 84, 121, 112, 101, 32, 61, 32, 103, 98, 32, 58, 32, 40,
              116, 104, 105, 115, 46, 116, 111, 87, 105, 114, 101, 84, 121, 112,
              101, 32, 61, 32, 100, 32, 63, 32, 101, 98, 32, 58, 32, 105, 98,
              44, 32, 116, 104, 105, 115, 46, 67, 97, 32, 61, 32, 110, 117, 108,
              108, 41, 59, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32,
              32, 32, 118, 97, 114, 32, 107, 98, 32, 61, 32, 40, 97, 44, 32, 98,
              44, 32, 99, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 105, 102, 32, 40, 33, 107, 46, 104, 97, 115, 79, 119, 110,
              80, 114, 111, 112, 101, 114, 116, 121, 40, 97, 41, 41, 32, 116,
              104, 114, 111, 119, 32, 110, 101, 119, 32, 76, 40, 34, 82, 101,
              112, 108, 97, 99, 105, 110, 103, 32, 110, 111, 110, 101, 120, 105,
              115, 116, 101, 110, 116, 32, 112, 117, 98, 108, 105, 99, 32, 115,
              121, 109, 98, 111, 108, 34, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 118, 111, 105, 100, 32, 48, 32, 33, 61, 61, 32, 107, 91,
              97, 93, 46, 120, 97, 32, 38, 38, 32, 118, 111, 105, 100, 32, 48,
              32, 33, 61, 61, 32, 99, 32, 63, 32, 107, 91, 97, 93, 46, 120, 97,
              91, 99, 93, 32, 61, 32, 98, 32, 58, 32, 40, 107, 91, 97, 93, 32,
              61, 32, 98, 44, 32, 107, 91, 97, 93, 46, 71, 97, 32, 61, 32, 99,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 125, 44, 32, 83, 44, 32, 108,
              98, 32, 61, 32, 40, 97, 44, 32, 98, 44, 32, 99, 32, 61, 32, 91,
              93, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              97, 46, 105, 110, 99, 108, 117, 100, 101, 115, 40, 34, 106, 34,
              41, 32, 63, 32, 40, 97, 32, 61, 32, 97, 46, 114, 101, 112, 108,
              97, 99, 101, 40, 47, 112, 47, 103, 44, 32, 34, 105, 34, 41, 44,
              32, 98, 32, 61, 32, 40, 48, 44, 32, 107, 91, 34, 100, 121, 110,
              67, 97, 108, 108, 95, 34, 32, 43, 32, 97, 93, 41, 40, 98, 44, 32,
              46, 46, 46, 99, 41, 41, 32, 58, 32, 98, 32, 61, 32, 83, 46, 103,
              101, 116, 40, 98, 41, 40, 46, 46, 46, 99, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 98, 59, 10,
              32, 32, 32, 32, 32, 32, 125, 44, 32, 109, 98, 32, 61, 32, 40, 97,
              44, 32, 98, 41, 32, 61, 62, 32, 40, 46, 46, 46, 99, 41, 32, 61,
              62, 32, 108, 98, 40, 97, 44, 32, 98, 44, 32, 99, 41, 44, 32, 84,
              32, 61, 32, 40, 97, 44, 32, 98, 41, 32, 61, 62, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 97, 32, 61, 32, 79, 40, 97, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 99, 32, 61,
              32, 97, 46, 105, 110, 99, 108, 117, 100, 101, 115, 40, 34, 106,
              34, 41, 32, 63, 32, 109, 98, 40, 97, 44, 32, 98, 41, 32, 58, 32,
              83, 46, 103, 101, 116, 40, 98, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 105, 102, 32, 40, 34, 102, 117, 110, 99, 116, 105, 111,
              110, 34, 32, 33, 61, 32, 116, 121, 112, 101, 111, 102, 32, 99, 41,
              32, 116, 104, 114, 111, 119, 32, 110, 101, 119, 32, 80, 40, 96,
              117, 110, 107, 110, 111, 119, 110, 32, 102, 117, 110, 99, 116,
              105, 111, 110, 32, 112, 111, 105, 110, 116, 101, 114, 32, 119,
              105, 116, 104, 32, 115, 105, 103, 110, 97, 116, 117, 114, 101, 32,
              36, 123, 97, 125, 58, 32, 36, 123, 98, 125, 96, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 99,
              59, 10, 32, 32, 32, 32, 32, 32, 125, 44, 32, 110, 98, 44, 32, 112,
              98, 32, 61, 32, 40, 97, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 97, 32, 61, 32, 111, 98, 40, 97, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 98, 32, 61, 32,
              79, 40, 97, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 85, 40,
              97, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116,
              117, 114, 110, 32, 98, 59, 10, 32, 32, 32, 32, 32, 32, 125, 44,
              32, 113, 98, 32, 61, 32, 40, 97, 44, 32, 98, 41, 32, 61, 62, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 102, 117, 110, 99, 116,
              105, 111, 110, 32, 99, 40, 102, 41, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 101, 91, 102, 93, 32, 124, 124, 32, 75,
              91, 102, 93, 32, 124, 124, 32, 40, 77, 97, 91, 102, 93, 32, 63,
              32, 77, 97, 91, 102, 93, 46, 102, 111, 114, 69, 97, 99, 104, 40,
              99, 41, 32, 58, 32, 40, 100, 46, 112, 117, 115, 104, 40, 102, 41,
              44, 32, 101, 91, 102, 93, 32, 61, 32, 116, 114, 117, 101, 41, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 118, 97, 114, 32, 100, 32, 61, 32, 91, 93, 44, 32,
              101, 32, 61, 32, 123, 125, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              98, 46, 102, 111, 114, 69, 97, 99, 104, 40, 99, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 116, 104, 114, 111, 119, 32, 110, 101,
              119, 32, 110, 98, 40, 96, 36, 123, 97, 125, 58, 32, 96, 32, 43,
              32, 100, 46, 109, 97, 112, 40, 112, 98, 41, 46, 106, 111, 105,
              110, 40, 91, 34, 44, 32, 34, 93, 41, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 125, 44, 32, 114, 98, 32, 61, 32, 40, 97, 44, 32, 98, 41,
              32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 102, 111,
              114, 32, 40, 118, 97, 114, 32, 99, 32, 61, 32, 91, 93, 44, 32,
              100, 32, 61, 32, 48, 59, 32, 100, 32, 60, 32, 97, 59, 32, 100, 43,
              43, 41, 32, 99, 46, 112, 117, 115, 104, 40, 68, 91, 98, 32, 43,
              32, 52, 32, 42, 32, 100, 32, 62, 62, 32, 50, 93, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 99,
              59, 10, 32, 32, 32, 32, 32, 32, 125, 59, 10, 32, 32, 32, 32, 32,
              32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 115, 98, 40, 97,
              41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 102, 111, 114,
              32, 40, 118, 97, 114, 32, 98, 32, 61, 32, 49, 59, 32, 98, 32, 60,
              32, 97, 46, 108, 101, 110, 103, 116, 104, 59, 32, 43, 43, 98, 41,
              32, 105, 102, 32, 40, 110, 117, 108, 108, 32, 33, 61, 61, 32, 97,
              91, 98, 93, 32, 38, 38, 32, 118, 111, 105, 100, 32, 48, 32, 61,
              61, 61, 32, 97, 91, 98, 93, 46, 67, 97, 41, 32, 114, 101, 116,
              117, 114, 110, 32, 116, 114, 117, 101, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 102, 97, 108, 115,
              101, 59, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32,
              32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 116, 98, 40, 97,
              44, 32, 98, 44, 32, 99, 44, 32, 100, 44, 32, 101, 41, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 102, 32, 61, 32,
              98, 46, 108, 101, 110, 103, 116, 104, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 105, 102, 32, 40, 50, 32, 62, 32, 102, 41, 32, 116,
              104, 114, 111, 119, 32, 110, 101, 119, 32, 80, 40, 34, 97, 114,
              103, 84, 121, 112, 101, 115, 32, 97, 114, 114, 97, 121, 32, 115,
              105, 122, 101, 32, 109, 105, 115, 109, 97, 116, 99, 104, 33, 32,
              77, 117, 115, 116, 32, 97, 116, 32, 108, 101, 97, 115, 116, 32,
              103, 101, 116, 32, 114, 101, 116, 117, 114, 110, 32, 118, 97, 108,
              117, 101, 32, 97, 110, 100, 32, 39, 116, 104, 105, 115, 39, 32,
              116, 121, 112, 101, 115, 33, 34, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 118, 97, 114, 32, 104, 32, 61, 32, 110, 117, 108, 108,
              32, 33, 61, 61, 32, 98, 91, 49, 93, 32, 38, 38, 32, 110, 117, 108,
              108, 32, 33, 61, 61, 32, 99, 44, 32, 103, 32, 61, 32, 115, 98, 40,
              98, 41, 44, 32, 108, 32, 61, 32, 34, 118, 111, 105, 100, 34, 32,
              33, 61, 61, 32, 98, 91, 48, 93, 46, 110, 97, 109, 101, 44, 32,
              109, 32, 61, 32, 102, 32, 45, 32, 50, 44, 32, 110, 32, 61, 32, 65,
              114, 114, 97, 121, 40, 109, 41, 44, 32, 113, 32, 61, 32, 91, 93,
              44, 32, 114, 32, 61, 32, 91, 93, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 114, 101, 116, 117, 114, 110, 32, 82, 40, 97, 44, 32, 102,
              117, 110, 99, 116, 105, 111, 110, 40, 46, 46, 46, 65, 41, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 46, 108, 101,
              110, 103, 116, 104, 32, 61, 32, 48, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 113, 46, 108, 101, 110, 103, 116, 104, 32, 61,
              32, 104, 32, 63, 32, 50, 32, 58, 32, 49, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 113, 91, 48, 93, 32, 61, 32, 101, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 104, 41,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118,
              97, 114, 32, 117, 32, 61, 32, 98, 91, 49, 93, 46, 116, 111, 87,
              105, 114, 101, 84, 121, 112, 101, 40, 114, 44, 32, 116, 104, 105,
              115, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              113, 91, 49, 93, 32, 61, 32, 117, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              102, 111, 114, 32, 40, 118, 97, 114, 32, 118, 32, 61, 32, 48, 59,
              32, 118, 32, 60, 32, 109, 59, 32, 43, 43, 118, 41, 32, 110, 91,
              118, 93, 32, 61, 32, 98, 91, 118, 32, 43, 32, 50, 93, 46, 116,
              111, 87, 105, 114, 101, 84, 121, 112, 101, 40, 114, 44, 32, 65,
              91, 118, 93, 41, 44, 32, 113, 46, 112, 117, 115, 104, 40, 110, 91,
              118, 93, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 65,
              32, 61, 32, 100, 40, 46, 46, 46, 113, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 103, 41, 32, 76, 97, 40,
              114, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 101, 108,
              115, 101, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 102,
              111, 114, 32, 40, 118, 32, 61, 32, 104, 32, 63, 32, 49, 32, 58,
              32, 50, 59, 32, 118, 32, 60, 32, 98, 46, 108, 101, 110, 103, 116,
              104, 59, 32, 118, 43, 43, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 69, 32, 61, 32,
              49, 32, 61, 61, 61, 32, 118, 32, 63, 32, 117, 32, 58, 32, 110, 91,
              118, 32, 45, 32, 50, 93, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 110, 117, 108, 108, 32, 33, 61, 61, 32,
              98, 91, 118, 93, 46, 67, 97, 32, 38, 38, 32, 98, 91, 118, 93, 46,
              67, 97, 40, 69, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 117,
              32, 61, 32, 108, 32, 63, 32, 98, 91, 48, 93, 46, 102, 114, 111,
              109, 87, 105, 114, 101, 84, 121, 112, 101, 40, 65, 41, 32, 58, 32,
              118, 111, 105, 100, 32, 48, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 117, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 125, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 117, 98, 32,
              61, 32, 40, 97, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 97, 32, 61, 32, 97, 46, 116, 114, 105, 109, 40, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116,
              32, 98, 32, 61, 32, 97, 46, 105, 110, 100, 101, 120, 79, 102, 40,
              34, 40, 34, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101,
              116, 117, 114, 110, 32, 45, 49, 32, 33, 61, 61, 32, 98, 32, 63,
              32, 97, 46, 115, 117, 98, 115, 116, 114, 40, 48, 44, 32, 98, 41,
              32, 58, 32, 97, 59, 10, 32, 32, 32, 32, 32, 32, 125, 44, 32, 118,
              98, 32, 61, 32, 91, 93, 44, 32, 86, 32, 61, 32, 91, 93, 44, 32,
              120, 98, 32, 61, 32, 40, 97, 41, 32, 61, 62, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 57, 32, 60, 32, 97, 32, 38, 38, 32, 48,
              32, 61, 61, 61, 32, 45, 45, 86, 91, 97, 32, 43, 32, 49, 93, 32,
              38, 38, 32, 40, 86, 91, 97, 93, 32, 61, 32, 118, 111, 105, 100,
              32, 48, 44, 32, 118, 98, 46, 112, 117, 115, 104, 40, 97, 41, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 125, 44, 32, 121, 98, 32, 61, 32,
              40, 97, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 105, 102, 32, 40, 33, 97, 41, 32, 116, 104, 114, 111, 119, 32,
              110, 101, 119, 32, 80, 40, 34, 67, 97, 110, 110, 111, 116, 32,
              117, 115, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 118, 97,
              108, 46, 32, 104, 97, 110, 100, 108, 101, 32, 61, 32, 34, 32, 43,
              32, 97, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116,
              117, 114, 110, 32, 86, 91, 97, 93, 59, 10, 32, 32, 32, 32, 32, 32,
              125, 44, 32, 104, 98, 32, 61, 32, 40, 97, 41, 32, 61, 62, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 115, 119, 105, 116, 99, 104,
              32, 40, 97, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 99, 97, 115, 101, 32, 118, 111, 105, 100, 32, 48, 58, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117,
              114, 110, 32, 50, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              99, 97, 115, 101, 32, 110, 117, 108, 108, 58, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32,
              52, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 99, 97, 115,
              101, 32, 116, 114, 117, 101, 58, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 54, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 99, 97, 115, 101, 32, 102,
              97, 108, 115, 101, 58, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 114, 101, 116, 117, 114, 110, 32, 56, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 100, 101, 102, 97, 117, 108, 116, 58,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 99, 111, 110,
              115, 116, 32, 98, 32, 61, 32, 118, 98, 46, 112, 111, 112, 40, 41,
              32, 124, 124, 32, 86, 46, 108, 101, 110, 103, 116, 104, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 86, 91, 98, 93,
              32, 61, 32, 97, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 86, 91, 98, 32, 43, 32, 49, 93, 32, 61, 32, 49, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116,
              117, 114, 110, 32, 98, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 32, 32, 125, 44, 32, 122, 98, 32, 61, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 110, 97, 109, 101, 58,
              32, 34, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58,
              118, 97, 108, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 102,
              114, 111, 109, 87, 105, 114, 101, 84, 121, 112, 101, 58, 32, 40,
              97, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 118, 97, 114, 32, 98, 32, 61, 32, 121, 98, 40, 97, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 120, 98, 40, 97, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116,
              117, 114, 110, 32, 98, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 111, 87, 105,
              114, 101, 84, 121, 112, 101, 58, 32, 40, 97, 44, 32, 98, 41, 32,
              61, 62, 32, 104, 98, 40, 98, 41, 44, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 66, 97, 58, 32, 56, 44, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 114, 101, 97, 100, 86, 97, 108, 117, 101, 70, 114, 111, 109,
              80, 111, 105, 110, 116, 101, 114, 58, 32, 73, 44, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 67, 97, 58, 32, 110, 117, 108, 108, 10, 32,
              32, 32, 32, 32, 32, 125, 44, 32, 65, 98, 32, 61, 32, 40, 97, 44,
              32, 98, 44, 32, 99, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 115, 119, 105, 116, 99, 104, 32, 40, 98, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 99, 97, 115, 101,
              32, 49, 58, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              114, 101, 116, 117, 114, 110, 32, 99, 32, 63, 32, 102, 117, 110,
              99, 116, 105, 111, 110, 40, 100, 41, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114,
              110, 32, 116, 104, 105, 115, 46, 102, 114, 111, 109, 87, 105, 114,
              101, 84, 121, 112, 101, 40, 119, 91, 100, 93, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 32, 58, 32, 102, 117,
              110, 99, 116, 105, 111, 110, 40, 100, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117,
              114, 110, 32, 116, 104, 105, 115, 46, 102, 114, 111, 109, 87, 105,
              114, 101, 84, 121, 112, 101, 40, 120, 91, 100, 93, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 99, 97, 115, 101, 32, 50, 58, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116,
              117, 114, 110, 32, 99, 32, 63, 32, 102, 117, 110, 99, 116, 105,
              111, 110, 40, 100, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 116,
              104, 105, 115, 46, 102, 114, 111, 109, 87, 105, 114, 101, 84, 121,
              112, 101, 40, 121, 91, 100, 32, 62, 62, 32, 49, 93, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 32, 58, 32,
              102, 117, 110, 99, 116, 105, 111, 110, 40, 100, 41, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101,
              116, 117, 114, 110, 32, 116, 104, 105, 115, 46, 102, 114, 111,
              109, 87, 105, 114, 101, 84, 121, 112, 101, 40, 122, 91, 100, 32,
              62, 62, 32, 49, 93, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 125, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 99, 97, 115, 101, 32, 52, 58, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 99, 32, 63,
              32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 100, 41, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114,
              101, 116, 117, 114, 110, 32, 116, 104, 105, 115, 46, 102, 114,
              111, 109, 87, 105, 114, 101, 84, 121, 112, 101, 40, 67, 91, 100,
              32, 62, 62, 32, 50, 93, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 125, 32, 58, 32, 102, 117, 110, 99, 116, 105,
              111, 110, 40, 100, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 116,
              104, 105, 115, 46, 102, 114, 111, 109, 87, 105, 114, 101, 84, 121,
              112, 101, 40, 68, 91, 100, 32, 62, 62, 32, 50, 93, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 100, 101, 102, 97, 117, 108, 116,
              58, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104,
              114, 111, 119, 32, 110, 101, 119, 32, 84, 121, 112, 101, 69, 114,
              114, 111, 114, 40, 96, 105, 110, 118, 97, 108, 105, 100, 32, 105,
              110, 116, 101, 103, 101, 114, 32, 119, 105, 100, 116, 104, 32, 40,
              36, 123, 98, 125, 41, 58, 32, 36, 123, 97, 125, 96, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32,
              125, 44, 32, 66, 98, 32, 61, 32, 40, 97, 44, 32, 98, 41, 32, 61,
              62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32,
              99, 32, 61, 32, 75, 91, 97, 93, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 105, 102, 32, 40, 118, 111, 105, 100, 32, 48, 32, 61, 61,
              61, 32, 99, 41, 32, 116, 104, 114, 111, 119, 32, 97, 32, 61, 32,
              96, 36, 123, 98, 125, 32, 104, 97, 115, 32, 117, 110, 107, 110,
              111, 119, 110, 32, 116, 121, 112, 101, 32, 36, 123, 112, 98, 40,
              97, 41, 125, 96, 44, 32, 110, 101, 119, 32, 80, 40, 97, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110,
              32, 99, 59, 10, 32, 32, 32, 32, 32, 32, 125, 44, 32, 102, 98, 32,
              61, 32, 40, 97, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 105, 102, 32, 40, 110, 117, 108, 108, 32, 61, 61, 61,
              32, 97, 41, 32, 114, 101, 116, 117, 114, 110, 32, 34, 110, 117,
              108, 108, 34, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97,
              114, 32, 98, 32, 61, 32, 116, 121, 112, 101, 111, 102, 32, 97, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110,
              32, 34, 111, 98, 106, 101, 99, 116, 34, 32, 61, 61, 61, 32, 98,
              32, 124, 124, 32, 34, 97, 114, 114, 97, 121, 34, 32, 61, 61, 61,
              32, 98, 32, 124, 124, 32, 34, 102, 117, 110, 99, 116, 105, 111,
              110, 34, 32, 61, 61, 61, 32, 98, 32, 63, 32, 97, 46, 116, 111, 83,
              116, 114, 105, 110, 103, 40, 41, 32, 58, 32, 34, 34, 32, 43, 32,
              97, 59, 10, 32, 32, 32, 32, 32, 32, 125, 44, 32, 67, 98, 32, 61,
              32, 40, 97, 44, 32, 98, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 115, 119, 105, 116, 99, 104, 32, 40, 98, 41,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 99, 97, 115,
              101, 32, 52, 58, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 114, 101, 116, 117, 114, 110, 32, 102, 117, 110, 99, 116, 105,
              111, 110, 40, 99, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 116,
              104, 105, 115, 46, 102, 114, 111, 109, 87, 105, 114, 101, 84, 121,
              112, 101, 40, 110, 97, 91, 99, 32, 62, 62, 32, 50, 93, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 99, 97, 115, 101, 32, 56, 58,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116,
              117, 114, 110, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 99,
              41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 114, 101, 116, 117, 114, 110, 32, 116, 104, 105, 115, 46,
              102, 114, 111, 109, 87, 105, 114, 101, 84, 121, 112, 101, 40, 111,
              97, 91, 99, 32, 62, 62, 32, 51, 93, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 125, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 100, 101, 102, 97, 117, 108, 116, 58, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 114, 111,
              119, 32, 110, 101, 119, 32, 84, 121, 112, 101, 69, 114, 114, 111,
              114, 40, 96, 105, 110, 118, 97, 108, 105, 100, 32, 102, 108, 111,
              97, 116, 32, 119, 105, 100, 116, 104, 32, 40, 36, 123, 98, 125,
              41, 58, 32, 36, 123, 97, 125, 96, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 125, 44, 32, 68, 98,
              32, 61, 32, 40, 97, 44, 32, 98, 44, 32, 99, 41, 32, 61, 62, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 115, 119, 105, 116, 99,
              104, 32, 40, 98, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 99, 97, 115, 101, 32, 49, 58, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 99, 32,
              63, 32, 40, 100, 41, 32, 61, 62, 32, 119, 91, 100, 93, 32, 58, 32,
              40, 100, 41, 32, 61, 62, 32, 120, 91, 100, 93, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 99, 97, 115, 101, 32, 50, 58, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117,
              114, 110, 32, 99, 32, 63, 32, 40, 100, 41, 32, 61, 62, 32, 121,
              91, 100, 32, 62, 62, 32, 49, 93, 32, 58, 32, 40, 100, 41, 32, 61,
              62, 32, 122, 91, 100, 32, 62, 62, 32, 49, 93, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 99, 97, 115, 101, 32, 52, 58, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117,
              114, 110, 32, 99, 32, 63, 32, 40, 100, 41, 32, 61, 62, 32, 67, 91,
              100, 32, 62, 62, 32, 50, 93, 32, 58, 32, 40, 100, 41, 32, 61, 62,
              32, 68, 91, 100, 32, 62, 62, 32, 50, 93, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 100, 101, 102, 97, 117, 108, 116, 58, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 114,
              111, 119, 32, 110, 101, 119, 32, 84, 121, 112, 101, 69, 114, 114,
              111, 114, 40, 96, 105, 110, 118, 97, 108, 105, 100, 32, 105, 110,
              116, 101, 103, 101, 114, 32, 119, 105, 100, 116, 104, 32, 40, 36,
              123, 98, 125, 41, 58, 32, 36, 123, 97, 125, 96, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 125,
              44, 32, 69, 98, 32, 61, 32, 79, 98, 106, 101, 99, 116, 46, 97,
              115, 115, 105, 103, 110, 40, 123, 32, 111, 112, 116, 105, 111,
              110, 97, 108, 58, 32, 116, 114, 117, 101, 32, 125, 44, 32, 122,
              98, 41, 44, 32, 70, 98, 32, 61, 32, 34, 117, 110, 100, 101, 102,
              105, 110, 101, 100, 34, 32, 33, 61, 32, 116, 121, 112, 101, 111,
              102, 32, 84, 101, 120, 116, 68, 101, 99, 111, 100, 101, 114, 32,
              63, 32, 110, 101, 119, 32, 84, 101, 120, 116, 68, 101, 99, 111,
              100, 101, 114, 40, 34, 117, 116, 102, 45, 49, 54, 108, 101, 34,
              41, 32, 58, 32, 118, 111, 105, 100, 32, 48, 44, 32, 71, 98, 32,
              61, 32, 40, 97, 44, 32, 98, 41, 32, 61, 62, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 99, 32, 61, 32, 97, 32,
              62, 62, 32, 49, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 102, 111,
              114, 32, 40, 118, 97, 114, 32, 100, 32, 61, 32, 99, 32, 43, 32,
              98, 32, 47, 32, 50, 59, 32, 33, 40, 99, 32, 62, 61, 32, 100, 41,
              32, 38, 38, 32, 122, 91, 99, 93, 59, 32, 41, 32, 43, 43, 99, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 99, 32, 60, 60, 61, 32, 49,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 51, 50,
              32, 60, 32, 99, 32, 45, 32, 97, 32, 38, 38, 32, 70, 98, 41, 32,
              114, 101, 116, 117, 114, 110, 32, 70, 98, 46, 100, 101, 99, 111,
              100, 101, 40, 120, 46, 115, 117, 98, 97, 114, 114, 97, 121, 40,
              97, 44, 32, 99, 41, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              99, 32, 61, 32, 34, 34, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              102, 111, 114, 32, 40, 100, 32, 61, 32, 48, 59, 32, 33, 40, 100,
              32, 62, 61, 32, 98, 32, 47, 32, 50, 41, 59, 32, 43, 43, 100, 41,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114,
              32, 101, 32, 61, 32, 121, 91, 97, 32, 43, 32, 50, 32, 42, 32, 100,
              32, 62, 62, 32, 49, 93, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 105, 102, 32, 40, 48, 32, 61, 61, 32, 101, 41, 32, 98,
              114, 101, 97, 107, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              99, 32, 43, 61, 32, 83, 116, 114, 105, 110, 103, 46, 102, 114,
              111, 109, 67, 104, 97, 114, 67, 111, 100, 101, 40, 101, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 99, 59, 10, 32, 32,
              32, 32, 32, 32, 125, 44, 32, 72, 98, 32, 61, 32, 40, 97, 44, 32,
              98, 44, 32, 99, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 99, 32, 33, 61, 32, 110, 117, 108, 108, 32, 63, 32,
              99, 32, 58, 32, 99, 32, 61, 32, 50, 49, 52, 55, 52, 56, 51, 54,
              52, 55, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40,
              50, 32, 62, 32, 99, 41, 32, 114, 101, 116, 117, 114, 110, 32, 48,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 99, 32, 45, 61, 32, 50,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 100, 32,
              61, 32, 98, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 99, 32, 61,
              32, 99, 32, 60, 32, 50, 32, 42, 32, 97, 46, 108, 101, 110, 103,
              116, 104, 32, 63, 32, 99, 32, 47, 32, 50, 32, 58, 32, 97, 46, 108,
              101, 110, 103, 116, 104, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              102, 111, 114, 32, 40, 118, 97, 114, 32, 101, 32, 61, 32, 48, 59,
              32, 101, 32, 60, 32, 99, 59, 32, 43, 43, 101, 41, 32, 121, 91, 98,
              32, 62, 62, 32, 49, 93, 32, 61, 32, 97, 46, 99, 104, 97, 114, 67,
              111, 100, 101, 65, 116, 40, 101, 41, 44, 32, 98, 32, 43, 61, 32,
              50, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 121, 91, 98, 32, 62,
              62, 32, 49, 93, 32, 61, 32, 48, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 114, 101, 116, 117, 114, 110, 32, 98, 32, 45, 32, 100, 59,
              10, 32, 32, 32, 32, 32, 32, 125, 44, 32, 73, 98, 32, 61, 32, 40,
              97, 41, 32, 61, 62, 32, 50, 32, 42, 32, 97, 46, 108, 101, 110,
              103, 116, 104, 44, 32, 74, 98, 32, 61, 32, 40, 97, 44, 32, 98, 41,
              32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 102, 111,
              114, 32, 40, 118, 97, 114, 32, 99, 32, 61, 32, 48, 44, 32, 100,
              32, 61, 32, 34, 34, 59, 32, 33, 40, 99, 32, 62, 61, 32, 98, 32,
              47, 32, 52, 41, 59, 32, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 118, 97, 114, 32, 101, 32, 61, 32, 67, 91, 97, 32,
              43, 32, 52, 32, 42, 32, 99, 32, 62, 62, 32, 50, 93, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 48, 32, 61,
              61, 32, 101, 41, 32, 98, 114, 101, 97, 107, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 43, 43, 99, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 54, 53, 53, 51, 54, 32, 60, 61, 32, 101,
              32, 63, 32, 40, 101, 32, 45, 61, 32, 54, 53, 53, 51, 54, 44, 32,
              100, 32, 43, 61, 32, 83, 116, 114, 105, 110, 103, 46, 102, 114,
              111, 109, 67, 104, 97, 114, 67, 111, 100, 101, 40, 53, 53, 50, 57,
              54, 32, 124, 32, 101, 32, 62, 62, 32, 49, 48, 44, 32, 53, 54, 51,
              50, 48, 32, 124, 32, 101, 32, 38, 32, 49, 48, 50, 51, 41, 41, 32,
              58, 32, 100, 32, 43, 61, 32, 83, 116, 114, 105, 110, 103, 46, 102,
              114, 111, 109, 67, 104, 97, 114, 67, 111, 100, 101, 40, 101, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 100, 59, 10, 32,
              32, 32, 32, 32, 32, 125, 44, 32, 75, 98, 32, 61, 32, 40, 97, 44,
              32, 98, 44, 32, 99, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 99, 32, 33, 61, 32, 110, 117, 108, 108, 32, 63,
              32, 99, 32, 58, 32, 99, 32, 61, 32, 50, 49, 52, 55, 52, 56, 51,
              54, 52, 55, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32,
              40, 52, 32, 62, 32, 99, 41, 32, 114, 101, 116, 117, 114, 110, 32,
              48, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 100,
              32, 61, 32, 98, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 99, 32,
              61, 32, 100, 32, 43, 32, 99, 32, 45, 32, 52, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 102, 111, 114, 32, 40, 118, 97, 114, 32, 101,
              32, 61, 32, 48, 59, 32, 101, 32, 60, 32, 97, 46, 108, 101, 110,
              103, 116, 104, 59, 32, 43, 43, 101, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 102, 32, 61, 32, 97,
              46, 99, 104, 97, 114, 67, 111, 100, 101, 65, 116, 40, 101, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 53,
              53, 50, 57, 54, 32, 60, 61, 32, 102, 32, 38, 38, 32, 53, 55, 51,
              52, 51, 32, 62, 61, 32, 102, 41, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 104, 32, 61, 32, 97,
              46, 99, 104, 97, 114, 67, 111, 100, 101, 65, 116, 40, 43, 43, 101,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 102,
              32, 61, 32, 54, 53, 53, 51, 54, 32, 43, 32, 40, 40, 102, 32, 38,
              32, 49, 48, 50, 51, 41, 32, 60, 60, 32, 49, 48, 41, 32, 124, 32,
              104, 32, 38, 32, 49, 48, 50, 51, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              67, 91, 98, 32, 62, 62, 32, 50, 93, 32, 61, 32, 102, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 98, 32, 43, 61, 32, 52, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 98,
              32, 43, 32, 52, 32, 62, 32, 99, 41, 32, 98, 114, 101, 97, 107, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 67, 91, 98, 32, 62, 62, 32, 50, 93, 32, 61, 32, 48,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114,
              110, 32, 98, 32, 45, 32, 100, 59, 10, 32, 32, 32, 32, 32, 32, 125,
              44, 32, 76, 98, 32, 61, 32, 40, 97, 41, 32, 61, 62, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 102, 111, 114, 32, 40, 118, 97,
              114, 32, 98, 32, 61, 32, 48, 44, 32, 99, 32, 61, 32, 48, 59, 32,
              99, 32, 60, 32, 97, 46, 108, 101, 110, 103, 116, 104, 59, 32, 43,
              43, 99, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              118, 97, 114, 32, 100, 32, 61, 32, 97, 46, 99, 104, 97, 114, 67,
              111, 100, 101, 65, 116, 40, 99, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 53, 53, 50, 57, 54, 32, 60, 61, 32, 100, 32,
              38, 38, 32, 53, 55, 51, 52, 51, 32, 62, 61, 32, 100, 32, 38, 38,
              32, 43, 43, 99, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              98, 32, 43, 61, 32, 52, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114,
              110, 32, 98, 59, 10, 32, 32, 32, 32, 32, 32, 125, 44, 32, 77, 98,
              32, 61, 32, 48, 44, 32, 78, 98, 32, 61, 32, 91, 93, 44, 32, 79,
              98, 32, 61, 32, 40, 97, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 118, 97, 114, 32, 98, 32, 61, 32, 78, 98, 46,
              108, 101, 110, 103, 116, 104, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 78, 98, 46, 112, 117, 115, 104, 40, 97, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 98, 59,
              10, 32, 32, 32, 32, 32, 32, 125, 44, 32, 80, 98, 32, 61, 32, 40,
              97, 44, 32, 98, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 102, 111, 114, 32, 40, 118, 97, 114, 32, 99, 32, 61,
              32, 65, 114, 114, 97, 121, 40, 97, 41, 44, 32, 100, 32, 61, 32,
              48, 59, 32, 100, 32, 60, 32, 97, 59, 32, 43, 43, 100, 41, 32, 99,
              91, 100, 93, 32, 61, 32, 66, 98, 40, 68, 91, 98, 32, 43, 32, 52,
              32, 42, 32, 100, 32, 62, 62, 32, 50, 93, 44, 32, 34, 112, 97, 114,
              97, 109, 101, 116, 101, 114, 32, 34, 32, 43, 32, 100, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32,
              99, 59, 10, 32, 32, 32, 32, 32, 32, 125, 44, 32, 81, 98, 32, 61,
              32, 82, 101, 102, 108, 101, 99, 116, 46, 99, 111, 110, 115, 116,
              114, 117, 99, 116, 44, 32, 82, 98, 32, 61, 32, 123, 125, 44, 32,
              83, 98, 32, 61, 32, 40, 97, 41, 32, 61, 62, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33, 40, 97, 32, 105,
              110, 115, 116, 97, 110, 99, 101, 111, 102, 32, 67, 97, 32, 124,
              124, 32, 34, 117, 110, 119, 105, 110, 100, 34, 32, 61, 61, 32, 97,
              41, 41, 32, 116, 104, 114, 111, 119, 32, 97, 59, 10, 32, 32, 32,
              32, 32, 32, 125, 44, 32, 84, 98, 32, 61, 32, 40, 97, 41, 32, 61,
              62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32,
              95, 97, 50, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 109, 97, 32,
              61, 32, 97, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 69, 97, 32,
              124, 124, 32, 48, 32, 60, 32, 77, 98, 32, 124, 124, 32, 40, 40,
              95, 97, 50, 32, 61, 32, 107, 46, 111, 110, 69, 120, 105, 116, 41,
              32, 61, 61, 32, 110, 117, 108, 108, 32, 63, 32, 118, 111, 105,
              100, 32, 48, 32, 58, 32, 95, 97, 50, 46, 99, 97, 108, 108, 40,
              107, 44, 32, 97, 41, 44, 32, 108, 97, 32, 61, 32, 116, 114, 117,
              101, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 114,
              111, 119, 32, 110, 101, 119, 32, 67, 97, 40, 97, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 125, 44, 32, 85, 98, 32, 61, 32, 40, 97, 41,
              32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102,
              32, 40, 33, 108, 97, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 116, 114, 121, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 105, 102, 32, 40, 97, 40, 41, 44, 32, 33, 40, 69,
              97, 32, 124, 124, 32, 48, 32, 60, 32, 77, 98, 41, 41, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 114, 121, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 109, 97, 32, 61, 32, 97, 32, 61, 32, 109, 97, 44, 32, 84,
              98, 40, 97, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 125, 32, 99, 97, 116, 99, 104, 32, 40, 98, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 83, 98, 40, 98, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 125, 32, 99, 97, 116, 99, 104, 32, 40, 98, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 83, 98,
              40, 98, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125,
              10, 32, 32, 32, 32, 32, 32, 125, 44, 32, 86, 98, 32, 61, 32, 123,
              125, 44, 32, 88, 98, 32, 61, 32, 40, 41, 32, 61, 62, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33, 87, 98, 41,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114,
              32, 97, 32, 61, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 85, 83, 69, 82, 58, 32, 34, 119, 101, 98, 95, 117,
              115, 101, 114, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 76, 79, 71, 78, 65, 77, 69, 58, 32, 34, 119, 101, 98, 95,
              117, 115, 101, 114, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 80, 65, 84, 72, 58, 32, 34, 47, 34, 44, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 80, 87, 68, 58, 32,
              34, 47, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 72, 79, 77, 69, 58, 32, 34, 47, 104, 111, 109, 101, 47, 119,
              101, 98, 95, 117, 115, 101, 114, 34, 44, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 76, 65, 78, 71, 58, 32, 40, 34, 111,
              98, 106, 101, 99, 116, 34, 32, 61, 61, 32, 116, 121, 112, 101,
              111, 102, 32, 110, 97, 118, 105, 103, 97, 116, 111, 114, 32, 38,
              38, 32, 110, 97, 118, 105, 103, 97, 116, 111, 114, 46, 108, 97,
              110, 103, 117, 97, 103, 101, 115, 32, 38, 38, 32, 110, 97, 118,
              105, 103, 97, 116, 111, 114, 46, 108, 97, 110, 103, 117, 97, 103,
              101, 115, 91, 48, 93, 32, 124, 124, 32, 34, 67, 34, 41, 46, 114,
              101, 112, 108, 97, 99, 101, 40, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 34, 45, 34, 44, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 95, 34, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 41, 32, 43, 32, 34, 46,
              85, 84, 70, 45, 56, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 95, 58, 32, 104, 97, 32, 124, 124, 32, 34, 46, 47,
              116, 104, 105, 115, 46, 112, 114, 111, 103, 114, 97, 109, 34, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 32, 98, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 102, 111, 114, 32, 40, 98,
              32, 105, 110, 32, 86, 98, 41, 32, 118, 111, 105, 100, 32, 48, 32,
              61, 61, 61, 32, 86, 98, 91, 98, 93, 32, 63, 32, 100, 101, 108,
              101, 116, 101, 32, 97, 91, 98, 93, 32, 58, 32, 97, 91, 98, 93, 32,
              61, 32, 86, 98, 91, 98, 93, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 118, 97, 114, 32, 99, 32, 61, 32, 91, 93, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 102, 111, 114, 32, 40, 98, 32,
              105, 110, 32, 97, 41, 32, 99, 46, 112, 117, 115, 104, 40, 96, 36,
              123, 98, 125, 61, 36, 123, 97, 91, 98, 93, 125, 96, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 87, 98, 32, 61, 32, 99,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 87, 98, 59, 10,
              32, 32, 32, 32, 32, 32, 125, 44, 32, 87, 98, 44, 32, 89, 98, 32,
              61, 32, 40, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 105, 102, 32, 40, 34, 111, 98, 106, 101, 99, 116, 34, 32,
              61, 61, 32, 116, 121, 112, 101, 111, 102, 32, 99, 114, 121, 112,
              116, 111, 32, 38, 38, 32, 34, 102, 117, 110, 99, 116, 105, 111,
              110, 34, 32, 61, 61, 32, 116, 121, 112, 101, 111, 102, 32, 99,
              114, 121, 112, 116, 111, 46, 103, 101, 116, 82, 97, 110, 100, 111,
              109, 86, 97, 108, 117, 101, 115, 41, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 40, 97, 41, 32,
              61, 62, 32, 99, 114, 121, 112, 116, 111, 46, 103, 101, 116, 82,
              97, 110, 100, 111, 109, 86, 97, 108, 117, 101, 115, 40, 97, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 40, 34, 105, 110,
              105, 116, 82, 97, 110, 100, 111, 109, 68, 101, 118, 105, 99, 101,
              34, 41, 59, 10, 32, 32, 32, 32, 32, 32, 125, 44, 32, 90, 98, 32,
              61, 32, 40, 97, 41, 32, 61, 62, 32, 40, 90, 98, 32, 61, 32, 89,
              98, 40, 41, 41, 40, 97, 41, 59, 10, 32, 32, 32, 32, 32, 32, 76,
              32, 61, 32, 107, 46, 73, 110, 116, 101, 114, 110, 97, 108, 69,
              114, 114, 111, 114, 32, 61, 32, 99, 108, 97, 115, 115, 32, 101,
              120, 116, 101, 110, 100, 115, 32, 69, 114, 114, 111, 114, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 114,
              117, 99, 116, 111, 114, 40, 97, 41, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 115, 117, 112, 101, 114, 40, 97, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115,
              46, 110, 97, 109, 101, 32, 61, 32, 34, 73, 110, 116, 101, 114,
              110, 97, 108, 69, 114, 114, 111, 114, 34, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 125, 59, 10, 32,
              32, 32, 32, 32, 32, 102, 111, 114, 32, 40, 118, 97, 114, 32, 36,
              98, 32, 61, 32, 65, 114, 114, 97, 121, 40, 50, 53, 54, 41, 44, 32,
              97, 99, 32, 61, 32, 48, 59, 32, 50, 53, 54, 32, 62, 32, 97, 99,
              59, 32, 43, 43, 97, 99, 41, 32, 36, 98, 91, 97, 99, 93, 32, 61,
              32, 83, 116, 114, 105, 110, 103, 46, 102, 114, 111, 109, 67, 104,
              97, 114, 67, 111, 100, 101, 40, 97, 99, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 78, 97, 32, 61, 32, 36, 98, 59, 10, 32, 32, 32, 32,
              32, 32, 80, 32, 61, 32, 107, 46, 66, 105, 110, 100, 105, 110, 103,
              69, 114, 114, 111, 114, 32, 61, 32, 99, 108, 97, 115, 115, 32,
              101, 120, 116, 101, 110, 100, 115, 32, 69, 114, 114, 111, 114, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116,
              114, 117, 99, 116, 111, 114, 40, 97, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 115, 117, 112, 101, 114, 40, 97, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105,
              115, 46, 110, 97, 109, 101, 32, 61, 32, 34, 66, 105, 110, 100,
              105, 110, 103, 69, 114, 114, 111, 114, 34, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 125, 59, 10, 32,
              32, 32, 32, 32, 32, 79, 98, 106, 101, 99, 116, 46, 97, 115, 115,
              105, 103, 110, 40, 90, 97, 46, 112, 114, 111, 116, 111, 116, 121,
              112, 101, 44, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105,
              115, 65, 108, 105, 97, 115, 79, 102, 58, 32, 102, 117, 110, 99,
              116, 105, 111, 110, 40, 97, 41, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 105, 102, 32, 40, 33, 40, 116, 104, 105, 115,
              32, 105, 110, 115, 116, 97, 110, 99, 101, 111, 102, 32, 90, 97,
              32, 38, 38, 32, 97, 32, 105, 110, 115, 116, 97, 110, 99, 101, 111,
              102, 32, 90, 97, 41, 41, 32, 114, 101, 116, 117, 114, 110, 32,
              102, 97, 108, 115, 101, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 118, 97, 114, 32, 98, 32, 61, 32, 116, 104, 105, 115, 46,
              116, 97, 46, 119, 97, 46, 117, 97, 44, 32, 99, 32, 61, 32, 116,
              104, 105, 115, 46, 116, 97, 46, 118, 97, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 97, 46, 116, 97, 32, 61, 32, 97, 46, 116,
              97, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114,
              32, 100, 32, 61, 32, 97, 46, 116, 97, 46, 119, 97, 46, 117, 97,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 102, 111, 114, 32,
              40, 97, 32, 61, 32, 97, 46, 116, 97, 46, 118, 97, 59, 32, 98, 46,
              122, 97, 59, 32, 41, 32, 99, 32, 61, 32, 98, 46, 74, 97, 40, 99,
              41, 44, 32, 98, 32, 61, 32, 98, 46, 122, 97, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 102, 111, 114, 32, 40, 59, 32, 100,
              46, 122, 97, 59, 32, 41, 32, 97, 32, 61, 32, 100, 46, 74, 97, 40,
              97, 41, 44, 32, 100, 32, 61, 32, 100, 46, 122, 97, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32,
              98, 32, 61, 61, 61, 32, 100, 32, 38, 38, 32, 99, 32, 61, 61, 61,
              32, 97, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 99, 108, 111, 110, 101, 58, 32, 102,
              117, 110, 99, 116, 105, 111, 110, 40, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 116, 97, 46,
              118, 97, 32, 124, 124, 32, 81, 97, 40, 116, 104, 105, 115, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 116,
              104, 105, 115, 46, 116, 97, 46, 73, 97, 41, 32, 114, 101, 116,
              117, 114, 110, 32, 116, 104, 105, 115, 46, 116, 97, 46, 99, 111,
              117, 110, 116, 46, 118, 97, 108, 117, 101, 32, 43, 61, 32, 49, 44,
              32, 116, 104, 105, 115, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 118, 97, 114, 32, 97, 32, 61, 32, 81, 44, 32, 98, 32, 61,
              32, 79, 98, 106, 101, 99, 116, 44, 32, 99, 32, 61, 32, 98, 46, 99,
              114, 101, 97, 116, 101, 44, 32, 100, 32, 61, 32, 79, 98, 106, 101,
              99, 116, 46, 103, 101, 116, 80, 114, 111, 116, 111, 116, 121, 112,
              101, 79, 102, 40, 116, 104, 105, 115, 41, 44, 32, 101, 32, 61, 32,
              116, 104, 105, 115, 46, 116, 97, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 97, 32, 61, 32, 97, 40, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 99, 46, 99, 97, 108, 108, 40, 98, 44,
              32, 100, 44, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 116, 97, 58, 32, 123, 32, 118, 97, 108, 117, 101,
              58, 32, 123, 32, 99, 111, 117, 110, 116, 58, 32, 101, 46, 99, 111,
              117, 110, 116, 44, 32, 72, 97, 58, 32, 101, 46, 72, 97, 44, 32,
              73, 97, 58, 32, 101, 46, 73, 97, 44, 32, 118, 97, 58, 32, 101, 46,
              118, 97, 44, 32, 119, 97, 58, 32, 101, 46, 119, 97, 44, 32, 121,
              97, 58, 32, 101, 46, 121, 97, 44, 32, 65, 97, 58, 32, 101, 46, 65,
              97, 32, 125, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 125, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 97, 46, 116, 97,
              46, 99, 111, 117, 110, 116, 46, 118, 97, 108, 117, 101, 32, 43,
              61, 32, 49, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 97,
              46, 116, 97, 46, 72, 97, 32, 61, 32, 102, 97, 108, 115, 101, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117,
              114, 110, 32, 97, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 91, 34, 100, 101, 108, 101,
              116, 101, 34, 93, 40, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 116, 104, 105, 115, 46, 116, 97, 46, 118, 97, 32, 124,
              124, 32, 81, 97, 40, 116, 104, 105, 115, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 116, 104, 105, 115,
              46, 116, 97, 46, 72, 97, 32, 38, 38, 32, 33, 116, 104, 105, 115,
              46, 116, 97, 46, 73, 97, 41, 32, 116, 104, 114, 111, 119, 32, 110,
              101, 119, 32, 80, 40, 34, 79, 98, 106, 101, 99, 116, 32, 97, 108,
              114, 101, 97, 100, 121, 32, 115, 99, 104, 101, 100, 117, 108, 101,
              100, 32, 102, 111, 114, 32, 100, 101, 108, 101, 116, 105, 111,
              110, 34, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 83,
              97, 40, 116, 104, 105, 115, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 118, 97, 114, 32, 97, 32, 61, 32, 116, 104, 105,
              115, 46, 116, 97, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              45, 45, 97, 46, 99, 111, 117, 110, 116, 46, 118, 97, 108, 117,
              101, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 48, 32, 61,
              61, 61, 32, 97, 46, 99, 111, 117, 110, 116, 46, 118, 97, 108, 117,
              101, 32, 38, 38, 32, 40, 97, 46, 121, 97, 32, 63, 32, 97, 46, 65,
              97, 46, 68, 97, 40, 97, 46, 121, 97, 41, 32, 58, 32, 97, 46, 119,
              97, 46, 117, 97, 46, 68, 97, 40, 97, 46, 118, 97, 41, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46,
              116, 97, 46, 73, 97, 32, 124, 124, 32, 40, 116, 104, 105, 115, 46,
              116, 97, 46, 121, 97, 32, 61, 32, 118, 111, 105, 100, 32, 48, 44,
              32, 116, 104, 105, 115, 46, 116, 97, 46, 118, 97, 32, 61, 32, 118,
              111, 105, 100, 32, 48, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 115, 68, 101,
              108, 101, 116, 101, 100, 58, 32, 102, 117, 110, 99, 116, 105, 111,
              110, 40, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              114, 101, 116, 117, 114, 110, 32, 33, 116, 104, 105, 115, 46, 116,
              97, 46, 118, 97, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 100, 101, 108, 101, 116, 101,
              76, 97, 116, 101, 114, 58, 32, 102, 117, 110, 99, 116, 105, 111,
              110, 40, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              116, 104, 105, 115, 46, 116, 97, 46, 118, 97, 32, 124, 124, 32,
              81, 97, 40, 116, 104, 105, 115, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 105, 102, 32, 40, 116, 104, 105, 115, 46, 116,
              97, 46, 72, 97, 32, 38, 38, 32, 33, 116, 104, 105, 115, 46, 116,
              97, 46, 73, 97, 41, 32, 116, 104, 114, 111, 119, 32, 110, 101,
              119, 32, 80, 40, 34, 79, 98, 106, 101, 99, 116, 32, 97, 108, 114,
              101, 97, 100, 121, 32, 115, 99, 104, 101, 100, 117, 108, 101, 100,
              32, 102, 111, 114, 32, 100, 101, 108, 101, 116, 105, 111, 110, 34,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 89, 97, 46,
              112, 117, 115, 104, 40, 116, 104, 105, 115, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 116, 97,
              46, 72, 97, 32, 61, 32, 116, 114, 117, 101, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 116,
              104, 105, 115, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10,
              32, 32, 32, 32, 32, 32, 125, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              79, 98, 106, 101, 99, 116, 46, 97, 115, 115, 105, 103, 110, 40,
              106, 98, 46, 112, 114, 111, 116, 111, 116, 121, 112, 101, 44, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 87, 97, 40, 97, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105,
              115, 46, 82, 97, 32, 38, 38, 32, 40, 97, 32, 61, 32, 116, 104,
              105, 115, 46, 82, 97, 40, 97, 41, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 97, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 80, 97, 40, 97, 41, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 118, 97, 114, 32, 95, 97, 50, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 40, 95, 97, 50, 32, 61, 32, 116,
              104, 105, 115, 46, 68, 97, 41, 32, 61, 61, 32, 110, 117, 108, 108,
              32, 63, 32, 118, 111, 105, 100, 32, 48, 32, 58, 32, 95, 97, 50,
              46, 99, 97, 108, 108, 40, 116, 104, 105, 115, 44, 32, 97, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 66, 97, 58, 32, 56, 44, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 114, 101, 97, 100, 86, 97, 108, 117, 101, 70, 114,
              111, 109, 80, 111, 105, 110, 116, 101, 114, 58, 32, 73, 44, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 102, 114, 111, 109, 87, 105, 114,
              101, 84, 121, 112, 101, 58, 32, 102, 117, 110, 99, 116, 105, 111,
              110, 40, 97, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 98, 40, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101,
              116, 117, 114, 110, 32, 116, 104, 105, 115, 46, 76, 97, 32, 63,
              32, 88, 97, 40, 116, 104, 105, 115, 46, 117, 97, 46, 70, 97, 44,
              32, 123, 32, 119, 97, 58, 32, 116, 104, 105, 115, 46, 97, 98, 44,
              32, 118, 97, 58, 32, 99, 44, 32, 65, 97, 58, 32, 116, 104, 105,
              115, 44, 32, 121, 97, 58, 32, 97, 32, 125, 41, 32, 58, 32, 88, 97,
              40, 116, 104, 105, 115, 46, 117, 97, 46, 70, 97, 44, 32, 123, 32,
              119, 97, 58, 32, 116, 104, 105, 115, 44, 32, 118, 97, 58, 32, 97,
              32, 125, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 99,
              32, 61, 32, 116, 104, 105, 115, 46, 87, 97, 40, 97, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33, 99,
              41, 32, 114, 101, 116, 117, 114, 110, 32, 116, 104, 105, 115, 46,
              80, 97, 40, 97, 41, 44, 32, 110, 117, 108, 108, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 100, 32, 61, 32,
              87, 97, 40, 116, 104, 105, 115, 46, 117, 97, 44, 32, 99, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 118,
              111, 105, 100, 32, 48, 32, 33, 61, 61, 32, 100, 41, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40,
              48, 32, 61, 61, 61, 32, 100, 46, 116, 97, 46, 99, 111, 117, 110,
              116, 46, 118, 97, 108, 117, 101, 41, 32, 114, 101, 116, 117, 114,
              110, 32, 100, 46, 116, 97, 46, 118, 97, 32, 61, 32, 99, 44, 32,
              100, 46, 116, 97, 46, 121, 97, 32, 61, 32, 97, 44, 32, 100, 46,
              99, 108, 111, 110, 101, 40, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 100, 32, 61, 32, 100, 46, 99, 108, 111,
              110, 101, 40, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 116, 104, 105, 115, 46, 80, 97, 40, 97, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117,
              114, 110, 32, 100, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 100, 32, 61, 32,
              116, 104, 105, 115, 46, 117, 97, 46, 86, 97, 40, 99, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 100, 32, 61, 32, 85, 97,
              91, 100, 93, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105,
              102, 32, 40, 33, 100, 41, 32, 114, 101, 116, 117, 114, 110, 32,
              98, 46, 99, 97, 108, 108, 40, 116, 104, 105, 115, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 100, 32, 61, 32, 116, 104,
              105, 115, 46, 75, 97, 32, 63, 32, 100, 46, 83, 97, 32, 58, 32,
              100, 46, 112, 111, 105, 110, 116, 101, 114, 84, 121, 112, 101, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 101,
              32, 61, 32, 84, 97, 40, 99, 44, 32, 116, 104, 105, 115, 46, 117,
              97, 44, 32, 100, 46, 117, 97, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 110, 117, 108,
              108, 32, 61, 61, 61, 32, 101, 32, 63, 32, 98, 46, 99, 97, 108,
              108, 40, 116, 104, 105, 115, 41, 32, 58, 32, 116, 104, 105, 115,
              46, 76, 97, 32, 63, 32, 88, 97, 40, 100, 46, 117, 97, 46, 70, 97,
              44, 32, 123, 32, 119, 97, 58, 32, 100, 44, 32, 118, 97, 58, 32,
              101, 44, 32, 65, 97, 58, 32, 116, 104, 105, 115, 44, 32, 121, 97,
              58, 32, 97, 32, 125, 41, 32, 58, 32, 88, 97, 40, 100, 46, 117, 97,
              46, 70, 97, 44, 32, 123, 32, 119, 97, 58, 32, 100, 44, 32, 118,
              97, 58, 32, 101, 32, 125, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 125, 10, 32, 32, 32, 32, 32, 32, 125, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 110, 98, 32, 61, 32, 107, 46, 85, 110, 98, 111, 117,
              110, 100, 84, 121, 112, 101, 69, 114, 114, 111, 114, 32, 61, 32,
              40, 40, 97, 44, 32, 98, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 118, 97, 114, 32, 99, 32, 61, 32, 82, 40, 98,
              44, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 100, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105,
              115, 46, 110, 97, 109, 101, 32, 61, 32, 98, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 109, 101, 115,
              115, 97, 103, 101, 32, 61, 32, 100, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 100, 32, 61, 32, 69, 114, 114, 111, 114, 40,
              100, 41, 46, 115, 116, 97, 99, 107, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 118, 111, 105, 100, 32, 48, 32, 33, 61, 61,
              32, 100, 32, 38, 38, 32, 40, 116, 104, 105, 115, 46, 115, 116, 97,
              99, 107, 32, 61, 32, 116, 104, 105, 115, 46, 116, 111, 83, 116,
              114, 105, 110, 103, 40, 41, 32, 43, 32, 34, 92, 110, 34, 32, 43,
              32, 100, 46, 114, 101, 112, 108, 97, 99, 101, 40, 47, 94, 69, 114,
              114, 111, 114, 40, 58, 91, 94, 92, 110, 93, 42, 41, 63, 92, 110,
              47, 44, 32, 34, 34, 41, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 125, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 99, 46, 112,
              114, 111, 116, 111, 116, 121, 112, 101, 32, 61, 32, 79, 98, 106,
              101, 99, 116, 46, 99, 114, 101, 97, 116, 101, 40, 97, 46, 112,
              114, 111, 116, 111, 116, 121, 112, 101, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 99, 46, 112, 114, 111, 116, 111, 116, 121,
              112, 101, 46, 99, 111, 110, 115, 116, 114, 117, 99, 116, 111, 114,
              32, 61, 32, 99, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 99, 46,
              112, 114, 111, 116, 111, 116, 121, 112, 101, 46, 116, 111, 83,
              116, 114, 105, 110, 103, 32, 61, 32, 102, 117, 110, 99, 116, 105,
              111, 110, 40, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 114, 101, 116, 117, 114, 110, 32, 118, 111, 105, 100, 32, 48,
              32, 61, 61, 61, 32, 116, 104, 105, 115, 46, 109, 101, 115, 115,
              97, 103, 101, 32, 63, 32, 116, 104, 105, 115, 46, 110, 97, 109,
              101, 32, 58, 32, 96, 36, 123, 116, 104, 105, 115, 46, 110, 97,
              109, 101, 125, 58, 32, 36, 123, 116, 104, 105, 115, 46, 109, 101,
              115, 115, 97, 103, 101, 125, 96, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 125, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101,
              116, 117, 114, 110, 32, 99, 59, 10, 32, 32, 32, 32, 32, 32, 125,
              41, 40, 69, 114, 114, 111, 114, 44, 32, 34, 85, 110, 98, 111, 117,
              110, 100, 84, 121, 112, 101, 69, 114, 114, 111, 114, 34, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 86, 46, 112, 117, 115, 104, 40, 48,
              44, 32, 49, 44, 32, 118, 111, 105, 100, 32, 48, 44, 32, 49, 44,
              32, 110, 117, 108, 108, 44, 32, 49, 44, 32, 116, 114, 117, 101,
              44, 32, 49, 44, 32, 102, 97, 108, 115, 101, 44, 32, 49, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 107, 46, 99, 111, 117, 110, 116, 95,
              101, 109, 118, 97, 108, 95, 104, 97, 110, 100, 108, 101, 115, 32,
              61, 32, 40, 41, 32, 61, 62, 32, 86, 46, 108, 101, 110, 103, 116,
              104, 32, 47, 32, 50, 32, 45, 32, 53, 32, 45, 32, 118, 98, 46, 108,
              101, 110, 103, 116, 104, 59, 10, 32, 32, 32, 32, 32, 32, 118, 97,
              114, 32, 109, 99, 32, 61, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 99, 58, 32, 40, 97, 44, 32, 98, 44, 32, 99, 44, 32, 100, 41,
              32, 61, 62, 32, 118, 97, 40, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 96, 65, 115, 115, 101, 114, 116, 105, 111, 110, 32, 102,
              97, 105, 108, 101, 100, 58, 32, 36, 123, 97, 32, 63, 32, 71, 97,
              40, 97, 41, 32, 58, 32, 34, 34, 125, 44, 32, 97, 116, 58, 32, 96,
              32, 43, 32, 91, 98, 32, 63, 32, 98, 32, 63, 32, 71, 97, 40, 98,
              41, 32, 58, 32, 34, 34, 32, 58, 32, 34, 117, 110, 107, 110, 111,
              119, 110, 32, 102, 105, 108, 101, 110, 97, 109, 101, 34, 44, 32,
              99, 44, 32, 100, 32, 63, 32, 100, 32, 63, 32, 71, 97, 40, 100, 41,
              32, 58, 32, 34, 34, 32, 58, 32, 34, 117, 110, 107, 110, 111, 119,
              110, 32, 102, 117, 110, 99, 116, 105, 111, 110, 34, 93, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 41, 44, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 109, 58, 32, 40, 97, 44, 32, 98, 44, 32, 99, 41, 32, 61,
              62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97,
              114, 32, 100, 32, 61, 32, 110, 101, 119, 32, 72, 97, 40, 97, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 68, 91, 100, 46,
              118, 97, 32, 43, 32, 49, 54, 32, 62, 62, 32, 50, 93, 32, 61, 32,
              48, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 68, 91, 100,
              46, 118, 97, 32, 43, 32, 52, 32, 62, 62, 32, 50, 93, 32, 61, 32,
              98, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 68, 91, 100,
              46, 118, 97, 32, 43, 32, 56, 32, 62, 62, 32, 50, 93, 32, 61, 32,
              99, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 73, 97, 32,
              61, 32, 97, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 74,
              97, 43, 43, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116,
              104, 114, 111, 119, 32, 73, 97, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 77, 58, 32,
              40, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 74, 58, 32, 40, 41,
              32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 75, 58, 32, 40, 41, 32, 61,
              62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 79, 58, 32, 102, 117, 110, 99, 116,
              105, 111, 110, 40, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 76, 58, 32, 40,
              41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125,
              44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 81, 58, 32, 40, 41, 32,
              61, 62, 32, 118, 97, 40, 34, 34, 41, 44, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 118, 58, 32, 40, 97, 41, 32, 61, 62, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 98, 32, 61,
              32, 75, 97, 91, 97, 93, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 100, 101, 108, 101, 116, 101, 32, 75, 97, 91, 97, 93, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 99,
              32, 61, 32, 98, 46, 78, 97, 44, 32, 100, 32, 61, 32, 98, 46, 68,
              97, 44, 32, 101, 32, 61, 32, 98, 46, 81, 97, 44, 32, 102, 32, 61,
              32, 101, 46, 109, 97, 112, 40, 40, 104, 41, 32, 61, 62, 32, 104,
              46, 90, 97, 41, 46, 99, 111, 110, 99, 97, 116, 40, 101, 46, 109,
              97, 112, 40, 40, 104, 41, 32, 61, 62, 32, 104, 46, 102, 98, 41,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 78, 40, 91,
              97, 93, 44, 32, 102, 44, 32, 40, 104, 41, 32, 61, 62, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32,
              103, 32, 61, 32, 123, 125, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 101, 46, 102, 111, 114, 69, 97, 99, 104, 40, 40,
              108, 44, 32, 109, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 110, 32, 61,
              32, 104, 91, 109, 93, 44, 32, 113, 32, 61, 32, 108, 46, 88, 97,
              44, 32, 114, 32, 61, 32, 108, 46, 89, 97, 44, 32, 65, 32, 61, 32,
              104, 91, 109, 32, 43, 32, 101, 46, 108, 101, 110, 103, 116, 104,
              93, 44, 32, 117, 32, 61, 32, 108, 46, 101, 98, 44, 32, 118, 32,
              61, 32, 108, 46, 103, 98, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 103, 91, 108, 46, 85, 97, 93, 32, 61, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 114, 101, 97, 100, 58, 32, 40, 69, 41, 32, 61, 62, 32,
              110, 46, 102, 114, 111, 109, 87, 105, 114, 101, 84, 121, 112, 101,
              40, 113, 40, 114, 44, 32, 69, 41, 41, 44, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 119, 114, 105, 116,
              101, 58, 32, 40, 69, 44, 32, 99, 97, 41, 32, 61, 62, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 118, 97, 114, 32, 66, 32, 61, 32, 91, 93, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              117, 40, 118, 44, 32, 69, 44, 32, 65, 46, 116, 111, 87, 105, 114,
              101, 84, 121, 112, 101, 40, 66, 44, 32, 99, 97, 41, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 76, 97, 40, 66, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 125, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32,
              91, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 110, 97, 109, 101, 58, 32, 98, 46, 110, 97, 109, 101, 44,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 102, 114, 111, 109, 87, 105, 114, 101, 84, 121, 112, 101, 58,
              32, 40, 108, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32,
              109, 32, 61, 32, 123, 125, 44, 32, 110, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 102, 111,
              114, 32, 40, 110, 32, 105, 110, 32, 103, 41, 32, 109, 91, 110, 93,
              32, 61, 32, 103, 91, 110, 93, 46, 114, 101, 97, 100, 40, 108, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 100, 40, 108, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116,
              117, 114, 110, 32, 109, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 111, 87, 105,
              114, 101, 84, 121, 112, 101, 58, 32, 40, 108, 44, 32, 109, 41, 32,
              61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 102, 111, 114, 32, 40, 118, 97, 114,
              32, 110, 32, 105, 110, 32, 103, 41, 32, 105, 102, 32, 40, 33, 40,
              110, 32, 105, 110, 32, 109, 41, 41, 32, 116, 104, 114, 111, 119,
              32, 110, 101, 119, 32, 84, 121, 112, 101, 69, 114, 114, 111, 114,
              40, 96, 77, 105, 115, 115, 105, 110, 103, 32, 102, 105, 101, 108,
              100, 58, 32, 34, 36, 123, 110, 125, 34, 96, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              118, 97, 114, 32, 113, 32, 61, 32, 99, 40, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 102,
              111, 114, 32, 40, 110, 32, 105, 110, 32, 103, 41, 32, 103, 91,
              110, 93, 46, 119, 114, 105, 116, 101, 40, 113, 44, 32, 109, 91,
              110, 93, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 110, 117, 108, 108, 32, 33, 61, 61,
              32, 108, 32, 38, 38, 32, 108, 46, 112, 117, 115, 104, 40, 100, 44,
              32, 113, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 113,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 66, 97, 58, 32, 56, 44, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 97, 100,
              86, 97, 108, 117, 101, 70, 114, 111, 109, 80, 111, 105, 110, 116,
              101, 114, 58, 32, 73, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 67, 97, 58, 32, 100, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 93, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 125, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 67, 58, 32,
              40, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 86, 58, 32, 40, 97,
              44, 32, 98, 44, 32, 99, 44, 32, 100, 41, 32, 61, 62, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 98, 32, 61, 32, 79, 40,
              98, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 77, 40,
              97, 44, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 110, 97, 109, 101, 58, 32, 98, 44, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 102, 114, 111, 109, 87, 105, 114, 101, 84,
              121, 112, 101, 58, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40,
              101, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 33, 33, 101, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 111, 87, 105,
              114, 101, 84, 121, 112, 101, 58, 32, 102, 117, 110, 99, 116, 105,
              111, 110, 40, 101, 44, 32, 102, 41, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114,
              110, 32, 102, 32, 63, 32, 99, 32, 58, 32, 100, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 66, 97, 58, 32, 56, 44, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 97, 100, 86,
              97, 108, 117, 101, 70, 114, 111, 109, 80, 111, 105, 110, 116, 101,
              114, 58, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 101, 41,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 114, 101, 116, 117, 114, 110, 32, 116, 104, 105, 115, 46, 102,
              114, 111, 109, 87, 105, 114, 101, 84, 121, 112, 101, 40, 120, 91,
              101, 93, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              67, 97, 58, 32, 110, 117, 108, 108, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 125, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 114, 58, 32, 40, 97,
              44, 32, 98, 44, 32, 99, 44, 32, 100, 44, 32, 101, 44, 32, 102, 44,
              32, 104, 44, 32, 103, 44, 32, 108, 44, 32, 109, 44, 32, 110, 44,
              32, 113, 44, 32, 114, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 110, 32, 61, 32, 79, 40, 110, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 102, 32, 61, 32, 84, 40,
              101, 44, 32, 102, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 103, 32, 38, 38, 32, 40, 103, 32, 61, 32, 84, 40, 104, 44, 32,
              103, 41, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 109,
              32, 38, 38, 32, 40, 109, 32, 61, 32, 84, 40, 108, 44, 32, 109, 41,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 32, 61,
              32, 84, 40, 113, 44, 32, 114, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 118, 97, 114, 32, 65, 32, 61, 32, 98, 98, 40, 110,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 97, 98, 40,
              65, 44, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 113, 98,
              40, 96, 67, 97, 110, 110, 111, 116, 32, 99, 111, 110, 115, 116,
              114, 117, 99, 116, 32, 36, 123, 110, 125, 32, 100, 117, 101, 32,
              116, 111, 32, 117, 110, 98, 111, 117, 110, 100, 32, 116, 121, 112,
              101, 115, 96, 44, 32, 91, 100, 93, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 125, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 78, 40, 91, 97, 44, 32, 98, 44, 32, 99, 93, 44, 32,
              100, 32, 63, 32, 91, 100, 93, 32, 58, 32, 91, 93, 44, 32, 40, 117,
              41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 118, 97, 114, 32, 95, 97, 50, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 117, 32, 61, 32, 117, 91, 48, 93,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102,
              32, 40, 100, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 118, 97, 114, 32, 118, 32, 61, 32, 117, 46,
              117, 97, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 118, 97, 114, 32, 69, 32, 61, 32, 118, 46, 70, 97, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 32, 101, 108,
              115, 101, 32, 69, 32, 61, 32, 90, 97, 46, 112, 114, 111, 116, 111,
              116, 121, 112, 101, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 117, 32, 61, 32, 82, 40, 110, 44, 32, 102, 117, 110,
              99, 116, 105, 111, 110, 40, 46, 46, 46, 79, 97, 41, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102,
              32, 40, 79, 98, 106, 101, 99, 116, 46, 103, 101, 116, 80, 114,
              111, 116, 111, 116, 121, 112, 101, 79, 102, 40, 116, 104, 105,
              115, 41, 32, 33, 61, 61, 32, 99, 97, 41, 32, 116, 104, 114, 111,
              119, 32, 110, 101, 119, 32, 80, 40, 34, 85, 115, 101, 32, 39, 110,
              101, 119, 39, 32, 116, 111, 32, 99, 111, 110, 115, 116, 114, 117,
              99, 116, 32, 34, 32, 43, 32, 110, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 118, 111,
              105, 100, 32, 48, 32, 61, 61, 61, 32, 66, 46, 69, 97, 41, 32, 116,
              104, 114, 111, 119, 32, 110, 101, 119, 32, 80, 40, 110, 32, 43,
              32, 34, 32, 104, 97, 115, 32, 110, 111, 32, 97, 99, 99, 101, 115,
              115, 105, 98, 108, 101, 32, 99, 111, 110, 115, 116, 114, 117, 99,
              116, 111, 114, 34, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 118, 97, 114, 32, 119, 98, 32, 61, 32, 66, 46,
              69, 97, 91, 79, 97, 46, 108, 101, 110, 103, 116, 104, 93, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102,
              32, 40, 118, 111, 105, 100, 32, 48, 32, 61, 61, 61, 32, 119, 98,
              41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 116, 104, 114, 111, 119, 32, 110, 101, 119, 32, 80, 40,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 96, 84, 114, 105, 101, 100, 32, 116, 111, 32, 105,
              110, 118, 111, 107, 101, 32, 99, 116, 111, 114, 32, 111, 102, 32,
              36, 123, 110, 125, 32, 119, 105, 116, 104, 32, 105, 110, 118, 97,
              108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32,
              112, 97, 114, 97, 109, 101, 116, 101, 114, 115, 32, 40, 36, 123,
              79, 97, 46, 108, 101, 110, 103, 116, 104, 125, 41, 32, 45, 32,
              101, 120, 112, 101, 99, 116, 101, 100, 32, 40, 36, 123, 79, 98,
              106, 101, 99, 116, 46, 107, 101, 121, 115, 40, 66, 46, 69, 97, 41,
              46, 116, 111, 83, 116, 114, 105, 110, 103, 40, 41, 125, 41, 32,
              112, 97, 114, 97, 109, 101, 116, 101, 114, 115, 32, 105, 110, 115,
              116, 101, 97, 100, 33, 96, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32,
              119, 98, 46, 97, 112, 112, 108, 121, 40, 116, 104, 105, 115, 44,
              32, 79, 97, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 125, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 118, 97, 114, 32, 99, 97, 32, 61, 32, 79, 98, 106, 101,
              99, 116, 46, 99, 114, 101, 97, 116, 101, 40, 69, 44, 32, 123, 32,
              99, 111, 110, 115, 116, 114, 117, 99, 116, 111, 114, 58, 32, 123,
              32, 118, 97, 108, 117, 101, 58, 32, 117, 32, 125, 32, 125, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 117, 46, 112,
              114, 111, 116, 111, 116, 121, 112, 101, 32, 61, 32, 99, 97, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114,
              32, 66, 32, 61, 32, 110, 101, 119, 32, 99, 98, 40, 110, 44, 32,
              117, 44, 32, 99, 97, 44, 32, 114, 44, 32, 118, 44, 32, 102, 44,
              32, 103, 44, 32, 109, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 105, 102, 32, 40, 66, 46, 122, 97, 41, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118,
              97, 114, 32, 100, 97, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 40, 95, 97, 50, 32, 61, 32, 40, 100, 97, 32,
              61, 32, 66, 46, 122, 97, 41, 46, 79, 97, 41, 32, 33, 61, 32, 110,
              117, 108, 108, 32, 63, 32, 95, 97, 50, 32, 58, 32, 100, 97, 46,
              79, 97, 32, 61, 32, 91, 93, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 66, 46, 122, 97, 46, 79, 97, 46, 112,
              117, 115, 104, 40, 66, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 118, 32, 61, 32, 110, 101, 119, 32, 106, 98, 40, 110, 44,
              32, 66, 44, 32, 116, 114, 117, 101, 44, 32, 102, 97, 108, 115,
              101, 44, 32, 102, 97, 108, 115, 101, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 100, 97, 32, 61, 32, 110, 101,
              119, 32, 106, 98, 40, 110, 32, 43, 32, 34, 42, 34, 44, 32, 66, 44,
              32, 102, 97, 108, 115, 101, 44, 32, 102, 97, 108, 115, 101, 44,
              32, 102, 97, 108, 115, 101, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 69, 32, 61, 32, 110, 101, 119, 32, 106,
              98, 40, 110, 32, 43, 32, 34, 32, 99, 111, 110, 115, 116, 42, 34,
              44, 32, 66, 44, 32, 102, 97, 108, 115, 101, 44, 32, 116, 114, 117,
              101, 44, 32, 102, 97, 108, 115, 101, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 85, 97, 91, 97, 93, 32, 61, 32,
              123, 32, 112, 111, 105, 110, 116, 101, 114, 84, 121, 112, 101, 58,
              32, 100, 97, 44, 32, 83, 97, 58, 32, 69, 32, 125, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 107, 98, 40, 65, 44, 32,
              117, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              114, 101, 116, 117, 114, 110, 32, 91, 118, 44, 32, 100, 97, 44,
              32, 69, 93, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 113, 58, 32, 40, 97, 44, 32, 98, 44, 32,
              99, 44, 32, 100, 44, 32, 101, 44, 32, 102, 41, 32, 61, 62, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32,
              104, 32, 61, 32, 114, 98, 40, 98, 44, 32, 99, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 101, 32, 61, 32, 84, 40, 100, 44,
              32, 101, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 78,
              40, 91, 93, 44, 32, 91, 97, 93, 44, 32, 40, 103, 41, 32, 61, 62,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 103,
              32, 61, 32, 103, 91, 48, 93, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 118, 97, 114, 32, 108, 32, 61, 32, 96, 99,
              111, 110, 115, 116, 114, 117, 99, 116, 111, 114, 32, 36, 123, 103,
              46, 110, 97, 109, 101, 125, 96, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 118, 111, 105, 100, 32, 48, 32, 61, 61,
              61, 32, 103, 46, 117, 97, 46, 69, 97, 32, 38, 38, 32, 40, 103, 46,
              117, 97, 46, 69, 97, 32, 61, 32, 91, 93, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 118, 111,
              105, 100, 32, 48, 32, 33, 61, 61, 32, 103, 46, 117, 97, 46, 69,
              97, 91, 98, 32, 45, 32, 49, 93, 41, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 114, 111, 119, 32, 110,
              101, 119, 32, 80, 40, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 96, 67, 97, 110, 110, 111, 116, 32, 114,
              101, 103, 105, 115, 116, 101, 114, 32, 109, 117, 108, 116, 105,
              112, 108, 101, 32, 99, 111, 110, 115, 116, 114, 117, 99, 116, 111,
              114, 115, 32, 119, 105, 116, 104, 32, 105, 100, 101, 110, 116,
              105, 99, 97, 108, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102,
              32, 112, 97, 114, 97, 109, 101, 116, 101, 114, 115, 32, 40, 36,
              123, 98, 32, 45, 32, 49, 125, 41, 32, 102, 111, 114, 32, 99, 108,
              97, 115, 115, 32, 39, 36, 123, 103, 46, 110, 97, 109, 101, 125,
              39, 33, 32, 79, 118, 101, 114, 108, 111, 97, 100, 32, 114, 101,
              115, 111, 108, 117, 116, 105, 111, 110, 32, 105, 115, 32, 99, 117,
              114, 114, 101, 110, 116, 108, 121, 32, 111, 110, 108, 121, 32,
              112, 101, 114, 102, 111, 114, 109, 101, 100, 32, 117, 115, 105,
              110, 103, 32, 116, 104, 101, 32, 112, 97, 114, 97, 109, 101, 116,
              101, 114, 32, 99, 111, 117, 110, 116, 44, 32, 110, 111, 116, 32,
              97, 99, 116, 117, 97, 108, 32, 116, 121, 112, 101, 32, 105, 110,
              102, 111, 33, 96, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 103, 46, 117, 97, 46, 69, 97, 91, 98, 32, 45, 32, 49, 93,
              32, 61, 32, 40, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 113, 98, 40, 96, 67, 97, 110,
              110, 111, 116, 32, 99, 111, 110, 115, 116, 114, 117, 99, 116, 32,
              36, 123, 103, 46, 110, 97, 109, 101, 125, 32, 100, 117, 101, 32,
              116, 111, 32, 117, 110, 98, 111, 117, 110, 100, 32, 116, 121, 112,
              101, 115, 96, 44, 32, 104, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 125, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 78, 40, 91, 93, 44, 32, 104, 44, 32, 40, 109, 41,
              32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 109, 46, 115, 112, 108, 105, 99, 101, 40, 49, 44,
              32, 48, 44, 32, 110, 117, 108, 108, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 103, 46, 117, 97, 46, 69,
              97, 91, 98, 32, 45, 32, 49, 93, 32, 61, 32, 116, 98, 40, 108, 44,
              32, 109, 44, 32, 110, 117, 108, 108, 44, 32, 101, 44, 32, 102, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              114, 101, 116, 117, 114, 110, 32, 91, 93, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 125, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32,
              91, 93, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 102, 58, 32, 40, 97, 44, 32, 98, 44, 32, 99,
              44, 32, 100, 44, 32, 101, 44, 32, 102, 44, 32, 104, 44, 32, 103,
              41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 118, 97, 114, 32, 108, 32, 61, 32, 114, 98, 40, 99, 44, 32,
              100, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 98, 32,
              61, 32, 79, 40, 98, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 98, 32, 61, 32, 117, 98, 40, 98, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 102, 32, 61, 32, 84, 40, 101, 44, 32,
              102, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 78, 40,
              91, 93, 44, 32, 91, 97, 93, 44, 32, 40, 109, 41, 32, 61, 62, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 102, 117,
              110, 99, 116, 105, 111, 110, 32, 110, 40, 41, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 113, 98, 40, 96,
              67, 97, 110, 110, 111, 116, 32, 99, 97, 108, 108, 32, 36, 123,
              113, 125, 32, 100, 117, 101, 32, 116, 111, 32, 117, 110, 98, 111,
              117, 110, 100, 32, 116, 121, 112, 101, 115, 96, 44, 32, 108, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 109, 32, 61, 32,
              109, 91, 48, 93, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 118, 97, 114, 32, 113, 32, 61, 32, 96, 36, 123, 109, 46,
              110, 97, 109, 101, 125, 46, 36, 123, 98, 125, 96, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 98, 46, 115, 116, 97, 114,
              116, 115, 87, 105, 116, 104, 40, 34, 64, 64, 34, 41, 32, 38, 38,
              32, 40, 98, 32, 61, 32, 83, 121, 109, 98, 111, 108, 91, 98, 46,
              115, 117, 98, 115, 116, 114, 105, 110, 103, 40, 50, 41, 93, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 103, 32,
              38, 38, 32, 109, 46, 117, 97, 46, 98, 98, 46, 112, 117, 115, 104,
              40, 98, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 118, 97, 114, 32, 114, 32, 61, 32, 109, 46, 117, 97, 46, 70,
              97, 44, 32, 65, 32, 61, 32, 114, 91, 98, 93, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 111, 105, 100, 32, 48,
              32, 61, 61, 61, 32, 65, 32, 124, 124, 32, 118, 111, 105, 100, 32,
              48, 32, 61, 61, 61, 32, 65, 46, 120, 97, 32, 38, 38, 32, 65, 46,
              99, 108, 97, 115, 115, 78, 97, 109, 101, 32, 33, 61, 61, 32, 109,
              46, 110, 97, 109, 101, 32, 38, 38, 32, 65, 46, 71, 97, 32, 61, 61,
              61, 32, 99, 32, 45, 32, 50, 32, 63, 32, 40, 110, 46, 71, 97, 32,
              61, 32, 99, 32, 45, 32, 50, 44, 32, 110, 46, 99, 108, 97, 115,
              115, 78, 97, 109, 101, 32, 61, 32, 109, 46, 110, 97, 109, 101, 44,
              32, 114, 91, 98, 93, 32, 61, 32, 110, 41, 32, 58, 32, 40, 36, 97,
              40, 114, 44, 32, 98, 44, 32, 113, 41, 44, 32, 114, 91, 98, 93, 46,
              120, 97, 91, 99, 32, 45, 32, 50, 93, 32, 61, 32, 110, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 78, 40, 91, 93,
              44, 32, 108, 44, 32, 40, 117, 41, 32, 61, 62, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 117, 32, 61, 32,
              116, 98, 40, 113, 44, 32, 117, 44, 32, 109, 44, 32, 102, 44, 32,
              104, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 118, 111, 105, 100, 32, 48, 32, 61, 61, 61, 32, 114, 91,
              98, 93, 46, 120, 97, 32, 63, 32, 40, 117, 46, 71, 97, 32, 61, 32,
              99, 32, 45, 32, 50, 44, 32, 114, 91, 98, 93, 32, 61, 32, 117, 41,
              32, 58, 32, 114, 91, 98, 93, 46, 120, 97, 91, 99, 32, 45, 32, 50,
              93, 32, 61, 32, 117, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 91, 93, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116,
              117, 114, 110, 32, 91, 93, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 125, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 85, 58, 32, 40, 97, 41, 32,
              61, 62, 32, 77, 40, 97, 44, 32, 122, 98, 41, 44, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 120, 58, 32, 40, 97, 44, 32, 98, 44, 32, 99,
              44, 32, 100, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 101,
              40, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 98, 32, 61, 32, 79,
              40, 98, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 101,
              46, 118, 97, 108, 117, 101, 115, 32, 61, 32, 123, 125, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 77, 40, 97, 44, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 110, 97, 109, 101,
              58, 32, 98, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 99, 111, 110, 115, 116, 114, 117, 99, 116, 111, 114, 58, 32,
              101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 102,
              114, 111, 109, 87, 105, 114, 101, 84, 121, 112, 101, 58, 32, 102,
              117, 110, 99, 116, 105, 111, 110, 40, 102, 41, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116,
              117, 114, 110, 32, 116, 104, 105, 115, 46, 99, 111, 110, 115, 116,
              114, 117, 99, 116, 111, 114, 46, 118, 97, 108, 117, 101, 115, 91,
              102, 93, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116,
              111, 87, 105, 114, 101, 84, 121, 112, 101, 58, 32, 40, 102, 44,
              32, 104, 41, 32, 61, 62, 32, 104, 46, 118, 97, 108, 117, 101, 44,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 66, 97, 58,
              32, 56, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              114, 101, 97, 100, 86, 97, 108, 117, 101, 70, 114, 111, 109, 80,
              111, 105, 110, 116, 101, 114, 58, 32, 65, 98, 40, 98, 44, 32, 99,
              44, 32, 100, 41, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 67, 97, 58, 32, 110, 117, 108, 108, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 125, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 97, 98, 40, 98, 44, 32, 101, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 107, 58, 32, 40, 97, 44, 32, 98, 44, 32, 99, 41, 32, 61, 62,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114,
              32, 100, 32, 61, 32, 66, 98, 40, 97, 44, 32, 34, 101, 110, 117,
              109, 34, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 98,
              32, 61, 32, 79, 40, 98, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 97, 32, 61, 32, 100, 46, 99, 111, 110, 115, 116, 114,
              117, 99, 116, 111, 114, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 100, 32, 61, 32, 79, 98, 106, 101, 99, 116, 46, 99, 114,
              101, 97, 116, 101, 40, 100, 46, 99, 111, 110, 115, 116, 114, 117,
              99, 116, 111, 114, 46, 112, 114, 111, 116, 111, 116, 121, 112,
              101, 44, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 118, 97, 108, 117, 101, 58, 32, 123, 32, 118, 97, 108, 117,
              101, 58, 32, 99, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 99, 111, 110, 115, 116, 114, 117, 99, 116, 111,
              114, 58, 32, 123, 32, 118, 97, 108, 117, 101, 58, 32, 82, 40, 96,
              36, 123, 100, 46, 110, 97, 109, 101, 125, 95, 36, 123, 98, 125,
              96, 44, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 41,
              32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 97, 46, 118, 97, 108,
              117, 101, 115, 91, 99, 93, 32, 61, 32, 100, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 97, 91, 98, 93, 32, 61, 32, 100, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 122, 58, 32, 40, 97, 44, 32, 98, 44, 32, 99, 41,
              32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              98, 32, 61, 32, 79, 40, 98, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 77, 40, 97, 44, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 110, 97, 109, 101, 58, 32, 98, 44, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 102, 114, 111,
              109, 87, 105, 114, 101, 84, 121, 112, 101, 58, 32, 40, 100, 41,
              32, 61, 62, 32, 100, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 116, 111, 87, 105, 114, 101, 84, 121, 112, 101, 58,
              32, 40, 100, 44, 32, 101, 41, 32, 61, 62, 32, 101, 44, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 66, 97, 58, 32, 56, 44,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 97,
              100, 86, 97, 108, 117, 101, 70, 114, 111, 109, 80, 111, 105, 110,
              116, 101, 114, 58, 32, 67, 98, 40, 98, 44, 32, 99, 41, 44, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 67, 97, 58, 32, 110,
              117, 108, 108, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 117, 58, 32, 40, 97, 44, 32, 98, 44, 32,
              99, 44, 32, 100, 44, 32, 101, 44, 32, 102, 41, 32, 61, 62, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32,
              104, 32, 61, 32, 114, 98, 40, 98, 44, 32, 99, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 97, 32, 61, 32, 79, 40, 97, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 97, 32, 61, 32,
              117, 98, 40, 97, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 101, 32, 61, 32, 84, 40, 100, 44, 32, 101, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 97, 98, 40, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 97, 44, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 102, 117, 110, 99, 116, 105, 111, 110,
              40, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 113, 98, 40, 96, 67, 97, 110, 110, 111, 116, 32, 99,
              97, 108, 108, 32, 36, 123, 97, 125, 32, 100, 117, 101, 32, 116,
              111, 32, 117, 110, 98, 111, 117, 110, 100, 32, 116, 121, 112, 101,
              115, 96, 44, 32, 104, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 98, 32, 45, 32, 49, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              78, 40, 91, 93, 44, 32, 104, 44, 32, 40, 103, 41, 32, 61, 62, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 107, 98,
              40, 97, 44, 32, 116, 98, 40, 97, 44, 32, 91, 103, 91, 48, 93, 44,
              32, 110, 117, 108, 108, 93, 46, 99, 111, 110, 99, 97, 116, 40,
              103, 46, 115, 108, 105, 99, 101, 40, 49, 41, 41, 44, 32, 110, 117,
              108, 108, 44, 32, 101, 44, 32, 102, 41, 44, 32, 98, 32, 45, 32,
              49, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              114, 101, 116, 117, 114, 110, 32, 91, 93, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 125, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 108, 58, 32,
              40, 97, 44, 32, 98, 44, 32, 99, 44, 32, 100, 44, 32, 101, 41, 32,
              61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 98,
              32, 61, 32, 79, 40, 98, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 45, 49, 32, 61, 61, 61, 32, 101, 32, 38, 38, 32, 40,
              101, 32, 61, 32, 52, 50, 57, 52, 57, 54, 55, 50, 57, 53, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 101, 32, 61, 32, 40,
              103, 41, 32, 61, 62, 32, 103, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 105, 102, 32, 40, 48, 32, 61, 61, 61, 32, 100, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97,
              114, 32, 102, 32, 61, 32, 51, 50, 32, 45, 32, 56, 32, 42, 32, 99,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 101, 32,
              61, 32, 40, 103, 41, 32, 61, 62, 32, 103, 32, 60, 60, 32, 102, 32,
              62, 62, 62, 32, 102, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114,
              32, 104, 32, 61, 32, 98, 46, 105, 110, 99, 108, 117, 100, 101,
              115, 40, 34, 117, 110, 115, 105, 103, 110, 101, 100, 34, 41, 32,
              63, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 103, 44, 32,
              108, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 114, 101, 116, 117, 114, 110, 32, 108, 32, 62, 62, 62, 32, 48,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 32, 58, 32,
              102, 117, 110, 99, 116, 105, 111, 110, 40, 103, 44, 32, 108, 41,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114,
              101, 116, 117, 114, 110, 32, 108, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 125, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 77, 40, 97, 44, 32, 123, 32, 110, 97, 109, 101, 58, 32, 98,
              44, 32, 102, 114, 111, 109, 87, 105, 114, 101, 84, 121, 112, 101,
              58, 32, 101, 44, 32, 116, 111, 87, 105, 114, 101, 84, 121, 112,
              101, 58, 32, 104, 44, 32, 66, 97, 58, 32, 56, 44, 32, 114, 101,
              97, 100, 86, 97, 108, 117, 101, 70, 114, 111, 109, 80, 111, 105,
              110, 116, 101, 114, 58, 32, 68, 98, 40, 98, 44, 32, 99, 44, 32,
              48, 32, 33, 61, 61, 32, 100, 41, 44, 32, 67, 97, 58, 32, 110, 117,
              108, 108, 32, 125, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 104, 58, 32, 40, 97,
              44, 32, 98, 44, 32, 99, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 102, 117, 110, 99, 116, 105, 111, 110,
              32, 100, 40, 102, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 110, 101, 119,
              32, 101, 40, 119, 46, 98, 117, 102, 102, 101, 114, 44, 32, 68, 91,
              102, 32, 43, 32, 52, 32, 62, 62, 32, 50, 93, 44, 32, 68, 91, 102,
              32, 62, 62, 32, 50, 93, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118,
              97, 114, 32, 101, 32, 61, 32, 91, 73, 110, 116, 56, 65, 114, 114,
              97, 121, 44, 32, 85, 105, 110, 116, 56, 65, 114, 114, 97, 121, 44,
              32, 73, 110, 116, 49, 54, 65, 114, 114, 97, 121, 44, 32, 85, 105,
              110, 116, 49, 54, 65, 114, 114, 97, 121, 44, 32, 73, 110, 116, 51,
              50, 65, 114, 114, 97, 121, 44, 32, 85, 105, 110, 116, 51, 50, 65,
              114, 114, 97, 121, 44, 32, 70, 108, 111, 97, 116, 51, 50, 65, 114,
              114, 97, 121, 44, 32, 70, 108, 111, 97, 116, 54, 52, 65, 114, 114,
              97, 121, 93, 91, 98, 93, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 99, 32, 61, 32, 79, 40, 99, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 77, 40, 97, 44, 32, 123, 32, 110, 97, 109,
              101, 58, 32, 99, 44, 32, 102, 114, 111, 109, 87, 105, 114, 101,
              84, 121, 112, 101, 58, 32, 100, 44, 32, 66, 97, 58, 32, 56, 44,
              32, 114, 101, 97, 100, 86, 97, 108, 117, 101, 70, 114, 111, 109,
              80, 111, 105, 110, 116, 101, 114, 58, 32, 100, 32, 125, 44, 32,
              123, 32, 36, 97, 58, 32, 116, 114, 117, 101, 32, 125, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 116, 58, 32, 40, 97, 41, 32, 61, 62, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 77, 40, 97, 44, 32, 69, 98,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 36, 58, 32, 40, 97, 44, 32, 98, 44, 32,
              99, 44, 32, 100, 44, 32, 101, 44, 32, 102, 44, 32, 104, 44, 32,
              103, 44, 32, 108, 44, 32, 109, 44, 32, 110, 44, 32, 113, 41, 32,
              61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 99,
              32, 61, 32, 79, 40, 99, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 102, 32, 61, 32, 84, 40, 101, 44, 32, 102, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 103, 32, 61, 32, 84, 40,
              104, 44, 32, 103, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 109, 32, 61, 32, 84, 40, 108, 44, 32, 109, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 113, 32, 61, 32, 84, 40, 110, 44,
              32, 113, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 78,
              40, 91, 97, 93, 44, 32, 91, 98, 93, 44, 32, 40, 114, 41, 32, 61,
              62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              114, 32, 61, 32, 114, 91, 48, 93, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 91, 110,
              101, 119, 32, 106, 98, 40, 99, 44, 32, 114, 46, 117, 97, 44, 32,
              102, 97, 108, 115, 101, 44, 32, 102, 97, 108, 115, 101, 44, 32,
              116, 114, 117, 101, 44, 32, 114, 44, 32, 100, 44, 32, 102, 44, 32,
              103, 44, 32, 109, 44, 32, 113, 41, 93, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 125, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 65, 58, 32, 40,
              97, 44, 32, 98, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 98, 32, 61, 32, 79, 40, 98, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 99, 32, 61,
              32, 34, 115, 116, 100, 58, 58, 115, 116, 114, 105, 110, 103, 34,
              32, 61, 61, 61, 32, 98, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 77, 40, 97, 44, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 110, 97, 109, 101, 58, 32, 98, 44, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 102, 114, 111, 109, 87,
              105, 114, 101, 84, 121, 112, 101, 58, 32, 102, 117, 110, 99, 116,
              105, 111, 110, 40, 100, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 101, 32, 61, 32,
              68, 91, 100, 32, 62, 62, 32, 50, 93, 44, 32, 102, 32, 61, 32, 100,
              32, 43, 32, 52, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 105, 102, 32, 40, 99, 41, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 102, 111, 114, 32, 40,
              118, 97, 114, 32, 104, 32, 61, 32, 102, 44, 32, 103, 32, 61, 32,
              48, 59, 32, 103, 32, 60, 61, 32, 101, 59, 32, 43, 43, 103, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 118, 97, 114, 32, 108, 32, 61, 32, 102, 32, 43,
              32, 103, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 103, 32, 61, 61, 32,
              101, 32, 124, 124, 32, 48, 32, 61, 61, 32, 120, 91, 108, 93, 41,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 104, 32, 61, 32, 104, 32, 63, 32, 71,
              97, 40, 104, 44, 32, 108, 32, 45, 32, 104, 41, 32, 58, 32, 34, 34,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 118, 111, 105, 100, 32,
              48, 32, 61, 61, 61, 32, 109, 41, 32, 118, 97, 114, 32, 109, 32,
              61, 32, 104, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 101, 108, 115, 101, 32, 109,
              32, 43, 61, 32, 83, 116, 114, 105, 110, 103, 46, 102, 114, 111,
              109, 67, 104, 97, 114, 67, 111, 100, 101, 40, 48, 41, 44, 32, 109,
              32, 43, 61, 32, 104, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 104, 32, 61, 32, 108,
              32, 43, 32, 49, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 101, 108, 115, 101, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 109, 32, 61, 32, 65, 114, 114, 97, 121, 40, 101, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 102, 111, 114, 32, 40, 103, 32, 61, 32, 48, 59, 32, 103, 32,
              60, 32, 101, 59, 32, 43, 43, 103, 41, 32, 109, 91, 103, 93, 32,
              61, 32, 83, 116, 114, 105, 110, 103, 46, 102, 114, 111, 109, 67,
              104, 97, 114, 67, 111, 100, 101, 40, 120, 91, 102, 32, 43, 32,
              103, 93, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 109, 32, 61, 32, 109, 46, 106, 111, 105, 110,
              40, 34, 34, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 85, 40, 100, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32,
              109, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125,
              44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 111,
              87, 105, 114, 101, 84, 121, 112, 101, 58, 32, 102, 117, 110, 99,
              116, 105, 111, 110, 40, 100, 44, 32, 101, 41, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 101, 32, 105, 110,
              115, 116, 97, 110, 99, 101, 111, 102, 32, 65, 114, 114, 97, 121,
              66, 117, 102, 102, 101, 114, 32, 38, 38, 32, 40, 101, 32, 61, 32,
              110, 101, 119, 32, 85, 105, 110, 116, 56, 65, 114, 114, 97, 121,
              40, 101, 41, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 118, 97, 114, 32, 102, 44, 32, 104, 32, 61, 32,
              34, 115, 116, 114, 105, 110, 103, 34, 32, 61, 61, 32, 116, 121,
              112, 101, 111, 102, 32, 101, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33, 40, 104, 32,
              124, 124, 32, 101, 32, 105, 110, 115, 116, 97, 110, 99, 101, 111,
              102, 32, 85, 105, 110, 116, 56, 65, 114, 114, 97, 121, 32, 124,
              124, 32, 101, 32, 105, 110, 115, 116, 97, 110, 99, 101, 111, 102,
              32, 85, 105, 110, 116, 56, 67, 108, 97, 109, 112, 101, 100, 65,
              114, 114, 97, 121, 32, 124, 124, 32, 101, 32, 105, 110, 115, 116,
              97, 110, 99, 101, 111, 102, 32, 73, 110, 116, 56, 65, 114, 114,
              97, 121, 41, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 116, 104, 114, 111, 119, 32, 110, 101, 119,
              32, 80, 40, 34, 67, 97, 110, 110, 111, 116, 32, 112, 97, 115, 115,
              32, 110, 111, 110, 45, 115, 116, 114, 105, 110, 103, 32, 116, 111,
              32, 115, 116, 100, 58, 58, 115, 116, 114, 105, 110, 103, 34, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              105, 102, 32, 40, 99, 32, 38, 38, 32, 104, 41, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 102, 111, 114, 32,
              40, 118, 97, 114, 32, 103, 32, 61, 32, 102, 32, 61, 32, 48, 59,
              32, 103, 32, 60, 32, 101, 46, 108, 101, 110, 103, 116, 104, 59,
              32, 43, 43, 103, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 108, 32,
              61, 32, 101, 46, 99, 104, 97, 114, 67, 111, 100, 101, 65, 116, 40,
              103, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 49, 50, 55, 32, 62, 61, 32, 108, 32, 63,
              32, 102, 43, 43, 32, 58, 32, 50, 48, 52, 55, 32, 62, 61, 32, 108,
              32, 63, 32, 102, 32, 43, 61, 32, 50, 32, 58, 32, 53, 53, 50, 57,
              54, 32, 60, 61, 32, 108, 32, 38, 38, 32, 53, 55, 51, 52, 51, 32,
              62, 61, 32, 108, 32, 63, 32, 40, 102, 32, 43, 61, 32, 52, 44, 32,
              43, 43, 103, 41, 32, 58, 32, 102, 32, 43, 61, 32, 51, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 101,
              108, 115, 101, 32, 102, 32, 61, 32, 101, 46, 108, 101, 110, 103,
              116, 104, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 103, 32, 61, 32, 98, 99, 40, 52, 32, 43, 32, 102, 32, 43,
              32, 49, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 108, 32, 61, 32, 103, 32, 43, 32, 52, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 68, 91, 103, 32,
              62, 62, 32, 50, 93, 32, 61, 32, 102, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 99, 32, 38,
              38, 32, 104, 41, 32, 72, 40, 101, 44, 32, 108, 44, 32, 102, 32,
              43, 32, 49, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 101, 108, 115, 101, 32, 105, 102, 32, 40, 104, 41,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 102, 111, 114, 32, 40, 104, 32, 61, 32, 48, 59, 32, 104, 32,
              60, 32, 102, 59, 32, 43, 43, 104, 41, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97,
              114, 32, 109, 32, 61, 32, 101, 46, 99, 104, 97, 114, 67, 111, 100,
              101, 65, 116, 40, 104, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 50, 53,
              53, 32, 60, 32, 109, 41, 32, 116, 104, 114, 111, 119, 32, 85, 40,
              108, 41, 44, 32, 110, 101, 119, 32, 80, 40, 34, 83, 116, 114, 105,
              110, 103, 32, 104, 97, 115, 32, 85, 84, 70, 45, 49, 54, 32, 99,
              111, 100, 101, 32, 117, 110, 105, 116, 115, 32, 116, 104, 97, 116,
              32, 100, 111, 32, 110, 111, 116, 32, 102, 105, 116, 32, 105, 110,
              32, 56, 32, 98, 105, 116, 115, 34, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 120, 91, 108,
              32, 43, 32, 104, 93, 32, 61, 32, 109, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 101, 108, 115, 101,
              32, 102, 111, 114, 32, 40, 104, 32, 61, 32, 48, 59, 32, 104, 32,
              60, 32, 102, 59, 32, 43, 43, 104, 41, 32, 120, 91, 108, 32, 43,
              32, 104, 93, 32, 61, 32, 101, 91, 104, 93, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 110, 117, 108, 108, 32,
              33, 61, 61, 32, 100, 32, 38, 38, 32, 100, 46, 112, 117, 115, 104,
              40, 85, 44, 32, 103, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 103, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 66, 97, 58, 32,
              56, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114,
              101, 97, 100, 86, 97, 108, 117, 101, 70, 114, 111, 109, 80, 111,
              105, 110, 116, 101, 114, 58, 32, 73, 44, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 67, 97, 40, 100, 41, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 85, 40, 100,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 115, 58, 32, 40, 97, 44, 32, 98, 44, 32, 99, 41, 32, 61,
              62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 99, 32,
              61, 32, 79, 40, 99, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 105, 102, 32, 40, 50, 32, 61, 61, 61, 32, 98, 41, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114,
              32, 100, 32, 61, 32, 71, 98, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 118, 97, 114, 32, 101, 32, 61, 32, 72, 98, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114,
              32, 102, 32, 61, 32, 73, 98, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 118, 97, 114, 32, 104, 32, 61, 32, 40, 103,
              41, 32, 61, 62, 32, 122, 91, 103, 32, 62, 62, 32, 49, 93, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 32, 101, 108, 115,
              101, 32, 52, 32, 61, 61, 61, 32, 98, 32, 38, 38, 32, 40, 100, 32,
              61, 32, 74, 98, 44, 32, 101, 32, 61, 32, 75, 98, 44, 32, 102, 32,
              61, 32, 76, 98, 44, 32, 104, 32, 61, 32, 40, 103, 41, 32, 61, 62,
              32, 68, 91, 103, 32, 62, 62, 32, 50, 93, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 77, 40, 97, 44, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 110, 97, 109, 101, 58, 32,
              99, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 102,
              114, 111, 109, 87, 105, 114, 101, 84, 121, 112, 101, 58, 32, 40,
              103, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 102, 111, 114, 32, 40, 118, 97, 114, 32,
              108, 32, 61, 32, 68, 91, 103, 32, 62, 62, 32, 50, 93, 44, 32, 109,
              44, 32, 110, 32, 61, 32, 103, 32, 43, 32, 52, 44, 32, 113, 32, 61,
              32, 48, 59, 32, 113, 32, 60, 61, 32, 108, 59, 32, 43, 43, 113, 41,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 118, 97, 114, 32, 114, 32, 61, 32, 103, 32, 43, 32,
              52, 32, 43, 32, 113, 32, 42, 32, 98, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 113,
              32, 61, 61, 32, 108, 32, 124, 124, 32, 48, 32, 61, 61, 32, 104,
              40, 114, 41, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 110, 32, 61, 32, 100, 40, 110, 44, 32,
              114, 32, 45, 32, 110, 41, 44, 32, 118, 111, 105, 100, 32, 48, 32,
              61, 61, 61, 32, 109, 32, 63, 32, 109, 32, 61, 32, 110, 32, 58, 32,
              40, 109, 32, 43, 61, 32, 83, 116, 114, 105, 110, 103, 46, 102,
              114, 111, 109, 67, 104, 97, 114, 67, 111, 100, 101, 40, 48, 41,
              44, 32, 109, 32, 43, 61, 32, 110, 41, 44, 32, 110, 32, 61, 32,
              114, 32, 43, 32, 98, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 85, 40, 103, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110,
              32, 109, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116,
              111, 87, 105, 114, 101, 84, 121, 112, 101, 58, 32, 40, 103, 44,
              32, 108, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 34, 115, 116, 114,
              105, 110, 103, 34, 32, 33, 61, 32, 116, 121, 112, 101, 111, 102,
              32, 108, 41, 32, 116, 104, 114, 111, 119, 32, 110, 101, 119, 32,
              80, 40, 96, 67, 97, 110, 110, 111, 116, 32, 112, 97, 115, 115, 32,
              110, 111, 110, 45, 115, 116, 114, 105, 110, 103, 32, 116, 111, 32,
              67, 43, 43, 32, 115, 116, 114, 105, 110, 103, 32, 116, 121, 112,
              101, 32, 36, 123, 99, 125, 96, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 109, 32, 61, 32,
              102, 40, 108, 41, 44, 32, 110, 32, 61, 32, 98, 99, 40, 52, 32, 43,
              32, 109, 32, 43, 32, 98, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 68, 91, 110, 32, 62, 62, 32, 50, 93,
              32, 61, 32, 109, 32, 47, 32, 98, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 101, 40, 108, 44, 32, 110, 32, 43,
              32, 52, 44, 32, 109, 32, 43, 32, 98, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 110, 117, 108, 108, 32,
              33, 61, 61, 32, 103, 32, 38, 38, 32, 103, 46, 112, 117, 115, 104,
              40, 85, 44, 32, 110, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 110, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 66, 97, 58, 32,
              56, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114,
              101, 97, 100, 86, 97, 108, 117, 101, 70, 114, 111, 109, 80, 111,
              105, 110, 116, 101, 114, 58, 32, 73, 44, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 67, 97, 40, 103, 41, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 85, 40, 103,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 119, 58, 32, 40, 97, 44, 32, 98, 44, 32, 99, 44, 32, 100,
              44, 32, 101, 44, 32, 102, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 75, 97, 91, 97, 93, 32, 61, 32, 123,
              32, 110, 97, 109, 101, 58, 32, 79, 40, 98, 41, 44, 32, 78, 97, 58,
              32, 84, 40, 99, 44, 32, 100, 41, 44, 32, 68, 97, 58, 32, 84, 40,
              101, 44, 32, 102, 41, 44, 32, 81, 97, 58, 32, 91, 93, 32, 125, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 106, 58, 32, 40, 97, 44, 32, 98, 44, 32, 99, 44,
              32, 100, 44, 32, 101, 44, 32, 102, 44, 32, 104, 44, 32, 103, 44,
              32, 108, 44, 32, 109, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 75, 97, 91, 97, 93, 46, 81, 97, 46, 112,
              117, 115, 104, 40, 123, 32, 85, 97, 58, 32, 79, 40, 98, 41, 44,
              32, 90, 97, 58, 32, 99, 44, 32, 88, 97, 58, 32, 84, 40, 100, 44,
              32, 101, 41, 44, 32, 89, 97, 58, 32, 102, 44, 32, 102, 98, 58, 32,
              104, 44, 32, 101, 98, 58, 32, 84, 40, 103, 44, 32, 108, 41, 44,
              32, 103, 98, 58, 32, 109, 32, 125, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 87, 58,
              32, 40, 97, 44, 32, 98, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 98, 32, 61, 32, 79, 40, 98, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 77, 40, 97, 44, 32,
              123, 32, 105, 98, 58, 32, 116, 114, 117, 101, 44, 32, 110, 97,
              109, 101, 58, 32, 98, 44, 32, 66, 97, 58, 32, 48, 44, 32, 102,
              114, 111, 109, 87, 105, 114, 101, 84, 121, 112, 101, 58, 32, 40,
              41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 125, 44, 32, 116, 111, 87, 105, 114, 101, 84, 121, 112, 101,
              58, 32, 40, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 125, 32, 125, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 72, 58, 32,
              40, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 69, 97, 32, 61, 32, 102, 97, 108, 115, 101, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 77, 98, 32, 61, 32, 48, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 68, 58, 32, 40, 41, 32, 61, 62, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 114, 111, 119, 32,
              73, 110, 102, 105, 110, 105, 116, 121, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 90, 58,
              32, 40, 97, 44, 32, 98, 44, 32, 99, 44, 32, 100, 41, 32, 61, 62,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 97, 32, 61,
              32, 78, 98, 91, 97, 93, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 98, 32, 61, 32, 121, 98, 40, 98, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 97,
              40, 110, 117, 108, 108, 44, 32, 98, 44, 32, 99, 44, 32, 100, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 66, 58, 32, 120, 98, 44, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 89, 58, 32, 40, 97, 44, 32, 98, 44, 32, 99, 41,
              32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              118, 97, 114, 32, 100, 32, 61, 32, 80, 98, 40, 97, 44, 32, 98, 41,
              44, 32, 101, 32, 61, 32, 100, 46, 115, 104, 105, 102, 116, 40, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 97, 45, 45, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 102,
              32, 61, 32, 65, 114, 114, 97, 121, 40, 97, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 98, 32, 61, 32, 96, 109, 101, 116,
              104, 111, 100, 67, 97, 108, 108, 101, 114, 60, 40, 36, 123, 100,
              46, 109, 97, 112, 40, 40, 104, 41, 32, 61, 62, 32, 104, 46, 110,
              97, 109, 101, 41, 46, 106, 111, 105, 110, 40, 34, 44, 32, 34, 41,
              125, 41, 32, 61, 62, 32, 36, 123, 101, 46, 110, 97, 109, 101, 125,
              62, 96, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101,
              116, 117, 114, 110, 32, 79, 98, 40, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 82, 40, 98, 44, 32, 40, 104, 44, 32, 103,
              44, 32, 108, 44, 32, 109, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 102, 111, 114, 32, 40,
              118, 97, 114, 32, 110, 32, 61, 32, 48, 44, 32, 113, 32, 61, 32,
              48, 59, 32, 113, 32, 60, 32, 97, 59, 32, 43, 43, 113, 41, 32, 102,
              91, 113, 93, 32, 61, 32, 100, 91, 113, 93, 46, 114, 101, 97, 100,
              86, 97, 108, 117, 101, 70, 114, 111, 109, 80, 111, 105, 110, 116,
              101, 114, 40, 109, 32, 43, 32, 110, 41, 44, 32, 110, 32, 43, 61,
              32, 100, 91, 113, 93, 46, 66, 97, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 103, 32, 61, 32, 49, 32, 61, 61,
              61, 32, 99, 32, 63, 32, 81, 98, 40, 103, 44, 32, 102, 41, 32, 58,
              32, 103, 46, 97, 112, 112, 108, 121, 40, 104, 44, 32, 102, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 104,
              32, 61, 32, 91, 93, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 103, 32, 61, 32, 101, 46, 116, 111, 87, 105,
              114, 101, 84, 121, 112, 101, 40, 104, 44, 32, 103, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 104, 46, 108,
              101, 110, 103, 116, 104, 32, 38, 38, 32, 40, 68, 91, 108, 32, 62,
              62, 32, 50, 93, 32, 61, 32, 104, 98, 40, 104, 41, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116,
              117, 114, 110, 32, 103, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 125, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 95, 58, 32, 40, 97, 41, 32, 61, 62,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 57, 32, 60,
              32, 97, 32, 38, 38, 32, 40, 86, 91, 97, 32, 43, 32, 49, 93, 32,
              43, 61, 32, 49, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125,
              44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 88, 58, 32, 40, 97, 41,
              32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              118, 97, 114, 32, 98, 32, 61, 32, 121, 98, 40, 97, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 76, 97, 40, 98, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 120, 98, 40, 97, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 111, 58, 32, 40, 97, 44, 32, 98, 41, 32, 61, 62,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 97, 32, 61,
              32, 66, 98, 40, 97, 44, 32, 34, 95, 101, 109, 118, 97, 108, 95,
              116, 97, 107, 101, 95, 118, 97, 108, 117, 101, 34, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 97, 32, 61, 32, 97, 46, 114,
              101, 97, 100, 86, 97, 108, 117, 101, 70, 114, 111, 109, 80, 111,
              105, 110, 116, 101, 114, 40, 98, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 104, 98, 40,
              97, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 69, 58, 32, 40, 97, 44, 32, 98, 41,
              32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              82, 98, 91, 97, 93, 32, 38, 38, 32, 40, 99, 108, 101, 97, 114, 84,
              105, 109, 101, 111, 117, 116, 40, 82, 98, 91, 97, 93, 46, 105,
              100, 41, 44, 32, 100, 101, 108, 101, 116, 101, 32, 82, 98, 91, 97,
              93, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102,
              32, 40, 33, 98, 41, 32, 114, 101, 116, 117, 114, 110, 32, 48, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 99,
              32, 61, 32, 115, 101, 116, 84, 105, 109, 101, 111, 117, 116, 40,
              40, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 100, 101, 108, 101, 116, 101, 32, 82, 98, 91, 97,
              93, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 85,
              98, 40, 40, 41, 32, 61, 62, 32, 99, 99, 40, 97, 44, 32, 112, 101,
              114, 102, 111, 114, 109, 97, 110, 99, 101, 46, 110, 111, 119, 40,
              41, 41, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125,
              44, 32, 98, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              82, 98, 91, 97, 93, 32, 61, 32, 123, 32, 105, 100, 58, 32, 99, 44,
              32, 106, 98, 58, 32, 98, 32, 125, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 48, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 70, 58, 32, 40, 97, 44, 32, 98, 44, 32, 99, 44, 32, 100,
              41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 118, 97, 114, 32, 101, 32, 61, 32, 40, 47, 42, 32, 64, 95, 95,
              80, 85, 82, 69, 95, 95, 32, 42, 47, 32, 110, 101, 119, 32, 68, 97,
              116, 101, 40, 41, 41, 46, 103, 101, 116, 70, 117, 108, 108, 89,
              101, 97, 114, 40, 41, 44, 32, 102, 32, 61, 32, 110, 101, 119, 32,
              68, 97, 116, 101, 40, 101, 44, 32, 48, 44, 32, 49, 41, 46, 103,
              101, 116, 84, 105, 109, 101, 122, 111, 110, 101, 79, 102, 102,
              115, 101, 116, 40, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 101, 32, 61, 32, 110, 101, 119, 32, 68, 97, 116, 101, 40, 101,
              44, 32, 54, 44, 32, 49, 41, 46, 103, 101, 116, 84, 105, 109, 101,
              122, 111, 110, 101, 79, 102, 102, 115, 101, 116, 40, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 68, 91, 97, 32, 62, 62,
              32, 50, 93, 32, 61, 32, 54, 48, 32, 42, 32, 77, 97, 116, 104, 46,
              109, 97, 120, 40, 102, 44, 32, 101, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 67, 91, 98, 32, 62, 62, 32, 50, 93, 32,
              61, 32, 78, 117, 109, 98, 101, 114, 40, 102, 32, 33, 61, 32, 101,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 98, 32, 61,
              32, 40, 104, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 103, 32, 61, 32, 77, 97,
              116, 104, 46, 97, 98, 115, 40, 104, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32,
              96, 85, 84, 67, 36, 123, 48, 32, 60, 61, 32, 104, 32, 63, 32, 34,
              45, 34, 32, 58, 32, 34, 43, 34, 125, 36, 123, 83, 116, 114, 105,
              110, 103, 40, 77, 97, 116, 104, 46, 102, 108, 111, 111, 114, 40,
              103, 32, 47, 32, 54, 48, 41, 41, 46, 112, 97, 100, 83, 116, 97,
              114, 116, 40, 50, 44, 32, 34, 48, 34, 41, 125, 36, 123, 83, 116,
              114, 105, 110, 103, 40, 103, 32, 37, 32, 54, 48, 41, 46, 112, 97,
              100, 83, 116, 97, 114, 116, 40, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 50, 44, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 34, 48, 34, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 41, 125, 96, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 125, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 97, 32, 61, 32, 98, 40, 102, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 98, 32, 61, 32, 98, 40, 101, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 101, 32, 60, 32,
              102, 32, 63, 32, 40, 72, 40, 97, 44, 32, 99, 44, 32, 49, 55, 41,
              44, 32, 72, 40, 98, 44, 32, 100, 44, 32, 49, 55, 41, 41, 32, 58,
              32, 40, 72, 40, 97, 44, 32, 100, 44, 32, 49, 55, 41, 44, 32, 72,
              40, 98, 44, 32, 99, 44, 32, 49, 55, 41, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              97, 97, 58, 32, 40, 41, 32, 61, 62, 32, 112, 101, 114, 102, 111,
              114, 109, 97, 110, 99, 101, 46, 110, 111, 119, 40, 41, 44, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 71, 58, 32, 40, 97, 41, 32, 61, 62,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114,
              32, 98, 32, 61, 32, 120, 46, 108, 101, 110, 103, 116, 104, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 97, 32, 62, 62, 62, 61,
              32, 48, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102,
              32, 40, 50, 49, 52, 55, 52, 56, 51, 54, 52, 56, 32, 60, 32, 97,
              41, 32, 114, 101, 116, 117, 114, 110, 32, 102, 97, 108, 115, 101,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 102, 111, 114, 32,
              40, 118, 97, 114, 32, 99, 32, 61, 32, 49, 59, 32, 52, 32, 62, 61,
              32, 99, 59, 32, 99, 32, 42, 61, 32, 50, 41, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 100, 32,
              61, 32, 98, 32, 42, 32, 40, 49, 32, 43, 32, 48, 46, 50, 32, 47,
              32, 99, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 100, 32, 61, 32, 77, 97, 116, 104, 46, 109, 105, 110, 40, 100,
              44, 32, 97, 32, 43, 32, 49, 48, 48, 54, 54, 51, 50, 57, 54, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 97, 58,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 100, 32, 61, 32, 40, 77, 97, 116, 104, 46, 109, 105, 110, 40,
              50, 49, 52, 55, 52, 56, 51, 54, 52, 56, 44, 32, 54, 53, 53, 51,
              54, 32, 42, 32, 77, 97, 116, 104, 46, 99, 101, 105, 108, 40, 77,
              97, 116, 104, 46, 109, 97, 120, 40, 97, 44, 32, 100, 41, 32, 47,
              32, 54, 53, 53, 51, 54, 41, 41, 32, 45, 32, 107, 97, 46, 98, 117,
              102, 102, 101, 114, 46, 98, 121, 116, 101, 76, 101, 110, 103, 116,
              104, 32, 43, 32, 54, 53, 53, 51, 53, 41, 32, 47, 32, 54, 53, 53,
              51, 54, 32, 124, 32, 48, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 116, 114, 121, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 107, 97, 46,
              103, 114, 111, 119, 40, 100, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 112, 97, 40, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              118, 97, 114, 32, 101, 32, 61, 32, 49, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 98, 114, 101, 97, 107,
              32, 97, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 125, 32, 99, 97, 116, 99, 104, 32, 40, 102, 41, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 101,
              32, 61, 32, 118, 111, 105, 100, 32, 48, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 101, 41, 32, 114, 101,
              116, 117, 114, 110, 32, 116, 114, 117, 101, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 102, 97, 108, 115,
              101, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 83, 58, 32, 40, 97, 44, 32, 98, 41, 32,
              61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118,
              97, 114, 32, 99, 32, 61, 32, 48, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 88, 98, 40, 41, 46, 102, 111, 114, 69, 97, 99,
              104, 40, 40, 100, 44, 32, 101, 41, 32, 61, 62, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 102,
              32, 61, 32, 98, 32, 43, 32, 99, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 101, 32, 61, 32, 68, 91, 97, 32, 43, 32,
              52, 32, 42, 32, 101, 32, 62, 62, 32, 50, 93, 32, 61, 32, 102, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 102, 111, 114,
              32, 40, 102, 32, 61, 32, 48, 59, 32, 102, 32, 60, 32, 100, 46,
              108, 101, 110, 103, 116, 104, 59, 32, 43, 43, 102, 41, 32, 119,
              91, 101, 43, 43, 93, 32, 61, 32, 100, 46, 99, 104, 97, 114, 67,
              111, 100, 101, 65, 116, 40, 102, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 119, 91, 101, 93, 32, 61, 32, 48, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 99, 32, 43,
              61, 32, 100, 46, 108, 101, 110, 103, 116, 104, 32, 43, 32, 49, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110,
              32, 48, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 84, 58, 32, 40, 97, 44, 32, 98, 41,
              32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              118, 97, 114, 32, 99, 32, 61, 32, 88, 98, 40, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 68, 91, 97, 32, 62, 62, 32, 50,
              93, 32, 61, 32, 99, 46, 108, 101, 110, 103, 116, 104, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 100, 32, 61,
              32, 48, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 99, 46,
              102, 111, 114, 69, 97, 99, 104, 40, 40, 101, 41, 32, 61, 62, 32,
              100, 32, 43, 61, 32, 101, 46, 108, 101, 110, 103, 116, 104, 32,
              43, 32, 49, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              68, 91, 98, 32, 62, 62, 32, 50, 93, 32, 61, 32, 100, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110,
              32, 48, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 80, 58, 32, 40, 41, 32, 61, 62, 32,
              53, 50, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 78, 58, 32, 40,
              41, 32, 61, 62, 32, 53, 50, 44, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 105, 58, 32, 100, 99, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              100, 58, 32, 101, 99, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 101,
              58, 32, 102, 99, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 112, 58,
              32, 103, 99, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 121, 58, 32,
              104, 99, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 98, 58, 32, 105,
              99, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 97, 58, 32, 106, 99,
              44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 103, 58, 32, 107, 99, 44,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 110, 58, 32, 108, 99, 44, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 82, 58, 32, 84, 98, 44, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 73, 58, 32, 40, 97, 44, 32, 98, 41,
              32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              90, 98, 40, 120, 46, 115, 117, 98, 97, 114, 114, 97, 121, 40, 97,
              44, 32, 97, 32, 43, 32, 98, 41, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 48, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32,
              125, 44, 32, 87, 32, 61, 32, 102, 117, 110, 99, 116, 105, 111,
              110, 40, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97,
              114, 32, 95, 97, 50, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 102,
              117, 110, 99, 116, 105, 111, 110, 32, 97, 40, 99, 41, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 95, 97,
              51, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 87, 32, 61,
              32, 99, 46, 101, 120, 112, 111, 114, 116, 115, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 107, 97, 32, 61, 32, 87, 46, 98, 97,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 112, 97, 40, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 83, 32, 61, 32,
              87, 46, 102, 97, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              114, 97, 46, 117, 110, 115, 104, 105, 102, 116, 40, 87, 46, 99,
              97, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 70, 45,
              45, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 40, 95, 97,
              51, 32, 61, 32, 107, 46, 109, 111, 110, 105, 116, 111, 114, 82,
              117, 110, 68, 101, 112, 101, 110, 100, 101, 110, 99, 105, 101,
              115, 41, 32, 61, 61, 32, 110, 117, 108, 108, 32, 63, 32, 118, 111,
              105, 100, 32, 48, 32, 58, 32, 95, 97, 51, 46, 99, 97, 108, 108,
              40, 107, 44, 32, 70, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 48, 32, 61, 61, 32, 70, 32, 38, 38, 32, 40, 110, 117, 108,
              108, 32, 33, 61, 61, 32, 117, 97, 32, 38, 38, 32, 40, 99, 108,
              101, 97, 114, 73, 110, 116, 101, 114, 118, 97, 108, 40, 117, 97,
              41, 44, 32, 117, 97, 32, 61, 32, 110, 117, 108, 108, 41, 44, 32,
              71, 32, 38, 38, 32, 40, 99, 32, 61, 32, 71, 44, 32, 71, 32, 61,
              32, 110, 117, 108, 108, 44, 32, 99, 40, 41, 41, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110,
              32, 87, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 70, 43, 43, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 40, 95, 97, 50, 32, 61, 32, 107, 46, 109, 111, 110,
              105, 116, 111, 114, 82, 117, 110, 68, 101, 112, 101, 110, 100,
              101, 110, 99, 105, 101, 115, 41, 32, 61, 61, 32, 110, 117, 108,
              108, 32, 63, 32, 118, 111, 105, 100, 32, 48, 32, 58, 32, 95, 97,
              50, 46, 99, 97, 108, 108, 40, 107, 44, 32, 70, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 98, 32, 61, 32, 123, 32,
              97, 58, 32, 109, 99, 32, 125, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 105, 102, 32, 40, 107, 46, 105, 110, 115, 116, 97, 110, 116,
              105, 97, 116, 101, 87, 97, 115, 109, 41, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 116, 114, 121, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32,
              107, 46, 105, 110, 115, 116, 97, 110, 116, 105, 97, 116, 101, 87,
              97, 115, 109, 40, 98, 44, 32, 97, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 125, 32, 99, 97, 116, 99, 104, 32, 40, 99, 41,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116,
              40, 96, 77, 111, 100, 117, 108, 101, 46, 105, 110, 115, 116, 97,
              110, 116, 105, 97, 116, 101, 87, 97, 115, 109, 32, 99, 97, 108,
              108, 98, 97, 99, 107, 32, 102, 97, 105, 108, 101, 100, 32, 119,
              105, 116, 104, 32, 101, 114, 114, 111, 114, 58, 32, 36, 123, 99,
              125, 96, 41, 44, 32, 98, 97, 40, 99, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              120, 97, 32, 33, 61, 32, 110, 117, 108, 108, 32, 63, 32, 120, 97,
              32, 58, 32, 120, 97, 32, 61, 32, 119, 97, 40, 34, 68, 111, 116,
              76, 111, 116, 116, 105, 101, 80, 108, 97, 121, 101, 114, 46, 119,
              97, 115, 109, 34, 41, 32, 63, 32, 34, 68, 111, 116, 76, 111, 116,
              116, 105, 101, 80, 108, 97, 121, 101, 114, 46, 119, 97, 115, 109,
              34, 32, 58, 32, 107, 46, 108, 111, 99, 97, 116, 101, 70, 105, 108,
              101, 32, 63, 32, 107, 46, 108, 111, 99, 97, 116, 101, 70, 105,
              108, 101, 40, 34, 68, 111, 116, 76, 111, 116, 116, 105, 101, 80,
              108, 97, 121, 101, 114, 46, 119, 97, 115, 109, 34, 44, 32, 112,
              41, 32, 58, 32, 112, 32, 43, 32, 34, 68, 111, 116, 76, 111, 116,
              116, 105, 101, 80, 108, 97, 121, 101, 114, 46, 119, 97, 115, 109,
              34, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 66, 97, 40, 98, 44,
              32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 99, 41, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 97, 40, 99, 46, 105,
              110, 115, 116, 97, 110, 99, 101, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 125, 41, 46, 99, 97, 116, 99, 104, 40, 98, 97, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110,
              32, 123, 125, 59, 10, 32, 32, 32, 32, 32, 32, 125, 40, 41, 44, 32,
              98, 99, 32, 61, 32, 40, 97, 41, 32, 61, 62, 32, 40, 98, 99, 32,
              61, 32, 87, 46, 100, 97, 41, 40, 97, 41, 44, 32, 111, 98, 32, 61,
              32, 40, 97, 41, 32, 61, 62, 32, 40, 111, 98, 32, 61, 32, 87, 46,
              101, 97, 41, 40, 97, 41, 44, 32, 85, 32, 61, 32, 40, 97, 41, 32,
              61, 62, 32, 40, 85, 32, 61, 32, 87, 46, 103, 97, 41, 40, 97, 41,
              44, 32, 99, 99, 32, 61, 32, 40, 97, 44, 32, 98, 41, 32, 61, 62,
              32, 40, 99, 99, 32, 61, 32, 87, 46, 104, 97, 41, 40, 97, 44, 32,
              98, 41, 44, 32, 88, 32, 61, 32, 40, 97, 44, 32, 98, 41, 32, 61,
              62, 32, 40, 88, 32, 61, 32, 87, 46, 105, 97, 41, 40, 97, 44, 32,
              98, 41, 44, 32, 89, 32, 61, 32, 40, 97, 41, 32, 61, 62, 32, 40,
              89, 32, 61, 32, 87, 46, 106, 97, 41, 40, 97, 41, 44, 32, 90, 32,
              61, 32, 40, 41, 32, 61, 62, 32, 40, 90, 32, 61, 32, 87, 46, 107,
              97, 41, 40, 41, 59, 10, 32, 32, 32, 32, 32, 32, 107, 46, 100, 121,
              110, 67, 97, 108, 108, 95, 105, 105, 106, 106, 32, 61, 32, 40, 97,
              44, 32, 98, 44, 32, 99, 44, 32, 100, 44, 32, 101, 44, 32, 102, 41,
              32, 61, 62, 32, 40, 107, 46, 100, 121, 110, 67, 97, 108, 108, 95,
              105, 105, 106, 106, 32, 61, 32, 87, 46, 108, 97, 41, 40, 97, 44,
              32, 98, 44, 32, 99, 44, 32, 100, 44, 32, 101, 44, 32, 102, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 107, 46, 100, 121, 110, 67, 97, 108,
              108, 95, 118, 105, 106, 106, 32, 61, 32, 40, 97, 44, 32, 98, 44,
              32, 99, 44, 32, 100, 44, 32, 101, 44, 32, 102, 41, 32, 61, 62, 32,
              40, 107, 46, 100, 121, 110, 67, 97, 108, 108, 95, 118, 105, 106,
              106, 32, 61, 32, 87, 46, 109, 97, 41, 40, 97, 44, 32, 98, 44, 32,
              99, 44, 32, 100, 44, 32, 101, 44, 32, 102, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 107, 46, 100, 121, 110, 67, 97, 108, 108, 95, 106,
              105, 105, 105, 32, 61, 32, 40, 97, 44, 32, 98, 44, 32, 99, 44, 32,
              100, 41, 32, 61, 62, 32, 40, 107, 46, 100, 121, 110, 67, 97, 108,
              108, 95, 106, 105, 105, 105, 32, 61, 32, 87, 46, 110, 97, 41, 40,
              97, 44, 32, 98, 44, 32, 99, 44, 32, 100, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 107, 46, 100, 121, 110, 67, 97, 108, 108, 95, 106,
              105, 105, 32, 61, 32, 40, 97, 44, 32, 98, 44, 32, 99, 41, 32, 61,
              62, 32, 40, 107, 46, 100, 121, 110, 67, 97, 108, 108, 95, 106,
              105, 105, 32, 61, 32, 87, 46, 111, 97, 41, 40, 97, 44, 32, 98, 44,
              32, 99, 41, 59, 10, 32, 32, 32, 32, 32, 32, 107, 46, 100, 121,
              110, 67, 97, 108, 108, 95, 118, 105, 105, 106, 105, 105, 32, 61,
              32, 40, 97, 44, 32, 98, 44, 32, 99, 44, 32, 100, 44, 32, 101, 44,
              32, 102, 44, 32, 104, 41, 32, 61, 62, 32, 40, 107, 46, 100, 121,
              110, 67, 97, 108, 108, 95, 118, 105, 105, 106, 105, 105, 32, 61,
              32, 87, 46, 112, 97, 41, 40, 97, 44, 32, 98, 44, 32, 99, 44, 32,
              100, 44, 32, 101, 44, 32, 102, 44, 32, 104, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 107, 46, 100, 121, 110, 67, 97, 108, 108, 95, 105,
              105, 105, 105, 105, 106, 32, 61, 32, 40, 97, 44, 32, 98, 44, 32,
              99, 44, 32, 100, 44, 32, 101, 44, 32, 102, 44, 32, 104, 41, 32,
              61, 62, 32, 40, 107, 46, 100, 121, 110, 67, 97, 108, 108, 95, 105,
              105, 105, 105, 105, 106, 32, 61, 32, 87, 46, 113, 97, 41, 40, 97,
              44, 32, 98, 44, 32, 99, 44, 32, 100, 44, 32, 101, 44, 32, 102, 44,
              32, 104, 41, 59, 10, 32, 32, 32, 32, 32, 32, 107, 46, 100, 121,
              110, 67, 97, 108, 108, 95, 105, 105, 105, 105, 105, 106, 106, 32,
              61, 32, 40, 97, 44, 32, 98, 44, 32, 99, 44, 32, 100, 44, 32, 101,
              44, 32, 102, 44, 32, 104, 44, 32, 103, 44, 32, 108, 41, 32, 61,
              62, 32, 40, 107, 46, 100, 121, 110, 67, 97, 108, 108, 95, 105,
              105, 105, 105, 105, 106, 106, 32, 61, 32, 87, 46, 114, 97, 41, 40,
              97, 44, 32, 98, 44, 32, 99, 44, 32, 100, 44, 32, 101, 44, 32, 102,
              44, 32, 104, 44, 32, 103, 44, 32, 108, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 107, 46, 100, 121, 110, 67, 97, 108, 108, 95, 105, 105,
              105, 105, 105, 105, 106, 106, 32, 61, 32, 40, 97, 44, 32, 98, 44,
              32, 99, 44, 32, 100, 44, 32, 101, 44, 32, 102, 44, 32, 104, 44,
              32, 103, 44, 32, 108, 44, 32, 109, 41, 32, 61, 62, 32, 40, 107,
              46, 100, 121, 110, 67, 97, 108, 108, 95, 105, 105, 105, 105, 105,
              105, 106, 106, 32, 61, 32, 87, 46, 115, 97, 41, 40, 97, 44, 32,
              98, 44, 32, 99, 44, 32, 100, 44, 32, 101, 44, 32, 102, 44, 32,
              104, 44, 32, 103, 44, 32, 108, 44, 32, 109, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 106,
              99, 40, 97, 44, 32, 98, 44, 32, 99, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 118, 97, 114, 32, 100, 32, 61, 32, 90, 40, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 114, 121, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 83, 46, 103, 101, 116,
              40, 97, 41, 40, 98, 44, 32, 99, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 125, 32, 99, 97, 116, 99, 104, 32, 40, 101, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 89, 40, 100, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40,
              101, 32, 33, 61, 61, 32, 101, 32, 43, 32, 48, 41, 32, 116, 104,
              114, 111, 119, 32, 101, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 88, 40, 49, 44, 32, 48, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32,
              32, 32, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 105, 99,
              40, 97, 44, 32, 98, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 118, 97, 114, 32, 99, 32, 61, 32, 90, 40, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 116, 114, 121, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 83, 46, 103, 101, 116, 40, 97, 41, 40,
              98, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 32, 99, 97,
              116, 99, 104, 32, 40, 100, 41, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 89, 40, 99, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 105, 102, 32, 40, 100, 32, 33, 61, 61, 32,
              100, 32, 43, 32, 48, 41, 32, 116, 104, 114, 111, 119, 32, 100, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 88, 40, 49, 44, 32,
              48, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32,
              32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 102, 117, 110,
              99, 116, 105, 111, 110, 32, 102, 99, 40, 97, 44, 32, 98, 44, 32,
              99, 44, 32, 100, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              118, 97, 114, 32, 101, 32, 61, 32, 90, 40, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 116, 114, 121, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 83, 46,
              103, 101, 116, 40, 97, 41, 40, 98, 44, 32, 99, 44, 32, 100, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 32, 99, 97, 116, 99,
              104, 32, 40, 102, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 89, 40, 101, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 105, 102, 32, 40, 102, 32, 33, 61, 61, 32, 102, 32, 43,
              32, 48, 41, 32, 116, 104, 114, 111, 119, 32, 102, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 88, 40, 49, 44, 32, 48, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32,
              32, 125, 10, 32, 32, 32, 32, 32, 32, 102, 117, 110, 99, 116, 105,
              111, 110, 32, 101, 99, 40, 97, 44, 32, 98, 44, 32, 99, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 100,
              32, 61, 32, 90, 40, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              116, 114, 121, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 114, 101, 116, 117, 114, 110, 32, 83, 46, 103, 101, 116, 40,
              97, 41, 40, 98, 44, 32, 99, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 125, 32, 99, 97, 116, 99, 104, 32, 40, 101, 41, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 89, 40, 100, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 101,
              32, 33, 61, 61, 32, 101, 32, 43, 32, 48, 41, 32, 116, 104, 114,
              111, 119, 32, 101, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              88, 40, 49, 44, 32, 48, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 125, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32,
              32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 100, 99, 40, 97,
              44, 32, 98, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 118,
              97, 114, 32, 99, 32, 61, 32, 90, 40, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 116, 114, 121, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 83, 46, 103,
              101, 116, 40, 97, 41, 40, 98, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 125, 32, 99, 97, 116, 99, 104, 32, 40, 100, 41, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 89, 40, 99, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 100,
              32, 33, 61, 61, 32, 100, 32, 43, 32, 48, 41, 32, 116, 104, 114,
              111, 119, 32, 100, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              88, 40, 49, 44, 32, 48, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 125, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32,
              32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 103, 99, 40, 97,
              44, 32, 98, 44, 32, 99, 44, 32, 100, 44, 32, 101, 44, 32, 102, 41,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32,
              104, 32, 61, 32, 90, 40, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 116, 114, 121, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 114, 101, 116, 117, 114, 110, 32, 83, 46, 103, 101, 116,
              40, 97, 41, 40, 98, 44, 32, 99, 44, 32, 100, 44, 32, 101, 44, 32,
              102, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 32, 99, 97,
              116, 99, 104, 32, 40, 103, 41, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 89, 40, 104, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 105, 102, 32, 40, 103, 32, 33, 61, 61, 32,
              103, 32, 43, 32, 48, 41, 32, 116, 104, 114, 111, 119, 32, 103, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 88, 40, 49, 44, 32,
              48, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32,
              32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 102, 117, 110,
              99, 116, 105, 111, 110, 32, 108, 99, 40, 97, 44, 32, 98, 44, 32,
              99, 44, 32, 100, 44, 32, 101, 41, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 118, 97, 114, 32, 102, 32, 61, 32, 90, 40, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 116, 114, 121, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 83, 46, 103, 101, 116, 40, 97,
              41, 40, 98, 44, 32, 99, 44, 32, 100, 44, 32, 101, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 125, 32, 99, 97, 116, 99, 104, 32, 40,
              104, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 89,
              40, 102, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105,
              102, 32, 40, 104, 32, 33, 61, 61, 32, 104, 32, 43, 32, 48, 41, 32,
              116, 104, 114, 111, 119, 32, 104, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 88, 40, 49, 44, 32, 48, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32,
              32, 32, 32, 32, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32,
              107, 99, 40, 97, 44, 32, 98, 44, 32, 99, 44, 32, 100, 41, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 101, 32, 61,
              32, 90, 40, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 114,
              121, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 83, 46,
              103, 101, 116, 40, 97, 41, 40, 98, 44, 32, 99, 44, 32, 100, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 32, 99, 97, 116, 99,
              104, 32, 40, 102, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 89, 40, 101, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 105, 102, 32, 40, 102, 32, 33, 61, 61, 32, 102, 32, 43,
              32, 48, 41, 32, 116, 104, 114, 111, 119, 32, 102, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 88, 40, 49, 44, 32, 48, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32,
              32, 125, 10, 32, 32, 32, 32, 32, 32, 102, 117, 110, 99, 116, 105,
              111, 110, 32, 104, 99, 40, 97, 41, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 118, 97, 114, 32, 98, 32, 61, 32, 90, 40, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 114, 121, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 83, 46, 103, 101, 116, 40,
              97, 41, 40, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 32,
              99, 97, 116, 99, 104, 32, 40, 99, 41, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 89, 40, 98, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 99, 32, 33, 61, 61, 32,
              99, 32, 43, 32, 48, 41, 32, 116, 104, 114, 111, 119, 32, 99, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 88, 40, 49, 44, 32,
              48, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32,
              32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32,
              110, 99, 59, 10, 32, 32, 32, 32, 32, 32, 71, 32, 61, 32, 102, 117,
              110, 99, 116, 105, 111, 110, 32, 111, 99, 40, 41, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 110, 99, 32, 124, 124, 32, 112, 99,
              40, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 110, 99, 32, 124,
              124, 32, 40, 71, 32, 61, 32, 111, 99, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 125, 59, 10, 32, 32, 32, 32, 32, 32, 102, 117, 110, 99,
              116, 105, 111, 110, 32, 112, 99, 40, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 97,
              40, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118,
              97, 114, 32, 95, 97, 50, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 105, 102, 32, 40, 33, 110, 99, 32, 38, 38, 32, 40, 110,
              99, 32, 61, 32, 116, 114, 117, 101, 44, 32, 107, 46, 99, 97, 108,
              108, 101, 100, 82, 117, 110, 32, 61, 32, 116, 114, 117, 101, 44,
              32, 33, 108, 97, 41, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 68, 97, 40, 114, 97, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 97, 97, 40, 107, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 40, 95, 97, 50,
              32, 61, 32, 107, 46, 111, 110, 82, 117, 110, 116, 105, 109, 101,
              73, 110, 105, 116, 105, 97, 108, 105, 122, 101, 100, 41, 32, 61,
              61, 32, 110, 117, 108, 108, 32, 63, 32, 118, 111, 105, 100, 32,
              48, 32, 58, 32, 95, 97, 50, 46, 99, 97, 108, 108, 40, 107, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32,
              40, 107, 46, 112, 111, 115, 116, 82, 117, 110, 41, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 102, 111, 114, 32, 40,
              34, 102, 117, 110, 99, 116, 105, 111, 110, 34, 32, 61, 61, 32,
              116, 121, 112, 101, 111, 102, 32, 107, 46, 112, 111, 115, 116, 82,
              117, 110, 32, 38, 38, 32, 40, 107, 46, 112, 111, 115, 116, 82,
              117, 110, 32, 61, 32, 91, 107, 46, 112, 111, 115, 116, 82, 117,
              110, 93, 41, 59, 32, 107, 46, 112, 111, 115, 116, 82, 117, 110,
              46, 108, 101, 110, 103, 116, 104, 59, 32, 41, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97,
              114, 32, 98, 32, 61, 32, 107, 46, 112, 111, 115, 116, 82, 117,
              110, 46, 115, 104, 105, 102, 116, 40, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 115, 97, 46, 117,
              110, 115, 104, 105, 102, 116, 40, 98, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 68, 97, 40, 115, 97, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102,
              32, 40, 33, 40, 48, 32, 60, 32, 70, 41, 41, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 107, 46, 112,
              114, 101, 82, 117, 110, 41, 32, 102, 111, 114, 32, 40, 34, 102,
              117, 110, 99, 116, 105, 111, 110, 34, 32, 61, 61, 32, 116, 121,
              112, 101, 111, 102, 32, 107, 46, 112, 114, 101, 82, 117, 110, 32,
              38, 38, 32, 40, 107, 46, 112, 114, 101, 82, 117, 110, 32, 61, 32,
              91, 107, 46, 112, 114, 101, 82, 117, 110, 93, 41, 59, 32, 107, 46,
              112, 114, 101, 82, 117, 110, 46, 108, 101, 110, 103, 116, 104, 59,
              32, 41, 32, 116, 97, 40, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 68, 97, 40, 113, 97, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 48, 32, 60, 32, 70, 32, 124, 124, 32, 40, 107,
              46, 115, 101, 116, 83, 116, 97, 116, 117, 115, 32, 63, 32, 40,
              107, 46, 115, 101, 116, 83, 116, 97, 116, 117, 115, 40, 34, 82,
              117, 110, 110, 105, 110, 103, 46, 46, 46, 34, 41, 44, 32, 115,
              101, 116, 84, 105, 109, 101, 111, 117, 116, 40, 40, 41, 32, 61,
              62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              115, 101, 116, 84, 105, 109, 101, 111, 117, 116, 40, 40, 41, 32,
              61, 62, 32, 107, 46, 115, 101, 116, 83, 116, 97, 116, 117, 115,
              40, 34, 34, 41, 44, 32, 49, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 97, 40, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 125, 44, 32, 49, 41, 41, 32, 58, 32, 97, 40,
              41, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32,
              32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40,
              107, 46, 112, 114, 101, 73, 110, 105, 116, 41, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 102, 111, 114, 32, 40, 34, 102, 117, 110, 99, 116,
              105, 111, 110, 34, 32, 61, 61, 32, 116, 121, 112, 101, 111, 102,
              32, 107, 46, 112, 114, 101, 73, 110, 105, 116, 32, 38, 38, 32, 40,
              107, 46, 112, 114, 101, 73, 110, 105, 116, 32, 61, 32, 91, 107,
              46, 112, 114, 101, 73, 110, 105, 116, 93, 41, 59, 32, 48, 32, 60,
              32, 107, 46, 112, 114, 101, 73, 110, 105, 116, 46, 108, 101, 110,
              103, 116, 104, 59, 32, 41, 32, 107, 46, 112, 114, 101, 73, 110,
              105, 116, 46, 112, 111, 112, 40, 41, 40, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 112, 99, 40, 41, 59, 10, 32, 32, 32, 32, 32, 32, 109,
              111, 100, 117, 108, 101, 82, 116, 110, 32, 61, 32, 101, 97, 59,
              10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 109,
              111, 100, 117, 108, 101, 82, 116, 110, 59, 10, 32, 32, 32, 32,
              125, 59, 10, 32, 32, 125, 41, 40, 41, 59, 10, 32, 32, 118, 97,
              114, 32, 100, 111, 116, 108, 111, 116, 116, 105, 101, 95, 112,
              108, 97, 121, 101, 114, 95, 100, 101, 102, 97, 117, 108, 116, 32,
              61, 32, 99, 114, 101, 97, 116, 101, 68, 111, 116, 76, 111, 116,
              116, 105, 101, 80, 108, 97, 121, 101, 114, 77, 111, 100, 117, 108,
              101, 59, 10, 10, 32, 32, 47, 47, 32, 115, 114, 99, 47, 99, 111,
              114, 101, 47, 100, 111, 116, 108, 111, 116, 116, 105, 101, 45,
              119, 97, 115, 109, 45, 108, 111, 97, 100, 101, 114, 46, 116, 115,
              10, 32, 32, 118, 97, 114, 32, 68, 111, 116, 76, 111, 116, 116,
              105, 101, 87, 97, 115, 109, 76, 111, 97, 100, 101, 114, 32, 61,
              32, 99, 108, 97, 115, 115, 32, 123, 10, 32, 32, 32, 32, 99, 111,
              110, 115, 116, 114, 117, 99, 116, 111, 114, 40, 41, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 116, 104, 114, 111, 119, 32, 110, 101,
              119, 32, 69, 114, 114, 111, 114, 40, 34, 82, 101, 110, 100, 101,
              114, 101, 114, 76, 111, 97, 100, 101, 114, 32, 105, 115, 32, 97,
              32, 115, 116, 97, 116, 105, 99, 32, 99, 108, 97, 115, 115, 32, 97,
              110, 100, 32, 99, 97, 110, 110, 111, 116, 32, 98, 101, 32, 105,
              110, 115, 116, 97, 110, 116, 105, 97, 116, 101, 100, 46, 34, 41,
              59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 115, 116, 97,
              116, 105, 99, 32, 95, 116, 114, 121, 76, 111, 97, 100, 40, 117,
              114, 108, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116,
              117, 114, 110, 32, 95, 95, 97, 115, 121, 110, 99, 40, 116, 104,
              105, 115, 44, 32, 110, 117, 108, 108, 44, 32, 102, 117, 110, 99,
              116, 105, 111, 110, 42, 32, 40, 41, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 109, 111, 100, 117,
              108, 101, 32, 61, 32, 121, 105, 101, 108, 100, 32, 100, 111, 116,
              108, 111, 116, 116, 105, 101, 95, 112, 108, 97, 121, 101, 114, 95,
              100, 101, 102, 97, 117, 108, 116, 40, 123, 32, 108, 111, 99, 97,
              116, 101, 70, 105, 108, 101, 58, 32, 40, 41, 32, 61, 62, 32, 117,
              114, 108, 32, 125, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              114, 101, 116, 117, 114, 110, 32, 109, 111, 100, 117, 108, 101,
              59, 10, 32, 32, 32, 32, 32, 32, 125, 41, 59, 10, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 47, 42, 42, 10, 32, 32, 32, 32, 32, 42,
              32, 84, 114, 105, 101, 115, 32, 116, 111, 32, 108, 111, 97, 100,
              32, 116, 104, 101, 32, 87, 65, 83, 77, 32, 109, 111, 100, 117,
              108, 101, 32, 102, 114, 111, 109, 32, 116, 104, 101, 32, 112, 114,
              105, 109, 97, 114, 121, 32, 85, 82, 76, 44, 32, 102, 97, 108, 108,
              105, 110, 103, 32, 98, 97, 99, 107, 32, 116, 111, 32, 97, 32, 98,
              97, 99, 107, 117, 112, 32, 85, 82, 76, 32, 105, 102, 32, 110, 101,
              99, 101, 115, 115, 97, 114, 121, 46, 10, 32, 32, 32, 32, 32, 42,
              32, 84, 104, 114, 111, 119, 115, 32, 97, 110, 32, 101, 114, 114,
              111, 114, 32, 105, 102, 32, 98, 111, 116, 104, 32, 85, 82, 76,
              115, 32, 102, 97, 105, 108, 32, 116, 111, 32, 108, 111, 97, 100,
              32, 116, 104, 101, 32, 109, 111, 100, 117, 108, 101, 46, 10, 32,
              32, 32, 32, 32, 42, 32, 64, 114, 101, 116, 117, 114, 110, 115, 32,
              80, 114, 111, 109, 105, 115, 101, 60, 77, 111, 100, 117, 108, 101,
              62, 32, 45, 32, 65, 32, 112, 114, 111, 109, 105, 115, 101, 32,
              116, 104, 97, 116, 32, 114, 101, 115, 111, 108, 118, 101, 115, 32,
              116, 111, 32, 116, 104, 101, 32, 108, 111, 97, 100, 101, 100, 32,
              109, 111, 100, 117, 108, 101, 46, 10, 32, 32, 32, 32, 32, 42, 47,
              10, 32, 32, 32, 32, 115, 116, 97, 116, 105, 99, 32, 95, 108, 111,
              97, 100, 87, 105, 116, 104, 66, 97, 99, 107, 117, 112, 40, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32,
              95, 95, 97, 115, 121, 110, 99, 40, 116, 104, 105, 115, 44, 32,
              110, 117, 108, 108, 44, 32, 102, 117, 110, 99, 116, 105, 111, 110,
              42, 32, 40, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105,
              102, 32, 40, 33, 116, 104, 105, 115, 46, 95, 77, 111, 100, 117,
              108, 101, 80, 114, 111, 109, 105, 115, 101, 41, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95,
              77, 111, 100, 117, 108, 101, 80, 114, 111, 109, 105, 115, 101, 32,
              61, 32, 116, 104, 105, 115, 46, 95, 116, 114, 121, 76, 111, 97,
              100, 40, 116, 104, 105, 115, 46, 95, 119, 97, 115, 109, 85, 82,
              76, 41, 46, 99, 97, 116, 99, 104, 40, 40, 105, 110, 105, 116, 105,
              97, 108, 69, 114, 114, 111, 114, 41, 32, 61, 62, 32, 95, 95, 97,
              115, 121, 110, 99, 40, 116, 104, 105, 115, 44, 32, 110, 117, 108,
              108, 44, 32, 102, 117, 110, 99, 116, 105, 111, 110, 42, 32, 40,
              41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              99, 111, 110, 115, 116, 32, 98, 97, 99, 107, 117, 112, 85, 114,
              108, 32, 61, 32, 96, 104, 116, 116, 112, 115, 58, 47, 47, 117,
              110, 112, 107, 103, 46, 99, 111, 109, 47, 36, 123, 80, 65, 67, 75,
              65, 71, 69, 95, 78, 65, 77, 69, 125, 64, 36, 123, 80, 65, 67, 75,
              65, 71, 69, 95, 86, 69, 82, 83, 73, 79, 78, 125, 47, 100, 105,
              115, 116, 47, 100, 111, 116, 108, 111, 116, 116, 105, 101, 45,
              112, 108, 97, 121, 101, 114, 46, 119, 97, 115, 109, 96, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115,
              111, 108, 101, 46, 119, 97, 114, 110, 40, 96, 80, 114, 105, 109,
              97, 114, 121, 32, 87, 65, 83, 77, 32, 108, 111, 97, 100, 32, 102,
              97, 105, 108, 101, 100, 32, 102, 114, 111, 109, 32, 36, 123, 116,
              104, 105, 115, 46, 95, 119, 97, 115, 109, 85, 82, 76, 125, 46, 32,
              69, 114, 114, 111, 114, 58, 32, 36, 123, 105, 110, 105, 116, 105,
              97, 108, 69, 114, 114, 111, 114, 46, 109, 101, 115, 115, 97, 103,
              101, 125, 96, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 99, 111, 110, 115, 111, 108, 101, 46, 119, 97, 114, 110,
              40, 96, 65, 116, 116, 101, 109, 112, 116, 105, 110, 103, 32, 116,
              111, 32, 108, 111, 97, 100, 32, 87, 65, 83, 77, 32, 102, 114, 111,
              109, 32, 98, 97, 99, 107, 117, 112, 32, 85, 82, 76, 58, 32, 36,
              123, 98, 97, 99, 107, 117, 112, 85, 114, 108, 125, 96, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 114, 121, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              114, 101, 116, 117, 114, 110, 32, 121, 105, 101, 108, 100, 32,
              116, 104, 105, 115, 46, 95, 116, 114, 121, 76, 111, 97, 100, 40,
              98, 97, 99, 107, 117, 112, 85, 114, 108, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 32, 99, 97, 116, 99, 104,
              32, 40, 98, 97, 99, 107, 117, 112, 69, 114, 114, 111, 114, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              99, 111, 110, 115, 111, 108, 101, 46, 101, 114, 114, 111, 114, 40,
              96, 80, 114, 105, 109, 97, 114, 121, 32, 87, 65, 83, 77, 32, 85,
              82, 76, 32, 102, 97, 105, 108, 101, 100, 58, 32, 36, 123, 105,
              110, 105, 116, 105, 97, 108, 69, 114, 114, 111, 114, 46, 109, 101,
              115, 115, 97, 103, 101, 125, 96, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 111, 108,
              101, 46, 101, 114, 114, 111, 114, 40, 96, 66, 97, 99, 107, 117,
              112, 32, 87, 65, 83, 77, 32, 85, 82, 76, 32, 102, 97, 105, 108,
              101, 100, 58, 32, 36, 123, 98, 97, 99, 107, 117, 112, 69, 114,
              114, 111, 114, 46, 109, 101, 115, 115, 97, 103, 101, 125, 96, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              116, 104, 114, 111, 119, 32, 110, 101, 119, 32, 69, 114, 114, 111,
              114, 40, 34, 87, 65, 83, 77, 32, 108, 111, 97, 100, 105, 110, 103,
              32, 102, 97, 105, 108, 101, 100, 32, 102, 114, 111, 109, 32, 97,
              108, 108, 32, 115, 111, 117, 114, 99, 101, 115, 46, 34, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 41, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              114, 101, 116, 117, 114, 110, 32, 116, 104, 105, 115, 46, 95, 77,
              111, 100, 117, 108, 101, 80, 114, 111, 109, 105, 115, 101, 59, 10,
              32, 32, 32, 32, 32, 32, 125, 41, 59, 10, 32, 32, 32, 32, 125, 10,
              32, 32, 32, 32, 47, 42, 42, 10, 32, 32, 32, 32, 32, 42, 32, 80,
              117, 98, 108, 105, 99, 32, 109, 101, 116, 104, 111, 100, 32, 116,
              111, 32, 108, 111, 97, 100, 32, 116, 104, 101, 32, 87, 101, 98,
              65, 115, 115, 101, 109, 98, 108, 121, 32, 109, 111, 100, 117, 108,
              101, 46, 10, 32, 32, 32, 32, 32, 42, 32, 85, 116, 105, 108, 105,
              122, 101, 115, 32, 97, 32, 112, 114, 105, 109, 97, 114, 121, 32,
              97, 110, 100, 32, 98, 97, 99, 107, 117, 112, 32, 85, 82, 76, 32,
              102, 111, 114, 32, 114, 111, 98, 117, 115, 116, 110, 101, 115,
              115, 46, 10, 32, 32, 32, 32, 32, 42, 32, 64, 114, 101, 116, 117,
              114, 110, 115, 32, 80, 114, 111, 109, 105, 115, 101, 60, 77, 111,
              100, 117, 108, 101, 62, 32, 45, 32, 65, 32, 112, 114, 111, 109,
              105, 115, 101, 32, 116, 104, 97, 116, 32, 114, 101, 115, 111, 108,
              118, 101, 115, 32, 116, 111, 32, 116, 104, 101, 32, 108, 111, 97,
              100, 101, 100, 32, 109, 111, 100, 117, 108, 101, 46, 10, 32, 32,
              32, 32, 32, 42, 47, 10, 32, 32, 32, 32, 115, 116, 97, 116, 105,
              99, 32, 108, 111, 97, 100, 40, 41, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 114, 101, 116, 117, 114, 110, 32, 95, 95, 97, 115, 121,
              110, 99, 40, 116, 104, 105, 115, 44, 32, 110, 117, 108, 108, 44,
              32, 102, 117, 110, 99, 116, 105, 111, 110, 42, 32, 40, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114,
              110, 32, 116, 104, 105, 115, 46, 95, 108, 111, 97, 100, 87, 105,
              116, 104, 66, 97, 99, 107, 117, 112, 40, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 125, 41, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32,
              32, 47, 42, 42, 10, 32, 32, 32, 32, 32, 42, 32, 83, 101, 116, 115,
              32, 97, 32, 110, 101, 119, 32, 85, 82, 76, 32, 102, 111, 114, 32,
              116, 104, 101, 32, 87, 65, 83, 77, 32, 102, 105, 108, 101, 32, 97,
              110, 100, 32, 105, 110, 118, 97, 108, 105, 100, 97, 116, 101, 115,
              32, 116, 104, 101, 32, 99, 117, 114, 114, 101, 110, 116, 32, 109,
              111, 100, 117, 108, 101, 32, 112, 114, 111, 109, 105, 115, 101,
              46, 10, 32, 32, 32, 32, 32, 42, 10, 32, 32, 32, 32, 32, 42, 32,
              64, 112, 97, 114, 97, 109, 32, 115, 116, 114, 105, 110, 103, 32,
              45, 32, 32, 84, 104, 101, 32, 110, 101, 119, 32, 85, 82, 76, 32,
              102, 111, 114, 32, 116, 104, 101, 32, 87, 65, 83, 77, 32, 102,
              105, 108, 101, 46, 10, 32, 32, 32, 32, 32, 42, 47, 10, 32, 32, 32,
              32, 115, 116, 97, 116, 105, 99, 32, 115, 101, 116, 87, 97, 115,
              109, 85, 114, 108, 40, 117, 114, 108, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 105, 102, 32, 40, 117, 114, 108, 32, 61, 61, 61, 32,
              116, 104, 105, 115, 46, 95, 119, 97, 115, 109, 85, 82, 76, 41, 32,
              114, 101, 116, 117, 114, 110, 59, 10, 32, 32, 32, 32, 32, 32, 116,
              104, 105, 115, 46, 95, 119, 97, 115, 109, 85, 82, 76, 32, 61, 32,
              117, 114, 108, 59, 10, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115,
              46, 95, 77, 111, 100, 117, 108, 101, 80, 114, 111, 109, 105, 115,
              101, 32, 61, 32, 110, 117, 108, 108, 59, 10, 32, 32, 32, 32, 125,
              10, 32, 32, 125, 59, 10, 32, 32, 47, 47, 32, 101, 115, 108, 105,
              110, 116, 45, 100, 105, 115, 97, 98, 108, 101, 45, 110, 101, 120,
              116, 45, 108, 105, 110, 101, 32, 64, 116, 121, 112, 101, 115, 99,
              114, 105, 112, 116, 45, 101, 115, 108, 105, 110, 116, 47, 110, 97,
              109, 105, 110, 103, 45, 99, 111, 110, 118, 101, 110, 116, 105,
              111, 110, 10, 32, 32, 95, 95, 112, 117, 98, 108, 105, 99, 70, 105,
              101, 108, 100, 40, 68, 111, 116, 76, 111, 116, 116, 105, 101, 87,
              97, 115, 109, 76, 111, 97, 100, 101, 114, 44, 32, 34, 95, 77, 111,
              100, 117, 108, 101, 80, 114, 111, 109, 105, 115, 101, 34, 44, 32,
              110, 117, 108, 108, 41, 59, 10, 32, 32, 47, 47, 32, 85, 82, 76,
              32, 102, 111, 114, 32, 116, 104, 101, 32, 87, 65, 83, 77, 32, 102,
              105, 108, 101, 44, 32, 99, 111, 110, 115, 116, 114, 117, 99, 116,
              101, 100, 32, 117, 115, 105, 110, 103, 32, 112, 97, 99, 107, 97,
              103, 101, 32, 105, 110, 102, 111, 114, 109, 97, 116, 105, 111,
              110, 10, 32, 32, 95, 95, 112, 117, 98, 108, 105, 99, 70, 105, 101,
              108, 100, 40, 68, 111, 116, 76, 111, 116, 116, 105, 101, 87, 97,
              115, 109, 76, 111, 97, 100, 101, 114, 44, 32, 34, 95, 119, 97,
              115, 109, 85, 82, 76, 34, 44, 32, 96, 104, 116, 116, 112, 115, 58,
              47, 47, 99, 100, 110, 46, 106, 115, 100, 101, 108, 105, 118, 114,
              46, 110, 101, 116, 47, 110, 112, 109, 47, 36, 123, 80, 65, 67, 75,
              65, 71, 69, 95, 78, 65, 77, 69, 125, 64, 36, 123, 80, 65, 67, 75,
              65, 71, 69, 95, 86, 69, 82, 83, 73, 79, 78, 125, 47, 100, 105,
              115, 116, 47, 100, 111, 116, 108, 111, 116, 116, 105, 101, 45,
              112, 108, 97, 121, 101, 114, 46, 119, 97, 115, 109, 96, 41, 59,
              10, 10, 32, 32, 47, 47, 32, 115, 114, 99, 47, 101, 118, 101, 110,
              116, 45, 109, 97, 110, 97, 103, 101, 114, 46, 116, 115, 10, 32,
              32, 118, 97, 114, 32, 69, 118, 101, 110, 116, 77, 97, 110, 97,
              103, 101, 114, 32, 61, 32, 99, 108, 97, 115, 115, 32, 123, 10, 32,
              32, 32, 32, 99, 111, 110, 115, 116, 114, 117, 99, 116, 111, 114,
              40, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 95, 95, 112, 117, 98,
              108, 105, 99, 70, 105, 101, 108, 100, 40, 116, 104, 105, 115, 44,
              32, 34, 95, 101, 118, 101, 110, 116, 76, 105, 115, 116, 101, 110,
              101, 114, 115, 34, 44, 32, 47, 42, 32, 64, 95, 95, 80, 85, 82, 69,
              95, 95, 32, 42, 47, 32, 110, 101, 119, 32, 77, 97, 112, 40, 41,
              41, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 97, 100, 100,
              69, 118, 101, 110, 116, 76, 105, 115, 116, 101, 110, 101, 114, 40,
              116, 121, 112, 101, 44, 32, 108, 105, 115, 116, 101, 110, 101,
              114, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 108, 101, 116, 32,
              108, 105, 115, 116, 101, 110, 101, 114, 115, 32, 61, 32, 116, 104,
              105, 115, 46, 95, 101, 118, 101, 110, 116, 76, 105, 115, 116, 101,
              110, 101, 114, 115, 46, 103, 101, 116, 40, 116, 121, 112, 101, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33, 108, 105,
              115, 116, 101, 110, 101, 114, 115, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 108, 105, 115, 116, 101, 110, 101, 114, 115,
              32, 61, 32, 47, 42, 32, 64, 95, 95, 80, 85, 82, 69, 95, 95, 32,
              42, 47, 32, 110, 101, 119, 32, 83, 101, 116, 40, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 101, 118,
              101, 110, 116, 76, 105, 115, 116, 101, 110, 101, 114, 115, 46,
              115, 101, 116, 40, 116, 121, 112, 101, 44, 32, 108, 105, 115, 116,
              101, 110, 101, 114, 115, 41, 59, 10, 32, 32, 32, 32, 32, 32, 125,
              10, 32, 32, 32, 32, 32, 32, 108, 105, 115, 116, 101, 110, 101,
              114, 115, 46, 97, 100, 100, 40, 108, 105, 115, 116, 101, 110, 101,
              114, 41, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 114,
              101, 109, 111, 118, 101, 69, 118, 101, 110, 116, 76, 105, 115,
              116, 101, 110, 101, 114, 40, 116, 121, 112, 101, 44, 32, 108, 105,
              115, 116, 101, 110, 101, 114, 41, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 99, 111, 110, 115, 116, 32, 108, 105, 115, 116, 101, 110, 101,
              114, 115, 32, 61, 32, 116, 104, 105, 115, 46, 95, 101, 118, 101,
              110, 116, 76, 105, 115, 116, 101, 110, 101, 114, 115, 46, 103,
              101, 116, 40, 116, 121, 112, 101, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 105, 102, 32, 40, 33, 108, 105, 115, 116, 101, 110, 101, 114,
              115, 41, 32, 114, 101, 116, 117, 114, 110, 59, 10, 32, 32, 32, 32,
              32, 32, 105, 102, 32, 40, 108, 105, 115, 116, 101, 110, 101, 114,
              41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 108, 105, 115,
              116, 101, 110, 101, 114, 115, 46, 100, 101, 108, 101, 116, 101,
              40, 108, 105, 115, 116, 101, 110, 101, 114, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 108, 105, 115, 116, 101,
              110, 101, 114, 115, 46, 115, 105, 122, 101, 32, 61, 61, 61, 32,
              48, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116,
              104, 105, 115, 46, 95, 101, 118, 101, 110, 116, 76, 105, 115, 116,
              101, 110, 101, 114, 115, 46, 100, 101, 108, 101, 116, 101, 40,
              116, 121, 112, 101, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 32, 32, 125, 32, 101, 108, 115, 101, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46,
              95, 101, 118, 101, 110, 116, 76, 105, 115, 116, 101, 110, 101,
              114, 115, 46, 100, 101, 108, 101, 116, 101, 40, 116, 121, 112,
              101, 41, 59, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 100, 105, 115, 112, 97, 116, 99, 104, 40,
              101, 118, 101, 110, 116, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32,
              99, 111, 110, 115, 116, 32, 108, 105, 115, 116, 101, 110, 101,
              114, 115, 32, 61, 32, 116, 104, 105, 115, 46, 95, 101, 118, 101,
              110, 116, 76, 105, 115, 116, 101, 110, 101, 114, 115, 46, 103,
              101, 116, 40, 101, 118, 101, 110, 116, 46, 116, 121, 112, 101, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 108, 105, 115, 116, 101, 110, 101,
              114, 115, 32, 61, 61, 32, 110, 117, 108, 108, 32, 63, 32, 118,
              111, 105, 100, 32, 48, 32, 58, 32, 108, 105, 115, 116, 101, 110,
              101, 114, 115, 46, 102, 111, 114, 69, 97, 99, 104, 40, 40, 108,
              105, 115, 116, 101, 110, 101, 114, 41, 32, 61, 62, 32, 108, 105,
              115, 116, 101, 110, 101, 114, 40, 101, 118, 101, 110, 116, 41, 41,
              59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 114, 101, 109,
              111, 118, 101, 65, 108, 108, 69, 118, 101, 110, 116, 76, 105, 115,
              116, 101, 110, 101, 114, 115, 40, 41, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 116, 104, 105, 115, 46, 95, 101, 118, 101, 110, 116, 76,
              105, 115, 116, 101, 110, 101, 114, 115, 46, 99, 108, 101, 97, 114,
              40, 41, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 125, 59, 10, 10,
              32, 32, 47, 47, 32, 115, 114, 99, 47, 111, 102, 102, 115, 99, 114,
              101, 101, 110, 45, 111, 98, 115, 101, 114, 118, 101, 114, 46, 116,
              115, 10, 32, 32, 118, 97, 114, 32, 79, 102, 102, 115, 99, 114,
              101, 101, 110, 79, 98, 115, 101, 114, 118, 101, 114, 32, 61, 32,
              99, 108, 97, 115, 115, 32, 123, 10, 32, 32, 32, 32, 115, 116, 97,
              116, 105, 99, 32, 95, 105, 110, 105, 116, 105, 97, 108, 105, 122,
              101, 79, 98, 115, 101, 114, 118, 101, 114, 40, 41, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 116, 104, 105, 115, 46,
              95, 111, 98, 115, 101, 114, 118, 101, 114, 41, 32, 114, 101, 116,
              117, 114, 110, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115,
              116, 32, 105, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111,
              110, 79, 98, 115, 101, 114, 118, 101, 114, 67, 97, 108, 108, 98,
              97, 99, 107, 32, 61, 32, 40, 101, 110, 116, 114, 105, 101, 115,
              41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 101,
              110, 116, 114, 105, 101, 115, 46, 102, 111, 114, 69, 97, 99, 104,
              40, 40, 101, 110, 116, 114, 121, 41, 32, 61, 62, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32,
              105, 110, 115, 116, 97, 110, 99, 101, 32, 61, 32, 116, 104, 105,
              115, 46, 95, 111, 98, 115, 101, 114, 118, 101, 100, 67, 97, 110,
              118, 97, 115, 101, 115, 46, 103, 101, 116, 40, 101, 110, 116, 114,
              121, 46, 116, 97, 114, 103, 101, 116, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 105, 110, 115, 116, 97,
              110, 99, 101, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 105, 102, 32, 40, 101, 110, 116, 114, 121, 46, 105,
              115, 73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 110, 103, 41,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 105, 110, 115, 116, 97, 110, 99, 101, 46, 117, 110, 102, 114,
              101, 101, 122, 101, 40, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 125, 32, 101, 108, 115, 101, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 110, 115,
              116, 97, 110, 99, 101, 46, 102, 114, 101, 101, 122, 101, 40, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 125, 41, 59, 10, 32, 32, 32, 32, 32, 32, 125, 59,
              10, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 111, 98,
              115, 101, 114, 118, 101, 114, 32, 61, 32, 110, 101, 119, 32, 73,
              110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 79, 98, 115,
              101, 114, 118, 101, 114, 40, 105, 110, 116, 101, 114, 115, 101,
              99, 116, 105, 111, 110, 79, 98, 115, 101, 114, 118, 101, 114, 67,
              97, 108, 108, 98, 97, 99, 107, 44, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 116, 104, 114, 101, 115, 104, 111, 108, 100, 58,
              32, 48, 10, 32, 32, 32, 32, 32, 32, 125, 41, 59, 10, 32, 32, 32,
              32, 125, 10, 32, 32, 32, 32, 115, 116, 97, 116, 105, 99, 32, 111,
              98, 115, 101, 114, 118, 101, 40, 99, 97, 110, 118, 97, 115, 44,
              32, 100, 111, 116, 76, 111, 116, 116, 105, 101, 73, 110, 115, 116,
              97, 110, 99, 101, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 118,
              97, 114, 32, 95, 97, 59, 10, 32, 32, 32, 32, 32, 32, 116, 104,
              105, 115, 46, 95, 105, 110, 105, 116, 105, 97, 108, 105, 122, 101,
              79, 98, 115, 101, 114, 118, 101, 114, 40, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 105, 102, 32, 40, 116, 104, 105, 115, 46, 95, 111, 98,
              115, 101, 114, 118, 101, 100, 67, 97, 110, 118, 97, 115, 101, 115,
              46, 104, 97, 115, 40, 99, 97, 110, 118, 97, 115, 41, 41, 32, 114,
              101, 116, 117, 114, 110, 59, 10, 32, 32, 32, 32, 32, 32, 116, 104,
              105, 115, 46, 95, 111, 98, 115, 101, 114, 118, 101, 100, 67, 97,
              110, 118, 97, 115, 101, 115, 46, 115, 101, 116, 40, 99, 97, 110,
              118, 97, 115, 44, 32, 100, 111, 116, 76, 111, 116, 116, 105, 101,
              73, 110, 115, 116, 97, 110, 99, 101, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 40, 95, 97, 32, 61, 32, 116, 104, 105, 115, 46, 95, 111,
              98, 115, 101, 114, 118, 101, 114, 41, 32, 61, 61, 32, 110, 117,
              108, 108, 32, 63, 32, 118, 111, 105, 100, 32, 48, 32, 58, 32, 95,
              97, 46, 111, 98, 115, 101, 114, 118, 101, 40, 99, 97, 110, 118,
              97, 115, 41, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 115,
              116, 97, 116, 105, 99, 32, 117, 110, 111, 98, 115, 101, 114, 118,
              101, 40, 99, 97, 110, 118, 97, 115, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 118, 97, 114, 32, 95, 97, 44, 32, 95, 98, 59, 10, 32,
              32, 32, 32, 32, 32, 40, 95, 97, 32, 61, 32, 116, 104, 105, 115,
              46, 95, 111, 98, 115, 101, 114, 118, 101, 114, 41, 32, 61, 61, 32,
              110, 117, 108, 108, 32, 63, 32, 118, 111, 105, 100, 32, 48, 32,
              58, 32, 95, 97, 46, 117, 110, 111, 98, 115, 101, 114, 118, 101,
              40, 99, 97, 110, 118, 97, 115, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              116, 104, 105, 115, 46, 95, 111, 98, 115, 101, 114, 118, 101, 100,
              67, 97, 110, 118, 97, 115, 101, 115, 46, 100, 101, 108, 101, 116,
              101, 40, 99, 97, 110, 118, 97, 115, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 105, 102, 32, 40, 116, 104, 105, 115, 46, 95, 111, 98,
              115, 101, 114, 118, 101, 100, 67, 97, 110, 118, 97, 115, 101, 115,
              46, 115, 105, 122, 101, 32, 61, 61, 61, 32, 48, 41, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 40, 95, 98, 32, 61, 32, 116, 104,
              105, 115, 46, 95, 111, 98, 115, 101, 114, 118, 101, 114, 41, 32,
              61, 61, 32, 110, 117, 108, 108, 32, 63, 32, 118, 111, 105, 100,
              32, 48, 32, 58, 32, 95, 98, 46, 100, 105, 115, 99, 111, 110, 110,
              101, 99, 116, 40, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116,
              104, 105, 115, 46, 95, 111, 98, 115, 101, 114, 118, 101, 114, 32,
              61, 32, 110, 117, 108, 108, 59, 10, 32, 32, 32, 32, 32, 32, 125,
              10, 32, 32, 32, 32, 125, 10, 32, 32, 125, 59, 10, 32, 32, 95, 95,
              112, 117, 98, 108, 105, 99, 70, 105, 101, 108, 100, 40, 79, 102,
              102, 115, 99, 114, 101, 101, 110, 79, 98, 115, 101, 114, 118, 101,
              114, 44, 32, 34, 95, 111, 98, 115, 101, 114, 118, 101, 114, 34,
              44, 32, 110, 117, 108, 108, 41, 59, 10, 32, 32, 95, 95, 112, 117,
              98, 108, 105, 99, 70, 105, 101, 108, 100, 40, 79, 102, 102, 115,
              99, 114, 101, 101, 110, 79, 98, 115, 101, 114, 118, 101, 114, 44,
              32, 34, 95, 111, 98, 115, 101, 114, 118, 101, 100, 67, 97, 110,
              118, 97, 115, 101, 115, 34, 44, 32, 47, 42, 32, 64, 95, 95, 80,
              85, 82, 69, 95, 95, 32, 42, 47, 32, 110, 101, 119, 32, 77, 97,
              112, 40, 41, 41, 59, 10, 10, 32, 32, 47, 47, 32, 115, 114, 99, 47,
              114, 101, 115, 105, 122, 101, 45, 111, 98, 115, 101, 114, 118,
              101, 114, 46, 116, 115, 10, 32, 32, 118, 97, 114, 32, 82, 69, 83,
              73, 90, 69, 95, 68, 69, 66, 79, 85, 78, 67, 69, 95, 84, 73, 77,
              69, 32, 61, 32, 49, 48, 48, 59, 10, 32, 32, 118, 97, 114, 32, 67,
              97, 110, 118, 97, 115, 82, 101, 115, 105, 122, 101, 79, 98, 115,
              101, 114, 118, 101, 114, 32, 61, 32, 99, 108, 97, 115, 115, 32,
              123, 10, 32, 32, 32, 32, 115, 116, 97, 116, 105, 99, 32, 95, 105,
              110, 105, 116, 105, 97, 108, 105, 122, 101, 79, 98, 115, 101, 114,
              118, 101, 114, 40, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 105,
              102, 32, 40, 116, 104, 105, 115, 46, 95, 111, 98, 115, 101, 114,
              118, 101, 114, 41, 32, 114, 101, 116, 117, 114, 110, 59, 10, 32,
              32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 114, 101, 115,
              105, 122, 101, 72, 97, 110, 100, 108, 101, 114, 32, 61, 32, 40,
              101, 110, 116, 114, 105, 101, 115, 41, 32, 61, 62, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 101, 110, 116, 114, 105, 101, 115,
              46, 102, 111, 114, 69, 97, 99, 104, 40, 40, 101, 110, 116, 114,
              121, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 99, 111, 110, 115, 116, 32, 101, 108, 101, 109, 101, 110,
              116, 32, 61, 32, 116, 104, 105, 115, 46, 95, 111, 98, 115, 101,
              114, 118, 101, 100, 67, 97, 110, 118, 97, 115, 101, 115, 46, 103,
              101, 116, 40, 101, 110, 116, 114, 121, 46, 116, 97, 114, 103, 101,
              116, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102,
              32, 40, 33, 101, 108, 101, 109, 101, 110, 116, 41, 32, 114, 101,
              116, 117, 114, 110, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 99, 111, 110, 115, 116, 32, 91, 100, 111, 116, 76, 111, 116,
              116, 105, 101, 73, 110, 115, 116, 97, 110, 99, 101, 44, 32, 116,
              105, 109, 101, 111, 117, 116, 93, 32, 61, 32, 101, 108, 101, 109,
              101, 110, 116, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 99,
              108, 101, 97, 114, 84, 105, 109, 101, 111, 117, 116, 40, 116, 105,
              109, 101, 111, 117, 116, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 99, 111, 110, 115, 116, 32, 110, 101, 119, 84, 105,
              109, 101, 111, 117, 116, 32, 61, 32, 115, 101, 116, 84, 105, 109,
              101, 111, 117, 116, 40, 40, 41, 32, 61, 62, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 100, 111, 116, 76, 111,
              116, 116, 105, 101, 73, 110, 115, 116, 97, 110, 99, 101, 46, 114,
              101, 115, 105, 122, 101, 40, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 125, 44, 32, 82, 69, 83, 73, 90, 69, 95, 68, 69,
              66, 79, 85, 78, 67, 69, 95, 84, 73, 77, 69, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 111,
              98, 115, 101, 114, 118, 101, 100, 67, 97, 110, 118, 97, 115, 101,
              115, 46, 115, 101, 116, 40, 101, 110, 116, 114, 121, 46, 116, 97,
              114, 103, 101, 116, 44, 32, 91, 100, 111, 116, 76, 111, 116, 116,
              105, 101, 73, 110, 115, 116, 97, 110, 99, 101, 44, 32, 110, 101,
              119, 84, 105, 109, 101, 111, 117, 116, 93, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 125, 41, 59, 10, 32, 32, 32, 32, 32, 32, 125,
              59, 10, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 111,
              98, 115, 101, 114, 118, 101, 114, 32, 61, 32, 110, 101, 119, 32,
              82, 101, 115, 105, 122, 101, 79, 98, 115, 101, 114, 118, 101, 114,
              40, 114, 101, 115, 105, 122, 101, 72, 97, 110, 100, 108, 101, 114,
              41, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 115, 116, 97,
              116, 105, 99, 32, 111, 98, 115, 101, 114, 118, 101, 40, 99, 97,
              110, 118, 97, 115, 44, 32, 100, 111, 116, 76, 111, 116, 116, 105,
              101, 73, 110, 115, 116, 97, 110, 99, 101, 41, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 118, 97, 114, 32, 95, 97, 59, 10, 32, 32, 32, 32,
              32, 32, 116, 104, 105, 115, 46, 95, 105, 110, 105, 116, 105, 97,
              108, 105, 122, 101, 79, 98, 115, 101, 114, 118, 101, 114, 40, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 116, 104, 105,
              115, 46, 95, 111, 98, 115, 101, 114, 118, 101, 100, 67, 97, 110,
              118, 97, 115, 101, 115, 46, 104, 97, 115, 40, 99, 97, 110, 118,
              97, 115, 41, 41, 32, 114, 101, 116, 117, 114, 110, 59, 10, 32, 32,
              32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 111, 98, 115, 101,
              114, 118, 101, 100, 67, 97, 110, 118, 97, 115, 101, 115, 46, 115,
              101, 116, 40, 99, 97, 110, 118, 97, 115, 44, 32, 91, 100, 111,
              116, 76, 111, 116, 116, 105, 101, 73, 110, 115, 116, 97, 110, 99,
              101, 44, 32, 48, 93, 41, 59, 10, 32, 32, 32, 32, 32, 32, 40, 95,
              97, 32, 61, 32, 116, 104, 105, 115, 46, 95, 111, 98, 115, 101,
              114, 118, 101, 114, 41, 32, 61, 61, 32, 110, 117, 108, 108, 32,
              63, 32, 118, 111, 105, 100, 32, 48, 32, 58, 32, 95, 97, 46, 111,
              98, 115, 101, 114, 118, 101, 40, 99, 97, 110, 118, 97, 115, 41,
              59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 115, 116, 97,
              116, 105, 99, 32, 117, 110, 111, 98, 115, 101, 114, 118, 101, 40,
              99, 97, 110, 118, 97, 115, 41, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 118, 97, 114, 32, 95, 97, 44, 32, 95, 98, 59, 10, 32, 32, 32,
              32, 32, 32, 40, 95, 97, 32, 61, 32, 116, 104, 105, 115, 46, 95,
              111, 98, 115, 101, 114, 118, 101, 114, 41, 32, 61, 61, 32, 110,
              117, 108, 108, 32, 63, 32, 118, 111, 105, 100, 32, 48, 32, 58, 32,
              95, 97, 46, 117, 110, 111, 98, 115, 101, 114, 118, 101, 40, 99,
              97, 110, 118, 97, 115, 41, 59, 10, 32, 32, 32, 32, 32, 32, 116,
              104, 105, 115, 46, 95, 111, 98, 115, 101, 114, 118, 101, 100, 67,
              97, 110, 118, 97, 115, 101, 115, 46, 100, 101, 108, 101, 116, 101,
              40, 99, 97, 110, 118, 97, 115, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              105, 102, 32, 40, 116, 104, 105, 115, 46, 95, 111, 98, 115, 101,
              114, 118, 101, 100, 67, 97, 110, 118, 97, 115, 101, 115, 46, 115,
              105, 122, 101, 32, 61, 61, 61, 32, 48, 41, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 40, 95, 98, 32, 61, 32, 116, 104, 105,
              115, 46, 95, 111, 98, 115, 101, 114, 118, 101, 114, 41, 32, 61,
              61, 32, 110, 117, 108, 108, 32, 63, 32, 118, 111, 105, 100, 32,
              48, 32, 58, 32, 95, 98, 46, 100, 105, 115, 99, 111, 110, 110, 101,
              99, 116, 40, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104,
              105, 115, 46, 95, 111, 98, 115, 101, 114, 118, 101, 114, 32, 61,
              32, 110, 117, 108, 108, 59, 10, 32, 32, 32, 32, 32, 32, 125, 10,
              32, 32, 32, 32, 125, 10, 32, 32, 125, 59, 10, 32, 32, 95, 95, 112,
              117, 98, 108, 105, 99, 70, 105, 101, 108, 100, 40, 67, 97, 110,
              118, 97, 115, 82, 101, 115, 105, 122, 101, 79, 98, 115, 101, 114,
              118, 101, 114, 44, 32, 34, 95, 111, 98, 115, 101, 114, 118, 101,
              114, 34, 44, 32, 110, 117, 108, 108, 41, 59, 10, 32, 32, 95, 95,
              112, 117, 98, 108, 105, 99, 70, 105, 101, 108, 100, 40, 67, 97,
              110, 118, 97, 115, 82, 101, 115, 105, 122, 101, 79, 98, 115, 101,
              114, 118, 101, 114, 44, 32, 34, 95, 111, 98, 115, 101, 114, 118,
              101, 100, 67, 97, 110, 118, 97, 115, 101, 115, 34, 44, 32, 47, 42,
              32, 64, 95, 95, 80, 85, 82, 69, 95, 95, 32, 42, 47, 32, 110, 101,
              119, 32, 77, 97, 112, 40, 41, 41, 59, 10, 10, 32, 32, 47, 47, 32,
              115, 114, 99, 47, 117, 116, 105, 108, 115, 46, 116, 115, 10, 32,
              32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 105, 115, 72, 101,
              120, 67, 111, 108, 111, 114, 40, 99, 111, 108, 111, 114, 41, 32,
              123, 10, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 47, 94,
              35, 40, 91, 92, 100, 97, 45, 102, 93, 123, 54, 125, 124, 91, 92,
              100, 97, 45, 102, 93, 123, 56, 125, 41, 36, 47, 105, 117, 46, 116,
              101, 115, 116, 40, 99, 111, 108, 111, 114, 41, 59, 10, 32, 32,
              125, 10, 32, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 104,
              101, 120, 83, 116, 114, 105, 110, 103, 84, 111, 82, 71, 66, 65,
              73, 110, 116, 40, 99, 111, 108, 111, 114, 72, 101, 120, 41, 32,
              123, 10, 32, 32, 32, 32, 105, 102, 32, 40, 33, 105, 115, 72, 101,
              120, 67, 111, 108, 111, 114, 40, 99, 111, 108, 111, 114, 72, 101,
              120, 41, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116,
              117, 114, 110, 32, 48, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32,
              32, 32, 108, 101, 116, 32, 104, 101, 120, 32, 61, 32, 99, 111,
              108, 111, 114, 72, 101, 120, 46, 114, 101, 112, 108, 97, 99, 101,
              40, 34, 35, 34, 44, 32, 34, 34, 41, 59, 10, 32, 32, 32, 32, 104,
              101, 120, 32, 61, 32, 104, 101, 120, 46, 108, 101, 110, 103, 116,
              104, 32, 61, 61, 61, 32, 54, 32, 63, 32, 96, 36, 123, 104, 101,
              120, 125, 102, 102, 96, 32, 58, 32, 104, 101, 120, 59, 10, 32, 32,
              32, 32, 114, 101, 116, 117, 114, 110, 32, 112, 97, 114, 115, 101,
              73, 110, 116, 40, 104, 101, 120, 44, 32, 49, 54, 41, 59, 10, 32,
              32, 125, 10, 32, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32,
              105, 115, 68, 111, 116, 76, 111, 116, 116, 105, 101, 40, 102, 105,
              108, 101, 68, 97, 116, 97, 41, 32, 123, 10, 32, 32, 32, 32, 105,
              102, 32, 40, 102, 105, 108, 101, 68, 97, 116, 97, 46, 98, 121,
              116, 101, 76, 101, 110, 103, 116, 104, 32, 60, 32, 52, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32,
              102, 97, 108, 115, 101, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32,
              32, 32, 99, 111, 110, 115, 116, 32, 102, 105, 108, 101, 83, 105,
              103, 110, 97, 116, 117, 114, 101, 32, 61, 32, 110, 101, 119, 32,
              85, 105, 110, 116, 56, 65, 114, 114, 97, 121, 40, 102, 105, 108,
              101, 68, 97, 116, 97, 46, 115, 108, 105, 99, 101, 40, 48, 44, 32,
              90, 73, 80, 95, 83, 73, 71, 78, 65, 84, 85, 82, 69, 46, 98, 121,
              116, 101, 76, 101, 110, 103, 116, 104, 41, 41, 59, 10, 32, 32, 32,
              32, 102, 111, 114, 32, 40, 108, 101, 116, 32, 105, 32, 61, 32, 48,
              59, 32, 105, 32, 60, 32, 90, 73, 80, 95, 83, 73, 71, 78, 65, 84,
              85, 82, 69, 46, 108, 101, 110, 103, 116, 104, 59, 32, 105, 32, 43,
              61, 32, 49, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32,
              40, 90, 73, 80, 95, 83, 73, 71, 78, 65, 84, 85, 82, 69, 91, 105,
              93, 32, 33, 61, 61, 32, 102, 105, 108, 101, 83, 105, 103, 110, 97,
              116, 117, 114, 101, 91, 105, 93, 41, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 102, 97, 108,
              115, 101, 59, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 116,
              114, 117, 101, 59, 10, 32, 32, 125, 10, 32, 32, 102, 117, 110, 99,
              116, 105, 111, 110, 32, 105, 115, 76, 111, 116, 116, 105, 101, 74,
              83, 79, 78, 40, 106, 115, 111, 110, 41, 32, 123, 10, 32, 32, 32,
              32, 114, 101, 116, 117, 114, 110, 32, 76, 79, 84, 84, 73, 69, 95,
              74, 83, 79, 78, 95, 77, 65, 78, 68, 65, 84, 79, 82, 89, 95, 70,
              73, 69, 76, 68, 83, 46, 101, 118, 101, 114, 121, 40, 40, 102, 105,
              101, 108, 100, 41, 32, 61, 62, 32, 79, 98, 106, 101, 99, 116, 46,
              112, 114, 111, 116, 111, 116, 121, 112, 101, 46, 104, 97, 115, 79,
              119, 110, 80, 114, 111, 112, 101, 114, 116, 121, 46, 99, 97, 108,
              108, 40, 106, 115, 111, 110, 44, 32, 102, 105, 101, 108, 100, 41,
              41, 59, 10, 32, 32, 125, 10, 32, 32, 102, 117, 110, 99, 116, 105,
              111, 110, 32, 105, 115, 76, 111, 116, 116, 105, 101, 40, 102, 105,
              108, 101, 68, 97, 116, 97, 41, 32, 123, 10, 32, 32, 32, 32, 105,
              102, 32, 40, 116, 121, 112, 101, 111, 102, 32, 102, 105, 108, 101,
              68, 97, 116, 97, 32, 61, 61, 61, 32, 34, 115, 116, 114, 105, 110,
              103, 34, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 116, 114, 121,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117,
              114, 110, 32, 105, 115, 76, 111, 116, 116, 105, 101, 74, 83, 79,
              78, 40, 74, 83, 79, 78, 46, 112, 97, 114, 115, 101, 40, 102, 105,
              108, 101, 68, 97, 116, 97, 41, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              125, 32, 99, 97, 116, 99, 104, 32, 40, 95, 101, 41, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32,
              102, 97, 108, 115, 101, 59, 10, 32, 32, 32, 32, 32, 32, 125, 10,
              32, 32, 32, 32, 125, 32, 101, 108, 115, 101, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 105, 115, 76,
              111, 116, 116, 105, 101, 74, 83, 79, 78, 40, 102, 105, 108, 101,
              68, 97, 116, 97, 41, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 125,
              10, 32, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 103, 101,
              116, 68, 101, 102, 97, 117, 108, 116, 68, 80, 82, 40, 41, 32, 123,
              10, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 100, 112, 114, 32,
              61, 32, 73, 83, 95, 66, 82, 79, 87, 83, 69, 82, 32, 63, 32, 119,
              105, 110, 100, 111, 119, 46, 100, 101, 118, 105, 99, 101, 80, 105,
              120, 101, 108, 82, 97, 116, 105, 111, 32, 58, 32, 49, 59, 10, 32,
              32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 49, 32, 43, 32, 40,
              100, 112, 114, 32, 45, 32, 49, 41, 32, 42, 32, 68, 69, 70, 65, 85,
              76, 84, 95, 68, 80, 82, 95, 70, 65, 67, 84, 79, 82, 59, 10, 32,
              32, 125, 10, 32, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32,
              105, 115, 69, 108, 101, 109, 101, 110, 116, 73, 110, 86, 105, 101,
              119, 112, 111, 114, 116, 40, 101, 108, 101, 109, 101, 110, 116,
              41, 32, 123, 10, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 114,
              101, 99, 116, 32, 61, 32, 101, 108, 101, 109, 101, 110, 116, 46,
              103, 101, 116, 66, 111, 117, 110, 100, 105, 110, 103, 67, 108,
              105, 101, 110, 116, 82, 101, 99, 116, 40, 41, 59, 10, 32, 32, 32,
              32, 114, 101, 116, 117, 114, 110, 32, 114, 101, 99, 116, 46, 116,
              111, 112, 32, 62, 61, 32, 48, 32, 38, 38, 32, 114, 101, 99, 116,
              46, 108, 101, 102, 116, 32, 62, 61, 32, 48, 32, 38, 38, 32, 114,
              101, 99, 116, 46, 98, 111, 116, 116, 111, 109, 32, 60, 61, 32, 40,
              119, 105, 110, 100, 111, 119, 46, 105, 110, 110, 101, 114, 72,
              101, 105, 103, 104, 116, 32, 124, 124, 32, 100, 111, 99, 117, 109,
              101, 110, 116, 46, 100, 111, 99, 117, 109, 101, 110, 116, 69, 108,
              101, 109, 101, 110, 116, 46, 99, 108, 105, 101, 110, 116, 72, 101,
              105, 103, 104, 116, 41, 32, 38, 38, 32, 114, 101, 99, 116, 46,
              114, 105, 103, 104, 116, 32, 60, 61, 32, 40, 119, 105, 110, 100,
              111, 119, 46, 105, 110, 110, 101, 114, 87, 105, 100, 116, 104, 32,
              124, 124, 32, 100, 111, 99, 117, 109, 101, 110, 116, 46, 100, 111,
              99, 117, 109, 101, 110, 116, 69, 108, 101, 109, 101, 110, 116, 46,
              99, 108, 105, 101, 110, 116, 87, 105, 100, 116, 104, 41, 59, 10,
              32, 32, 125, 10, 10, 32, 32, 47, 47, 32, 115, 114, 99, 47, 100,
              111, 116, 108, 111, 116, 116, 105, 101, 46, 116, 115, 10, 32, 32,
              118, 97, 114, 32, 99, 114, 101, 97, 116, 101, 67, 111, 114, 101,
              77, 111, 100, 101, 32, 61, 32, 40, 109, 111, 100, 101, 44, 32,
              109, 111, 100, 117, 108, 101, 41, 32, 61, 62, 32, 123, 10, 32, 32,
              32, 32, 105, 102, 32, 40, 109, 111, 100, 101, 32, 61, 61, 61, 32,
              34, 114, 101, 118, 101, 114, 115, 101, 34, 41, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 109, 111,
              100, 117, 108, 101, 46, 77, 111, 100, 101, 46, 82, 101, 118, 101,
              114, 115, 101, 59, 10, 32, 32, 32, 32, 125, 32, 101, 108, 115,
              101, 32, 105, 102, 32, 40, 109, 111, 100, 101, 32, 61, 61, 61, 32,
              34, 98, 111, 117, 110, 99, 101, 34, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 109, 111, 100, 117,
              108, 101, 46, 77, 111, 100, 101, 46, 66, 111, 117, 110, 99, 101,
              59, 10, 32, 32, 32, 32, 125, 32, 101, 108, 115, 101, 32, 105, 102,
              32, 40, 109, 111, 100, 101, 32, 61, 61, 61, 32, 34, 114, 101, 118,
              101, 114, 115, 101, 45, 98, 111, 117, 110, 99, 101, 34, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32,
              109, 111, 100, 117, 108, 101, 46, 77, 111, 100, 101, 46, 82, 101,
              118, 101, 114, 115, 101, 66, 111, 117, 110, 99, 101, 59, 10, 32,
              32, 32, 32, 125, 32, 101, 108, 115, 101, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 109, 111, 100, 117,
              108, 101, 46, 77, 111, 100, 101, 46, 70, 111, 114, 119, 97, 114,
              100, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 125, 59, 10, 32, 32,
              118, 97, 114, 32, 99, 114, 101, 97, 116, 101, 67, 111, 114, 101,
              70, 105, 116, 32, 61, 32, 40, 102, 105, 116, 44, 32, 109, 111,
              100, 117, 108, 101, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32,
              105, 102, 32, 40, 102, 105, 116, 32, 61, 61, 61, 32, 34, 99, 111,
              110, 116, 97, 105, 110, 34, 41, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 114, 101, 116, 117, 114, 110, 32, 109, 111, 100, 117, 108,
              101, 46, 70, 105, 116, 46, 67, 111, 110, 116, 97, 105, 110, 59,
              10, 32, 32, 32, 32, 125, 32, 101, 108, 115, 101, 32, 105, 102, 32,
              40, 102, 105, 116, 32, 61, 61, 61, 32, 34, 99, 111, 118, 101, 114,
              34, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117,
              114, 110, 32, 109, 111, 100, 117, 108, 101, 46, 70, 105, 116, 46,
              67, 111, 118, 101, 114, 59, 10, 32, 32, 32, 32, 125, 32, 101, 108,
              115, 101, 32, 105, 102, 32, 40, 102, 105, 116, 32, 61, 61, 61, 32,
              34, 102, 105, 108, 108, 34, 41, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 114, 101, 116, 117, 114, 110, 32, 109, 111, 100, 117, 108,
              101, 46, 70, 105, 116, 46, 70, 105, 108, 108, 59, 10, 32, 32, 32,
              32, 125, 32, 101, 108, 115, 101, 32, 105, 102, 32, 40, 102, 105,
              116, 32, 61, 61, 61, 32, 34, 102, 105, 116, 45, 104, 101, 105,
              103, 104, 116, 34, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 114,
              101, 116, 117, 114, 110, 32, 109, 111, 100, 117, 108, 101, 46, 70,
              105, 116, 46, 70, 105, 116, 72, 101, 105, 103, 104, 116, 59, 10,
              32, 32, 32, 32, 125, 32, 101, 108, 115, 101, 32, 105, 102, 32, 40,
              102, 105, 116, 32, 61, 61, 61, 32, 34, 102, 105, 116, 45, 119,
              105, 100, 116, 104, 34, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32,
              114, 101, 116, 117, 114, 110, 32, 109, 111, 100, 117, 108, 101,
              46, 70, 105, 116, 46, 70, 105, 116, 87, 105, 100, 116, 104, 59,
              10, 32, 32, 32, 32, 125, 32, 101, 108, 115, 101, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 109, 111,
              100, 117, 108, 101, 46, 70, 105, 116, 46, 78, 111, 110, 101, 59,
              10, 32, 32, 32, 32, 125, 10, 32, 32, 125, 59, 10, 32, 32, 118, 97,
              114, 32, 99, 114, 101, 97, 116, 101, 67, 111, 114, 101, 65, 108,
              105, 103, 110, 32, 61, 32, 40, 97, 108, 105, 103, 110, 44, 32,
              109, 111, 100, 117, 108, 101, 41, 32, 61, 62, 32, 123, 10, 32, 32,
              32, 32, 99, 111, 110, 115, 116, 32, 99, 111, 114, 101, 65, 108,
              105, 103, 110, 32, 61, 32, 110, 101, 119, 32, 109, 111, 100, 117,
              108, 101, 46, 86, 101, 99, 116, 111, 114, 70, 108, 111, 97, 116,
              40, 41, 59, 10, 32, 32, 32, 32, 99, 111, 114, 101, 65, 108, 105,
              103, 110, 46, 112, 117, 115, 104, 95, 98, 97, 99, 107, 40, 97,
              108, 105, 103, 110, 91, 48, 93, 41, 59, 10, 32, 32, 32, 32, 99,
              111, 114, 101, 65, 108, 105, 103, 110, 46, 112, 117, 115, 104, 95,
              98, 97, 99, 107, 40, 97, 108, 105, 103, 110, 91, 49, 93, 41, 59,
              10, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 99, 111,
              114, 101, 65, 108, 105, 103, 110, 59, 10, 32, 32, 125, 59, 10, 32,
              32, 118, 97, 114, 32, 99, 114, 101, 97, 116, 101, 67, 111, 114,
              101, 83, 101, 103, 109, 101, 110, 116, 32, 61, 32, 40, 115, 101,
              103, 109, 101, 110, 116, 44, 32, 109, 111, 100, 117, 108, 101, 41,
              32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 99, 111, 110, 115, 116,
              32, 99, 111, 114, 101, 115, 101, 103, 109, 101, 110, 116, 32, 61,
              32, 110, 101, 119, 32, 109, 111, 100, 117, 108, 101, 46, 86, 101,
              99, 116, 111, 114, 70, 108, 111, 97, 116, 40, 41, 59, 10, 32, 32,
              32, 32, 105, 102, 32, 40, 115, 101, 103, 109, 101, 110, 116, 46,
              108, 101, 110, 103, 116, 104, 32, 33, 61, 61, 32, 50, 41, 32, 114,
              101, 116, 117, 114, 110, 32, 99, 111, 114, 101, 115, 101, 103,
              109, 101, 110, 116, 59, 10, 32, 32, 32, 32, 99, 111, 114, 101,
              115, 101, 103, 109, 101, 110, 116, 46, 112, 117, 115, 104, 95, 98,
              97, 99, 107, 40, 115, 101, 103, 109, 101, 110, 116, 91, 48, 93,
              41, 59, 10, 32, 32, 32, 32, 99, 111, 114, 101, 115, 101, 103, 109,
              101, 110, 116, 46, 112, 117, 115, 104, 95, 98, 97, 99, 107, 40,
              115, 101, 103, 109, 101, 110, 116, 91, 49, 93, 41, 59, 10, 32, 32,
              32, 32, 114, 101, 116, 117, 114, 110, 32, 99, 111, 114, 101, 115,
              101, 103, 109, 101, 110, 116, 59, 10, 32, 32, 125, 59, 10, 32, 32,
              118, 97, 114, 32, 95, 68, 111, 116, 76, 111, 116, 116, 105, 101,
              32, 61, 32, 99, 108, 97, 115, 115, 32, 95, 68, 111, 116, 76, 111,
              116, 116, 105, 101, 32, 123, 10, 32, 32, 32, 32, 99, 111, 110,
              115, 116, 114, 117, 99, 116, 111, 114, 40, 99, 111, 110, 102, 105,
              103, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 95, 95, 112, 117,
              98, 108, 105, 99, 70, 105, 101, 108, 100, 40, 116, 104, 105, 115,
              44, 32, 34, 95, 99, 97, 110, 118, 97, 115, 34, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 95, 95, 112, 117, 98, 108, 105, 99, 70, 105, 101,
              108, 100, 40, 116, 104, 105, 115, 44, 32, 34, 95, 99, 111, 110,
              116, 101, 120, 116, 34, 44, 32, 110, 117, 108, 108, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 95, 95, 112, 117, 98, 108, 105, 99, 70,
              105, 101, 108, 100, 40, 116, 104, 105, 115, 44, 32, 34, 95, 101,
              118, 101, 110, 116, 77, 97, 110, 97, 103, 101, 114, 34, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 95, 95, 112, 117, 98, 108, 105, 99,
              70, 105, 101, 108, 100, 40, 116, 104, 105, 115, 44, 32, 34, 95,
              97, 110, 105, 109, 97, 116, 105, 111, 110, 70, 114, 97, 109, 101,
              73, 100, 34, 44, 32, 110, 117, 108, 108, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 95, 95, 112, 117, 98, 108, 105, 99, 70, 105, 101, 108,
              100, 40, 116, 104, 105, 115, 44, 32, 34, 95, 102, 114, 97, 109,
              101, 77, 97, 110, 97, 103, 101, 114, 34, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 95, 95, 112, 117, 98, 108, 105, 99, 70, 105, 101, 108,
              100, 40, 116, 104, 105, 115, 44, 32, 34, 95, 100, 111, 116, 76,
              111, 116, 116, 105, 101, 67, 111, 114, 101, 34, 44, 32, 110, 117,
              108, 108, 41, 59, 10, 32, 32, 32, 32, 32, 32, 95, 95, 112, 117,
              98, 108, 105, 99, 70, 105, 101, 108, 100, 40, 116, 104, 105, 115,
              44, 32, 34, 95, 114, 101, 110, 100, 101, 114, 67, 111, 110, 102,
              105, 103, 34, 44, 32, 123, 125, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 95, 95, 112, 117, 98, 108, 105, 99, 70, 105, 101, 108, 100,
              40, 116, 104, 105, 115, 44, 32, 34, 95, 105, 115, 70, 114, 111,
              122, 101, 110, 34, 44, 32, 102, 97, 108, 115, 101, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 95, 95, 112, 117, 98, 108, 105, 99, 70, 105,
              101, 108, 100, 40, 116, 104, 105, 115, 44, 32, 34, 95, 98, 97, 99,
              107, 103, 114, 111, 117, 110, 100, 67, 111, 108, 111, 114, 34, 44,
              32, 110, 117, 108, 108, 41, 59, 10, 32, 32, 32, 32, 32, 32, 95,
              95, 112, 117, 98, 108, 105, 99, 70, 105, 101, 108, 100, 40, 116,
              104, 105, 115, 44, 32, 34, 95, 112, 111, 105, 110, 116, 101, 114,
              85, 112, 77, 101, 116, 104, 111, 100, 34, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 95, 95, 112, 117, 98, 108, 105, 99, 70, 105, 101, 108,
              100, 40, 116, 104, 105, 115, 44, 32, 34, 95, 112, 111, 105, 110,
              116, 101, 114, 68, 111, 119, 110, 77, 101, 116, 104, 111, 100, 34,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 95, 95, 112, 117, 98, 108,
              105, 99, 70, 105, 101, 108, 100, 40, 116, 104, 105, 115, 44, 32,
              34, 95, 112, 111, 105, 110, 116, 101, 114, 77, 111, 118, 101, 77,
              101, 116, 104, 111, 100, 34, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              95, 95, 112, 117, 98, 108, 105, 99, 70, 105, 101, 108, 100, 40,
              116, 104, 105, 115, 44, 32, 34, 95, 112, 111, 105, 110, 116, 101,
              114, 69, 110, 116, 101, 114, 77, 101, 116, 104, 111, 100, 34, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 95, 95, 112, 117, 98, 108, 105,
              99, 70, 105, 101, 108, 100, 40, 116, 104, 105, 115, 44, 32, 34,
              95, 112, 111, 105, 110, 116, 101, 114, 69, 120, 105, 116, 77, 101,
              116, 104, 111, 100, 34, 41, 59, 10, 32, 32, 32, 32, 32, 32, 118,
              97, 114, 32, 95, 97, 44, 32, 95, 98, 44, 32, 95, 99, 59, 10, 32,
              32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 99, 97, 110, 118,
              97, 115, 32, 61, 32, 99, 111, 110, 102, 105, 103, 46, 99, 97, 110,
              118, 97, 115, 59, 10, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115,
              46, 95, 99, 111, 110, 116, 101, 120, 116, 32, 61, 32, 116, 104,
              105, 115, 46, 95, 99, 97, 110, 118, 97, 115, 46, 103, 101, 116,
              67, 111, 110, 116, 101, 120, 116, 40, 34, 50, 100, 34, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 101, 118, 101,
              110, 116, 77, 97, 110, 97, 103, 101, 114, 32, 61, 32, 110, 101,
              119, 32, 69, 118, 101, 110, 116, 77, 97, 110, 97, 103, 101, 114,
              40, 41, 59, 10, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46,
              95, 102, 114, 97, 109, 101, 77, 97, 110, 97, 103, 101, 114, 32,
              61, 32, 110, 101, 119, 32, 65, 110, 105, 109, 97, 116, 105, 111,
              110, 70, 114, 97, 109, 101, 77, 97, 110, 97, 103, 101, 114, 40,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95,
              114, 101, 110, 100, 101, 114, 67, 111, 110, 102, 105, 103, 32, 61,
              32, 95, 95, 115, 112, 114, 101, 97, 100, 80, 114, 111, 112, 115,
              40, 95, 95, 115, 112, 114, 101, 97, 100, 86, 97, 108, 117, 101,
              115, 40, 123, 125, 44, 32, 99, 111, 110, 102, 105, 103, 46, 114,
              101, 110, 100, 101, 114, 67, 111, 110, 102, 105, 103, 41, 44, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 100, 101, 118, 105, 99,
              101, 80, 105, 120, 101, 108, 82, 97, 116, 105, 111, 58, 32, 40,
              40, 95, 97, 32, 61, 32, 99, 111, 110, 102, 105, 103, 46, 114, 101,
              110, 100, 101, 114, 67, 111, 110, 102, 105, 103, 41, 32, 61, 61,
              32, 110, 117, 108, 108, 32, 63, 32, 118, 111, 105, 100, 32, 48,
              32, 58, 32, 95, 97, 46, 100, 101, 118, 105, 99, 101, 80, 105, 120,
              101, 108, 82, 97, 116, 105, 111, 41, 32, 124, 124, 32, 103, 101,
              116, 68, 101, 102, 97, 117, 108, 116, 68, 80, 82, 40, 41, 44, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 47, 47, 32, 102, 114, 101, 101,
              122, 101, 79, 110, 79, 102, 102, 115, 99, 114, 101, 101, 110, 32,
              105, 115, 32, 116, 114, 117, 101, 32, 98, 121, 32, 100, 101, 102,
              97, 117, 108, 116, 32, 116, 111, 32, 112, 114, 101, 118, 101, 110,
              116, 32, 117, 110, 110, 101, 99, 101, 115, 115, 97, 114, 121, 32,
              114, 101, 110, 100, 101, 114, 105, 110, 103, 32, 119, 104, 101,
              110, 32, 116, 104, 101, 32, 99, 97, 110, 118, 97, 115, 32, 105,
              115, 32, 111, 102, 102, 115, 99, 114, 101, 101, 110, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 102, 114, 101, 101, 122, 101, 79, 110, 79,
              102, 102, 115, 99, 114, 101, 101, 110, 58, 32, 40, 95, 99, 32, 61,
              32, 40, 95, 98, 32, 61, 32, 99, 111, 110, 102, 105, 103, 46, 114,
              101, 110, 100, 101, 114, 67, 111, 110, 102, 105, 103, 41, 32, 61,
              61, 32, 110, 117, 108, 108, 32, 63, 32, 118, 111, 105, 100, 32,
              48, 32, 58, 32, 95, 98, 46, 102, 114, 101, 101, 122, 101, 79, 110,
              79, 102, 102, 115, 99, 114, 101, 101, 110, 41, 32, 33, 61, 32,
              110, 117, 108, 108, 32, 63, 32, 95, 99, 32, 58, 32, 116, 114, 117,
              101, 10, 32, 32, 32, 32, 32, 32, 125, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 68, 111, 116, 76, 111, 116, 116, 105, 101, 87, 97, 115,
              109, 76, 111, 97, 100, 101, 114, 46, 108, 111, 97, 100, 40, 41,
              46, 116, 104, 101, 110, 40, 40, 109, 111, 100, 117, 108, 101, 41,
              32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97,
              114, 32, 95, 97, 50, 44, 32, 95, 98, 50, 44, 32, 95, 99, 50, 44,
              32, 95, 100, 44, 32, 95, 101, 44, 32, 95, 102, 44, 32, 95, 103,
              44, 32, 95, 104, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 95, 68,
              111, 116, 76, 111, 116, 116, 105, 101, 46, 95, 119, 97, 115, 109,
              77, 111, 100, 117, 108, 101, 32, 61, 32, 109, 111, 100, 117, 108,
              101, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115,
              46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67, 111, 114,
              101, 32, 61, 32, 110, 101, 119, 32, 109, 111, 100, 117, 108, 101,
              46, 68, 111, 116, 76, 111, 116, 116, 105, 101, 80, 108, 97, 121,
              101, 114, 40, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              116, 104, 101, 109, 101, 73, 100, 58, 32, 40, 95, 97, 50, 32, 61,
              32, 99, 111, 110, 102, 105, 103, 46, 116, 104, 101, 109, 101, 73,
              100, 41, 32, 33, 61, 32, 110, 117, 108, 108, 32, 63, 32, 95, 97,
              50, 32, 58, 32, 34, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 97, 117, 116, 111, 112, 108, 97, 121, 58, 32, 40, 95, 98,
              50, 32, 61, 32, 99, 111, 110, 102, 105, 103, 46, 97, 117, 116,
              111, 112, 108, 97, 121, 41, 32, 33, 61, 32, 110, 117, 108, 108,
              32, 63, 32, 95, 98, 50, 32, 58, 32, 102, 97, 108, 115, 101, 44,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 98, 97, 99, 107, 103,
              114, 111, 117, 110, 100, 67, 111, 108, 111, 114, 58, 32, 48, 44,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 108, 111, 111, 112,
              65, 110, 105, 109, 97, 116, 105, 111, 110, 58, 32, 40, 95, 99, 50,
              32, 61, 32, 99, 111, 110, 102, 105, 103, 46, 108, 111, 111, 112,
              41, 32, 33, 61, 32, 110, 117, 108, 108, 32, 63, 32, 95, 99, 50,
              32, 58, 32, 102, 97, 108, 115, 101, 44, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 109, 111, 100, 101, 58, 32, 99, 114, 101, 97,
              116, 101, 67, 111, 114, 101, 77, 111, 100, 101, 40, 40, 95, 100,
              32, 61, 32, 99, 111, 110, 102, 105, 103, 46, 109, 111, 100, 101,
              41, 32, 33, 61, 32, 110, 117, 108, 108, 32, 63, 32, 95, 100, 32,
              58, 32, 34, 102, 111, 114, 119, 97, 114, 100, 34, 44, 32, 109,
              111, 100, 117, 108, 101, 41, 44, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 115, 101, 103, 109, 101, 110, 116, 58, 32, 99, 114,
              101, 97, 116, 101, 67, 111, 114, 101, 83, 101, 103, 109, 101, 110,
              116, 40, 40, 95, 101, 32, 61, 32, 99, 111, 110, 102, 105, 103, 46,
              115, 101, 103, 109, 101, 110, 116, 41, 32, 33, 61, 32, 110, 117,
              108, 108, 32, 63, 32, 95, 101, 32, 58, 32, 91, 93, 44, 32, 109,
              111, 100, 117, 108, 101, 41, 44, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 115, 112, 101, 101, 100, 58, 32, 40, 95, 102, 32, 61,
              32, 99, 111, 110, 102, 105, 103, 46, 115, 112, 101, 101, 100, 41,
              32, 33, 61, 32, 110, 117, 108, 108, 32, 63, 32, 95, 102, 32, 58,
              32, 49, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 117, 115,
              101, 70, 114, 97, 109, 101, 73, 110, 116, 101, 114, 112, 111, 108,
              97, 116, 105, 111, 110, 58, 32, 40, 95, 103, 32, 61, 32, 99, 111,
              110, 102, 105, 103, 46, 117, 115, 101, 70, 114, 97, 109, 101, 73,
              110, 116, 101, 114, 112, 111, 108, 97, 116, 105, 111, 110, 41, 32,
              33, 61, 32, 110, 117, 108, 108, 32, 63, 32, 95, 103, 32, 58, 32,
              116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 109, 97, 114, 107, 101, 114, 58, 32, 40, 95, 104, 32, 61, 32,
              99, 111, 110, 102, 105, 103, 46, 109, 97, 114, 107, 101, 114, 41,
              32, 33, 61, 32, 110, 117, 108, 108, 32, 63, 32, 95, 104, 32, 58,
              32, 34, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 108,
              97, 121, 111, 117, 116, 58, 32, 99, 111, 110, 102, 105, 103, 46,
              108, 97, 121, 111, 117, 116, 32, 63, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 97, 108, 105, 103, 110, 58, 32,
              99, 114, 101, 97, 116, 101, 67, 111, 114, 101, 65, 108, 105, 103,
              110, 40, 99, 111, 110, 102, 105, 103, 46, 108, 97, 121, 111, 117,
              116, 46, 97, 108, 105, 103, 110, 44, 32, 109, 111, 100, 117, 108,
              101, 41, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              102, 105, 116, 58, 32, 99, 114, 101, 97, 116, 101, 67, 111, 114,
              101, 70, 105, 116, 40, 99, 111, 110, 102, 105, 103, 46, 108, 97,
              121, 111, 117, 116, 46, 102, 105, 116, 44, 32, 109, 111, 100, 117,
              108, 101, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 32,
              58, 32, 109, 111, 100, 117, 108, 101, 46, 99, 114, 101, 97, 116,
              101, 68, 101, 102, 97, 117, 108, 116, 76, 97, 121, 111, 117, 116,
              40, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 101, 118,
              101, 110, 116, 77, 97, 110, 97, 103, 101, 114, 46, 100, 105, 115,
              112, 97, 116, 99, 104, 40, 123, 32, 116, 121, 112, 101, 58, 32,
              34, 114, 101, 97, 100, 121, 34, 32, 125, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 105, 102, 32, 40, 99, 111, 110, 102, 105, 103,
              46, 100, 97, 116, 97, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 116, 104, 105, 115, 46, 95, 108, 111, 97, 100, 70,
              114, 111, 109, 68, 97, 116, 97, 40, 99, 111, 110, 102, 105, 103,
              46, 100, 97, 116, 97, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              125, 32, 101, 108, 115, 101, 32, 105, 102, 32, 40, 99, 111, 110,
              102, 105, 103, 46, 115, 114, 99, 41, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 108, 111, 97,
              100, 70, 114, 111, 109, 83, 114, 99, 40, 99, 111, 110, 102, 105,
              103, 46, 115, 114, 99, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 99,
              111, 110, 102, 105, 103, 46, 98, 97, 99, 107, 103, 114, 111, 117,
              110, 100, 67, 111, 108, 111, 114, 41, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 115, 101, 116, 66,
              97, 99, 107, 103, 114, 111, 117, 110, 100, 67, 111, 108, 111, 114,
              40, 99, 111, 110, 102, 105, 103, 46, 98, 97, 99, 107, 103, 114,
              111, 117, 110, 100, 67, 111, 108, 111, 114, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 125, 41,
              46, 99, 97, 116, 99, 104, 40, 40, 101, 114, 114, 111, 114, 41, 32,
              61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104,
              105, 115, 46, 95, 101, 118, 101, 110, 116, 77, 97, 110, 97, 103,
              101, 114, 46, 100, 105, 115, 112, 97, 116, 99, 104, 40, 123, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 121, 112, 101, 58,
              32, 34, 108, 111, 97, 100, 69, 114, 114, 111, 114, 34, 44, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 101, 114, 114, 111, 114, 58,
              32, 110, 101, 119, 32, 69, 114, 114, 111, 114, 40, 96, 70, 97,
              105, 108, 101, 100, 32, 116, 111, 32, 108, 111, 97, 100, 32, 119,
              97, 115, 109, 32, 109, 111, 100, 117, 108, 101, 58, 32, 36, 123,
              101, 114, 114, 111, 114, 125, 96, 41, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 125, 41, 59, 10, 32, 32, 32, 32, 32, 32, 125, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 112, 111, 105,
              110, 116, 101, 114, 85, 112, 77, 101, 116, 104, 111, 100, 32, 61,
              32, 116, 104, 105, 115, 46, 95, 111, 110, 80, 111, 105, 110, 116,
              101, 114, 85, 112, 46, 98, 105, 110, 100, 40, 116, 104, 105, 115,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95,
              112, 111, 105, 110, 116, 101, 114, 68, 111, 119, 110, 77, 101,
              116, 104, 111, 100, 32, 61, 32, 116, 104, 105, 115, 46, 95, 111,
              110, 80, 111, 105, 110, 116, 101, 114, 68, 111, 119, 110, 46, 98,
              105, 110, 100, 40, 116, 104, 105, 115, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 116, 104, 105, 115, 46, 95, 112, 111, 105, 110, 116, 101,
              114, 77, 111, 118, 101, 77, 101, 116, 104, 111, 100, 32, 61, 32,
              116, 104, 105, 115, 46, 95, 111, 110, 80, 111, 105, 110, 116, 101,
              114, 77, 111, 118, 101, 46, 98, 105, 110, 100, 40, 116, 104, 105,
              115, 41, 59, 10, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46,
              95, 112, 111, 105, 110, 116, 101, 114, 69, 110, 116, 101, 114, 77,
              101, 116, 104, 111, 100, 32, 61, 32, 116, 104, 105, 115, 46, 95,
              111, 110, 80, 111, 105, 110, 116, 101, 114, 69, 110, 116, 101,
              114, 46, 98, 105, 110, 100, 40, 116, 104, 105, 115, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 112, 111, 105,
              110, 116, 101, 114, 69, 120, 105, 116, 77, 101, 116, 104, 111,
              100, 32, 61, 32, 116, 104, 105, 115, 46, 95, 111, 110, 80, 111,
              105, 110, 116, 101, 114, 76, 101, 97, 118, 101, 46, 98, 105, 110,
              100, 40, 116, 104, 105, 115, 41, 59, 10, 32, 32, 32, 32, 125, 10,
              32, 32, 32, 32, 95, 100, 105, 115, 112, 97, 116, 99, 104, 69, 114,
              114, 111, 114, 40, 109, 101, 115, 115, 97, 103, 101, 41, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 111, 108, 101, 46,
              101, 114, 114, 111, 114, 40, 109, 101, 115, 115, 97, 103, 101, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 101,
              118, 101, 110, 116, 77, 97, 110, 97, 103, 101, 114, 46, 100, 105,
              115, 112, 97, 116, 99, 104, 40, 123, 32, 116, 121, 112, 101, 58,
              32, 34, 108, 111, 97, 100, 69, 114, 114, 111, 114, 34, 44, 32,
              101, 114, 114, 111, 114, 58, 32, 110, 101, 119, 32, 69, 114, 114,
              111, 114, 40, 109, 101, 115, 115, 97, 103, 101, 41, 32, 125, 41,
              59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 95, 102, 101,
              116, 99, 104, 68, 97, 116, 97, 40, 115, 114, 99, 41, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 95, 95,
              97, 115, 121, 110, 99, 40, 116, 104, 105, 115, 44, 32, 110, 117,
              108, 108, 44, 32, 102, 117, 110, 99, 116, 105, 111, 110, 42, 32,
              40, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 99, 111, 110,
              115, 116, 32, 114, 101, 115, 112, 111, 110, 115, 101, 32, 61, 32,
              121, 105, 101, 108, 100, 32, 102, 101, 116, 99, 104, 40, 115, 114,
              99, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40,
              33, 114, 101, 115, 112, 111, 110, 115, 101, 46, 111, 107, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 114,
              111, 119, 32, 110, 101, 119, 32, 69, 114, 114, 111, 114, 40, 96,
              70, 97, 105, 108, 101, 100, 32, 116, 111, 32, 102, 101, 116, 99,
              104, 32, 97, 110, 105, 109, 97, 116, 105, 111, 110, 32, 100, 97,
              116, 97, 32, 102, 114, 111, 109, 32, 85, 82, 76, 58, 32, 36, 123,
              115, 114, 99, 125, 46, 32, 36, 123, 114, 101, 115, 112, 111, 110,
              115, 101, 46, 115, 116, 97, 116, 117, 115, 125, 58, 32, 36, 123,
              114, 101, 115, 112, 111, 110, 115, 101, 46, 115, 116, 97, 116,
              117, 115, 84, 101, 120, 116, 125, 96, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 99, 111,
              110, 115, 116, 32, 100, 97, 116, 97, 32, 61, 32, 121, 105, 101,
              108, 100, 32, 114, 101, 115, 112, 111, 110, 115, 101, 46, 97, 114,
              114, 97, 121, 66, 117, 102, 102, 101, 114, 40, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 105, 115, 68, 111, 116,
              76, 111, 116, 116, 105, 101, 40, 100, 97, 116, 97, 41, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116,
              117, 114, 110, 32, 100, 97, 116, 97, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101,
              116, 117, 114, 110, 32, 110, 101, 119, 32, 84, 101, 120, 116, 68,
              101, 99, 111, 100, 101, 114, 40, 41, 46, 100, 101, 99, 111, 100,
              101, 40, 100, 97, 116, 97, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              125, 41, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 95, 108,
              111, 97, 100, 70, 114, 111, 109, 68, 97, 116, 97, 40, 100, 97,
              116, 97, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32,
              40, 116, 104, 105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116,
              105, 101, 67, 111, 114, 101, 32, 61, 61, 61, 32, 110, 117, 108,
              108, 41, 32, 114, 101, 116, 117, 114, 110, 59, 10, 32, 32, 32, 32,
              32, 32, 99, 111, 110, 115, 116, 32, 119, 105, 100, 116, 104, 32,
              61, 32, 116, 104, 105, 115, 46, 95, 99, 97, 110, 118, 97, 115, 46,
              119, 105, 100, 116, 104, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111,
              110, 115, 116, 32, 104, 101, 105, 103, 104, 116, 32, 61, 32, 116,
              104, 105, 115, 46, 95, 99, 97, 110, 118, 97, 115, 46, 104, 101,
              105, 103, 104, 116, 59, 10, 32, 32, 32, 32, 32, 32, 108, 101, 116,
              32, 108, 111, 97, 100, 101, 100, 32, 61, 32, 102, 97, 108, 115,
              101, 59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 116, 121,
              112, 101, 111, 102, 32, 100, 97, 116, 97, 32, 61, 61, 61, 32, 34,
              115, 116, 114, 105, 110, 103, 34, 41, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 105, 102, 32, 40, 33, 105, 115, 76, 111, 116, 116,
              105, 101, 40, 100, 97, 116, 97, 41, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 100, 105,
              115, 112, 97, 116, 99, 104, 69, 114, 114, 111, 114, 40, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 73, 110, 118, 97,
              108, 105, 100, 32, 76, 111, 116, 116, 105, 101, 32, 74, 83, 79,
              78, 32, 115, 116, 114, 105, 110, 103, 58, 32, 84, 104, 101, 32,
              112, 114, 111, 118, 105, 100, 101, 100, 32, 115, 116, 114, 105,
              110, 103, 32, 100, 111, 101, 115, 32, 110, 111, 116, 32, 99, 111,
              110, 102, 111, 114, 109, 32, 116, 111, 32, 116, 104, 101, 32, 76,
              111, 116, 116, 105, 101, 32, 74, 83, 79, 78, 32, 102, 111, 114,
              109, 97, 116, 46, 34, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116,
              117, 114, 110, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 108, 111, 97, 100, 101, 100, 32,
              61, 32, 116, 104, 105, 115, 46, 95, 100, 111, 116, 76, 111, 116,
              116, 105, 101, 67, 111, 114, 101, 46, 108, 111, 97, 100, 65, 110,
              105, 109, 97, 116, 105, 111, 110, 68, 97, 116, 97, 40, 100, 97,
              116, 97, 44, 32, 119, 105, 100, 116, 104, 44, 32, 104, 101, 105,
              103, 104, 116, 41, 59, 10, 32, 32, 32, 32, 32, 32, 125, 32, 101,
              108, 115, 101, 32, 105, 102, 32, 40, 100, 97, 116, 97, 32, 105,
              110, 115, 116, 97, 110, 99, 101, 111, 102, 32, 65, 114, 114, 97,
              121, 66, 117, 102, 102, 101, 114, 41, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 105, 102, 32, 40, 33, 105, 115, 68, 111, 116, 76,
              111, 116, 116, 105, 101, 40, 100, 97, 116, 97, 41, 41, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115,
              46, 95, 100, 105, 115, 112, 97, 116, 99, 104, 69, 114, 114, 111,
              114, 40, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34,
              73, 110, 118, 97, 108, 105, 100, 32, 100, 111, 116, 76, 111, 116,
              116, 105, 101, 32, 65, 114, 114, 97, 121, 66, 117, 102, 102, 101,
              114, 58, 32, 84, 104, 101, 32, 112, 114, 111, 118, 105, 100, 101,
              100, 32, 65, 114, 114, 97, 121, 66, 117, 102, 102, 101, 114, 32,
              100, 111, 101, 115, 32, 110, 111, 116, 32, 99, 111, 110, 102, 111,
              114, 109, 32, 116, 111, 32, 116, 104, 101, 32, 100, 111, 116, 76,
              111, 116, 116, 105, 101, 32, 102, 111, 114, 109, 97, 116, 46, 34,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 108, 111, 97, 100, 101, 100, 32, 61, 32, 116, 104,
              105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67,
              111, 114, 101, 46, 108, 111, 97, 100, 68, 111, 116, 76, 111, 116,
              116, 105, 101, 68, 97, 116, 97, 40, 100, 97, 116, 97, 44, 32, 119,
              105, 100, 116, 104, 44, 32, 104, 101, 105, 103, 104, 116, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 125, 32, 101, 108, 115, 101, 32, 105,
              102, 32, 40, 116, 121, 112, 101, 111, 102, 32, 100, 97, 116, 97,
              32, 61, 61, 61, 32, 34, 111, 98, 106, 101, 99, 116, 34, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33,
              105, 115, 76, 111, 116, 116, 105, 101, 40, 100, 97, 116, 97, 41,
              41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104,
              105, 115, 46, 95, 100, 105, 115, 112, 97, 116, 99, 104, 69, 114,
              114, 111, 114, 40, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 34, 73, 110, 118, 97, 108, 105, 100, 32, 76, 111, 116, 116,
              105, 101, 32, 74, 83, 79, 78, 32, 111, 98, 106, 101, 99, 116, 58,
              32, 84, 104, 101, 32, 112, 114, 111, 118, 105, 100, 101, 100, 32,
              111, 98, 106, 101, 99, 116, 32, 100, 111, 101, 115, 32, 110, 111,
              116, 32, 99, 111, 110, 102, 111, 114, 109, 32, 116, 111, 32, 116,
              104, 101, 32, 76, 111, 116, 116, 105, 101, 32, 74, 83, 79, 78, 32,
              102, 111, 114, 109, 97, 116, 46, 34, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 114, 101, 116, 117, 114, 110, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 108, 111, 97,
              100, 101, 100, 32, 61, 32, 116, 104, 105, 115, 46, 95, 100, 111,
              116, 76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 46, 108, 111,
              97, 100, 65, 110, 105, 109, 97, 116, 105, 111, 110, 68, 97, 116,
              97, 40, 74, 83, 79, 78, 46, 115, 116, 114, 105, 110, 103, 105,
              102, 121, 40, 100, 97, 116, 97, 41, 44, 32, 119, 105, 100, 116,
              104, 44, 32, 104, 101, 105, 103, 104, 116, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 125, 32, 101, 108, 115, 101, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 100, 105, 115,
              112, 97, 116, 99, 104, 69, 114, 114, 111, 114, 40, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 96, 85, 110, 115, 117, 112, 112, 111,
              114, 116, 101, 100, 32, 100, 97, 116, 97, 32, 116, 121, 112, 101,
              32, 102, 111, 114, 32, 97, 110, 105, 109, 97, 116, 105, 111, 110,
              32, 100, 97, 116, 97, 46, 32, 69, 120, 112, 101, 99, 116, 101,
              100, 58, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 45, 32,
              115, 116, 114, 105, 110, 103, 32, 40, 76, 111, 116, 116, 105, 101,
              32, 74, 83, 79, 78, 41, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 45, 32, 65, 114, 114, 97, 121, 66, 117, 102, 102, 101,
              114, 32, 40, 100, 111, 116, 76, 111, 116, 116, 105, 101, 41, 44,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 45, 32, 111, 98, 106,
              101, 99, 116, 32, 40, 76, 111, 116, 116, 105, 101, 32, 74, 83, 79,
              78, 41, 46, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 82,
              101, 99, 101, 105, 118, 101, 100, 58, 32, 36, 123, 116, 121, 112,
              101, 111, 102, 32, 100, 97, 116, 97, 125, 96, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 114,
              101, 116, 117, 114, 110, 59, 10, 32, 32, 32, 32, 32, 32, 125, 10,
              32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 108, 111, 97, 100, 101,
              100, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104,
              105, 115, 46, 95, 101, 118, 101, 110, 116, 77, 97, 110, 97, 103,
              101, 114, 46, 100, 105, 115, 112, 97, 116, 99, 104, 40, 123, 32,
              116, 121, 112, 101, 58, 32, 34, 108, 111, 97, 100, 34, 32, 125,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 73,
              83, 95, 66, 82, 79, 87, 83, 69, 82, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 114, 101, 115,
              105, 122, 101, 40, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46,
              95, 101, 118, 101, 110, 116, 77, 97, 110, 97, 103, 101, 114, 46,
              100, 105, 115, 112, 97, 116, 99, 104, 40, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 116, 121, 112, 101, 58, 32, 34, 102, 114,
              97, 109, 101, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              99, 117, 114, 114, 101, 110, 116, 70, 114, 97, 109, 101, 58, 32,
              116, 104, 105, 115, 46, 99, 117, 114, 114, 101, 110, 116, 70, 114,
              97, 109, 101, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 114,
              101, 110, 100, 101, 114, 40, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 105, 102, 32, 40, 116, 104, 105, 115, 46, 95, 100, 111,
              116, 76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 46, 99, 111,
              110, 102, 105, 103, 40, 41, 46, 97, 117, 116, 111, 112, 108, 97,
              121, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116,
              104, 105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101,
              67, 111, 114, 101, 46, 112, 108, 97, 121, 40, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 116, 104, 105,
              115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67, 111,
              114, 101, 46, 105, 115, 80, 108, 97, 121, 105, 110, 103, 40, 41,
              41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              116, 104, 105, 115, 46, 95, 101, 118, 101, 110, 116, 77, 97, 110,
              97, 103, 101, 114, 46, 100, 105, 115, 112, 97, 116, 99, 104, 40,
              123, 32, 116, 121, 112, 101, 58, 32, 34, 112, 108, 97, 121, 34,
              32, 125, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 116, 104, 105, 115, 46, 95, 97, 110, 105, 109, 97, 116, 105,
              111, 110, 70, 114, 97, 109, 101, 73, 100, 32, 61, 32, 116, 104,
              105, 115, 46, 95, 102, 114, 97, 109, 101, 77, 97, 110, 97, 103,
              101, 114, 46, 114, 101, 113, 117, 101, 115, 116, 65, 110, 105,
              109, 97, 116, 105, 111, 110, 70, 114, 97, 109, 101, 40, 116, 104,
              105, 115, 46, 95, 100, 114, 97, 119, 46, 98, 105, 110, 100, 40,
              116, 104, 105, 115, 41, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 125, 32, 101, 108, 115, 101, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 111, 108,
              101, 46, 101, 114, 114, 111, 114, 40, 34, 115, 111, 109, 101, 116,
              104, 105, 110, 103, 32, 119, 101, 110, 116, 32, 119, 114, 111,
              110, 103, 44, 32, 116, 104, 101, 32, 97, 110, 105, 109, 97, 116,
              105, 111, 110, 32, 119, 97, 115, 32, 115, 117, 112, 112, 111, 115,
              101, 32, 116, 111, 32, 97, 117, 116, 111, 112, 108, 97, 121, 34,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 105, 102, 32, 40, 73, 83, 95, 66, 82, 79, 87, 83, 69, 82, 32,
              38, 38, 32, 116, 104, 105, 115, 46, 95, 99, 97, 110, 118, 97, 115,
              32, 105, 110, 115, 116, 97, 110, 99, 101, 111, 102, 32, 72, 84,
              77, 76, 67, 97, 110, 118, 97, 115, 69, 108, 101, 109, 101, 110,
              116, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105,
              102, 32, 40, 116, 104, 105, 115, 46, 95, 114, 101, 110, 100, 101,
              114, 67, 111, 110, 102, 105, 103, 46, 102, 114, 101, 101, 122,
              101, 79, 110, 79, 102, 102, 115, 99, 114, 101, 101, 110, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 79, 102,
              102, 115, 99, 114, 101, 101, 110, 79, 98, 115, 101, 114, 118, 101,
              114, 46, 111, 98, 115, 101, 114, 118, 101, 40, 116, 104, 105, 115,
              46, 95, 99, 97, 110, 118, 97, 115, 44, 32, 116, 104, 105, 115, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 116, 104, 105,
              115, 46, 95, 114, 101, 110, 100, 101, 114, 67, 111, 110, 102, 105,
              103, 46, 97, 117, 116, 111, 82, 101, 115, 105, 122, 101, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 67, 97,
              110, 118, 97, 115, 82, 101, 115, 105, 122, 101, 79, 98, 115, 101,
              114, 118, 101, 114, 46, 111, 98, 115, 101, 114, 118, 101, 40, 116,
              104, 105, 115, 46, 95, 99, 97, 110, 118, 97, 115, 44, 32, 116,
              104, 105, 115, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32,
              32, 32, 125, 32, 101, 108, 115, 101, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 100, 105, 115, 112,
              97, 116, 99, 104, 69, 114, 114, 111, 114, 40, 34, 70, 97, 105,
              108, 101, 100, 32, 116, 111, 32, 108, 111, 97, 100, 32, 97, 110,
              105, 109, 97, 116, 105, 111, 110, 32, 100, 97, 116, 97, 34, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 125, 10,
              32, 32, 32, 32, 95, 108, 111, 97, 100, 70, 114, 111, 109, 83, 114,
              99, 40, 115, 114, 99, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32,
              116, 104, 105, 115, 46, 95, 102, 101, 116, 99, 104, 68, 97, 116,
              97, 40, 115, 114, 99, 41, 46, 116, 104, 101, 110, 40, 40, 100, 97,
              116, 97, 41, 32, 61, 62, 32, 116, 104, 105, 115, 46, 95, 108, 111,
              97, 100, 70, 114, 111, 109, 68, 97, 116, 97, 40, 100, 97, 116, 97,
              41, 41, 46, 99, 97, 116, 99, 104, 40, 40, 101, 114, 114, 111, 114,
              41, 32, 61, 62, 32, 116, 104, 105, 115, 46, 95, 100, 105, 115,
              112, 97, 116, 99, 104, 69, 114, 114, 111, 114, 40, 96, 70, 97,
              105, 108, 101, 100, 32, 116, 111, 32, 108, 111, 97, 100, 32, 97,
              110, 105, 109, 97, 116, 105, 111, 110, 32, 100, 97, 116, 97, 32,
              102, 114, 111, 109, 32, 85, 82, 76, 58, 32, 36, 123, 115, 114, 99,
              125, 46, 32, 36, 123, 101, 114, 114, 111, 114, 125, 96, 41, 41,
              59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 103, 101, 116,
              32, 97, 99, 116, 105, 118, 101, 65, 110, 105, 109, 97, 116, 105,
              111, 110, 73, 100, 40, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32,
              118, 97, 114, 32, 95, 97, 59, 10, 32, 32, 32, 32, 32, 32, 114,
              101, 116, 117, 114, 110, 32, 40, 95, 97, 32, 61, 32, 116, 104,
              105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67,
              111, 114, 101, 41, 32, 61, 61, 32, 110, 117, 108, 108, 32, 63, 32,
              118, 111, 105, 100, 32, 48, 32, 58, 32, 95, 97, 46, 97, 99, 116,
              105, 118, 101, 65, 110, 105, 109, 97, 116, 105, 111, 110, 73, 100,
              40, 41, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 103, 101,
              116, 32, 97, 99, 116, 105, 118, 101, 84, 104, 101, 109, 101, 73,
              100, 40, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 118, 97, 114,
              32, 95, 97, 59, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117,
              114, 110, 32, 40, 95, 97, 32, 61, 32, 116, 104, 105, 115, 46, 95,
              100, 111, 116, 76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 41,
              32, 61, 61, 32, 110, 117, 108, 108, 32, 63, 32, 118, 111, 105,
              100, 32, 48, 32, 58, 32, 95, 97, 46, 97, 99, 116, 105, 118, 101,
              84, 104, 101, 109, 101, 73, 100, 40, 41, 59, 10, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 103, 101, 116, 32, 108, 97, 121, 111,
              117, 116, 40, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 118, 97,
              114, 32, 95, 97, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110,
              115, 116, 32, 108, 97, 121, 111, 117, 116, 32, 61, 32, 40, 95, 97,
              32, 61, 32, 116, 104, 105, 115, 46, 95, 100, 111, 116, 76, 111,
              116, 116, 105, 101, 67, 111, 114, 101, 41, 32, 61, 61, 32, 110,
              117, 108, 108, 32, 63, 32, 118, 111, 105, 100, 32, 48, 32, 58, 32,
              95, 97, 46, 99, 111, 110, 102, 105, 103, 40, 41, 46, 108, 97, 121,
              111, 117, 116, 59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40,
              108, 97, 121, 111, 117, 116, 41, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 97, 108, 105, 103, 110, 58, 32, 91,
              108, 97, 121, 111, 117, 116, 46, 97, 108, 105, 103, 110, 46, 103,
              101, 116, 40, 48, 41, 44, 32, 108, 97, 121, 111, 117, 116, 46, 97,
              108, 105, 103, 110, 46, 103, 101, 116, 40, 49, 41, 93, 44, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 102, 105, 116, 58, 32, 40, 40,
              41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 118, 97, 114, 32, 95, 97, 50, 44, 32, 95, 98, 44, 32,
              95, 99, 44, 32, 95, 100, 44, 32, 95, 101, 44, 32, 95, 102, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 115, 119, 105,
              116, 99, 104, 32, 40, 108, 97, 121, 111, 117, 116, 46, 102, 105,
              116, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 99, 97, 115, 101, 32, 40, 40, 95, 97, 50, 32, 61, 32,
              95, 68, 111, 116, 76, 111, 116, 116, 105, 101, 46, 95, 119, 97,
              115, 109, 77, 111, 100, 117, 108, 101, 41, 32, 61, 61, 32, 110,
              117, 108, 108, 32, 63, 32, 118, 111, 105, 100, 32, 48, 32, 58, 32,
              95, 97, 50, 46, 70, 105, 116, 46, 67, 111, 110, 116, 97, 105, 110,
              41, 58, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 34, 99, 111, 110,
              116, 97, 105, 110, 34, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 99, 97, 115, 101, 32, 40, 40, 95, 98, 32, 61,
              32, 95, 68, 111, 116, 76, 111, 116, 116, 105, 101, 46, 95, 119,
              97, 115, 109, 77, 111, 100, 117, 108, 101, 41, 32, 61, 61, 32,
              110, 117, 108, 108, 32, 63, 32, 118, 111, 105, 100, 32, 48, 32,
              58, 32, 95, 98, 46, 70, 105, 116, 46, 67, 111, 118, 101, 114, 41,
              58, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 114, 101, 116, 117, 114, 110, 32, 34, 99, 111, 118, 101,
              114, 34, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 99, 97, 115, 101, 32, 40, 40, 95, 99, 32, 61, 32, 95, 68,
              111, 116, 76, 111, 116, 116, 105, 101, 46, 95, 119, 97, 115, 109,
              77, 111, 100, 117, 108, 101, 41, 32, 61, 61, 32, 110, 117, 108,
              108, 32, 63, 32, 118, 111, 105, 100, 32, 48, 32, 58, 32, 95, 99,
              46, 70, 105, 116, 46, 70, 105, 108, 108, 41, 58, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116,
              117, 114, 110, 32, 34, 102, 105, 108, 108, 34, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 99, 97, 115, 101, 32,
              40, 40, 95, 100, 32, 61, 32, 95, 68, 111, 116, 76, 111, 116, 116,
              105, 101, 46, 95, 119, 97, 115, 109, 77, 111, 100, 117, 108, 101,
              41, 32, 61, 61, 32, 110, 117, 108, 108, 32, 63, 32, 118, 111, 105,
              100, 32, 48, 32, 58, 32, 95, 100, 46, 70, 105, 116, 46, 70, 105,
              116, 72, 101, 105, 103, 104, 116, 41, 58, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117,
              114, 110, 32, 34, 102, 105, 116, 45, 104, 101, 105, 103, 104, 116,
              34, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 99, 97, 115, 101, 32, 40, 40, 95, 101, 32, 61, 32, 95, 68,
              111, 116, 76, 111, 116, 116, 105, 101, 46, 95, 119, 97, 115, 109,
              77, 111, 100, 117, 108, 101, 41, 32, 61, 61, 32, 110, 117, 108,
              108, 32, 63, 32, 118, 111, 105, 100, 32, 48, 32, 58, 32, 95, 101,
              46, 70, 105, 116, 46, 70, 105, 116, 87, 105, 100, 116, 104, 41,
              58, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 114, 101, 116, 117, 114, 110, 32, 34, 102, 105, 116, 45,
              119, 105, 100, 116, 104, 34, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 99, 97, 115, 101, 32, 40, 40, 95, 102,
              32, 61, 32, 95, 68, 111, 116, 76, 111, 116, 116, 105, 101, 46, 95,
              119, 97, 115, 109, 77, 111, 100, 117, 108, 101, 41, 32, 61, 61,
              32, 110, 117, 108, 108, 32, 63, 32, 118, 111, 105, 100, 32, 48,
              32, 58, 32, 95, 102, 46, 70, 105, 116, 46, 78, 111, 110, 101, 41,
              58, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 114, 101, 116, 117, 114, 110, 32, 34, 110, 111, 110, 101,
              34, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 100, 101, 102, 97, 117, 108, 116, 58, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117,
              114, 110, 32, 34, 99, 111, 110, 116, 97, 105, 110, 34, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 125, 41, 40, 41, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 125, 59, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32,
              32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 118, 111,
              105, 100, 32, 48, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32,
              103, 101, 116, 32, 109, 97, 114, 107, 101, 114, 40, 41, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 95, 97, 59, 10, 32,
              32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 109, 97, 114, 107,
              101, 114, 32, 61, 32, 40, 95, 97, 32, 61, 32, 116, 104, 105, 115,
              46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67, 111, 114,
              101, 41, 32, 61, 61, 32, 110, 117, 108, 108, 32, 63, 32, 118, 111,
              105, 100, 32, 48, 32, 58, 32, 95, 97, 46, 99, 111, 110, 102, 105,
              103, 40, 41, 46, 109, 97, 114, 107, 101, 114, 59, 10, 32, 32, 32,
              32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 109, 97, 114, 107,
              101, 114, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 103,
              101, 116, 32, 109, 97, 110, 105, 102, 101, 115, 116, 40, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 95, 97, 59, 10,
              32, 32, 32, 32, 32, 32, 116, 114, 121, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 109, 97, 110, 105,
              102, 101, 115, 116, 32, 61, 32, 40, 95, 97, 32, 61, 32, 116, 104,
              105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67,
              111, 114, 101, 41, 32, 61, 61, 32, 110, 117, 108, 108, 32, 63, 32,
              118, 111, 105, 100, 32, 48, 32, 58, 32, 95, 97, 46, 109, 97, 110,
              105, 102, 101, 115, 116, 83, 116, 114, 105, 110, 103, 40, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 116, 104,
              105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67,
              111, 114, 101, 32, 61, 61, 61, 32, 110, 117, 108, 108, 32, 124,
              124, 32, 33, 109, 97, 110, 105, 102, 101, 115, 116, 41, 32, 114,
              101, 116, 117, 114, 110, 32, 110, 117, 108, 108, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 109, 97, 110,
              105, 102, 101, 115, 116, 74, 115, 111, 110, 32, 61, 32, 74, 83,
              79, 78, 46, 112, 97, 114, 115, 101, 40, 109, 97, 110, 105, 102,
              101, 115, 116, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105,
              102, 32, 40, 79, 98, 106, 101, 99, 116, 46, 107, 101, 121, 115,
              40, 109, 97, 110, 105, 102, 101, 115, 116, 74, 115, 111, 110, 41,
              46, 108, 101, 110, 103, 116, 104, 32, 61, 61, 61, 32, 48, 41, 32,
              114, 101, 116, 117, 114, 110, 32, 110, 117, 108, 108, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 109,
              97, 110, 105, 102, 101, 115, 116, 74, 115, 111, 110, 59, 10, 32,
              32, 32, 32, 32, 32, 125, 32, 99, 97, 116, 99, 104, 32, 40, 95,
              101, 114, 114, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              114, 101, 116, 117, 114, 110, 32, 110, 117, 108, 108, 59, 10, 32,
              32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32,
              32, 103, 101, 116, 32, 114, 101, 110, 100, 101, 114, 67, 111, 110,
              102, 105, 103, 40, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 114,
              101, 116, 117, 114, 110, 32, 116, 104, 105, 115, 46, 95, 114, 101,
              110, 100, 101, 114, 67, 111, 110, 102, 105, 103, 59, 10, 32, 32,
              32, 32, 125, 10, 32, 32, 32, 32, 103, 101, 116, 32, 115, 101, 103,
              109, 101, 110, 116, 40, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32,
              118, 97, 114, 32, 95, 97, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111,
              110, 115, 116, 32, 115, 101, 103, 109, 101, 110, 116, 32, 61, 32,
              40, 95, 97, 32, 61, 32, 116, 104, 105, 115, 46, 95, 100, 111, 116,
              76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 41, 32, 61, 61,
              32, 110, 117, 108, 108, 32, 63, 32, 118, 111, 105, 100, 32, 48,
              32, 58, 32, 95, 97, 46, 99, 111, 110, 102, 105, 103, 40, 41, 46,
              115, 101, 103, 109, 101, 110, 116, 59, 10, 32, 32, 32, 32, 32, 32,
              105, 102, 32, 40, 115, 101, 103, 109, 101, 110, 116, 32, 38, 38,
              32, 115, 101, 103, 109, 101, 110, 116, 46, 115, 105, 122, 101, 40,
              41, 32, 61, 61, 61, 32, 50, 41, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 91, 115, 101, 103,
              109, 101, 110, 116, 46, 103, 101, 116, 40, 48, 41, 44, 32, 115,
              101, 103, 109, 101, 110, 116, 46, 103, 101, 116, 40, 49, 41, 93,
              59, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32,
              114, 101, 116, 117, 114, 110, 32, 118, 111, 105, 100, 32, 48, 59,
              10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 103, 101, 116, 32,
              108, 111, 111, 112, 40, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32,
              118, 97, 114, 32, 95, 97, 44, 32, 95, 98, 59, 10, 32, 32, 32, 32,
              32, 32, 114, 101, 116, 117, 114, 110, 32, 40, 95, 98, 32, 61, 32,
              40, 95, 97, 32, 61, 32, 116, 104, 105, 115, 46, 95, 100, 111, 116,
              76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 41, 32, 61, 61,
              32, 110, 117, 108, 108, 32, 63, 32, 118, 111, 105, 100, 32, 48,
              32, 58, 32, 95, 97, 46, 99, 111, 110, 102, 105, 103, 40, 41, 46,
              108, 111, 111, 112, 65, 110, 105, 109, 97, 116, 105, 111, 110, 41,
              32, 33, 61, 32, 110, 117, 108, 108, 32, 63, 32, 95, 98, 32, 58,
              32, 102, 97, 108, 115, 101, 59, 10, 32, 32, 32, 32, 125, 10, 32,
              32, 32, 32, 103, 101, 116, 32, 109, 111, 100, 101, 40, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 95, 97, 44, 32,
              95, 98, 44, 32, 95, 99, 44, 32, 95, 100, 59, 10, 32, 32, 32, 32,
              32, 32, 99, 111, 110, 115, 116, 32, 109, 111, 100, 101, 32, 61,
              32, 40, 95, 97, 32, 61, 32, 116, 104, 105, 115, 46, 95, 100, 111,
              116, 76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 41, 32, 61,
              61, 32, 110, 117, 108, 108, 32, 63, 32, 118, 111, 105, 100, 32,
              48, 32, 58, 32, 95, 97, 46, 99, 111, 110, 102, 105, 103, 40, 41,
              46, 109, 111, 100, 101, 59, 10, 32, 32, 32, 32, 32, 32, 105, 102,
              32, 40, 109, 111, 100, 101, 32, 61, 61, 61, 32, 40, 40, 95, 98,
              32, 61, 32, 95, 68, 111, 116, 76, 111, 116, 116, 105, 101, 46, 95,
              119, 97, 115, 109, 77, 111, 100, 117, 108, 101, 41, 32, 61, 61,
              32, 110, 117, 108, 108, 32, 63, 32, 118, 111, 105, 100, 32, 48,
              32, 58, 32, 95, 98, 46, 77, 111, 100, 101, 46, 82, 101, 118, 101,
              114, 115, 101, 41, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 114, 101, 116, 117, 114, 110, 32, 34, 114, 101, 118, 101, 114,
              115, 101, 34, 59, 10, 32, 32, 32, 32, 32, 32, 125, 32, 101, 108,
              115, 101, 32, 105, 102, 32, 40, 109, 111, 100, 101, 32, 61, 61,
              61, 32, 40, 40, 95, 99, 32, 61, 32, 95, 68, 111, 116, 76, 111,
              116, 116, 105, 101, 46, 95, 119, 97, 115, 109, 77, 111, 100, 117,
              108, 101, 41, 32, 61, 61, 32, 110, 117, 108, 108, 32, 63, 32, 118,
              111, 105, 100, 32, 48, 32, 58, 32, 95, 99, 46, 77, 111, 100, 101,
              46, 66, 111, 117, 110, 99, 101, 41, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 34, 98, 111,
              117, 110, 99, 101, 34, 59, 10, 32, 32, 32, 32, 32, 32, 125, 32,
              101, 108, 115, 101, 32, 105, 102, 32, 40, 109, 111, 100, 101, 32,
              61, 61, 61, 32, 40, 40, 95, 100, 32, 61, 32, 95, 68, 111, 116, 76,
              111, 116, 116, 105, 101, 46, 95, 119, 97, 115, 109, 77, 111, 100,
              117, 108, 101, 41, 32, 61, 61, 32, 110, 117, 108, 108, 32, 63, 32,
              118, 111, 105, 100, 32, 48, 32, 58, 32, 95, 100, 46, 77, 111, 100,
              101, 46, 82, 101, 118, 101, 114, 115, 101, 66, 111, 117, 110, 99,
              101, 41, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 114,
              101, 116, 117, 114, 110, 32, 34, 114, 101, 118, 101, 114, 115,
              101, 45, 98, 111, 117, 110, 99, 101, 34, 59, 10, 32, 32, 32, 32,
              32, 32, 125, 32, 101, 108, 115, 101, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 34, 102, 111,
              114, 119, 97, 114, 100, 34, 59, 10, 32, 32, 32, 32, 32, 32, 125,
              10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 103, 101, 116, 32,
              105, 115, 70, 114, 111, 122, 101, 110, 40, 41, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 116, 104,
              105, 115, 46, 95, 105, 115, 70, 114, 111, 122, 101, 110, 59, 10,
              32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 103, 101, 116, 32, 98,
              97, 99, 107, 103, 114, 111, 117, 110, 100, 67, 111, 108, 111, 114,
              40, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 95,
              97, 59, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110,
              32, 40, 95, 97, 32, 61, 32, 116, 104, 105, 115, 46, 95, 98, 97,
              99, 107, 103, 114, 111, 117, 110, 100, 67, 111, 108, 111, 114, 41,
              32, 33, 61, 32, 110, 117, 108, 108, 32, 63, 32, 95, 97, 32, 58,
              32, 34, 34, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 103,
              101, 116, 32, 97, 117, 116, 111, 112, 108, 97, 121, 40, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 95, 97, 44, 32,
              95, 98, 59, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114,
              110, 32, 40, 95, 98, 32, 61, 32, 40, 95, 97, 32, 61, 32, 116, 104,
              105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67,
              111, 114, 101, 41, 32, 61, 61, 32, 110, 117, 108, 108, 32, 63, 32,
              118, 111, 105, 100, 32, 48, 32, 58, 32, 95, 97, 46, 99, 111, 110,
              102, 105, 103, 40, 41, 46, 97, 117, 116, 111, 112, 108, 97, 121,
              41, 32, 33, 61, 32, 110, 117, 108, 108, 32, 63, 32, 95, 98, 32,
              58, 32, 102, 97, 108, 115, 101, 59, 10, 32, 32, 32, 32, 125, 10,
              32, 32, 32, 32, 103, 101, 116, 32, 117, 115, 101, 70, 114, 97,
              109, 101, 73, 110, 116, 101, 114, 112, 111, 108, 97, 116, 105,
              111, 110, 40, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 118, 97,
              114, 32, 95, 97, 44, 32, 95, 98, 59, 10, 32, 32, 32, 32, 32, 32,
              114, 101, 116, 117, 114, 110, 32, 40, 95, 98, 32, 61, 32, 40, 95,
              97, 32, 61, 32, 116, 104, 105, 115, 46, 95, 100, 111, 116, 76,
              111, 116, 116, 105, 101, 67, 111, 114, 101, 41, 32, 61, 61, 32,
              110, 117, 108, 108, 32, 63, 32, 118, 111, 105, 100, 32, 48, 32,
              58, 32, 95, 97, 46, 99, 111, 110, 102, 105, 103, 40, 41, 46, 117,
              115, 101, 70, 114, 97, 109, 101, 73, 110, 116, 101, 114, 112, 111,
              108, 97, 116, 105, 111, 110, 41, 32, 33, 61, 32, 110, 117, 108,
              108, 32, 63, 32, 95, 98, 32, 58, 32, 102, 97, 108, 115, 101, 59,
              10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 103, 101, 116, 32,
              115, 112, 101, 101, 100, 40, 41, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 118, 97, 114, 32, 95, 97, 44, 32, 95, 98, 59, 10, 32, 32, 32,
              32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 40, 95, 98, 32, 61,
              32, 40, 95, 97, 32, 61, 32, 116, 104, 105, 115, 46, 95, 100, 111,
              116, 76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 41, 32, 61,
              61, 32, 110, 117, 108, 108, 32, 63, 32, 118, 111, 105, 100, 32,
              48, 32, 58, 32, 95, 97, 46, 99, 111, 110, 102, 105, 103, 40, 41,
              46, 115, 112, 101, 101, 100, 41, 32, 33, 61, 32, 110, 117, 108,
              108, 32, 63, 32, 95, 98, 32, 58, 32, 48, 59, 10, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 103, 101, 116, 32, 105, 115, 82, 101, 97,
              100, 121, 40, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 114, 101,
              116, 117, 114, 110, 32, 116, 104, 105, 115, 46, 95, 100, 111, 116,
              76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 32, 33, 61, 61,
              32, 110, 117, 108, 108, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32,
              32, 32, 103, 101, 116, 32, 105, 115, 76, 111, 97, 100, 101, 100,
              40, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 95,
              97, 44, 32, 95, 98, 59, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116,
              117, 114, 110, 32, 40, 95, 98, 32, 61, 32, 40, 95, 97, 32, 61, 32,
              116, 104, 105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105,
              101, 67, 111, 114, 101, 41, 32, 61, 61, 32, 110, 117, 108, 108,
              32, 63, 32, 118, 111, 105, 100, 32, 48, 32, 58, 32, 95, 97, 46,
              105, 115, 76, 111, 97, 100, 101, 100, 40, 41, 41, 32, 33, 61, 32,
              110, 117, 108, 108, 32, 63, 32, 95, 98, 32, 58, 32, 102, 97, 108,
              115, 101, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 103,
              101, 116, 32, 105, 115, 80, 108, 97, 121, 105, 110, 103, 40, 41,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 95, 97, 44,
              32, 95, 98, 59, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117,
              114, 110, 32, 40, 95, 98, 32, 61, 32, 40, 95, 97, 32, 61, 32, 116,
              104, 105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101,
              67, 111, 114, 101, 41, 32, 61, 61, 32, 110, 117, 108, 108, 32, 63,
              32, 118, 111, 105, 100, 32, 48, 32, 58, 32, 95, 97, 46, 105, 115,
              80, 108, 97, 121, 105, 110, 103, 40, 41, 41, 32, 33, 61, 32, 110,
              117, 108, 108, 32, 63, 32, 95, 98, 32, 58, 32, 102, 97, 108, 115,
              101, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 103, 101,
              116, 32, 105, 115, 80, 97, 117, 115, 101, 100, 40, 41, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 95, 97, 44, 32, 95,
              98, 59, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110,
              32, 40, 95, 98, 32, 61, 32, 40, 95, 97, 32, 61, 32, 116, 104, 105,
              115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67, 111,
              114, 101, 41, 32, 61, 61, 32, 110, 117, 108, 108, 32, 63, 32, 118,
              111, 105, 100, 32, 48, 32, 58, 32, 95, 97, 46, 105, 115, 80, 97,
              117, 115, 101, 100, 40, 41, 41, 32, 33, 61, 32, 110, 117, 108,
              108, 32, 63, 32, 95, 98, 32, 58, 32, 102, 97, 108, 115, 101, 59,
              10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 103, 101, 116, 32,
              105, 115, 83, 116, 111, 112, 112, 101, 100, 40, 41, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 95, 97, 44, 32, 95, 98,
              59, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32,
              40, 95, 98, 32, 61, 32, 40, 95, 97, 32, 61, 32, 116, 104, 105,
              115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67, 111,
              114, 101, 41, 32, 61, 61, 32, 110, 117, 108, 108, 32, 63, 32, 118,
              111, 105, 100, 32, 48, 32, 58, 32, 95, 97, 46, 105, 115, 83, 116,
              111, 112, 112, 101, 100, 40, 41, 41, 32, 33, 61, 32, 110, 117,
              108, 108, 32, 63, 32, 95, 98, 32, 58, 32, 102, 97, 108, 115, 101,
              59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 103, 101, 116,
              32, 99, 117, 114, 114, 101, 110, 116, 70, 114, 97, 109, 101, 40,
              41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33,
              116, 104, 105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105,
              101, 67, 111, 114, 101, 41, 32, 114, 101, 116, 117, 114, 110, 32,
              48, 59, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110,
              32, 77, 97, 116, 104, 46, 114, 111, 117, 110, 100, 40, 116, 104,
              105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67,
              111, 114, 101, 46, 99, 117, 114, 114, 101, 110, 116, 70, 114, 97,
              109, 101, 40, 41, 32, 42, 32, 49, 48, 48, 41, 32, 47, 32, 49, 48,
              48, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 103, 101,
              116, 32, 108, 111, 111, 112, 67, 111, 117, 110, 116, 40, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 95, 97, 44, 32,
              95, 98, 59, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114,
              110, 32, 40, 95, 98, 32, 61, 32, 40, 95, 97, 32, 61, 32, 116, 104,
              105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67,
              111, 114, 101, 41, 32, 61, 61, 32, 110, 117, 108, 108, 32, 63, 32,
              118, 111, 105, 100, 32, 48, 32, 58, 32, 95, 97, 46, 108, 111, 111,
              112, 67, 111, 117, 110, 116, 40, 41, 41, 32, 33, 61, 32, 110, 117,
              108, 108, 32, 63, 32, 95, 98, 32, 58, 32, 48, 59, 10, 32, 32, 32,
              32, 125, 10, 32, 32, 32, 32, 103, 101, 116, 32, 116, 111, 116, 97,
              108, 70, 114, 97, 109, 101, 115, 40, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 118, 97, 114, 32, 95, 97, 44, 32, 95, 98, 59, 10, 32,
              32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 40, 95, 98,
              32, 61, 32, 40, 95, 97, 32, 61, 32, 116, 104, 105, 115, 46, 95,
              100, 111, 116, 76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 41,
              32, 61, 61, 32, 110, 117, 108, 108, 32, 63, 32, 118, 111, 105,
              100, 32, 48, 32, 58, 32, 95, 97, 46, 116, 111, 116, 97, 108, 70,
              114, 97, 109, 101, 115, 40, 41, 41, 32, 33, 61, 32, 110, 117, 108,
              108, 32, 63, 32, 95, 98, 32, 58, 32, 48, 59, 10, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 103, 101, 116, 32, 100, 117, 114, 97,
              116, 105, 111, 110, 40, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32,
              118, 97, 114, 32, 95, 97, 44, 32, 95, 98, 59, 10, 32, 32, 32, 32,
              32, 32, 114, 101, 116, 117, 114, 110, 32, 40, 95, 98, 32, 61, 32,
              40, 95, 97, 32, 61, 32, 116, 104, 105, 115, 46, 95, 100, 111, 116,
              76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 41, 32, 61, 61,
              32, 110, 117, 108, 108, 32, 63, 32, 118, 111, 105, 100, 32, 48,
              32, 58, 32, 95, 97, 46, 100, 117, 114, 97, 116, 105, 111, 110, 40,
              41, 41, 32, 33, 61, 32, 110, 117, 108, 108, 32, 63, 32, 95, 98,
              32, 58, 32, 48, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32,
              103, 101, 116, 32, 115, 101, 103, 109, 101, 110, 116, 68, 117,
              114, 97, 116, 105, 111, 110, 40, 41, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 118, 97, 114, 32, 95, 97, 44, 32, 95, 98, 59, 10, 32, 32,
              32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 40, 95, 98, 32,
              61, 32, 40, 95, 97, 32, 61, 32, 116, 104, 105, 115, 46, 95, 100,
              111, 116, 76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 41, 32,
              61, 61, 32, 110, 117, 108, 108, 32, 63, 32, 118, 111, 105, 100,
              32, 48, 32, 58, 32, 95, 97, 46, 115, 101, 103, 109, 101, 110, 116,
              68, 117, 114, 97, 116, 105, 111, 110, 40, 41, 41, 32, 33, 61, 32,
              110, 117, 108, 108, 32, 63, 32, 95, 98, 32, 58, 32, 48, 59, 10,
              32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 103, 101, 116, 32, 99,
              97, 110, 118, 97, 115, 40, 41, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 114, 101, 116, 117, 114, 110, 32, 116, 104, 105, 115, 46, 95,
              99, 97, 110, 118, 97, 115, 59, 10, 32, 32, 32, 32, 125, 10, 32,
              32, 32, 32, 108, 111, 97, 100, 40, 99, 111, 110, 102, 105, 103,
              41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 95, 97,
              44, 32, 95, 98, 44, 32, 95, 99, 44, 32, 95, 100, 44, 32, 95, 101,
              44, 32, 95, 102, 44, 32, 95, 103, 44, 32, 95, 104, 44, 32, 95,
              105, 59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 116, 104,
              105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67,
              111, 114, 101, 32, 61, 61, 61, 32, 110, 117, 108, 108, 32, 124,
              124, 32, 95, 68, 111, 116, 76, 111, 116, 116, 105, 101, 46, 95,
              119, 97, 115, 109, 77, 111, 100, 117, 108, 101, 32, 61, 61, 61,
              32, 110, 117, 108, 108, 41, 32, 114, 101, 116, 117, 114, 110, 59,
              10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 116, 104, 105, 115,
              46, 95, 97, 110, 105, 109, 97, 116, 105, 111, 110, 70, 114, 97,
              109, 101, 73, 100, 32, 33, 61, 61, 32, 110, 117, 108, 108, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46,
              95, 102, 114, 97, 109, 101, 77, 97, 110, 97, 103, 101, 114, 46,
              99, 97, 110, 99, 101, 108, 65, 110, 105, 109, 97, 116, 105, 111,
              110, 70, 114, 97, 109, 101, 40, 116, 104, 105, 115, 46, 95, 97,
              110, 105, 109, 97, 116, 105, 111, 110, 70, 114, 97, 109, 101, 73,
              100, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105,
              115, 46, 95, 97, 110, 105, 109, 97, 116, 105, 111, 110, 70, 114,
              97, 109, 101, 73, 100, 32, 61, 32, 110, 117, 108, 108, 59, 10, 32,
              32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 116, 104,
              105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67,
              111, 114, 101, 46, 115, 101, 116, 67, 111, 110, 102, 105, 103, 40,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 101, 109, 101,
              73, 100, 58, 32, 40, 95, 97, 32, 61, 32, 99, 111, 110, 102, 105,
              103, 46, 116, 104, 101, 109, 101, 73, 100, 41, 32, 33, 61, 32,
              110, 117, 108, 108, 32, 63, 32, 95, 97, 32, 58, 32, 34, 34, 44,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 97, 117, 116, 111, 112, 108,
              97, 121, 58, 32, 40, 95, 98, 32, 61, 32, 99, 111, 110, 102, 105,
              103, 46, 97, 117, 116, 111, 112, 108, 97, 121, 41, 32, 33, 61, 32,
              110, 117, 108, 108, 32, 63, 32, 95, 98, 32, 58, 32, 102, 97, 108,
              115, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 98, 97, 99, 107,
              103, 114, 111, 117, 110, 100, 67, 111, 108, 111, 114, 58, 32, 48,
              44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 108, 111, 111, 112, 65,
              110, 105, 109, 97, 116, 105, 111, 110, 58, 32, 40, 95, 99, 32, 61,
              32, 99, 111, 110, 102, 105, 103, 46, 108, 111, 111, 112, 41, 32,
              33, 61, 32, 110, 117, 108, 108, 32, 63, 32, 95, 99, 32, 58, 32,
              102, 97, 108, 115, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              109, 111, 100, 101, 58, 32, 99, 114, 101, 97, 116, 101, 67, 111,
              114, 101, 77, 111, 100, 101, 40, 40, 95, 100, 32, 61, 32, 99, 111,
              110, 102, 105, 103, 46, 109, 111, 100, 101, 41, 32, 33, 61, 32,
              110, 117, 108, 108, 32, 63, 32, 95, 100, 32, 58, 32, 34, 102, 111,
              114, 119, 97, 114, 100, 34, 44, 32, 95, 68, 111, 116, 76, 111,
              116, 116, 105, 101, 46, 95, 119, 97, 115, 109, 77, 111, 100, 117,
              108, 101, 41, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 115, 101,
              103, 109, 101, 110, 116, 58, 32, 99, 114, 101, 97, 116, 101, 67,
              111, 114, 101, 83, 101, 103, 109, 101, 110, 116, 40, 40, 95, 101,
              32, 61, 32, 99, 111, 110, 102, 105, 103, 46, 115, 101, 103, 109,
              101, 110, 116, 41, 32, 33, 61, 32, 110, 117, 108, 108, 32, 63, 32,
              95, 101, 32, 58, 32, 91, 93, 44, 32, 95, 68, 111, 116, 76, 111,
              116, 116, 105, 101, 46, 95, 119, 97, 115, 109, 77, 111, 100, 117,
              108, 101, 41, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 115, 112,
              101, 101, 100, 58, 32, 40, 95, 102, 32, 61, 32, 99, 111, 110, 102,
              105, 103, 46, 115, 112, 101, 101, 100, 41, 32, 33, 61, 32, 110,
              117, 108, 108, 32, 63, 32, 95, 102, 32, 58, 32, 49, 44, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 117, 115, 101, 70, 114, 97, 109, 101,
              73, 110, 116, 101, 114, 112, 111, 108, 97, 116, 105, 111, 110, 58,
              32, 40, 95, 103, 32, 61, 32, 99, 111, 110, 102, 105, 103, 46, 117,
              115, 101, 70, 114, 97, 109, 101, 73, 110, 116, 101, 114, 112, 111,
              108, 97, 116, 105, 111, 110, 41, 32, 33, 61, 32, 110, 117, 108,
              108, 32, 63, 32, 95, 103, 32, 58, 32, 116, 114, 117, 101, 44, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 109, 97, 114, 107, 101, 114, 58,
              32, 40, 95, 104, 32, 61, 32, 99, 111, 110, 102, 105, 103, 46, 109,
              97, 114, 107, 101, 114, 41, 32, 33, 61, 32, 110, 117, 108, 108,
              32, 63, 32, 95, 104, 32, 58, 32, 34, 34, 44, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 108, 97, 121, 111, 117, 116, 58, 32, 99, 111, 110,
              102, 105, 103, 46, 108, 97, 121, 111, 117, 116, 32, 63, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 97, 108, 105, 103,
              110, 58, 32, 99, 114, 101, 97, 116, 101, 67, 111, 114, 101, 65,
              108, 105, 103, 110, 40, 99, 111, 110, 102, 105, 103, 46, 108, 97,
              121, 111, 117, 116, 46, 97, 108, 105, 103, 110, 44, 32, 95, 68,
              111, 116, 76, 111, 116, 116, 105, 101, 46, 95, 119, 97, 115, 109,
              77, 111, 100, 117, 108, 101, 41, 44, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 102, 105, 116, 58, 32, 99, 114, 101, 97, 116, 101,
              67, 111, 114, 101, 70, 105, 116, 40, 99, 111, 110, 102, 105, 103,
              46, 108, 97, 121, 111, 117, 116, 46, 102, 105, 116, 44, 32, 95,
              68, 111, 116, 76, 111, 116, 116, 105, 101, 46, 95, 119, 97, 115,
              109, 77, 111, 100, 117, 108, 101, 41, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 125, 32, 58, 32, 95, 68, 111, 116, 76, 111, 116, 116, 105,
              101, 46, 95, 119, 97, 115, 109, 77, 111, 100, 117, 108, 101, 46,
              99, 114, 101, 97, 116, 101, 68, 101, 102, 97, 117, 108, 116, 76,
              97, 121, 111, 117, 116, 40, 41, 10, 32, 32, 32, 32, 32, 32, 125,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 99, 111,
              110, 102, 105, 103, 46, 100, 97, 116, 97, 41, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 108, 111, 97,
              100, 70, 114, 111, 109, 68, 97, 116, 97, 40, 99, 111, 110, 102,
              105, 103, 46, 100, 97, 116, 97, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 125, 32, 101, 108, 115, 101, 32, 105, 102, 32, 40, 99, 111,
              110, 102, 105, 103, 46, 115, 114, 99, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 108, 111, 97, 100,
              70, 114, 111, 109, 83, 114, 99, 40, 99, 111, 110, 102, 105, 103,
              46, 115, 114, 99, 41, 59, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32,
              32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 115, 101, 116, 66, 97,
              99, 107, 103, 114, 111, 117, 110, 100, 67, 111, 108, 111, 114, 40,
              40, 95, 105, 32, 61, 32, 99, 111, 110, 102, 105, 103, 46, 98, 97,
              99, 107, 103, 114, 111, 117, 110, 100, 67, 111, 108, 111, 114, 41,
              32, 33, 61, 32, 110, 117, 108, 108, 32, 63, 32, 95, 105, 32, 58,
              32, 34, 34, 41, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32,
              95, 114, 101, 110, 100, 101, 114, 40, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 105, 102, 32, 40, 116, 104, 105, 115, 46, 95, 100,
              111, 116, 76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 32, 61,
              61, 61, 32, 110, 117, 108, 108, 32, 124, 124, 32, 116, 104, 105,
              115, 46, 95, 99, 111, 110, 116, 101, 120, 116, 32, 61, 61, 61, 32,
              110, 117, 108, 108, 41, 32, 114, 101, 116, 117, 114, 110, 32, 102,
              97, 108, 115, 101, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110,
              115, 116, 32, 114, 101, 110, 100, 101, 114, 101, 100, 32, 61, 32,
              116, 104, 105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105,
              101, 67, 111, 114, 101, 46, 114, 101, 110, 100, 101, 114, 40, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 114, 101, 110,
              100, 101, 114, 101, 100, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 99, 111, 110, 115, 116, 32, 98, 117, 102, 102, 101, 114,
              32, 61, 32, 116, 104, 105, 115, 46, 95, 100, 111, 116, 76, 111,
              116, 116, 105, 101, 67, 111, 114, 101, 46, 98, 117, 102, 102, 101,
              114, 40, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 99, 111, 110,
              115, 116, 32, 99, 108, 97, 109, 112, 101, 100, 66, 117, 102, 102,
              101, 114, 32, 61, 32, 110, 101, 119, 32, 85, 105, 110, 116, 56,
              67, 108, 97, 109, 112, 101, 100, 65, 114, 114, 97, 121, 40, 98,
              117, 102, 102, 101, 114, 44, 32, 48, 44, 32, 116, 104, 105, 115,
              46, 95, 99, 97, 110, 118, 97, 115, 46, 119, 105, 100, 116, 104,
              32, 42, 32, 116, 104, 105, 115, 46, 95, 99, 97, 110, 118, 97, 115,
              46, 104, 101, 105, 103, 104, 116, 32, 42, 32, 52, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 108, 101, 116, 32, 105, 109, 97, 103,
              101, 68, 97, 116, 97, 32, 61, 32, 110, 117, 108, 108, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 116, 121, 112, 101,
              111, 102, 32, 73, 109, 97, 103, 101, 68, 97, 116, 97, 32, 61, 61,
              61, 32, 34, 117, 110, 100, 101, 102, 105, 110, 101, 100, 34, 41,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 109, 97,
              103, 101, 68, 97, 116, 97, 32, 61, 32, 116, 104, 105, 115, 46, 95,
              99, 111, 110, 116, 101, 120, 116, 46, 99, 114, 101, 97, 116, 101,
              73, 109, 97, 103, 101, 68, 97, 116, 97, 40, 116, 104, 105, 115,
              46, 95, 99, 97, 110, 118, 97, 115, 46, 119, 105, 100, 116, 104,
              44, 32, 116, 104, 105, 115, 46, 95, 99, 97, 110, 118, 97, 115, 46,
              104, 101, 105, 103, 104, 116, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 105, 109, 97, 103, 101, 68, 97, 116, 97, 46, 100,
              97, 116, 97, 46, 115, 101, 116, 40, 99, 108, 97, 109, 112, 101,
              100, 66, 117, 102, 102, 101, 114, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 125, 32, 101, 108, 115, 101, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 105, 109, 97, 103, 101, 68, 97, 116,
              97, 32, 61, 32, 110, 101, 119, 32, 73, 109, 97, 103, 101, 68, 97,
              116, 97, 40, 99, 108, 97, 109, 112, 101, 100, 66, 117, 102, 102,
              101, 114, 44, 32, 116, 104, 105, 115, 46, 95, 99, 97, 110, 118,
              97, 115, 46, 119, 105, 100, 116, 104, 44, 32, 116, 104, 105, 115,
              46, 95, 99, 97, 110, 118, 97, 115, 46, 104, 101, 105, 103, 104,
              116, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 99, 111, 110,
              116, 101, 120, 116, 46, 112, 117, 116, 73, 109, 97, 103, 101, 68,
              97, 116, 97, 40, 105, 109, 97, 103, 101, 68, 97, 116, 97, 44, 32,
              48, 44, 32, 48, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116,
              104, 105, 115, 46, 95, 101, 118, 101, 110, 116, 77, 97, 110, 97,
              103, 101, 114, 46, 100, 105, 115, 112, 97, 116, 99, 104, 40, 123,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 121, 112, 101,
              58, 32, 34, 114, 101, 110, 100, 101, 114, 34, 44, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 99, 117, 114, 114, 101, 110, 116, 70,
              114, 97, 109, 101, 58, 32, 116, 104, 105, 115, 46, 99, 117, 114,
              114, 101, 110, 116, 70, 114, 97, 109, 101, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 125, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 114,
              101, 116, 117, 114, 110, 32, 116, 114, 117, 101, 59, 10, 32, 32,
              32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116,
              117, 114, 110, 32, 102, 97, 108, 115, 101, 59, 10, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 95, 100, 114, 97, 119, 40, 41, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 116, 104, 105, 115,
              46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67, 111, 114,
              101, 32, 61, 61, 61, 32, 110, 117, 108, 108, 32, 124, 124, 32,
              116, 104, 105, 115, 46, 95, 99, 111, 110, 116, 101, 120, 116, 32,
              61, 61, 61, 32, 110, 117, 108, 108, 32, 124, 124, 32, 33, 116,
              104, 105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101,
              67, 111, 114, 101, 46, 105, 115, 80, 108, 97, 121, 105, 110, 103,
              40, 41, 41, 32, 114, 101, 116, 117, 114, 110, 59, 10, 32, 32, 32,
              32, 32, 32, 99, 111, 110, 115, 116, 32, 110, 101, 120, 116, 70,
              114, 97, 109, 101, 32, 61, 32, 77, 97, 116, 104, 46, 114, 111,
              117, 110, 100, 40, 116, 104, 105, 115, 46, 95, 100, 111, 116, 76,
              111, 116, 116, 105, 101, 67, 111, 114, 101, 46, 114, 101, 113,
              117, 101, 115, 116, 70, 114, 97, 109, 101, 40, 41, 32, 42, 32, 49,
              48, 48, 41, 32, 47, 32, 49, 48, 48, 59, 10, 32, 32, 32, 32, 32,
              32, 99, 111, 110, 115, 116, 32, 117, 112, 100, 97, 116, 101, 100,
              32, 61, 32, 116, 104, 105, 115, 46, 95, 100, 111, 116, 76, 111,
              116, 116, 105, 101, 67, 111, 114, 101, 46, 115, 101, 116, 70, 114,
              97, 109, 101, 40, 110, 101, 120, 116, 70, 114, 97, 109, 101, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 117, 112, 100,
              97, 116, 101, 100, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 116, 104, 105, 115, 46, 95, 101, 118, 101, 110, 116, 77, 97,
              110, 97, 103, 101, 114, 46, 100, 105, 115, 112, 97, 116, 99, 104,
              40, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 121,
              112, 101, 58, 32, 34, 102, 114, 97, 109, 101, 34, 44, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 99, 117, 114, 114, 101, 110, 116,
              70, 114, 97, 109, 101, 58, 32, 116, 104, 105, 115, 46, 99, 117,
              114, 114, 101, 110, 116, 70, 114, 97, 109, 101, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 125, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 99, 111, 110, 115, 116, 32, 114, 101, 110, 100, 101, 114, 101,
              100, 32, 61, 32, 116, 104, 105, 115, 46, 95, 114, 101, 110, 100,
              101, 114, 40, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105,
              102, 32, 40, 114, 101, 110, 100, 101, 114, 101, 100, 41, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 116,
              104, 105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101,
              67, 111, 114, 101, 46, 105, 115, 67, 111, 109, 112, 108, 101, 116,
              101, 40, 41, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 105, 102, 32, 40, 116, 104, 105, 115, 46, 95, 100,
              111, 116, 76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 46, 99,
              111, 110, 102, 105, 103, 40, 41, 46, 108, 111, 111, 112, 65, 110,
              105, 109, 97, 116, 105, 111, 110, 41, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46,
              95, 101, 118, 101, 110, 116, 77, 97, 110, 97, 103, 101, 114, 46,
              100, 105, 115, 112, 97, 116, 99, 104, 40, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 121, 112,
              101, 58, 32, 34, 108, 111, 111, 112, 34, 44, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 108, 111, 111,
              112, 67, 111, 117, 110, 116, 58, 32, 116, 104, 105, 115, 46, 95,
              100, 111, 116, 76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 46,
              108, 111, 111, 112, 67, 111, 117, 110, 116, 40, 41, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 32, 101, 108,
              115, 101, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 116, 104, 105, 115, 46, 95, 101, 118, 101, 110, 116,
              77, 97, 110, 97, 103, 101, 114, 46, 100, 105, 115, 112, 97, 116,
              99, 104, 40, 123, 32, 116, 121, 112, 101, 58, 32, 34, 99, 111,
              109, 112, 108, 101, 116, 101, 34, 32, 125, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125,
              10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 116,
              104, 105, 115, 46, 95, 97, 110, 105, 109, 97, 116, 105, 111, 110,
              70, 114, 97, 109, 101, 73, 100, 32, 61, 32, 116, 104, 105, 115,
              46, 95, 102, 114, 97, 109, 101, 77, 97, 110, 97, 103, 101, 114,
              46, 114, 101, 113, 117, 101, 115, 116, 65, 110, 105, 109, 97, 116,
              105, 111, 110, 70, 114, 97, 109, 101, 40, 116, 104, 105, 115, 46,
              95, 100, 114, 97, 119, 46, 98, 105, 110, 100, 40, 116, 104, 105,
              115, 41, 41, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 112,
              108, 97, 121, 40, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 105,
              102, 32, 40, 116, 104, 105, 115, 46, 95, 100, 111, 116, 76, 111,
              116, 116, 105, 101, 67, 111, 114, 101, 32, 61, 61, 61, 32, 110,
              117, 108, 108, 41, 32, 114, 101, 116, 117, 114, 110, 59, 10, 32,
              32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 111, 107, 32, 61,
              32, 116, 104, 105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116,
              105, 101, 67, 111, 114, 101, 46, 112, 108, 97, 121, 40, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 111, 107, 32, 124,
              124, 32, 116, 104, 105, 115, 46, 95, 100, 111, 116, 76, 111, 116,
              116, 105, 101, 67, 111, 114, 101, 46, 105, 115, 80, 108, 97, 121,
              105, 110, 103, 40, 41, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 116, 104, 105, 115, 46, 95, 105, 115, 70, 114, 111, 122,
              101, 110, 32, 61, 32, 102, 97, 108, 115, 101, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 101, 118, 101,
              110, 116, 77, 97, 110, 97, 103, 101, 114, 46, 100, 105, 115, 112,
              97, 116, 99, 104, 40, 123, 32, 116, 121, 112, 101, 58, 32, 34,
              112, 108, 97, 121, 34, 32, 125, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 116, 104, 105, 115, 46, 95, 97, 110, 105, 109, 97,
              116, 105, 111, 110, 70, 114, 97, 109, 101, 73, 100, 32, 61, 32,
              116, 104, 105, 115, 46, 95, 102, 114, 97, 109, 101, 77, 97, 110,
              97, 103, 101, 114, 46, 114, 101, 113, 117, 101, 115, 116, 65, 110,
              105, 109, 97, 116, 105, 111, 110, 70, 114, 97, 109, 101, 40, 116,
              104, 105, 115, 46, 95, 100, 114, 97, 119, 46, 98, 105, 110, 100,
              40, 116, 104, 105, 115, 41, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 73, 83, 95, 66,
              82, 79, 87, 83, 69, 82, 32, 38, 38, 32, 116, 104, 105, 115, 46,
              95, 99, 97, 110, 118, 97, 115, 32, 105, 110, 115, 116, 97, 110,
              99, 101, 111, 102, 32, 72, 84, 77, 76, 67, 97, 110, 118, 97, 115,
              69, 108, 101, 109, 101, 110, 116, 32, 38, 38, 32, 116, 104, 105,
              115, 46, 95, 114, 101, 110, 100, 101, 114, 67, 111, 110, 102, 105,
              103, 46, 102, 114, 101, 101, 122, 101, 79, 110, 79, 102, 102, 115,
              99, 114, 101, 101, 110, 32, 38, 38, 32, 33, 105, 115, 69, 108,
              101, 109, 101, 110, 116, 73, 110, 86, 105, 101, 119, 112, 111,
              114, 116, 40, 116, 104, 105, 115, 46, 95, 99, 97, 110, 118, 97,
              115, 41, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116,
              104, 105, 115, 46, 102, 114, 101, 101, 122, 101, 40, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 125, 10, 32, 32,
              32, 32, 112, 97, 117, 115, 101, 40, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 105, 102, 32, 40, 116, 104, 105, 115, 46, 95, 100,
              111, 116, 76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 32, 61,
              61, 61, 32, 110, 117, 108, 108, 41, 32, 114, 101, 116, 117, 114,
              110, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32,
              111, 107, 32, 61, 32, 116, 104, 105, 115, 46, 95, 100, 111, 116,
              76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 46, 112, 97, 117,
              115, 101, 40, 41, 59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32,
              40, 111, 107, 32, 124, 124, 32, 116, 104, 105, 115, 46, 95, 100,
              111, 116, 76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 46, 105,
              115, 80, 97, 117, 115, 101, 100, 40, 41, 41, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 101, 118, 101,
              110, 116, 77, 97, 110, 97, 103, 101, 114, 46, 100, 105, 115, 112,
              97, 116, 99, 104, 40, 123, 32, 116, 121, 112, 101, 58, 32, 34,
              112, 97, 117, 115, 101, 34, 32, 125, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 125, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 115,
              116, 111, 112, 40, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 105,
              102, 32, 40, 116, 104, 105, 115, 46, 95, 100, 111, 116, 76, 111,
              116, 116, 105, 101, 67, 111, 114, 101, 32, 61, 61, 61, 32, 110,
              117, 108, 108, 41, 32, 114, 101, 116, 117, 114, 110, 59, 10, 32,
              32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 111, 107, 32, 61,
              32, 116, 104, 105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116,
              105, 101, 67, 111, 114, 101, 46, 115, 116, 111, 112, 40, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 111, 107, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46,
              95, 101, 118, 101, 110, 116, 77, 97, 110, 97, 103, 101, 114, 46,
              100, 105, 115, 112, 97, 116, 99, 104, 40, 123, 32, 116, 121, 112,
              101, 58, 32, 34, 102, 114, 97, 109, 101, 34, 44, 32, 99, 117, 114,
              114, 101, 110, 116, 70, 114, 97, 109, 101, 58, 32, 116, 104, 105,
              115, 46, 99, 117, 114, 114, 101, 110, 116, 70, 114, 97, 109, 101,
              32, 125, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104,
              105, 115, 46, 95, 114, 101, 110, 100, 101, 114, 40, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 101,
              118, 101, 110, 116, 77, 97, 110, 97, 103, 101, 114, 46, 100, 105,
              115, 112, 97, 116, 99, 104, 40, 123, 32, 116, 121, 112, 101, 58,
              32, 34, 115, 116, 111, 112, 34, 32, 125, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 125, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 115,
              101, 116, 70, 114, 97, 109, 101, 40, 102, 114, 97, 109, 101, 41,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 116, 104,
              105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67,
              111, 114, 101, 32, 61, 61, 61, 32, 110, 117, 108, 108, 41, 32,
              114, 101, 116, 117, 114, 110, 59, 10, 32, 32, 32, 32, 32, 32, 105,
              102, 32, 40, 102, 114, 97, 109, 101, 32, 60, 32, 48, 32, 124, 124,
              32, 102, 114, 97, 109, 101, 32, 62, 32, 116, 104, 105, 115, 46,
              95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67, 111, 114, 101,
              46, 116, 111, 116, 97, 108, 70, 114, 97, 109, 101, 115, 40, 41,
              41, 32, 114, 101, 116, 117, 114, 110, 59, 10, 32, 32, 32, 32, 32,
              32, 99, 111, 110, 115, 116, 32, 111, 107, 32, 61, 32, 116, 104,
              105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67,
              111, 114, 101, 46, 115, 101, 101, 107, 40, 102, 114, 97, 109, 101,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 111, 107,
              41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105,
              115, 46, 95, 101, 118, 101, 110, 116, 77, 97, 110, 97, 103, 101,
              114, 46, 100, 105, 115, 112, 97, 116, 99, 104, 40, 123, 32, 116,
              121, 112, 101, 58, 32, 34, 102, 114, 97, 109, 101, 34, 44, 32, 99,
              117, 114, 114, 101, 110, 116, 70, 114, 97, 109, 101, 58, 32, 116,
              104, 105, 115, 46, 99, 117, 114, 114, 101, 110, 116, 70, 114, 97,
              109, 101, 32, 125, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              116, 104, 105, 115, 46, 95, 114, 101, 110, 100, 101, 114, 40, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 125, 10,
              32, 32, 32, 32, 115, 101, 116, 83, 112, 101, 101, 100, 40, 115,
              112, 101, 101, 100, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 105,
              102, 32, 40, 116, 104, 105, 115, 46, 95, 100, 111, 116, 76, 111,
              116, 116, 105, 101, 67, 111, 114, 101, 32, 61, 61, 61, 32, 110,
              117, 108, 108, 41, 32, 114, 101, 116, 117, 114, 110, 59, 10, 32,
              32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 100, 111, 116, 76,
              111, 116, 116, 105, 101, 67, 111, 114, 101, 46, 115, 101, 116, 67,
              111, 110, 102, 105, 103, 40, 95, 95, 115, 112, 114, 101, 97, 100,
              80, 114, 111, 112, 115, 40, 95, 95, 115, 112, 114, 101, 97, 100,
              86, 97, 108, 117, 101, 115, 40, 123, 125, 44, 32, 116, 104, 105,
              115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67, 111,
              114, 101, 46, 99, 111, 110, 102, 105, 103, 40, 41, 41, 44, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 115, 112, 101, 101, 100,
              10, 32, 32, 32, 32, 32, 32, 125, 41, 41, 59, 10, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 115, 101, 116, 66, 97, 99, 107, 103, 114,
              111, 117, 110, 100, 67, 111, 108, 111, 114, 40, 99, 111, 108, 111,
              114, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40,
              116, 104, 105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105,
              101, 67, 111, 114, 101, 32, 61, 61, 61, 32, 110, 117, 108, 108,
              41, 32, 114, 101, 116, 117, 114, 110, 59, 10, 32, 32, 32, 32, 32,
              32, 105, 102, 32, 40, 73, 83, 95, 66, 82, 79, 87, 83, 69, 82, 32,
              38, 38, 32, 116, 104, 105, 115, 46, 95, 99, 97, 110, 118, 97, 115,
              32, 105, 110, 115, 116, 97, 110, 99, 101, 111, 102, 32, 72, 84,
              77, 76, 67, 97, 110, 118, 97, 115, 69, 108, 101, 109, 101, 110,
              116, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104,
              105, 115, 46, 95, 99, 97, 110, 118, 97, 115, 46, 115, 116, 121,
              108, 101, 46, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 67,
              111, 108, 111, 114, 32, 61, 32, 99, 111, 108, 111, 114, 59, 10,
              32, 32, 32, 32, 32, 32, 125, 32, 101, 108, 115, 101, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 100,
              111, 116, 76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 46, 115,
              101, 116, 67, 111, 110, 102, 105, 103, 40, 95, 95, 115, 112, 114,
              101, 97, 100, 80, 114, 111, 112, 115, 40, 95, 95, 115, 112, 114,
              101, 97, 100, 86, 97, 108, 117, 101, 115, 40, 123, 125, 44, 32,
              116, 104, 105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105,
              101, 67, 111, 114, 101, 46, 99, 111, 110, 102, 105, 103, 40, 41,
              41, 44, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 98,
              97, 99, 107, 103, 114, 111, 117, 110, 100, 67, 111, 108, 111, 114,
              58, 32, 104, 101, 120, 83, 116, 114, 105, 110, 103, 84, 111, 82,
              71, 66, 65, 73, 110, 116, 40, 99, 111, 108, 111, 114, 41, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 125, 41, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46,
              95, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 67, 111, 108,
              111, 114, 32, 61, 32, 99, 111, 108, 111, 114, 59, 10, 32, 32, 32,
              32, 125, 10, 32, 32, 32, 32, 115, 101, 116, 76, 111, 111, 112, 40,
              108, 111, 111, 112, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 105,
              102, 32, 40, 116, 104, 105, 115, 46, 95, 100, 111, 116, 76, 111,
              116, 116, 105, 101, 67, 111, 114, 101, 32, 61, 61, 61, 32, 110,
              117, 108, 108, 41, 32, 114, 101, 116, 117, 114, 110, 59, 10, 32,
              32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 100, 111, 116, 76,
              111, 116, 116, 105, 101, 67, 111, 114, 101, 46, 115, 101, 116, 67,
              111, 110, 102, 105, 103, 40, 95, 95, 115, 112, 114, 101, 97, 100,
              80, 114, 111, 112, 115, 40, 95, 95, 115, 112, 114, 101, 97, 100,
              86, 97, 108, 117, 101, 115, 40, 123, 125, 44, 32, 116, 104, 105,
              115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67, 111,
              114, 101, 46, 99, 111, 110, 102, 105, 103, 40, 41, 41, 44, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 108, 111, 111, 112, 65,
              110, 105, 109, 97, 116, 105, 111, 110, 58, 32, 108, 111, 111, 112,
              10, 32, 32, 32, 32, 32, 32, 125, 41, 41, 59, 10, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 115, 101, 116, 85, 115, 101, 70, 114, 97,
              109, 101, 73, 110, 116, 101, 114, 112, 111, 108, 97, 116, 105,
              111, 110, 40, 117, 115, 101, 70, 114, 97, 109, 101, 73, 110, 116,
              101, 114, 112, 111, 108, 97, 116, 105, 111, 110, 41, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 116, 104, 105, 115, 46,
              95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67, 111, 114, 101,
              32, 61, 61, 61, 32, 110, 117, 108, 108, 41, 32, 114, 101, 116,
              117, 114, 110, 59, 10, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115,
              46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67, 111, 114,
              101, 46, 115, 101, 116, 67, 111, 110, 102, 105, 103, 40, 95, 95,
              115, 112, 114, 101, 97, 100, 80, 114, 111, 112, 115, 40, 95, 95,
              115, 112, 114, 101, 97, 100, 86, 97, 108, 117, 101, 115, 40, 123,
              125, 44, 32, 116, 104, 105, 115, 46, 95, 100, 111, 116, 76, 111,
              116, 116, 105, 101, 67, 111, 114, 101, 46, 99, 111, 110, 102, 105,
              103, 40, 41, 41, 44, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              117, 115, 101, 70, 114, 97, 109, 101, 73, 110, 116, 101, 114, 112,
              111, 108, 97, 116, 105, 111, 110, 10, 32, 32, 32, 32, 32, 32, 125,
              41, 41, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 97, 100,
              100, 69, 118, 101, 110, 116, 76, 105, 115, 116, 101, 110, 101,
              114, 40, 116, 121, 112, 101, 44, 32, 108, 105, 115, 116, 101, 110,
              101, 114, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 116, 104, 105,
              115, 46, 95, 101, 118, 101, 110, 116, 77, 97, 110, 97, 103, 101,
              114, 46, 97, 100, 100, 69, 118, 101, 110, 116, 76, 105, 115, 116,
              101, 110, 101, 114, 40, 116, 121, 112, 101, 44, 32, 108, 105, 115,
              116, 101, 110, 101, 114, 41, 59, 10, 32, 32, 32, 32, 125, 10, 32,
              32, 32, 32, 114, 101, 109, 111, 118, 101, 69, 118, 101, 110, 116,
              76, 105, 115, 116, 101, 110, 101, 114, 40, 116, 121, 112, 101, 44,
              32, 108, 105, 115, 116, 101, 110, 101, 114, 41, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 101, 118, 101,
              110, 116, 77, 97, 110, 97, 103, 101, 114, 46, 114, 101, 109, 111,
              118, 101, 69, 118, 101, 110, 116, 76, 105, 115, 116, 101, 110,
              101, 114, 40, 116, 121, 112, 101, 44, 32, 108, 105, 115, 116, 101,
              110, 101, 114, 41, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32,
              32, 100, 101, 115, 116, 114, 111, 121, 40, 41, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 118, 97, 114, 32, 95, 97, 59, 10, 32, 32, 32,
              32, 32, 32, 105, 102, 32, 40, 73, 83, 95, 66, 82, 79, 87, 83, 69,
              82, 32, 38, 38, 32, 116, 104, 105, 115, 46, 95, 99, 97, 110, 118,
              97, 115, 32, 105, 110, 115, 116, 97, 110, 99, 101, 111, 102, 32,
              72, 84, 77, 76, 67, 97, 110, 118, 97, 115, 69, 108, 101, 109, 101,
              110, 116, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 79,
              102, 102, 115, 99, 114, 101, 101, 110, 79, 98, 115, 101, 114, 118,
              101, 114, 46, 117, 110, 111, 98, 115, 101, 114, 118, 101, 40, 116,
              104, 105, 115, 46, 95, 99, 97, 110, 118, 97, 115, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 67, 97, 110, 118, 97, 115, 82, 101,
              115, 105, 122, 101, 79, 98, 115, 101, 114, 118, 101, 114, 46, 117,
              110, 111, 98, 115, 101, 114, 118, 101, 40, 116, 104, 105, 115, 46,
              95, 99, 97, 110, 118, 97, 115, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 32, 32, 40, 95, 97, 32, 61, 32, 116, 104,
              105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67,
              111, 114, 101, 41, 32, 61, 61, 32, 110, 117, 108, 108, 32, 63, 32,
              118, 111, 105, 100, 32, 48, 32, 58, 32, 95, 97, 46, 100, 101, 108,
              101, 116, 101, 40, 41, 59, 10, 32, 32, 32, 32, 32, 32, 116, 104,
              105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67,
              111, 114, 101, 32, 61, 32, 110, 117, 108, 108, 59, 10, 32, 32, 32,
              32, 32, 32, 116, 104, 105, 115, 46, 95, 99, 111, 110, 116, 101,
              120, 116, 32, 61, 32, 110, 117, 108, 108, 59, 10, 32, 32, 32, 32,
              32, 32, 116, 104, 105, 115, 46, 95, 101, 118, 101, 110, 116, 77,
              97, 110, 97, 103, 101, 114, 46, 100, 105, 115, 112, 97, 116, 99,
              104, 40, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 121, 112,
              101, 58, 32, 34, 100, 101, 115, 116, 114, 111, 121, 34, 10, 32,
              32, 32, 32, 32, 32, 125, 41, 59, 10, 32, 32, 32, 32, 32, 32, 116,
              104, 105, 115, 46, 95, 101, 118, 101, 110, 116, 77, 97, 110, 97,
              103, 101, 114, 46, 114, 101, 109, 111, 118, 101, 65, 108, 108, 69,
              118, 101, 110, 116, 76, 105, 115, 116, 101, 110, 101, 114, 115,
              40, 41, 59, 10, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46,
              95, 99, 108, 101, 97, 110, 117, 112, 83, 116, 97, 116, 101, 77,
              97, 99, 104, 105, 110, 101, 76, 105, 115, 116, 101, 110, 101, 114,
              115, 40, 41, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 102,
              114, 101, 101, 122, 101, 40, 41, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 105, 102, 32, 40, 116, 104, 105, 115, 46, 95, 97, 110, 105,
              109, 97, 116, 105, 111, 110, 70, 114, 97, 109, 101, 73, 100, 32,
              61, 61, 61, 32, 110, 117, 108, 108, 41, 32, 114, 101, 116, 117,
              114, 110, 59, 10, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46,
              95, 102, 114, 97, 109, 101, 77, 97, 110, 97, 103, 101, 114, 46,
              99, 97, 110, 99, 101, 108, 65, 110, 105, 109, 97, 116, 105, 111,
              110, 70, 114, 97, 109, 101, 40, 116, 104, 105, 115, 46, 95, 97,
              110, 105, 109, 97, 116, 105, 111, 110, 70, 114, 97, 109, 101, 73,
              100, 41, 59, 10, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46,
              95, 97, 110, 105, 109, 97, 116, 105, 111, 110, 70, 114, 97, 109,
              101, 73, 100, 32, 61, 32, 110, 117, 108, 108, 59, 10, 32, 32, 32,
              32, 32, 32, 116, 104, 105, 115, 46, 95, 105, 115, 70, 114, 111,
              122, 101, 110, 32, 61, 32, 116, 114, 117, 101, 59, 10, 32, 32, 32,
              32, 32, 32, 116, 104, 105, 115, 46, 95, 101, 118, 101, 110, 116,
              77, 97, 110, 97, 103, 101, 114, 46, 100, 105, 115, 112, 97, 116,
              99, 104, 40, 123, 32, 116, 121, 112, 101, 58, 32, 34, 102, 114,
              101, 101, 122, 101, 34, 32, 125, 41, 59, 10, 32, 32, 32, 32, 125,
              10, 32, 32, 32, 32, 117, 110, 102, 114, 101, 101, 122, 101, 40,
              41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 116,
              104, 105, 115, 46, 95, 97, 110, 105, 109, 97, 116, 105, 111, 110,
              70, 114, 97, 109, 101, 73, 100, 32, 33, 61, 61, 32, 110, 117, 108,
              108, 41, 32, 114, 101, 116, 117, 114, 110, 59, 10, 32, 32, 32, 32,
              32, 32, 116, 104, 105, 115, 46, 95, 97, 110, 105, 109, 97, 116,
              105, 111, 110, 70, 114, 97, 109, 101, 73, 100, 32, 61, 32, 116,
              104, 105, 115, 46, 95, 102, 114, 97, 109, 101, 77, 97, 110, 97,
              103, 101, 114, 46, 114, 101, 113, 117, 101, 115, 116, 65, 110,
              105, 109, 97, 116, 105, 111, 110, 70, 114, 97, 109, 101, 40, 116,
              104, 105, 115, 46, 95, 100, 114, 97, 119, 46, 98, 105, 110, 100,
              40, 116, 104, 105, 115, 41, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              116, 104, 105, 115, 46, 95, 105, 115, 70, 114, 111, 122, 101, 110,
              32, 61, 32, 102, 97, 108, 115, 101, 59, 10, 32, 32, 32, 32, 32,
              32, 116, 104, 105, 115, 46, 95, 101, 118, 101, 110, 116, 77, 97,
              110, 97, 103, 101, 114, 46, 100, 105, 115, 112, 97, 116, 99, 104,
              40, 123, 32, 116, 121, 112, 101, 58, 32, 34, 117, 110, 102, 114,
              101, 101, 122, 101, 34, 32, 125, 41, 59, 10, 32, 32, 32, 32, 125,
              10, 32, 32, 32, 32, 114, 101, 115, 105, 122, 101, 40, 41, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33, 116, 104, 105,
              115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67, 111,
              114, 101, 32, 124, 124, 32, 33, 116, 104, 105, 115, 46, 105, 115,
              76, 111, 97, 100, 101, 100, 41, 32, 114, 101, 116, 117, 114, 110,
              59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 73, 83, 95, 66,
              82, 79, 87, 83, 69, 82, 32, 38, 38, 32, 116, 104, 105, 115, 46,
              95, 99, 97, 110, 118, 97, 115, 32, 105, 110, 115, 116, 97, 110,
              99, 101, 111, 102, 32, 72, 84, 77, 76, 67, 97, 110, 118, 97, 115,
              69, 108, 101, 109, 101, 110, 116, 41, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 100, 112, 114, 32, 61,
              32, 116, 104, 105, 115, 46, 95, 114, 101, 110, 100, 101, 114, 67,
              111, 110, 102, 105, 103, 46, 100, 101, 118, 105, 99, 101, 80, 105,
              120, 101, 108, 82, 97, 116, 105, 111, 32, 124, 124, 32, 119, 105,
              110, 100, 111, 119, 46, 100, 101, 118, 105, 99, 101, 80, 105, 120,
              101, 108, 82, 97, 116, 105, 111, 32, 124, 124, 32, 49, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 123, 32,
              104, 101, 105, 103, 104, 116, 58, 32, 99, 108, 105, 101, 110, 116,
              72, 101, 105, 103, 104, 116, 44, 32, 119, 105, 100, 116, 104, 58,
              32, 99, 108, 105, 101, 110, 116, 87, 105, 100, 116, 104, 32, 125,
              32, 61, 32, 116, 104, 105, 115, 46, 95, 99, 97, 110, 118, 97, 115,
              46, 103, 101, 116, 66, 111, 117, 110, 100, 105, 110, 103, 67, 108,
              105, 101, 110, 116, 82, 101, 99, 116, 40, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 105, 102, 32, 40, 99, 108, 105, 101, 110, 116,
              72, 101, 105, 103, 104, 116, 32, 33, 61, 61, 32, 48, 32, 38, 38,
              32, 99, 108, 105, 101, 110, 116, 87, 105, 100, 116, 104, 32, 33,
              61, 61, 32, 48, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 116, 104, 105, 115, 46, 95, 99, 97, 110, 118, 97, 115, 46,
              119, 105, 100, 116, 104, 32, 61, 32, 99, 108, 105, 101, 110, 116,
              87, 105, 100, 116, 104, 32, 42, 32, 100, 112, 114, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 99,
              97, 110, 118, 97, 115, 46, 104, 101, 105, 103, 104, 116, 32, 61,
              32, 99, 108, 105, 101, 110, 116, 72, 101, 105, 103, 104, 116, 32,
              42, 32, 100, 112, 114, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32,
              99, 111, 110, 115, 116, 32, 111, 107, 32, 61, 32, 116, 104, 105,
              115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67, 111,
              114, 101, 46, 114, 101, 115, 105, 122, 101, 40, 116, 104, 105,
              115, 46, 95, 99, 97, 110, 118, 97, 115, 46, 119, 105, 100, 116,
              104, 44, 32, 116, 104, 105, 115, 46, 95, 99, 97, 110, 118, 97,
              115, 46, 104, 101, 105, 103, 104, 116, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 105, 102, 32, 40, 111, 107, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 114, 101, 110,
              100, 101, 114, 40, 41, 59, 10, 32, 32, 32, 32, 32, 32, 125, 10,
              32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 115, 101, 116, 83, 101,
              103, 109, 101, 110, 116, 40, 115, 116, 97, 114, 116, 70, 114, 97,
              109, 101, 44, 32, 101, 110, 100, 70, 114, 97, 109, 101, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 116, 104, 105,
              115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67, 111,
              114, 101, 32, 61, 61, 61, 32, 110, 117, 108, 108, 32, 124, 124,
              32, 95, 68, 111, 116, 76, 111, 116, 116, 105, 101, 46, 95, 119,
              97, 115, 109, 77, 111, 100, 117, 108, 101, 32, 61, 61, 61, 32,
              110, 117, 108, 108, 41, 32, 114, 101, 116, 117, 114, 110, 59, 10,
              32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 100, 111, 116,
              76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 46, 115, 101, 116,
              67, 111, 110, 102, 105, 103, 40, 95, 95, 115, 112, 114, 101, 97,
              100, 80, 114, 111, 112, 115, 40, 95, 95, 115, 112, 114, 101, 97,
              100, 86, 97, 108, 117, 101, 115, 40, 123, 125, 44, 32, 116, 104,
              105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67,
              111, 114, 101, 46, 99, 111, 110, 102, 105, 103, 40, 41, 41, 44,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 115, 101, 103, 109,
              101, 110, 116, 58, 32, 99, 114, 101, 97, 116, 101, 67, 111, 114,
              101, 83, 101, 103, 109, 101, 110, 116, 40, 91, 115, 116, 97, 114,
              116, 70, 114, 97, 109, 101, 44, 32, 101, 110, 100, 70, 114, 97,
              109, 101, 93, 44, 32, 95, 68, 111, 116, 76, 111, 116, 116, 105,
              101, 46, 95, 119, 97, 115, 109, 77, 111, 100, 117, 108, 101, 41,
              10, 32, 32, 32, 32, 32, 32, 125, 41, 41, 59, 10, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 115, 101, 116, 77, 111, 100, 101, 40,
              109, 111, 100, 101, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 105,
              102, 32, 40, 116, 104, 105, 115, 46, 95, 100, 111, 116, 76, 111,
              116, 116, 105, 101, 67, 111, 114, 101, 32, 61, 61, 61, 32, 110,
              117, 108, 108, 32, 124, 124, 32, 95, 68, 111, 116, 76, 111, 116,
              116, 105, 101, 46, 95, 119, 97, 115, 109, 77, 111, 100, 117, 108,
              101, 32, 61, 61, 61, 32, 110, 117, 108, 108, 41, 32, 114, 101,
              116, 117, 114, 110, 59, 10, 32, 32, 32, 32, 32, 32, 116, 104, 105,
              115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67, 111,
              114, 101, 46, 115, 101, 116, 67, 111, 110, 102, 105, 103, 40, 95,
              95, 115, 112, 114, 101, 97, 100, 80, 114, 111, 112, 115, 40, 95,
              95, 115, 112, 114, 101, 97, 100, 86, 97, 108, 117, 101, 115, 40,
              123, 125, 44, 32, 116, 104, 105, 115, 46, 95, 100, 111, 116, 76,
              111, 116, 116, 105, 101, 67, 111, 114, 101, 46, 99, 111, 110, 102,
              105, 103, 40, 41, 41, 44, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 109, 111, 100, 101, 58, 32, 99, 114, 101, 97, 116, 101, 67,
              111, 114, 101, 77, 111, 100, 101, 40, 109, 111, 100, 101, 44, 32,
              95, 68, 111, 116, 76, 111, 116, 116, 105, 101, 46, 95, 119, 97,
              115, 109, 77, 111, 100, 117, 108, 101, 41, 10, 32, 32, 32, 32, 32,
              32, 125, 41, 41, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32,
              115, 101, 116, 82, 101, 110, 100, 101, 114, 67, 111, 110, 102,
              105, 103, 40, 99, 111, 110, 102, 105, 103, 41, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 95, 97, 32, 61,
              32, 99, 111, 110, 102, 105, 103, 44, 32, 123, 32, 100, 101, 118,
              105, 99, 101, 80, 105, 120, 101, 108, 82, 97, 116, 105, 111, 44,
              32, 102, 114, 101, 101, 122, 101, 79, 110, 79, 102, 102, 115, 99,
              114, 101, 101, 110, 32, 125, 32, 61, 32, 95, 97, 44, 32, 114, 101,
              115, 116, 67, 111, 110, 102, 105, 103, 32, 61, 32, 95, 95, 111,
              98, 106, 82, 101, 115, 116, 40, 95, 97, 44, 32, 91, 34, 100, 101,
              118, 105, 99, 101, 80, 105, 120, 101, 108, 82, 97, 116, 105, 111,
              34, 44, 32, 34, 102, 114, 101, 101, 122, 101, 79, 110, 79, 102,
              102, 115, 99, 114, 101, 101, 110, 34, 93, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 116, 104, 105, 115, 46, 95, 114, 101, 110, 100, 101,
              114, 67, 111, 110, 102, 105, 103, 32, 61, 32, 95, 95, 115, 112,
              114, 101, 97, 100, 80, 114, 111, 112, 115, 40, 95, 95, 115, 112,
              114, 101, 97, 100, 86, 97, 108, 117, 101, 115, 40, 95, 95, 115,
              112, 114, 101, 97, 100, 86, 97, 108, 117, 101, 115, 40, 123, 125,
              44, 32, 116, 104, 105, 115, 46, 95, 114, 101, 110, 100, 101, 114,
              67, 111, 110, 102, 105, 103, 41, 44, 32, 114, 101, 115, 116, 67,
              111, 110, 102, 105, 103, 41, 44, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 47, 47, 32, 100, 101, 118, 105, 99, 101, 80, 105, 120,
              101, 108, 82, 97, 116, 105, 111, 32, 105, 115, 32, 97, 32, 115,
              112, 101, 99, 105, 97, 108, 32, 99, 97, 115, 101, 44, 32, 105,
              116, 32, 115, 104, 111, 117, 108, 100, 32, 98, 101, 32, 115, 101,
              116, 32, 116, 111, 32, 116, 104, 101, 32, 100, 101, 102, 97, 117,
              108, 116, 32, 118, 97, 108, 117, 101, 32, 105, 102, 32, 105, 116,
              39, 115, 32, 110, 111, 116, 32, 112, 114, 111, 118, 105, 100, 101,
              100, 10, 32, 32, 32, 32, 32, 32, 32, 32, 100, 101, 118, 105, 99,
              101, 80, 105, 120, 101, 108, 82, 97, 116, 105, 111, 58, 32, 100,
              101, 118, 105, 99, 101, 80, 105, 120, 101, 108, 82, 97, 116, 105,
              111, 32, 124, 124, 32, 103, 101, 116, 68, 101, 102, 97, 117, 108,
              116, 68, 80, 82, 40, 41, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              102, 114, 101, 101, 122, 101, 79, 110, 79, 102, 102, 115, 99, 114,
              101, 101, 110, 58, 32, 102, 114, 101, 101, 122, 101, 79, 110, 79,
              102, 102, 115, 99, 114, 101, 101, 110, 32, 33, 61, 32, 110, 117,
              108, 108, 32, 63, 32, 102, 114, 101, 101, 122, 101, 79, 110, 79,
              102, 102, 115, 99, 114, 101, 101, 110, 32, 58, 32, 116, 114, 117,
              101, 10, 32, 32, 32, 32, 32, 32, 125, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 105, 102, 32, 40, 73, 83, 95, 66, 82, 79, 87, 83, 69, 82,
              32, 38, 38, 32, 116, 104, 105, 115, 46, 95, 99, 97, 110, 118, 97,
              115, 32, 105, 110, 115, 116, 97, 110, 99, 101, 111, 102, 32, 72,
              84, 77, 76, 67, 97, 110, 118, 97, 115, 69, 108, 101, 109, 101,
              110, 116, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105,
              102, 32, 40, 116, 104, 105, 115, 46, 95, 114, 101, 110, 100, 101,
              114, 67, 111, 110, 102, 105, 103, 46, 97, 117, 116, 111, 82, 101,
              115, 105, 122, 101, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 67, 97, 110, 118, 97, 115, 82, 101, 115, 105, 122,
              101, 79, 98, 115, 101, 114, 118, 101, 114, 46, 111, 98, 115, 101,
              114, 118, 101, 40, 116, 104, 105, 115, 46, 95, 99, 97, 110, 118,
              97, 115, 44, 32, 116, 104, 105, 115, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 125, 32, 101, 108, 115, 101, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 67, 97, 110, 118, 97, 115, 82,
              101, 115, 105, 122, 101, 79, 98, 115, 101, 114, 118, 101, 114, 46,
              117, 110, 111, 98, 115, 101, 114, 118, 101, 40, 116, 104, 105,
              115, 46, 95, 99, 97, 110, 118, 97, 115, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105,
              102, 32, 40, 116, 104, 105, 115, 46, 95, 114, 101, 110, 100, 101,
              114, 67, 111, 110, 102, 105, 103, 46, 102, 114, 101, 101, 122,
              101, 79, 110, 79, 102, 102, 115, 99, 114, 101, 101, 110, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 79, 102, 102,
              115, 99, 114, 101, 101, 110, 79, 98, 115, 101, 114, 118, 101, 114,
              46, 111, 98, 115, 101, 114, 118, 101, 40, 116, 104, 105, 115, 46,
              95, 99, 97, 110, 118, 97, 115, 44, 32, 116, 104, 105, 115, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 32, 101, 108, 115, 101,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 79, 102, 102,
              115, 99, 114, 101, 101, 110, 79, 98, 115, 101, 114, 118, 101, 114,
              46, 117, 110, 111, 98, 115, 101, 114, 118, 101, 40, 116, 104, 105,
              115, 46, 95, 99, 97, 110, 118, 97, 115, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 116, 104, 105, 115,
              46, 95, 105, 115, 70, 114, 111, 122, 101, 110, 41, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105,
              115, 46, 117, 110, 102, 114, 101, 101, 122, 101, 40, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32,
              32, 32, 125, 10, 32, 32, 32, 32, 108, 111, 97, 100, 65, 110, 105,
              109, 97, 116, 105, 111, 110, 40, 97, 110, 105, 109, 97, 116, 105,
              111, 110, 73, 100, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 105,
              102, 32, 40, 116, 104, 105, 115, 46, 95, 100, 111, 116, 76, 111,
              116, 116, 105, 101, 67, 111, 114, 101, 32, 61, 61, 61, 32, 110,
              117, 108, 108, 32, 124, 124, 32, 116, 104, 105, 115, 46, 95, 100,
              111, 116, 76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 46, 97,
              99, 116, 105, 118, 101, 65, 110, 105, 109, 97, 116, 105, 111, 110,
              73, 100, 40, 41, 32, 61, 61, 61, 32, 97, 110, 105, 109, 97, 116,
              105, 111, 110, 73, 100, 41, 32, 114, 101, 116, 117, 114, 110, 59,
              10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 108, 111,
              97, 100, 101, 100, 32, 61, 32, 116, 104, 105, 115, 46, 95, 100,
              111, 116, 76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 46, 108,
              111, 97, 100, 65, 110, 105, 109, 97, 116, 105, 111, 110, 40, 97,
              110, 105, 109, 97, 116, 105, 111, 110, 73, 100, 44, 32, 116, 104,
              105, 115, 46, 95, 99, 97, 110, 118, 97, 115, 46, 119, 105, 100,
              116, 104, 44, 32, 116, 104, 105, 115, 46, 95, 99, 97, 110, 118,
              97, 115, 46, 104, 101, 105, 103, 104, 116, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 105, 102, 32, 40, 108, 111, 97, 100, 101, 100, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46,
              95, 101, 118, 101, 110, 116, 77, 97, 110, 97, 103, 101, 114, 46,
              100, 105, 115, 112, 97, 116, 99, 104, 40, 123, 32, 116, 121, 112,
              101, 58, 32, 34, 108, 111, 97, 100, 34, 32, 125, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 114, 101, 115,
              105, 122, 101, 40, 41, 59, 10, 32, 32, 32, 32, 32, 32, 125, 32,
              101, 108, 115, 101, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              116, 104, 105, 115, 46, 95, 101, 118, 101, 110, 116, 77, 97, 110,
              97, 103, 101, 114, 46, 100, 105, 115, 112, 97, 116, 99, 104, 40,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 121, 112,
              101, 58, 32, 34, 108, 111, 97, 100, 69, 114, 114, 111, 114, 34,
              44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 101, 114, 114,
              111, 114, 58, 32, 110, 101, 119, 32, 69, 114, 114, 111, 114, 40,
              96, 70, 97, 105, 108, 101, 100, 32, 116, 111, 32, 97, 110, 105,
              109, 97, 116, 105, 111, 110, 32, 58, 36, 123, 97, 110, 105, 109,
              97, 116, 105, 111, 110, 73, 100, 125, 96, 41, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 125, 41, 59, 10, 32, 32, 32, 32, 32, 32, 125, 10,
              32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 115, 101, 116, 77, 97,
              114, 107, 101, 114, 40, 109, 97, 114, 107, 101, 114, 41, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 116, 104, 105, 115,
              46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67, 111, 114,
              101, 32, 61, 61, 61, 32, 110, 117, 108, 108, 41, 32, 114, 101,
              116, 117, 114, 110, 59, 10, 32, 32, 32, 32, 32, 32, 116, 104, 105,
              115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67, 111,
              114, 101, 46, 115, 101, 116, 67, 111, 110, 102, 105, 103, 40, 95,
              95, 115, 112, 114, 101, 97, 100, 80, 114, 111, 112, 115, 40, 95,
              95, 115, 112, 114, 101, 97, 100, 86, 97, 108, 117, 101, 115, 40,
              123, 125, 44, 32, 116, 104, 105, 115, 46, 95, 100, 111, 116, 76,
              111, 116, 116, 105, 101, 67, 111, 114, 101, 46, 99, 111, 110, 102,
              105, 103, 40, 41, 41, 44, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 109, 97, 114, 107, 101, 114, 10, 32, 32, 32, 32, 32, 32, 125,
              41, 41, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 109, 97,
              114, 107, 101, 114, 115, 40, 41, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 118, 97, 114, 32, 95, 97, 59, 10, 32, 32, 32, 32, 32, 32, 99,
              111, 110, 115, 116, 32, 109, 97, 114, 107, 101, 114, 115, 32, 61,
              32, 40, 95, 97, 32, 61, 32, 116, 104, 105, 115, 46, 95, 100, 111,
              116, 76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 41, 32, 61,
              61, 32, 110, 117, 108, 108, 32, 63, 32, 118, 111, 105, 100, 32,
              48, 32, 58, 32, 95, 97, 46, 109, 97, 114, 107, 101, 114, 115, 40,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 109, 97,
              114, 107, 101, 114, 115, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 99, 111, 110, 115, 116, 32, 114, 101, 115, 117, 108, 116,
              32, 61, 32, 91, 93, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 102,
              111, 114, 32, 40, 108, 101, 116, 32, 105, 32, 61, 32, 48, 59, 32,
              105, 32, 60, 32, 109, 97, 114, 107, 101, 114, 115, 46, 115, 105,
              122, 101, 40, 41, 59, 32, 105, 32, 43, 61, 32, 49, 41, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115,
              116, 32, 109, 97, 114, 107, 101, 114, 32, 61, 32, 109, 97, 114,
              107, 101, 114, 115, 46, 103, 101, 116, 40, 105, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 115, 117, 108, 116,
              46, 112, 117, 115, 104, 40, 123, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 110, 97, 109, 101, 58, 32, 109, 97, 114, 107,
              101, 114, 46, 110, 97, 109, 101, 44, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 116, 105, 109, 101, 58, 32, 109, 97, 114,
              107, 101, 114, 46, 116, 105, 109, 101, 44, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 100, 117, 114, 97, 116, 105, 111, 110,
              58, 32, 109, 97, 114, 107, 101, 114, 46, 100, 117, 114, 97, 116,
              105, 111, 110, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 114, 101,
              115, 117, 108, 116, 59, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32,
              32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 91, 93, 59,
              10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 115, 101, 116, 84,
              104, 101, 109, 101, 40, 116, 104, 101, 109, 101, 73, 100, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 116, 104, 105,
              115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67, 111,
              114, 101, 32, 61, 61, 61, 32, 110, 117, 108, 108, 41, 32, 114,
              101, 116, 117, 114, 110, 32, 102, 97, 108, 115, 101, 59, 10, 32,
              32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 108, 111, 97, 100,
              101, 100, 32, 61, 32, 116, 104, 105, 115, 46, 95, 100, 111, 116,
              76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 46, 115, 101, 116,
              84, 104, 101, 109, 101, 40, 116, 104, 101, 109, 101, 73, 100, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 114,
              101, 110, 100, 101, 114, 40, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              114, 101, 116, 117, 114, 110, 32, 108, 111, 97, 100, 101, 100, 59,
              10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 114, 101, 115, 101,
              116, 84, 104, 101, 109, 101, 40, 41, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 105, 102, 32, 40, 116, 104, 105, 115, 46, 95, 100, 111,
              116, 76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 32, 61, 61,
              61, 32, 110, 117, 108, 108, 41, 32, 114, 101, 116, 117, 114, 110,
              32, 102, 97, 108, 115, 101, 59, 10, 32, 32, 32, 32, 32, 32, 114,
              101, 116, 117, 114, 110, 32, 116, 104, 105, 115, 46, 95, 100, 111,
              116, 76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 46, 114, 101,
              115, 101, 116, 84, 104, 101, 109, 101, 40, 41, 59, 10, 32, 32, 32,
              32, 125, 10, 32, 32, 32, 32, 115, 101, 116, 84, 104, 101, 109,
              101, 68, 97, 116, 97, 40, 116, 104, 101, 109, 101, 68, 97, 116,
              97, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40,
              116, 104, 105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105,
              101, 67, 111, 114, 101, 32, 61, 61, 61, 32, 110, 117, 108, 108,
              41, 32, 114, 101, 116, 117, 114, 110, 32, 102, 97, 108, 115, 101,
              59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 108,
              111, 97, 100, 101, 100, 32, 61, 32, 116, 104, 105, 115, 46, 95,
              100, 111, 116, 76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 46,
              115, 101, 116, 84, 104, 101, 109, 101, 68, 97, 116, 97, 40, 116,
              104, 101, 109, 101, 68, 97, 116, 97, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 116, 104, 105, 115, 46, 95, 114, 101, 110, 100, 101, 114,
              40, 41, 59, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114,
              110, 32, 108, 111, 97, 100, 101, 100, 59, 10, 32, 32, 32, 32, 125,
              10, 32, 32, 32, 32, 115, 101, 116, 83, 108, 111, 116, 115, 40,
              115, 108, 111, 116, 115, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32,
              105, 102, 32, 40, 116, 104, 105, 115, 46, 95, 100, 111, 116, 76,
              111, 116, 116, 105, 101, 67, 111, 114, 101, 32, 61, 61, 61, 32,
              110, 117, 108, 108, 41, 32, 114, 101, 116, 117, 114, 110, 59, 10,
              32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 100, 111, 116,
              76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 46, 115, 101, 116,
              83, 108, 111, 116, 115, 40, 115, 108, 111, 116, 115, 41, 59, 10,
              32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 115, 101, 116, 76, 97,
              121, 111, 117, 116, 40, 108, 97, 121, 111, 117, 116, 41, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 116, 104, 105, 115,
              46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67, 111, 114,
              101, 32, 61, 61, 61, 32, 110, 117, 108, 108, 32, 124, 124, 32, 95,
              68, 111, 116, 76, 111, 116, 116, 105, 101, 46, 95, 119, 97, 115,
              109, 77, 111, 100, 117, 108, 101, 32, 61, 61, 61, 32, 110, 117,
              108, 108, 41, 32, 114, 101, 116, 117, 114, 110, 59, 10, 32, 32,
              32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 100, 111, 116, 76,
              111, 116, 116, 105, 101, 67, 111, 114, 101, 46, 115, 101, 116, 67,
              111, 110, 102, 105, 103, 40, 95, 95, 115, 112, 114, 101, 97, 100,
              80, 114, 111, 112, 115, 40, 95, 95, 115, 112, 114, 101, 97, 100,
              86, 97, 108, 117, 101, 115, 40, 123, 125, 44, 32, 116, 104, 105,
              115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67, 111,
              114, 101, 46, 99, 111, 110, 102, 105, 103, 40, 41, 41, 44, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 108, 97, 121, 111, 117,
              116, 58, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 97,
              108, 105, 103, 110, 58, 32, 99, 114, 101, 97, 116, 101, 67, 111,
              114, 101, 65, 108, 105, 103, 110, 40, 108, 97, 121, 111, 117, 116,
              46, 97, 108, 105, 103, 110, 44, 32, 95, 68, 111, 116, 76, 111,
              116, 116, 105, 101, 46, 95, 119, 97, 115, 109, 77, 111, 100, 117,
              108, 101, 41, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 102,
              105, 116, 58, 32, 99, 114, 101, 97, 116, 101, 67, 111, 114, 101,
              70, 105, 116, 40, 108, 97, 121, 111, 117, 116, 46, 102, 105, 116,
              44, 32, 95, 68, 111, 116, 76, 111, 116, 116, 105, 101, 46, 95,
              119, 97, 115, 109, 77, 111, 100, 117, 108, 101, 41, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 125, 41,
              41, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 115, 101,
              116, 86, 105, 101, 119, 112, 111, 114, 116, 40, 120, 44, 32, 121,
              44, 32, 119, 105, 100, 116, 104, 44, 32, 104, 101, 105, 103, 104,
              116, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40,
              116, 104, 105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105,
              101, 67, 111, 114, 101, 32, 61, 61, 61, 32, 110, 117, 108, 108,
              41, 32, 114, 101, 116, 117, 114, 110, 32, 102, 97, 108, 115, 101,
              59, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32,
              116, 104, 105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105,
              101, 67, 111, 114, 101, 46, 115, 101, 116, 86, 105, 101, 119, 112,
              111, 114, 116, 40, 120, 44, 32, 121, 44, 32, 119, 105, 100, 116,
              104, 44, 32, 104, 101, 105, 103, 104, 116, 41, 59, 10, 32, 32, 32,
              32, 125, 10, 32, 32, 32, 32, 115, 116, 97, 116, 105, 99, 32, 115,
              101, 116, 87, 97, 115, 109, 85, 114, 108, 40, 117, 114, 108, 41,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 68, 111, 116, 76, 111, 116,
              116, 105, 101, 87, 97, 115, 109, 76, 111, 97, 100, 101, 114, 46,
              115, 101, 116, 87, 97, 115, 109, 85, 114, 108, 40, 117, 114, 108,
              41, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 108, 111, 97,
              100, 83, 116, 97, 116, 101, 77, 97, 99, 104, 105, 110, 101, 40,
              115, 116, 97, 116, 101, 77, 97, 99, 104, 105, 110, 101, 73, 100,
              41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 95, 97,
              44, 32, 95, 98, 59, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116,
              117, 114, 110, 32, 40, 95, 98, 32, 61, 32, 40, 95, 97, 32, 61, 32,
              116, 104, 105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105,
              101, 67, 111, 114, 101, 41, 32, 61, 61, 32, 110, 117, 108, 108,
              32, 63, 32, 118, 111, 105, 100, 32, 48, 32, 58, 32, 95, 97, 46,
              108, 111, 97, 100, 83, 116, 97, 116, 101, 77, 97, 99, 104, 105,
              110, 101, 40, 115, 116, 97, 116, 101, 77, 97, 99, 104, 105, 110,
              101, 73, 100, 41, 41, 32, 33, 61, 32, 110, 117, 108, 108, 32, 63,
              32, 95, 98, 32, 58, 32, 102, 97, 108, 115, 101, 59, 10, 32, 32,
              32, 32, 125, 10, 32, 32, 32, 32, 115, 116, 97, 114, 116, 83, 116,
              97, 116, 101, 77, 97, 99, 104, 105, 110, 101, 40, 41, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 118, 97, 114, 32, 95, 97, 44, 32, 95, 98,
              59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 115,
              116, 97, 114, 116, 101, 100, 32, 61, 32, 40, 95, 98, 32, 61, 32,
              40, 95, 97, 32, 61, 32, 116, 104, 105, 115, 46, 95, 100, 111, 116,
              76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 41, 32, 61, 61,
              32, 110, 117, 108, 108, 32, 63, 32, 118, 111, 105, 100, 32, 48,
              32, 58, 32, 95, 97, 46, 115, 116, 97, 114, 116, 83, 116, 97, 116,
              101, 77, 97, 99, 104, 105, 110, 101, 40, 41, 41, 32, 33, 61, 32,
              110, 117, 108, 108, 32, 63, 32, 95, 98, 32, 58, 32, 102, 97, 108,
              115, 101, 59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 115,
              116, 97, 114, 116, 101, 100, 41, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 116, 104, 105, 115, 46, 95, 115, 101, 116, 117, 112,
              83, 116, 97, 116, 101, 77, 97, 99, 104, 105, 110, 101, 76, 105,
              115, 116, 101, 110, 101, 114, 115, 40, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114,
              110, 32, 115, 116, 97, 114, 116, 101, 100, 59, 10, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 115, 116, 111, 112, 83, 116, 97, 116,
              101, 77, 97, 99, 104, 105, 110, 101, 40, 41, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 118, 97, 114, 32, 95, 97, 44, 32, 95, 98, 59, 10,
              32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 115, 116, 111,
              112, 112, 101, 100, 32, 61, 32, 40, 95, 98, 32, 61, 32, 40, 95,
              97, 32, 61, 32, 116, 104, 105, 115, 46, 95, 100, 111, 116, 76,
              111, 116, 116, 105, 101, 67, 111, 114, 101, 41, 32, 61, 61, 32,
              110, 117, 108, 108, 32, 63, 32, 118, 111, 105, 100, 32, 48, 32,
              58, 32, 95, 97, 46, 115, 116, 111, 112, 83, 116, 97, 116, 101, 77,
              97, 99, 104, 105, 110, 101, 40, 41, 41, 32, 33, 61, 32, 110, 117,
              108, 108, 32, 63, 32, 95, 98, 32, 58, 32, 102, 97, 108, 115, 101,
              59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 115, 116, 111,
              112, 112, 101, 100, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 116, 104, 105, 115, 46, 95, 99, 108, 101, 97, 110, 117, 112,
              83, 116, 97, 116, 101, 77, 97, 99, 104, 105, 110, 101, 76, 105,
              115, 116, 101, 110, 101, 114, 115, 40, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114,
              110, 32, 115, 116, 111, 112, 112, 101, 100, 59, 10, 32, 32, 32,
              32, 125, 10, 32, 32, 32, 32, 95, 103, 101, 116, 80, 111, 105, 110,
              116, 101, 114, 80, 111, 115, 105, 116, 105, 111, 110, 40, 101,
              118, 101, 110, 116, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 99,
              111, 110, 115, 116, 32, 114, 101, 99, 116, 32, 61, 32, 116, 104,
              105, 115, 46, 95, 99, 97, 110, 118, 97, 115, 46, 103, 101, 116,
              66, 111, 117, 110, 100, 105, 110, 103, 67, 108, 105, 101, 110,
              116, 82, 101, 99, 116, 40, 41, 59, 10, 32, 32, 32, 32, 32, 32, 99,
              111, 110, 115, 116, 32, 115, 99, 97, 108, 101, 88, 32, 61, 32,
              116, 104, 105, 115, 46, 95, 99, 97, 110, 118, 97, 115, 46, 119,
              105, 100, 116, 104, 32, 47, 32, 114, 101, 99, 116, 46, 119, 105,
              100, 116, 104, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115,
              116, 32, 115, 99, 97, 108, 101, 89, 32, 61, 32, 116, 104, 105,
              115, 46, 95, 99, 97, 110, 118, 97, 115, 46, 104, 101, 105, 103,
              104, 116, 32, 47, 32, 114, 101, 99, 116, 46, 104, 101, 105, 103,
              104, 116, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116,
              32, 100, 101, 118, 105, 99, 101, 80, 105, 120, 101, 108, 82, 97,
              116, 105, 111, 32, 61, 32, 116, 104, 105, 115, 46, 95, 114, 101,
              110, 100, 101, 114, 67, 111, 110, 102, 105, 103, 46, 100, 101,
              118, 105, 99, 101, 80, 105, 120, 101, 108, 82, 97, 116, 105, 111,
              32, 124, 124, 32, 119, 105, 110, 100, 111, 119, 46, 100, 101, 118,
              105, 99, 101, 80, 105, 120, 101, 108, 82, 97, 116, 105, 111, 32,
              124, 124, 32, 49, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110,
              115, 116, 32, 120, 32, 61, 32, 40, 101, 118, 101, 110, 116, 46,
              99, 108, 105, 101, 110, 116, 88, 32, 45, 32, 114, 101, 99, 116,
              46, 108, 101, 102, 116, 41, 32, 42, 32, 115, 99, 97, 108, 101, 88,
              32, 47, 32, 100, 101, 118, 105, 99, 101, 80, 105, 120, 101, 108,
              82, 97, 116, 105, 111, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111,
              110, 115, 116, 32, 121, 32, 61, 32, 40, 101, 118, 101, 110, 116,
              46, 99, 108, 105, 101, 110, 116, 89, 32, 45, 32, 114, 101, 99,
              116, 46, 116, 111, 112, 41, 32, 42, 32, 115, 99, 97, 108, 101, 89,
              32, 47, 32, 100, 101, 118, 105, 99, 101, 80, 105, 120, 101, 108,
              82, 97, 116, 105, 111, 59, 10, 32, 32, 32, 32, 32, 32, 114, 101,
              116, 117, 114, 110, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              120, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 121, 10, 32, 32, 32,
              32, 32, 32, 125, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32,
              95, 111, 110, 80, 111, 105, 110, 116, 101, 114, 85, 112, 40, 101,
              118, 101, 110, 116, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 99,
              111, 110, 115, 116, 32, 123, 32, 120, 44, 32, 121, 32, 125, 32,
              61, 32, 116, 104, 105, 115, 46, 95, 103, 101, 116, 80, 111, 105,
              110, 116, 101, 114, 80, 111, 115, 105, 116, 105, 111, 110, 40,
              101, 118, 101, 110, 116, 41, 59, 10, 32, 32, 32, 32, 32, 32, 116,
              104, 105, 115, 46, 112, 111, 115, 116, 80, 111, 105, 110, 116,
              101, 114, 85, 112, 69, 118, 101, 110, 116, 40, 120, 44, 32, 121,
              41, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 95, 111, 110,
              80, 111, 105, 110, 116, 101, 114, 68, 111, 119, 110, 40, 101, 118,
              101, 110, 116, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 99, 111,
              110, 115, 116, 32, 123, 32, 120, 44, 32, 121, 32, 125, 32, 61, 32,
              116, 104, 105, 115, 46, 95, 103, 101, 116, 80, 111, 105, 110, 116,
              101, 114, 80, 111, 115, 105, 116, 105, 111, 110, 40, 101, 118,
              101, 110, 116, 41, 59, 10, 32, 32, 32, 32, 32, 32, 116, 104, 105,
              115, 46, 112, 111, 115, 116, 80, 111, 105, 110, 116, 101, 114, 68,
              111, 119, 110, 69, 118, 101, 110, 116, 40, 120, 44, 32, 121, 41,
              59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 95, 111, 110, 80,
              111, 105, 110, 116, 101, 114, 77, 111, 118, 101, 40, 101, 118,
              101, 110, 116, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 99, 111,
              110, 115, 116, 32, 123, 32, 120, 44, 32, 121, 32, 125, 32, 61, 32,
              116, 104, 105, 115, 46, 95, 103, 101, 116, 80, 111, 105, 110, 116,
              101, 114, 80, 111, 115, 105, 116, 105, 111, 110, 40, 101, 118,
              101, 110, 116, 41, 59, 10, 32, 32, 32, 32, 32, 32, 116, 104, 105,
              115, 46, 112, 111, 115, 116, 80, 111, 105, 110, 116, 101, 114, 77,
              111, 118, 101, 69, 118, 101, 110, 116, 40, 120, 44, 32, 121, 41,
              59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 95, 111, 110, 80,
              111, 105, 110, 116, 101, 114, 69, 110, 116, 101, 114, 40, 101,
              118, 101, 110, 116, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 99,
              111, 110, 115, 116, 32, 123, 32, 120, 44, 32, 121, 32, 125, 32,
              61, 32, 116, 104, 105, 115, 46, 95, 103, 101, 116, 80, 111, 105,
              110, 116, 101, 114, 80, 111, 115, 105, 116, 105, 111, 110, 40,
              101, 118, 101, 110, 116, 41, 59, 10, 32, 32, 32, 32, 32, 32, 116,
              104, 105, 115, 46, 112, 111, 115, 116, 80, 111, 105, 110, 116,
              101, 114, 69, 110, 116, 101, 114, 69, 118, 101, 110, 116, 40, 120,
              44, 32, 121, 41, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32,
              95, 111, 110, 80, 111, 105, 110, 116, 101, 114, 76, 101, 97, 118,
              101, 40, 101, 118, 101, 110, 116, 41, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 99, 111, 110, 115, 116, 32, 123, 32, 120, 44, 32, 121, 32,
              125, 32, 61, 32, 116, 104, 105, 115, 46, 95, 103, 101, 116, 80,
              111, 105, 110, 116, 101, 114, 80, 111, 115, 105, 116, 105, 111,
              110, 40, 101, 118, 101, 110, 116, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 116, 104, 105, 115, 46, 112, 111, 115, 116, 80, 111, 105, 110,
              116, 101, 114, 69, 120, 105, 116, 69, 118, 101, 110, 116, 40, 120,
              44, 32, 121, 41, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32,
              112, 111, 115, 116, 80, 111, 105, 110, 116, 101, 114, 85, 112, 69,
              118, 101, 110, 116, 40, 120, 44, 32, 121, 41, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 118, 97, 114, 32, 95, 97, 59, 10, 32, 32, 32, 32,
              32, 32, 114, 101, 116, 117, 114, 110, 32, 40, 95, 97, 32, 61, 32,
              116, 104, 105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105,
              101, 67, 111, 114, 101, 41, 32, 61, 61, 32, 110, 117, 108, 108,
              32, 63, 32, 118, 111, 105, 100, 32, 48, 32, 58, 32, 95, 97, 46,
              112, 111, 115, 116, 80, 111, 105, 110, 116, 101, 114, 85, 112, 69,
              118, 101, 110, 116, 40, 120, 44, 32, 121, 41, 59, 10, 32, 32, 32,
              32, 125, 10, 32, 32, 32, 32, 112, 111, 115, 116, 80, 111, 105,
              110, 116, 101, 114, 68, 111, 119, 110, 69, 118, 101, 110, 116, 40,
              120, 44, 32, 121, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 118,
              97, 114, 32, 95, 97, 59, 10, 32, 32, 32, 32, 32, 32, 114, 101,
              116, 117, 114, 110, 32, 40, 95, 97, 32, 61, 32, 116, 104, 105,
              115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105, 101, 67, 111,
              114, 101, 41, 32, 61, 61, 32, 110, 117, 108, 108, 32, 63, 32, 118,
              111, 105, 100, 32, 48, 32, 58, 32, 95, 97, 46, 112, 111, 115, 116,
              80, 111, 105, 110, 116, 101, 114, 68, 111, 119, 110, 69, 118, 101,
              110, 116, 40, 120, 44, 32, 121, 41, 59, 10, 32, 32, 32, 32, 125,
              10, 32, 32, 32, 32, 112, 111, 115, 116, 80, 111, 105, 110, 116,
              101, 114, 77, 111, 118, 101, 69, 118, 101, 110, 116, 40, 120, 44,
              32, 121, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 118, 97, 114,
              32, 95, 97, 59, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117,
              114, 110, 32, 40, 95, 97, 32, 61, 32, 116, 104, 105, 115, 46, 95,
              100, 111, 116, 76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 41,
              32, 61, 61, 32, 110, 117, 108, 108, 32, 63, 32, 118, 111, 105,
              100, 32, 48, 32, 58, 32, 95, 97, 46, 112, 111, 115, 116, 80, 111,
              105, 110, 116, 101, 114, 77, 111, 118, 101, 69, 118, 101, 110,
              116, 40, 120, 44, 32, 121, 41, 59, 10, 32, 32, 32, 32, 125, 10,
              32, 32, 32, 32, 112, 111, 115, 116, 80, 111, 105, 110, 116, 101,
              114, 69, 110, 116, 101, 114, 69, 118, 101, 110, 116, 40, 120, 44,
              32, 121, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 118, 97, 114,
              32, 95, 97, 59, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117,
              114, 110, 32, 40, 95, 97, 32, 61, 32, 116, 104, 105, 115, 46, 95,
              100, 111, 116, 76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 41,
              32, 61, 61, 32, 110, 117, 108, 108, 32, 63, 32, 118, 111, 105,
              100, 32, 48, 32, 58, 32, 95, 97, 46, 112, 111, 115, 116, 80, 111,
              105, 110, 116, 101, 114, 69, 110, 116, 101, 114, 69, 118, 101,
              110, 116, 40, 120, 44, 32, 121, 41, 59, 10, 32, 32, 32, 32, 125,
              10, 32, 32, 32, 32, 112, 111, 115, 116, 80, 111, 105, 110, 116,
              101, 114, 69, 120, 105, 116, 69, 118, 101, 110, 116, 40, 120, 44,
              32, 121, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 118, 97, 114,
              32, 95, 97, 59, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117,
              114, 110, 32, 40, 95, 97, 32, 61, 32, 116, 104, 105, 115, 46, 95,
              100, 111, 116, 76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 41,
              32, 61, 61, 32, 110, 117, 108, 108, 32, 63, 32, 118, 111, 105,
              100, 32, 48, 32, 58, 32, 95, 97, 46, 112, 111, 115, 116, 80, 111,
              105, 110, 116, 101, 114, 69, 120, 105, 116, 69, 118, 101, 110,
              116, 40, 120, 44, 32, 121, 41, 59, 10, 32, 32, 32, 32, 125, 10,
              32, 32, 32, 32, 103, 101, 116, 83, 116, 97, 116, 101, 77, 97, 99,
              104, 105, 110, 101, 76, 105, 115, 116, 101, 110, 101, 114, 115,
              40, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33,
              116, 104, 105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116, 105,
              101, 67, 111, 114, 101, 41, 32, 114, 101, 116, 117, 114, 110, 32,
              91, 93, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116,
              32, 108, 105, 115, 116, 101, 110, 101, 114, 115, 86, 101, 99, 116,
              111, 114, 32, 61, 32, 116, 104, 105, 115, 46, 95, 100, 111, 116,
              76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 46, 115, 116, 97,
              116, 101, 77, 97, 99, 104, 105, 110, 101, 70, 114, 97, 109, 101,
              119, 111, 114, 107, 83, 101, 116, 117, 112, 40, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 108, 105, 115,
              116, 101, 110, 101, 114, 115, 32, 61, 32, 91, 93, 59, 10, 32, 32,
              32, 32, 32, 32, 102, 111, 114, 32, 40, 108, 101, 116, 32, 105, 32,
              61, 32, 48, 59, 32, 105, 32, 60, 32, 108, 105, 115, 116, 101, 110,
              101, 114, 115, 86, 101, 99, 116, 111, 114, 46, 115, 105, 122, 101,
              40, 41, 59, 32, 105, 32, 43, 61, 32, 49, 41, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 108, 105, 115, 116, 101, 110, 101, 114,
              115, 46, 112, 117, 115, 104, 40, 108, 105, 115, 116, 101, 110,
              101, 114, 115, 86, 101, 99, 116, 111, 114, 46, 103, 101, 116, 40,
              105, 41, 41, 59, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32,
              32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 108, 105, 115, 116,
              101, 110, 101, 114, 115, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32,
              32, 32, 95, 115, 101, 116, 117, 112, 83, 116, 97, 116, 101, 77,
              97, 99, 104, 105, 110, 101, 76, 105, 115, 116, 101, 110, 101, 114,
              115, 40, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32,
              40, 73, 83, 95, 66, 82, 79, 87, 83, 69, 82, 32, 38, 38, 32, 116,
              104, 105, 115, 46, 95, 99, 97, 110, 118, 97, 115, 32, 105, 110,
              115, 116, 97, 110, 99, 101, 111, 102, 32, 72, 84, 77, 76, 67, 97,
              110, 118, 97, 115, 69, 108, 101, 109, 101, 110, 116, 32, 38, 38,
              32, 116, 104, 105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116,
              105, 101, 67, 111, 114, 101, 32, 33, 61, 61, 32, 110, 117, 108,
              108, 32, 38, 38, 32, 116, 104, 105, 115, 46, 105, 115, 76, 111,
              97, 100, 101, 100, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 99, 111, 110, 115, 116, 32, 108, 105, 115, 116, 101, 110, 101,
              114, 115, 32, 61, 32, 116, 104, 105, 115, 46, 103, 101, 116, 83,
              116, 97, 116, 101, 77, 97, 99, 104, 105, 110, 101, 76, 105, 115,
              116, 101, 110, 101, 114, 115, 40, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 105, 102, 32, 40, 108, 105, 115, 116, 101, 110, 101,
              114, 115, 46, 105, 110, 99, 108, 117, 100, 101, 115, 40, 34, 80,
              111, 105, 110, 116, 101, 114, 85, 112, 34, 41, 41, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46,
              95, 99, 97, 110, 118, 97, 115, 46, 97, 100, 100, 69, 118, 101,
              110, 116, 76, 105, 115, 116, 101, 110, 101, 114, 40, 34, 112, 111,
              105, 110, 116, 101, 114, 117, 112, 34, 44, 32, 116, 104, 105, 115,
              46, 95, 112, 111, 105, 110, 116, 101, 114, 85, 112, 77, 101, 116,
              104, 111, 100, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 108, 105,
              115, 116, 101, 110, 101, 114, 115, 46, 105, 110, 99, 108, 117,
              100, 101, 115, 40, 34, 80, 111, 105, 110, 116, 101, 114, 68, 111,
              119, 110, 34, 41, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 116, 104, 105, 115, 46, 95, 99, 97, 110, 118, 97, 115, 46,
              97, 100, 100, 69, 118, 101, 110, 116, 76, 105, 115, 116, 101, 110,
              101, 114, 40, 34, 112, 111, 105, 110, 116, 101, 114, 100, 111,
              119, 110, 34, 44, 32, 116, 104, 105, 115, 46, 95, 112, 111, 105,
              110, 116, 101, 114, 68, 111, 119, 110, 77, 101, 116, 104, 111,
              100, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 108, 105, 115, 116, 101,
              110, 101, 114, 115, 46, 105, 110, 99, 108, 117, 100, 101, 115, 40,
              34, 80, 111, 105, 110, 116, 101, 114, 77, 111, 118, 101, 34, 41,
              41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104,
              105, 115, 46, 95, 99, 97, 110, 118, 97, 115, 46, 97, 100, 100, 69,
              118, 101, 110, 116, 76, 105, 115, 116, 101, 110, 101, 114, 40, 34,
              112, 111, 105, 110, 116, 101, 114, 109, 111, 118, 101, 34, 44, 32,
              116, 104, 105, 115, 46, 95, 112, 111, 105, 110, 116, 101, 114, 77,
              111, 118, 101, 77, 101, 116, 104, 111, 100, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              105, 102, 32, 40, 108, 105, 115, 116, 101, 110, 101, 114, 115, 46,
              105, 110, 99, 108, 117, 100, 101, 115, 40, 34, 80, 111, 105, 110,
              116, 101, 114, 69, 110, 116, 101, 114, 34, 41, 41, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46,
              95, 99, 97, 110, 118, 97, 115, 46, 97, 100, 100, 69, 118, 101,
              110, 116, 76, 105, 115, 116, 101, 110, 101, 114, 40, 34, 112, 111,
              105, 110, 116, 101, 114, 101, 110, 116, 101, 114, 34, 44, 32, 116,
              104, 105, 115, 46, 95, 112, 111, 105, 110, 116, 101, 114, 69, 110,
              116, 101, 114, 77, 101, 116, 104, 111, 100, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              105, 102, 32, 40, 108, 105, 115, 116, 101, 110, 101, 114, 115, 46,
              105, 110, 99, 108, 117, 100, 101, 115, 40, 34, 80, 111, 105, 110,
              116, 101, 114, 69, 120, 105, 116, 34, 41, 41, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 99,
              97, 110, 118, 97, 115, 46, 97, 100, 100, 69, 118, 101, 110, 116,
              76, 105, 115, 116, 101, 110, 101, 114, 40, 34, 112, 111, 105, 110,
              116, 101, 114, 108, 101, 97, 118, 101, 34, 44, 32, 116, 104, 105,
              115, 46, 95, 112, 111, 105, 110, 116, 101, 114, 69, 120, 105, 116,
              77, 101, 116, 104, 111, 100, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 95, 99, 108, 101, 97, 110, 117, 112, 83,
              116, 97, 116, 101, 77, 97, 99, 104, 105, 110, 101, 76, 105, 115,
              116, 101, 110, 101, 114, 115, 40, 41, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 105, 102, 32, 40, 73, 83, 95, 66, 82, 79, 87, 83, 69, 82,
              32, 38, 38, 32, 116, 104, 105, 115, 46, 95, 99, 97, 110, 118, 97,
              115, 32, 105, 110, 115, 116, 97, 110, 99, 101, 111, 102, 32, 72,
              84, 77, 76, 67, 97, 110, 118, 97, 115, 69, 108, 101, 109, 101,
              110, 116, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116,
              104, 105, 115, 46, 95, 99, 97, 110, 118, 97, 115, 46, 114, 101,
              109, 111, 118, 101, 69, 118, 101, 110, 116, 76, 105, 115, 116,
              101, 110, 101, 114, 40, 34, 112, 111, 105, 110, 116, 101, 114,
              117, 112, 34, 44, 32, 116, 104, 105, 115, 46, 95, 112, 111, 105,
              110, 116, 101, 114, 85, 112, 77, 101, 116, 104, 111, 100, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95,
              99, 97, 110, 118, 97, 115, 46, 114, 101, 109, 111, 118, 101, 69,
              118, 101, 110, 116, 76, 105, 115, 116, 101, 110, 101, 114, 40, 34,
              112, 111, 105, 110, 116, 101, 114, 100, 111, 119, 110, 34, 44, 32,
              116, 104, 105, 115, 46, 95, 112, 111, 105, 110, 116, 101, 114, 68,
              111, 119, 110, 77, 101, 116, 104, 111, 100, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 116, 104, 105, 115, 46, 95, 99, 97, 110,
              118, 97, 115, 46, 114, 101, 109, 111, 118, 101, 69, 118, 101, 110,
              116, 76, 105, 115, 116, 101, 110, 101, 114, 40, 34, 112, 111, 105,
              110, 116, 101, 114, 109, 111, 118, 101, 34, 44, 32, 116, 104, 105,
              115, 46, 95, 112, 111, 105, 110, 116, 101, 114, 77, 111, 118, 101,
              77, 101, 116, 104, 111, 100, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 116, 104, 105, 115, 46, 95, 99, 97, 110, 118, 97, 115, 46,
              114, 101, 109, 111, 118, 101, 69, 118, 101, 110, 116, 76, 105,
              115, 116, 101, 110, 101, 114, 40, 34, 112, 111, 105, 110, 116,
              101, 114, 101, 110, 116, 101, 114, 34, 44, 32, 116, 104, 105, 115,
              46, 95, 112, 111, 105, 110, 116, 101, 114, 69, 110, 116, 101, 114,
              77, 101, 116, 104, 111, 100, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 116, 104, 105, 115, 46, 95, 99, 97, 110, 118, 97, 115, 46,
              114, 101, 109, 111, 118, 101, 69, 118, 101, 110, 116, 76, 105,
              115, 116, 101, 110, 101, 114, 40, 34, 112, 111, 105, 110, 116,
              101, 114, 108, 101, 97, 118, 101, 34, 44, 32, 116, 104, 105, 115,
              46, 95, 112, 111, 105, 110, 116, 101, 114, 69, 120, 105, 116, 77,
              101, 116, 104, 111, 100, 41, 59, 10, 32, 32, 32, 32, 32, 32, 125,
              10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 108, 111, 97, 100,
              83, 116, 97, 116, 101, 77, 97, 99, 104, 105, 110, 101, 68, 97,
              116, 97, 40, 115, 116, 97, 116, 101, 77, 97, 99, 104, 105, 110,
              101, 68, 97, 116, 97, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32,
              118, 97, 114, 32, 95, 97, 44, 32, 95, 98, 59, 10, 32, 32, 32, 32,
              32, 32, 114, 101, 116, 117, 114, 110, 32, 40, 95, 98, 32, 61, 32,
              40, 95, 97, 32, 61, 32, 116, 104, 105, 115, 46, 95, 100, 111, 116,
              76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 41, 32, 61, 61,
              32, 110, 117, 108, 108, 32, 63, 32, 118, 111, 105, 100, 32, 48,
              32, 58, 32, 95, 97, 46, 108, 111, 97, 100, 83, 116, 97, 116, 101,
              77, 97, 99, 104, 105, 110, 101, 68, 97, 116, 97, 40, 115, 116, 97,
              116, 101, 77, 97, 99, 104, 105, 110, 101, 68, 97, 116, 97, 41, 41,
              32, 33, 61, 32, 110, 117, 108, 108, 32, 63, 32, 95, 98, 32, 58,
              32, 102, 97, 108, 115, 101, 59, 10, 32, 32, 32, 32, 125, 10, 32,
              32, 32, 32, 97, 110, 105, 109, 97, 116, 105, 111, 110, 83, 105,
              122, 101, 40, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 118, 97,
              114, 32, 95, 97, 44, 32, 95, 98, 44, 32, 95, 99, 44, 32, 95, 100,
              59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 119,
              105, 100, 116, 104, 32, 61, 32, 40, 95, 98, 32, 61, 32, 40, 95,
              97, 32, 61, 32, 116, 104, 105, 115, 46, 95, 100, 111, 116, 76,
              111, 116, 116, 105, 101, 67, 111, 114, 101, 41, 32, 61, 61, 32,
              110, 117, 108, 108, 32, 63, 32, 118, 111, 105, 100, 32, 48, 32,
              58, 32, 95, 97, 46, 97, 110, 105, 109, 97, 116, 105, 111, 110, 83,
              105, 122, 101, 40, 41, 46, 103, 101, 116, 40, 48, 41, 41, 32, 33,
              61, 32, 110, 117, 108, 108, 32, 63, 32, 95, 98, 32, 58, 32, 48,
              59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 104,
              101, 105, 103, 104, 116, 32, 61, 32, 40, 95, 100, 32, 61, 32, 40,
              95, 99, 32, 61, 32, 116, 104, 105, 115, 46, 95, 100, 111, 116, 76,
              111, 116, 116, 105, 101, 67, 111, 114, 101, 41, 32, 61, 61, 32,
              110, 117, 108, 108, 32, 63, 32, 118, 111, 105, 100, 32, 48, 32,
              58, 32, 95, 99, 46, 97, 110, 105, 109, 97, 116, 105, 111, 110, 83,
              105, 122, 101, 40, 41, 46, 103, 101, 116, 40, 49, 41, 41, 32, 33,
              61, 32, 110, 117, 108, 108, 32, 63, 32, 95, 100, 32, 58, 32, 48,
              59, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 119, 105, 100, 116, 104,
              44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 104, 101, 105, 103, 104,
              116, 10, 32, 32, 32, 32, 32, 32, 125, 59, 10, 32, 32, 32, 32, 125,
              10, 32, 32, 32, 32, 115, 101, 116, 83, 116, 97, 116, 101, 77, 97,
              99, 104, 105, 110, 101, 66, 111, 111, 108, 101, 97, 110, 67, 111,
              110, 116, 101, 120, 116, 40, 110, 97, 109, 101, 44, 32, 118, 97,
              108, 117, 101, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 118, 97,
              114, 32, 95, 97, 44, 32, 95, 98, 59, 10, 32, 32, 32, 32, 32, 32,
              114, 101, 116, 117, 114, 110, 32, 40, 95, 98, 32, 61, 32, 40, 95,
              97, 32, 61, 32, 116, 104, 105, 115, 46, 95, 100, 111, 116, 76,
              111, 116, 116, 105, 101, 67, 111, 114, 101, 41, 32, 61, 61, 32,
              110, 117, 108, 108, 32, 63, 32, 118, 111, 105, 100, 32, 48, 32,
              58, 32, 95, 97, 46, 115, 101, 116, 83, 116, 97, 116, 101, 77, 97,
              99, 104, 105, 110, 101, 66, 111, 111, 108, 101, 97, 110, 67, 111,
              110, 116, 101, 120, 116, 40, 110, 97, 109, 101, 44, 32, 118, 97,
              108, 117, 101, 41, 41, 32, 33, 61, 32, 110, 117, 108, 108, 32, 63,
              32, 95, 98, 32, 58, 32, 102, 97, 108, 115, 101, 59, 10, 32, 32,
              32, 32, 125, 10, 32, 32, 32, 32, 115, 101, 116, 83, 116, 97, 116,
              101, 77, 97, 99, 104, 105, 110, 101, 78, 117, 109, 101, 114, 105,
              99, 67, 111, 110, 116, 101, 120, 116, 40, 110, 97, 109, 101, 44,
              32, 118, 97, 108, 117, 101, 41, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 118, 97, 114, 32, 95, 97, 44, 32, 95, 98, 59, 10, 32, 32, 32,
              32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 40, 95, 98, 32, 61,
              32, 40, 95, 97, 32, 61, 32, 116, 104, 105, 115, 46, 95, 100, 111,
              116, 76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 41, 32, 61,
              61, 32, 110, 117, 108, 108, 32, 63, 32, 118, 111, 105, 100, 32,
              48, 32, 58, 32, 95, 97, 46, 115, 101, 116, 83, 116, 97, 116, 101,
              77, 97, 99, 104, 105, 110, 101, 78, 117, 109, 101, 114, 105, 99,
              67, 111, 110, 116, 101, 120, 116, 40, 110, 97, 109, 101, 44, 32,
              118, 97, 108, 117, 101, 41, 41, 32, 33, 61, 32, 110, 117, 108,
              108, 32, 63, 32, 95, 98, 32, 58, 32, 102, 97, 108, 115, 101, 59,
              10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 115, 101, 116, 83,
              116, 97, 116, 101, 77, 97, 99, 104, 105, 110, 101, 83, 116, 114,
              105, 110, 103, 67, 111, 110, 116, 101, 120, 116, 40, 110, 97, 109,
              101, 44, 32, 118, 97, 108, 117, 101, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 118, 97, 114, 32, 95, 97, 44, 32, 95, 98, 59, 10, 32,
              32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 40, 95, 98,
              32, 61, 32, 40, 95, 97, 32, 61, 32, 116, 104, 105, 115, 46, 95,
              100, 111, 116, 76, 111, 116, 116, 105, 101, 67, 111, 114, 101, 41,
              32, 61, 61, 32, 110, 117, 108, 108, 32, 63, 32, 118, 111, 105,
              100, 32, 48, 32, 58, 32, 95, 97, 46, 115, 101, 116, 83, 116, 97,
              116, 101, 77, 97, 99, 104, 105, 110, 101, 83, 116, 114, 105, 110,
              103, 67, 111, 110, 116, 101, 120, 116, 40, 110, 97, 109, 101, 44,
              32, 118, 97, 108, 117, 101, 41, 41, 32, 33, 61, 32, 110, 117, 108,
              108, 32, 63, 32, 95, 98, 32, 58, 32, 102, 97, 108, 115, 101, 59,
              10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 47, 42, 42, 10, 32,
              32, 32, 32, 32, 42, 32, 71, 101, 116, 32, 116, 104, 101, 32, 98,
              111, 117, 110, 100, 115, 32, 111, 102, 32, 97, 32, 108, 97, 121,
              101, 114, 32, 98, 121, 32, 105, 116, 115, 32, 110, 97, 109, 101,
              10, 32, 32, 32, 32, 32, 42, 32, 64, 112, 97, 114, 97, 109, 32,
              108, 97, 121, 101, 114, 78, 97, 109, 101, 32, 45, 32, 84, 104,
              101, 32, 110, 97, 109, 101, 32, 111, 102, 32, 116, 104, 101, 32,
              108, 97, 121, 101, 114, 10, 32, 32, 32, 32, 32, 42, 32, 64, 114,
              101, 116, 117, 114, 110, 115, 32, 84, 104, 101, 32, 98, 111, 117,
              110, 100, 115, 32, 111, 102, 32, 116, 104, 101, 32, 108, 97, 121,
              101, 114, 10, 32, 32, 32, 32, 32, 42, 10, 32, 32, 32, 32, 32, 42,
              32, 64, 101, 120, 97, 109, 112, 108, 101, 10, 32, 32, 32, 32, 32,
              42, 32, 96, 96, 96, 116, 121, 112, 101, 115, 99, 114, 105, 112,
              116, 10, 32, 32, 32, 32, 32, 42, 32, 47, 47, 32, 68, 114, 97, 119,
              32, 97, 32, 114, 101, 99, 116, 97, 110, 103, 108, 101, 32, 97,
              114, 111, 117, 110, 100, 32, 116, 104, 101, 32, 108, 97, 121, 101,
              114, 32, 39, 76, 97, 121, 101, 114, 32, 49, 39, 10, 32, 32, 32,
              32, 32, 42, 32, 100, 111, 116, 76, 111, 116, 116, 105, 101, 46,
              97, 100, 100, 69, 118, 101, 110, 116, 76, 105, 115, 116, 101, 110,
              101, 114, 40, 39, 114, 101, 110, 100, 101, 114, 39, 44, 32, 40,
              41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 42, 32, 32, 32,
              99, 111, 110, 115, 116, 32, 98, 111, 117, 110, 100, 105, 110, 103,
              66, 111, 120, 32, 61, 32, 100, 111, 116, 76, 111, 116, 116, 105,
              101, 46, 103, 101, 116, 76, 97, 121, 101, 114, 66, 111, 117, 110,
              100, 105, 110, 103, 66, 111, 120, 40, 39, 76, 97, 121, 101, 114,
              32, 49, 39, 41, 59, 10, 32, 32, 32, 32, 32, 42, 10, 32, 32, 32,
              32, 32, 42, 32, 32, 32, 105, 102, 32, 40, 98, 111, 117, 110, 100,
              105, 110, 103, 66, 111, 120, 41, 32, 123, 10, 32, 32, 32, 32, 32,
              42, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 123, 32, 120,
              44, 32, 121, 44, 32, 119, 105, 100, 116, 104, 44, 32, 104, 101,
              105, 103, 104, 116, 32, 125, 32, 61, 32, 98, 111, 117, 110, 100,
              105, 110, 103, 66, 111, 120, 59, 10, 32, 32, 32, 32, 32, 42, 32,
              32, 32, 32, 32, 99, 111, 110, 116, 101, 120, 116, 46, 115, 116,
              114, 111, 107, 101, 82, 101, 99, 116, 40, 120, 44, 32, 121, 44,
              32, 119, 105, 100, 116, 104, 44, 32, 104, 101, 105, 103, 104, 116,
              41, 59, 10, 32, 32, 32, 32, 32, 42, 32, 32, 32, 125, 10, 32, 32,
              32, 32, 32, 42, 32, 125, 41, 59, 10, 32, 32, 32, 32, 32, 42, 32,
              96, 96, 96, 10, 32, 32, 32, 32, 32, 42, 47, 10, 32, 32, 32, 32,
              103, 101, 116, 76, 97, 121, 101, 114, 66, 111, 117, 110, 100, 105,
              110, 103, 66, 111, 120, 40, 108, 97, 121, 101, 114, 78, 97, 109,
              101, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 118, 97, 114, 32,
              95, 97, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116,
              32, 98, 111, 117, 110, 100, 115, 32, 61, 32, 40, 95, 97, 32, 61,
              32, 116, 104, 105, 115, 46, 95, 100, 111, 116, 76, 111, 116, 116,
              105, 101, 67, 111, 114, 101, 41, 32, 61, 61, 32, 110, 117, 108,
              108, 32, 63, 32, 118, 111, 105, 100, 32, 48, 32, 58, 32, 95, 97,
              46, 103, 101, 116, 76, 97, 121, 101, 114, 66, 111, 117, 110, 100,
              115, 40, 108, 97, 121, 101, 114, 78, 97, 109, 101, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 105, 102, 32, 40, 33, 98, 111, 117, 110, 100,
              115, 41, 32, 114, 101, 116, 117, 114, 110, 32, 118, 111, 105, 100,
              32, 48, 59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 98, 111,
              117, 110, 100, 115, 46, 115, 105, 122, 101, 40, 41, 32, 33, 61,
              61, 32, 52, 41, 32, 114, 101, 116, 117, 114, 110, 32, 118, 111,
              105, 100, 32, 48, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110,
              115, 116, 32, 120, 32, 61, 32, 98, 111, 117, 110, 100, 115, 46,
              103, 101, 116, 40, 48, 41, 59, 10, 32, 32, 32, 32, 32, 32, 99,
              111, 110, 115, 116, 32, 121, 32, 61, 32, 98, 111, 117, 110, 100,
              115, 46, 103, 101, 116, 40, 49, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 99, 111, 110, 115, 116, 32, 119, 105, 100, 116, 104, 32, 61,
              32, 98, 111, 117, 110, 100, 115, 46, 103, 101, 116, 40, 50, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 104,
              101, 105, 103, 104, 116, 32, 61, 32, 98, 111, 117, 110, 100, 115,
              46, 103, 101, 116, 40, 51, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              114, 101, 116, 117, 114, 110, 32, 123, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 120, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 121, 44, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 119, 105, 100, 116, 104, 44, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 104, 101, 105, 103, 104, 116, 10,
              32, 32, 32, 32, 32, 32, 125, 59, 10, 32, 32, 32, 32, 125, 10, 32,
              32, 32, 32, 115, 116, 97, 116, 105, 99, 32, 116, 114, 97, 110,
              115, 102, 111, 114, 109, 84, 104, 101, 109, 101, 84, 111, 76, 111,
              116, 116, 105, 101, 83, 108, 111, 116, 115, 40, 116, 104, 101,
              109, 101, 44, 32, 115, 108, 111, 116, 115, 41, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 118, 97, 114, 32, 95, 97, 44, 32, 95, 98, 59,
              10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 40,
              95, 98, 32, 61, 32, 40, 95, 97, 32, 61, 32, 95, 68, 111, 116, 76,
              111, 116, 116, 105, 101, 46, 95, 119, 97, 115, 109, 77, 111, 100,
              117, 108, 101, 41, 32, 61, 61, 32, 110, 117, 108, 108, 32, 63, 32,
              118, 111, 105, 100, 32, 48, 32, 58, 32, 95, 97, 46, 116, 114, 97,
              110, 115, 102, 111, 114, 109, 84, 104, 101, 109, 101, 84, 111, 76,
              111, 116, 116, 105, 101, 83, 108, 111, 116, 115, 40, 116, 104,
              101, 109, 101, 44, 32, 115, 108, 111, 116, 115, 41, 41, 32, 33,
              61, 32, 110, 117, 108, 108, 32, 63, 32, 95, 98, 32, 58, 32, 34,
              34, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 125, 59, 10, 32, 32,
              95, 95, 112, 117, 98, 108, 105, 99, 70, 105, 101, 108, 100, 40,
              95, 68, 111, 116, 76, 111, 116, 116, 105, 101, 44, 32, 34, 95,
              119, 97, 115, 109, 77, 111, 100, 117, 108, 101, 34, 44, 32, 110,
              117, 108, 108, 41, 59, 10, 32, 32, 118, 97, 114, 32, 68, 111, 116,
              76, 111, 116, 116, 105, 101, 32, 61, 32, 95, 68, 111, 116, 76,
              111, 116, 116, 105, 101, 59, 10, 10, 32, 32, 47, 47, 32, 115, 114,
              99, 47, 119, 111, 114, 107, 101, 114, 47, 100, 111, 116, 108, 111,
              116, 116, 105, 101, 46, 119, 111, 114, 107, 101, 114, 46, 116,
              115, 10, 32, 32, 118, 97, 114, 32, 105, 110, 115, 116, 97, 110,
              99, 101, 115, 77, 97, 112, 32, 61, 32, 47, 42, 32, 64, 95, 95, 80,
              85, 82, 69, 95, 95, 32, 42, 47, 32, 110, 101, 119, 32, 77, 97,
              112, 40, 41, 59, 10, 32, 32, 118, 97, 114, 32, 101, 118, 101, 110,
              116, 72, 97, 110, 100, 108, 101, 114, 77, 97, 112, 32, 61, 32,
              123, 10, 32, 32, 32, 32, 114, 101, 97, 100, 121, 58, 32, 40, 105,
              110, 115, 116, 97, 110, 99, 101, 73, 100, 41, 32, 61, 62, 32, 40,
              101, 118, 101, 110, 116, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 99, 111, 110, 115, 116, 32, 114, 101, 115, 112, 111,
              110, 115, 101, 32, 61, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 105, 100, 58, 32, 34, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 109, 101, 116, 104, 111, 100, 58, 32, 34, 111, 110, 82, 101,
              97, 100, 121, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 114,
              101, 115, 117, 108, 116, 58, 32, 123, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100, 44,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 101, 118, 101, 110,
              116, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32,
              32, 32, 125, 59, 10, 32, 32, 32, 32, 32, 32, 115, 101, 108, 102,
              46, 112, 111, 115, 116, 77, 101, 115, 115, 97, 103, 101, 40, 114,
              101, 115, 112, 111, 110, 115, 101, 41, 59, 10, 32, 32, 32, 32,
              125, 44, 10, 32, 32, 32, 32, 99, 111, 109, 112, 108, 101, 116,
              101, 58, 32, 40, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100,
              41, 32, 61, 62, 32, 40, 101, 118, 101, 110, 116, 41, 32, 61, 62,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32,
              114, 101, 115, 112, 111, 110, 115, 101, 32, 61, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 105, 100, 58, 32, 34, 34, 44, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 109, 101, 116, 104, 111, 100, 58, 32,
              34, 111, 110, 67, 111, 109, 112, 108, 101, 116, 101, 34, 44, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 115, 117, 108, 116, 58,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 110,
              115, 116, 97, 110, 99, 101, 73, 100, 44, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 101, 118, 101, 110, 116, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 125, 59, 10, 32,
              32, 32, 32, 32, 32, 115, 101, 108, 102, 46, 112, 111, 115, 116,
              77, 101, 115, 115, 97, 103, 101, 40, 114, 101, 115, 112, 111, 110,
              115, 101, 41, 59, 10, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32,
              108, 111, 97, 100, 58, 32, 40, 105, 110, 115, 116, 97, 110, 99,
              101, 73, 100, 41, 32, 61, 62, 32, 40, 101, 118, 101, 110, 116, 41,
              32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110,
              115, 116, 32, 108, 111, 97, 100, 69, 118, 101, 110, 116, 32, 61,
              32, 101, 118, 101, 110, 116, 59, 10, 32, 32, 32, 32, 32, 32, 99,
              111, 110, 115, 116, 32, 114, 101, 115, 112, 111, 110, 115, 101,
              32, 61, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 100, 58,
              32, 34, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 109, 101, 116,
              104, 111, 100, 58, 32, 34, 111, 110, 76, 111, 97, 100, 34, 44, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 115, 117, 108, 116, 58,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 110,
              115, 116, 97, 110, 99, 101, 73, 100, 44, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 101, 118, 101, 110, 116, 58, 32, 108, 111, 97,
              100, 69, 118, 101, 110, 116, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 32, 32, 125, 59, 10, 32, 32, 32, 32, 32,
              32, 115, 101, 108, 102, 46, 112, 111, 115, 116, 77, 101, 115, 115,
              97, 103, 101, 40, 114, 101, 115, 112, 111, 110, 115, 101, 41, 59,
              10, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 108, 111, 97,
              100, 69, 114, 114, 111, 114, 58, 32, 40, 105, 110, 115, 116, 97,
              110, 99, 101, 73, 100, 41, 32, 61, 62, 32, 40, 101, 118, 101, 110,
              116, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 99, 111,
              110, 115, 116, 32, 108, 111, 97, 100, 69, 114, 114, 111, 114, 69,
              118, 101, 110, 116, 32, 61, 32, 101, 118, 101, 110, 116, 59, 10,
              32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 114, 101, 115,
              112, 111, 110, 115, 101, 32, 61, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 105, 100, 58, 32, 34, 34, 44, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 109, 101, 116, 104, 111, 100, 58, 32, 34, 111, 110,
              76, 111, 97, 100, 69, 114, 114, 111, 114, 34, 44, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 114, 101, 115, 117, 108, 116, 58, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 110, 115, 116, 97,
              110, 99, 101, 73, 100, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 101, 118, 101, 110, 116, 58, 32, 108, 111, 97, 100, 69, 114,
              114, 111, 114, 69, 118, 101, 110, 116, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 125, 59, 10, 32, 32, 32,
              32, 32, 32, 115, 101, 108, 102, 46, 112, 111, 115, 116, 77, 101,
              115, 115, 97, 103, 101, 40, 114, 101, 115, 112, 111, 110, 115,
              101, 41, 59, 10, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 108,
              111, 111, 112, 58, 32, 40, 105, 110, 115, 116, 97, 110, 99, 101,
              73, 100, 41, 32, 61, 62, 32, 40, 101, 118, 101, 110, 116, 41, 32,
              61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115,
              116, 32, 108, 111, 111, 112, 69, 118, 101, 110, 116, 32, 61, 32,
              101, 118, 101, 110, 116, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111,
              110, 115, 116, 32, 114, 101, 115, 112, 111, 110, 115, 101, 32, 61,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 100, 58, 32, 34,
              34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 109, 101, 116, 104,
              111, 100, 58, 32, 34, 111, 110, 76, 111, 111, 112, 34, 44, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 114, 101, 115, 117, 108, 116, 58, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 110, 115,
              116, 97, 110, 99, 101, 73, 100, 44, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 101, 118, 101, 110, 116, 58, 32, 108, 111, 111,
              112, 69, 118, 101, 110, 116, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 32, 32, 125, 59, 10, 32, 32, 32, 32, 32,
              32, 115, 101, 108, 102, 46, 112, 111, 115, 116, 77, 101, 115, 115,
              97, 103, 101, 40, 114, 101, 115, 112, 111, 110, 115, 101, 41, 59,
              10, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 112, 108, 97,
              121, 58, 32, 40, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100,
              41, 32, 61, 62, 32, 40, 101, 118, 101, 110, 116, 41, 32, 61, 62,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32,
              112, 108, 97, 121, 69, 118, 101, 110, 116, 32, 61, 32, 101, 118,
              101, 110, 116, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115,
              116, 32, 114, 101, 115, 112, 111, 110, 115, 101, 32, 61, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 100, 58, 32, 34, 34, 44,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 109, 101, 116, 104, 111, 100,
              58, 32, 34, 111, 110, 80, 108, 97, 121, 34, 44, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 114, 101, 115, 117, 108, 116, 58, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 110, 115, 116, 97,
              110, 99, 101, 73, 100, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 101, 118, 101, 110, 116, 58, 32, 112, 108, 97, 121, 69, 118,
              101, 110, 116, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32,
              32, 32, 32, 32, 32, 125, 59, 10, 32, 32, 32, 32, 32, 32, 115, 101,
              108, 102, 46, 112, 111, 115, 116, 77, 101, 115, 115, 97, 103, 101,
              40, 114, 101, 115, 112, 111, 110, 115, 101, 41, 59, 10, 32, 32,
              32, 32, 125, 44, 10, 32, 32, 32, 32, 112, 97, 117, 115, 101, 58,
              32, 40, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100, 41, 32, 61,
              62, 32, 40, 101, 118, 101, 110, 116, 41, 32, 61, 62, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 112, 97, 117,
              115, 101, 69, 118, 101, 110, 116, 32, 61, 32, 101, 118, 101, 110,
              116, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32,
              114, 101, 115, 112, 111, 110, 115, 101, 32, 61, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 105, 100, 58, 32, 34, 34, 44, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 109, 101, 116, 104, 111, 100, 58, 32,
              34, 111, 110, 80, 97, 117, 115, 101, 34, 44, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 114, 101, 115, 117, 108, 116, 58, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 110, 115, 116, 97, 110,
              99, 101, 73, 100, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              101, 118, 101, 110, 116, 58, 32, 112, 97, 117, 115, 101, 69, 118,
              101, 110, 116, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32,
              32, 32, 32, 32, 32, 125, 59, 10, 32, 32, 32, 32, 32, 32, 115, 101,
              108, 102, 46, 112, 111, 115, 116, 77, 101, 115, 115, 97, 103, 101,
              40, 114, 101, 115, 112, 111, 110, 115, 101, 41, 59, 10, 32, 32,
              32, 32, 125, 44, 10, 32, 32, 32, 32, 115, 116, 111, 112, 58, 32,
              40, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100, 41, 32, 61, 62,
              32, 40, 101, 118, 101, 110, 116, 41, 32, 61, 62, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 115, 116, 111,
              112, 69, 118, 101, 110, 116, 32, 61, 32, 101, 118, 101, 110, 116,
              59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 114,
              101, 115, 112, 111, 110, 115, 101, 32, 61, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 105, 100, 58, 32, 34, 34, 44, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 109, 101, 116, 104, 111, 100, 58, 32, 34,
              111, 110, 83, 116, 111, 112, 34, 44, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 114, 101, 115, 117, 108, 116, 58, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 32, 105, 110, 115, 116, 97, 110, 99, 101,
              73, 100, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 101, 118,
              101, 110, 116, 58, 32, 115, 116, 111, 112, 69, 118, 101, 110, 116,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32,
              32, 125, 59, 10, 32, 32, 32, 32, 32, 32, 115, 101, 108, 102, 46,
              112, 111, 115, 116, 77, 101, 115, 115, 97, 103, 101, 40, 114, 101,
              115, 112, 111, 110, 115, 101, 41, 59, 10, 32, 32, 32, 32, 125, 44,
              10, 32, 32, 32, 32, 102, 114, 97, 109, 101, 58, 32, 40, 105, 110,
              115, 116, 97, 110, 99, 101, 73, 100, 41, 32, 61, 62, 32, 40, 101,
              118, 101, 110, 116, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 99, 111, 110, 115, 116, 32, 102, 114, 97, 109, 101, 69,
              118, 101, 110, 116, 32, 61, 32, 101, 118, 101, 110, 116, 59, 10,
              32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 114, 101, 115,
              112, 111, 110, 115, 101, 32, 61, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 105, 100, 58, 32, 34, 34, 44, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 109, 101, 116, 104, 111, 100, 58, 32, 34, 111, 110,
              70, 114, 97, 109, 101, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              114, 101, 115, 117, 108, 116, 58, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100,
              44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 101, 118, 101,
              110, 116, 58, 32, 102, 114, 97, 109, 101, 69, 118, 101, 110, 116,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32,
              32, 125, 59, 10, 32, 32, 32, 32, 32, 32, 115, 101, 108, 102, 46,
              112, 111, 115, 116, 77, 101, 115, 115, 97, 103, 101, 40, 114, 101,
              115, 112, 111, 110, 115, 101, 41, 59, 10, 32, 32, 32, 32, 125, 44,
              10, 32, 32, 32, 32, 114, 101, 110, 100, 101, 114, 58, 32, 40, 105,
              110, 115, 116, 97, 110, 99, 101, 73, 100, 41, 32, 61, 62, 32, 40,
              101, 118, 101, 110, 116, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 99, 111, 110, 115, 116, 32, 114, 101, 110, 100, 101,
              114, 69, 118, 101, 110, 116, 32, 61, 32, 101, 118, 101, 110, 116,
              59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 114,
              101, 115, 112, 111, 110, 115, 101, 32, 61, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 105, 100, 58, 32, 34, 34, 44, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 109, 101, 116, 104, 111, 100, 58, 32, 34,
              111, 110, 82, 101, 110, 100, 101, 114, 34, 44, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 114, 101, 115, 117, 108, 116, 58, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 110, 115, 116, 97, 110,
              99, 101, 73, 100, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
              101, 118, 101, 110, 116, 58, 32, 114, 101, 110, 100, 101, 114, 69,
              118, 101, 110, 116, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10,
              32, 32, 32, 32, 32, 32, 125, 59, 10, 32, 32, 32, 32, 32, 32, 115,
              101, 108, 102, 46, 112, 111, 115, 116, 77, 101, 115, 115, 97, 103,
              101, 40, 114, 101, 115, 112, 111, 110, 115, 101, 41, 59, 10, 32,
              32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 102, 114, 101, 101, 122,
              101, 58, 32, 40, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100,
              41, 32, 61, 62, 32, 40, 101, 118, 101, 110, 116, 41, 32, 61, 62,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32,
              102, 114, 101, 101, 122, 101, 69, 118, 101, 110, 116, 32, 61, 32,
              101, 118, 101, 110, 116, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111,
              110, 115, 116, 32, 114, 101, 115, 112, 111, 110, 115, 101, 32, 61,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 100, 58, 32, 34,
              34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 109, 101, 116, 104,
              111, 100, 58, 32, 34, 111, 110, 70, 114, 101, 101, 122, 101, 34,
              44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 115, 117, 108,
              116, 58, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105,
              110, 115, 116, 97, 110, 99, 101, 73, 100, 44, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 32, 32, 101, 118, 101, 110, 116, 58, 32, 102, 114,
              101, 101, 122, 101, 69, 118, 101, 110, 116, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 125, 59, 10, 32,
              32, 32, 32, 32, 32, 115, 101, 108, 102, 46, 112, 111, 115, 116,
              77, 101, 115, 115, 97, 103, 101, 40, 114, 101, 115, 112, 111, 110,
              115, 101, 41, 59, 10, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32,
              117, 110, 102, 114, 101, 101, 122, 101, 58, 32, 40, 105, 110, 115,
              116, 97, 110, 99, 101, 73, 100, 41, 32, 61, 62, 32, 40, 101, 118,
              101, 110, 116, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 99, 111, 110, 115, 116, 32, 117, 110, 102, 114, 101, 101, 122,
              101, 69, 118, 101, 110, 116, 32, 61, 32, 101, 118, 101, 110, 116,
              59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 114,
              101, 115, 112, 111, 110, 115, 101, 32, 61, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 105, 100, 58, 32, 34, 34, 44, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 109, 101, 116, 104, 111, 100, 58, 32, 34,
              111, 110, 85, 110, 102, 114, 101, 101, 122, 101, 34, 44, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 114, 101, 115, 117, 108, 116, 58, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 110, 115,
              116, 97, 110, 99, 101, 73, 100, 44, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 32, 32, 101, 118, 101, 110, 116, 58, 32, 117, 110, 102,
              114, 101, 101, 122, 101, 69, 118, 101, 110, 116, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 125, 59, 10,
              32, 32, 32, 32, 32, 32, 115, 101, 108, 102, 46, 112, 111, 115,
              116, 77, 101, 115, 115, 97, 103, 101, 40, 114, 101, 115, 112, 111,
              110, 115, 101, 41, 59, 10, 32, 32, 32, 32, 125, 44, 10, 32, 32,
              32, 32, 100, 101, 115, 116, 114, 111, 121, 58, 32, 40, 105, 110,
              115, 116, 97, 110, 99, 101, 73, 100, 41, 32, 61, 62, 32, 40, 101,
              118, 101, 110, 116, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 99, 111, 110, 115, 116, 32, 100, 101, 115, 116, 114, 111,
              121, 69, 118, 101, 110, 116, 32, 61, 32, 101, 118, 101, 110, 116,
              59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 114,
              101, 115, 112, 111, 110, 115, 101, 32, 61, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 105, 100, 58, 32, 34, 34, 44, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 109, 101, 116, 104, 111, 100, 58, 32, 34,
              111, 110, 68, 101, 115, 116, 114, 111, 121, 34, 44, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 114, 101, 115, 117, 108, 116, 58, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 110, 115, 116,
              97, 110, 99, 101, 73, 100, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              32, 32, 101, 118, 101, 110, 116, 58, 32, 100, 101, 115, 116, 114,
              111, 121, 69, 118, 101, 110, 116, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 125, 10, 32, 32, 32, 32, 32, 32, 125, 59, 10, 32, 32, 32, 32,
              32, 32, 115, 101, 108, 102, 46, 112, 111, 115, 116, 77, 101, 115,
              115, 97, 103, 101, 40, 114, 101, 115, 112, 111, 110, 115, 101, 41,
              59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 125, 59, 10, 32, 32, 118,
              97, 114, 32, 99, 111, 109, 109, 97, 110, 100, 115, 32, 61, 32,
              123, 10, 32, 32, 32, 32, 103, 101, 116, 68, 111, 116, 76, 111,
              116, 116, 105, 101, 73, 110, 115, 116, 97, 110, 99, 101, 83, 116,
              97, 116, 101, 40, 114, 101, 113, 117, 101, 115, 116, 41, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 105, 110,
              115, 116, 97, 110, 99, 101, 73, 100, 32, 61, 32, 114, 101, 113,
              117, 101, 115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 105, 110,
              115, 116, 97, 110, 99, 101, 73, 100, 59, 10, 32, 32, 32, 32, 32,
              32, 99, 111, 110, 115, 116, 32, 105, 110, 115, 116, 97, 110, 99,
              101, 32, 61, 32, 105, 110, 115, 116, 97, 110, 99, 101, 115, 77,
              97, 112, 46, 103, 101, 116, 40, 105, 110, 115, 116, 97, 110, 99,
              101, 73, 100, 41, 59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32,
              40, 33, 105, 110, 115, 116, 97, 110, 99, 101, 41, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 116, 104, 114, 111, 119, 32, 110, 101,
              119, 32, 69, 114, 114, 111, 114, 40, 96, 73, 110, 115, 116, 97,
              110, 99, 101, 32, 119, 105, 116, 104, 32, 105, 100, 32, 36, 123,
              105, 110, 115, 116, 97, 110, 99, 101, 73, 100, 125, 32, 100, 111,
              101, 115, 32, 110, 111, 116, 32, 101, 120, 105, 115, 116, 46, 96,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32,
              32, 99, 111, 110, 115, 116, 32, 115, 116, 97, 116, 101, 32, 61,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 115, 76, 111,
              97, 100, 101, 100, 58, 32, 105, 110, 115, 116, 97, 110, 99, 101,
              46, 105, 115, 76, 111, 97, 100, 101, 100, 44, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 105, 115, 80, 97, 117, 115, 101, 100, 58, 32, 105,
              110, 115, 116, 97, 110, 99, 101, 46, 105, 115, 80, 97, 117, 115,
              101, 100, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 115, 80,
              108, 97, 121, 105, 110, 103, 58, 32, 105, 110, 115, 116, 97, 110,
              99, 101, 46, 105, 115, 80, 108, 97, 121, 105, 110, 103, 44, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 105, 115, 83, 116, 111, 112, 112,
              101, 100, 58, 32, 105, 110, 115, 116, 97, 110, 99, 101, 46, 105,
              115, 83, 116, 111, 112, 112, 101, 100, 44, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 105, 115, 70, 114, 111, 122, 101, 110, 58, 32, 105,
              110, 115, 116, 97, 110, 99, 101, 46, 105, 115, 70, 114, 111, 122,
              101, 110, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 108, 111, 111,
              112, 58, 32, 105, 110, 115, 116, 97, 110, 99, 101, 46, 108, 111,
              111, 112, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 109, 111, 100,
              101, 58, 32, 105, 110, 115, 116, 97, 110, 99, 101, 46, 109, 111,
              100, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 115, 112, 101,
              101, 100, 58, 32, 105, 110, 115, 116, 97, 110, 99, 101, 46, 115,
              112, 101, 101, 100, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 99,
              117, 114, 114, 101, 110, 116, 70, 114, 97, 109, 101, 58, 32, 105,
              110, 115, 116, 97, 110, 99, 101, 46, 99, 117, 114, 114, 101, 110,
              116, 70, 114, 97, 109, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 116, 111, 116, 97, 108, 70, 114, 97, 109, 101, 115, 58, 32,
              105, 110, 115, 116, 97, 110, 99, 101, 46, 116, 111, 116, 97, 108,
              70, 114, 97, 109, 101, 115, 44, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 100, 117, 114, 97, 116, 105, 111, 110, 58, 32, 105, 110, 115,
              116, 97, 110, 99, 101, 46, 100, 117, 114, 97, 116, 105, 111, 110,
              44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 117, 115, 101, 70, 114,
              97, 109, 101, 73, 110, 116, 101, 114, 112, 111, 108, 97, 116, 105,
              111, 110, 58, 32, 105, 110, 115, 116, 97, 110, 99, 101, 46, 117,
              115, 101, 70, 114, 97, 109, 101, 73, 110, 116, 101, 114, 112, 111,
              108, 97, 116, 105, 111, 110, 44, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 114, 101, 110, 100, 101, 114, 67, 111, 110, 102, 105, 103, 58,
              32, 105, 110, 115, 116, 97, 110, 99, 101, 46, 114, 101, 110, 100,
              101, 114, 67, 111, 110, 102, 105, 103, 44, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 109, 97, 114, 107, 101, 114, 58, 32, 105, 110, 115,
              116, 97, 110, 99, 101, 46, 109, 97, 114, 107, 101, 114, 44, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 98, 97, 99, 107, 103, 114, 111,
              117, 110, 100, 67, 111, 108, 111, 114, 58, 32, 105, 110, 115, 116,
              97, 110, 99, 101, 46, 98, 97, 99, 107, 103, 114, 111, 117, 110,
              100, 67, 111, 108, 111, 114, 44, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 109, 97, 114, 107, 101, 114, 115, 58, 32, 105, 110, 115, 116,
              97, 110, 99, 101, 46, 109, 97, 114, 107, 101, 114, 115, 40, 41,
              44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 97, 99, 116, 105, 118,
              101, 65, 110, 105, 109, 97, 116, 105, 111, 110, 73, 100, 58, 32,
              105, 110, 115, 116, 97, 110, 99, 101, 46, 97, 99, 116, 105, 118,
              101, 65, 110, 105, 109, 97, 116, 105, 111, 110, 73, 100, 44, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 97, 99, 116, 105, 118, 101, 84,
              104, 101, 109, 101, 73, 100, 58, 32, 105, 110, 115, 116, 97, 110,
              99, 101, 46, 97, 99, 116, 105, 118, 101, 84, 104, 101, 109, 101,
              73, 100, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 97, 117, 116,
              111, 112, 108, 97, 121, 58, 32, 105, 110, 115, 116, 97, 110, 99,
              101, 46, 97, 117, 116, 111, 112, 108, 97, 121, 44, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 115, 101, 103, 109, 101, 110, 116, 58, 32,
              105, 110, 115, 116, 97, 110, 99, 101, 46, 115, 101, 103, 109, 101,
              110, 116, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 108, 97, 121,
              111, 117, 116, 58, 32, 105, 110, 115, 116, 97, 110, 99, 101, 46,
              108, 97, 121, 111, 117, 116, 44, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 115, 101, 103, 109, 101, 110, 116, 68, 117, 114, 97, 116, 105,
              111, 110, 58, 32, 105, 110, 115, 116, 97, 110, 99, 101, 46, 115,
              101, 103, 109, 101, 110, 116, 68, 117, 114, 97, 116, 105, 111,
              110, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 115, 82, 101,
              97, 100, 121, 58, 32, 105, 110, 115, 116, 97, 110, 99, 101, 46,
              105, 115, 82, 101, 97, 100, 121, 44, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 109, 97, 110, 105, 102, 101, 115, 116, 58, 32, 105, 110,
              115, 116, 97, 110, 99, 101, 46, 109, 97, 110, 105, 102, 101, 115,
              116, 10, 32, 32, 32, 32, 32, 32, 125, 59, 10, 32, 32, 32, 32, 32,
              32, 114, 101, 116, 117, 114, 110, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 115, 116, 97, 116, 101, 10, 32, 32, 32, 32, 32, 32,
              125, 59, 10, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 115,
              101, 116, 76, 97, 121, 111, 117, 116, 40, 114, 101, 113, 117, 101,
              115, 116, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110,
              115, 116, 32, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100, 32,
              61, 32, 114, 101, 113, 117, 101, 115, 116, 46, 112, 97, 114, 97,
              109, 115, 46, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100, 59,
              10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 108, 97,
              121, 111, 117, 116, 32, 61, 32, 114, 101, 113, 117, 101, 115, 116,
              46, 112, 97, 114, 97, 109, 115, 46, 108, 97, 121, 111, 117, 116,
              59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 105,
              110, 115, 116, 97, 110, 99, 101, 32, 61, 32, 105, 110, 115, 116,
              97, 110, 99, 101, 115, 77, 97, 112, 46, 103, 101, 116, 40, 105,
              110, 115, 116, 97, 110, 99, 101, 73, 100, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 105, 102, 32, 40, 33, 105, 110, 115, 116, 97, 110, 99,
              101, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104,
              114, 111, 119, 32, 110, 101, 119, 32, 69, 114, 114, 111, 114, 40,
              96, 73, 110, 115, 116, 97, 110, 99, 101, 32, 119, 105, 116, 104,
              32, 105, 100, 32, 36, 123, 105, 110, 115, 116, 97, 110, 99, 101,
              73, 100, 125, 32, 100, 111, 101, 115, 32, 110, 111, 116, 32, 101,
              120, 105, 115, 116, 46, 96, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 32, 32, 105, 110, 115, 116, 97, 110, 99,
              101, 46, 115, 101, 116, 76, 97, 121, 111, 117, 116, 40, 108, 97,
              121, 111, 117, 116, 41, 59, 10, 32, 32, 32, 32, 32, 32, 114, 101,
              116, 117, 114, 110, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              115, 117, 99, 99, 101, 115, 115, 58, 32, 116, 114, 117, 101, 10,
              32, 32, 32, 32, 32, 32, 125, 59, 10, 32, 32, 32, 32, 125, 44, 10,
              32, 32, 32, 32, 103, 101, 116, 83, 116, 97, 116, 101, 77, 97, 99,
              104, 105, 110, 101, 76, 105, 115, 116, 101, 110, 101, 114, 115,
              40, 114, 101, 113, 117, 101, 115, 116, 41, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 105, 110, 115, 116,
              97, 110, 99, 101, 73, 100, 32, 61, 32, 114, 101, 113, 117, 101,
              115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 105, 110, 115, 116,
              97, 110, 99, 101, 73, 100, 59, 10, 32, 32, 32, 32, 32, 32, 99,
              111, 110, 115, 116, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32,
              61, 32, 105, 110, 115, 116, 97, 110, 99, 101, 115, 77, 97, 112,
              46, 103, 101, 116, 40, 105, 110, 115, 116, 97, 110, 99, 101, 73,
              100, 41, 59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33,
              105, 110, 115, 116, 97, 110, 99, 101, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 116, 104, 114, 111, 119, 32, 110, 101, 119,
              32, 69, 114, 114, 111, 114, 40, 96, 73, 110, 115, 116, 97, 110,
              99, 101, 32, 119, 105, 116, 104, 32, 105, 100, 32, 36, 123, 105,
              110, 115, 116, 97, 110, 99, 101, 73, 100, 125, 32, 100, 111, 101,
              115, 32, 110, 111, 116, 32, 101, 120, 105, 115, 116, 46, 96, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32,
              114, 101, 116, 117, 114, 110, 32, 105, 110, 115, 116, 97, 110, 99,
              101, 46, 103, 101, 116, 83, 116, 97, 116, 101, 77, 97, 99, 104,
              105, 110, 101, 76, 105, 115, 116, 101, 110, 101, 114, 115, 40, 41,
              59, 10, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 112, 111,
              115, 116, 80, 111, 105, 110, 116, 101, 114, 68, 111, 119, 110, 69,
              118, 101, 110, 116, 40, 114, 101, 113, 117, 101, 115, 116, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 105,
              110, 115, 116, 97, 110, 99, 101, 73, 100, 32, 61, 32, 114, 101,
              113, 117, 101, 115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 105,
              110, 115, 116, 97, 110, 99, 101, 73, 100, 59, 10, 32, 32, 32, 32,
              32, 32, 99, 111, 110, 115, 116, 32, 120, 32, 61, 32, 114, 101,
              113, 117, 101, 115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 120,
              59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 121,
              32, 61, 32, 114, 101, 113, 117, 101, 115, 116, 46, 112, 97, 114,
              97, 109, 115, 46, 121, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111,
              110, 115, 116, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32, 61,
              32, 105, 110, 115, 116, 97, 110, 99, 101, 115, 77, 97, 112, 46,
              103, 101, 116, 40, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33, 105,
              110, 115, 116, 97, 110, 99, 101, 41, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 116, 104, 114, 111, 119, 32, 110, 101, 119, 32,
              69, 114, 114, 111, 114, 40, 96, 73, 110, 115, 116, 97, 110, 99,
              101, 32, 119, 105, 116, 104, 32, 105, 100, 32, 36, 123, 105, 110,
              115, 116, 97, 110, 99, 101, 73, 100, 125, 32, 100, 111, 101, 115,
              32, 110, 111, 116, 32, 101, 120, 105, 115, 116, 46, 96, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 114,
              101, 116, 117, 114, 110, 32, 105, 110, 115, 116, 97, 110, 99, 101,
              46, 112, 111, 115, 116, 80, 111, 105, 110, 116, 101, 114, 68, 111,
              119, 110, 69, 118, 101, 110, 116, 40, 120, 44, 32, 121, 41, 59,
              10, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 112, 111, 115,
              116, 80, 111, 105, 110, 116, 101, 114, 69, 110, 116, 101, 114, 69,
              118, 101, 110, 116, 40, 114, 101, 113, 117, 101, 115, 116, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 105,
              110, 115, 116, 97, 110, 99, 101, 73, 100, 32, 61, 32, 114, 101,
              113, 117, 101, 115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 105,
              110, 115, 116, 97, 110, 99, 101, 73, 100, 59, 10, 32, 32, 32, 32,
              32, 32, 99, 111, 110, 115, 116, 32, 120, 32, 61, 32, 114, 101,
              113, 117, 101, 115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 120,
              59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 121,
              32, 61, 32, 114, 101, 113, 117, 101, 115, 116, 46, 112, 97, 114,
              97, 109, 115, 46, 121, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111,
              110, 115, 116, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32, 61,
              32, 105, 110, 115, 116, 97, 110, 99, 101, 115, 77, 97, 112, 46,
              103, 101, 116, 40, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33, 105,
              110, 115, 116, 97, 110, 99, 101, 41, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 116, 104, 114, 111, 119, 32, 110, 101, 119, 32,
              69, 114, 114, 111, 114, 40, 96, 73, 110, 115, 116, 97, 110, 99,
              101, 32, 119, 105, 116, 104, 32, 105, 100, 32, 36, 123, 105, 110,
              115, 116, 97, 110, 99, 101, 73, 100, 125, 32, 100, 111, 101, 115,
              32, 110, 111, 116, 32, 101, 120, 105, 115, 116, 46, 96, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 114,
              101, 116, 117, 114, 110, 32, 105, 110, 115, 116, 97, 110, 99, 101,
              46, 112, 111, 115, 116, 80, 111, 105, 110, 116, 101, 114, 69, 110,
              116, 101, 114, 69, 118, 101, 110, 116, 40, 120, 44, 32, 121, 41,
              59, 10, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 112, 111,
              115, 116, 80, 111, 105, 110, 116, 101, 114, 69, 120, 105, 116, 69,
              118, 101, 110, 116, 40, 114, 101, 113, 117, 101, 115, 116, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 105,
              110, 115, 116, 97, 110, 99, 101, 73, 100, 32, 61, 32, 114, 101,
              113, 117, 101, 115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 105,
              110, 115, 116, 97, 110, 99, 101, 73, 100, 59, 10, 32, 32, 32, 32,
              32, 32, 99, 111, 110, 115, 116, 32, 120, 32, 61, 32, 114, 101,
              113, 117, 101, 115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 120,
              59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 121,
              32, 61, 32, 114, 101, 113, 117, 101, 115, 116, 46, 112, 97, 114,
              97, 109, 115, 46, 121, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111,
              110, 115, 116, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32, 61,
              32, 105, 110, 115, 116, 97, 110, 99, 101, 115, 77, 97, 112, 46,
              103, 101, 116, 40, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33, 105,
              110, 115, 116, 97, 110, 99, 101, 41, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 116, 104, 114, 111, 119, 32, 110, 101, 119, 32,
              69, 114, 114, 111, 114, 40, 96, 73, 110, 115, 116, 97, 110, 99,
              101, 32, 119, 105, 116, 104, 32, 105, 100, 32, 36, 123, 105, 110,
              115, 116, 97, 110, 99, 101, 73, 100, 125, 32, 100, 111, 101, 115,
              32, 110, 111, 116, 32, 101, 120, 105, 115, 116, 46, 96, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 114,
              101, 116, 117, 114, 110, 32, 105, 110, 115, 116, 97, 110, 99, 101,
              46, 112, 111, 115, 116, 80, 111, 105, 110, 116, 101, 114, 69, 120,
              105, 116, 69, 118, 101, 110, 116, 40, 120, 44, 32, 121, 41, 59,
              10, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 112, 111, 115,
              116, 80, 111, 105, 110, 116, 101, 114, 77, 111, 118, 101, 69, 118,
              101, 110, 116, 40, 114, 101, 113, 117, 101, 115, 116, 41, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 105, 110,
              115, 116, 97, 110, 99, 101, 73, 100, 32, 61, 32, 114, 101, 113,
              117, 101, 115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 105, 110,
              115, 116, 97, 110, 99, 101, 73, 100, 59, 10, 32, 32, 32, 32, 32,
              32, 99, 111, 110, 115, 116, 32, 120, 32, 61, 32, 114, 101, 113,
              117, 101, 115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 120, 59,
              10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 121, 32,
              61, 32, 114, 101, 113, 117, 101, 115, 116, 46, 112, 97, 114, 97,
              109, 115, 46, 121, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110,
              115, 116, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32, 61, 32,
              105, 110, 115, 116, 97, 110, 99, 101, 115, 77, 97, 112, 46, 103,
              101, 116, 40, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33, 105, 110,
              115, 116, 97, 110, 99, 101, 41, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 116, 104, 114, 111, 119, 32, 110, 101, 119, 32, 69,
              114, 114, 111, 114, 40, 96, 73, 110, 115, 116, 97, 110, 99, 101,
              32, 119, 105, 116, 104, 32, 105, 100, 32, 36, 123, 105, 110, 115,
              116, 97, 110, 99, 101, 73, 100, 125, 32, 100, 111, 101, 115, 32,
              110, 111, 116, 32, 101, 120, 105, 115, 116, 46, 96, 41, 59, 10,
              32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 114, 101,
              116, 117, 114, 110, 32, 105, 110, 115, 116, 97, 110, 99, 101, 46,
              112, 111, 115, 116, 80, 111, 105, 110, 116, 101, 114, 77, 111,
              118, 101, 69, 118, 101, 110, 116, 40, 120, 44, 32, 121, 41, 59,
              10, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 112, 111, 115,
              116, 80, 111, 105, 110, 116, 101, 114, 85, 112, 69, 118, 101, 110,
              116, 40, 114, 101, 113, 117, 101, 115, 116, 41, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 105, 110, 115,
              116, 97, 110, 99, 101, 73, 100, 32, 61, 32, 114, 101, 113, 117,
              101, 115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 105, 110, 115,
              116, 97, 110, 99, 101, 73, 100, 59, 10, 32, 32, 32, 32, 32, 32,
              99, 111, 110, 115, 116, 32, 120, 32, 61, 32, 114, 101, 113, 117,
              101, 115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 120, 59, 10,
              32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 121, 32, 61,
              32, 114, 101, 113, 117, 101, 115, 116, 46, 112, 97, 114, 97, 109,
              115, 46, 121, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115,
              116, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32, 61, 32, 105,
              110, 115, 116, 97, 110, 99, 101, 115, 77, 97, 112, 46, 103, 101,
              116, 40, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33, 105, 110, 115,
              116, 97, 110, 99, 101, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 116, 104, 114, 111, 119, 32, 110, 101, 119, 32, 69, 114,
              114, 111, 114, 40, 96, 73, 110, 115, 116, 97, 110, 99, 101, 32,
              119, 105, 116, 104, 32, 105, 100, 32, 36, 123, 105, 110, 115, 116,
              97, 110, 99, 101, 73, 100, 125, 32, 100, 111, 101, 115, 32, 110,
              111, 116, 32, 101, 120, 105, 115, 116, 46, 96, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116,
              117, 114, 110, 32, 105, 110, 115, 116, 97, 110, 99, 101, 46, 112,
              111, 115, 116, 80, 111, 105, 110, 116, 101, 114, 85, 112, 69, 118,
              101, 110, 116, 40, 120, 44, 32, 121, 41, 59, 10, 32, 32, 32, 32,
              125, 44, 10, 32, 32, 32, 32, 115, 116, 97, 114, 116, 83, 116, 97,
              116, 101, 77, 97, 99, 104, 105, 110, 101, 40, 114, 101, 113, 117,
              101, 115, 116, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 99, 111,
              110, 115, 116, 32, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100,
              32, 61, 32, 114, 101, 113, 117, 101, 115, 116, 46, 112, 97, 114,
              97, 109, 115, 46, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100,
              59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 105,
              110, 115, 116, 97, 110, 99, 101, 32, 61, 32, 105, 110, 115, 116,
              97, 110, 99, 101, 115, 77, 97, 112, 46, 103, 101, 116, 40, 105,
              110, 115, 116, 97, 110, 99, 101, 73, 100, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 105, 102, 32, 40, 33, 105, 110, 115, 116, 97, 110, 99,
              101, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104,
              114, 111, 119, 32, 110, 101, 119, 32, 69, 114, 114, 111, 114, 40,
              96, 73, 110, 115, 116, 97, 110, 99, 101, 32, 119, 105, 116, 104,
              32, 105, 100, 32, 36, 123, 105, 110, 115, 116, 97, 110, 99, 101,
              73, 100, 125, 32, 100, 111, 101, 115, 32, 110, 111, 116, 32, 101,
              120, 105, 115, 116, 46, 96, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32,
              105, 110, 115, 116, 97, 110, 99, 101, 46, 115, 116, 97, 114, 116,
              83, 116, 97, 116, 101, 77, 97, 99, 104, 105, 110, 101, 40, 41, 59,
              10, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 115, 116, 111,
              112, 83, 116, 97, 116, 101, 77, 97, 99, 104, 105, 110, 101, 40,
              114, 101, 113, 117, 101, 115, 116, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 99, 111, 110, 115, 116, 32, 105, 110, 115, 116, 97,
              110, 99, 101, 73, 100, 32, 61, 32, 114, 101, 113, 117, 101, 115,
              116, 46, 112, 97, 114, 97, 109, 115, 46, 105, 110, 115, 116, 97,
              110, 99, 101, 73, 100, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111,
              110, 115, 116, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32, 61,
              32, 105, 110, 115, 116, 97, 110, 99, 101, 115, 77, 97, 112, 46,
              103, 101, 116, 40, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33, 105,
              110, 115, 116, 97, 110, 99, 101, 41, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 116, 104, 114, 111, 119, 32, 110, 101, 119, 32,
              69, 114, 114, 111, 114, 40, 96, 73, 110, 115, 116, 97, 110, 99,
              101, 32, 119, 105, 116, 104, 32, 105, 100, 32, 36, 123, 105, 110,
              115, 116, 97, 110, 99, 101, 73, 100, 125, 32, 100, 111, 101, 115,
              32, 110, 111, 116, 32, 101, 120, 105, 115, 116, 46, 96, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 114,
              101, 116, 117, 114, 110, 32, 105, 110, 115, 116, 97, 110, 99, 101,
              46, 115, 116, 111, 112, 83, 116, 97, 116, 101, 77, 97, 99, 104,
              105, 110, 101, 40, 41, 59, 10, 32, 32, 32, 32, 125, 44, 10, 32,
              32, 32, 32, 108, 111, 97, 100, 83, 116, 97, 116, 101, 77, 97, 99,
              104, 105, 110, 101, 40, 114, 101, 113, 117, 101, 115, 116, 41, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 105,
              110, 115, 116, 97, 110, 99, 101, 73, 100, 32, 61, 32, 114, 101,
              113, 117, 101, 115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 105,
              110, 115, 116, 97, 110, 99, 101, 73, 100, 59, 10, 32, 32, 32, 32,
              32, 32, 99, 111, 110, 115, 116, 32, 115, 116, 97, 116, 101, 77,
              97, 99, 104, 105, 110, 101, 73, 100, 32, 61, 32, 114, 101, 113,
              117, 101, 115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 115, 116,
              97, 116, 101, 77, 97, 99, 104, 105, 110, 101, 73, 100, 59, 10, 32,
              32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 105, 110, 115,
              116, 97, 110, 99, 101, 32, 61, 32, 105, 110, 115, 116, 97, 110,
              99, 101, 115, 77, 97, 112, 46, 103, 101, 116, 40, 105, 110, 115,
              116, 97, 110, 99, 101, 73, 100, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 105, 102, 32, 40, 33, 105, 110, 115, 116, 97, 110, 99, 101,
              41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 114,
              111, 119, 32, 110, 101, 119, 32, 69, 114, 114, 111, 114, 40, 96,
              73, 110, 115, 116, 97, 110, 99, 101, 32, 119, 105, 116, 104, 32,
              105, 100, 32, 36, 123, 105, 110, 115, 116, 97, 110, 99, 101, 73,
              100, 125, 32, 100, 111, 101, 115, 32, 110, 111, 116, 32, 101, 120,
              105, 115, 116, 46, 96, 41, 59, 10, 32, 32, 32, 32, 32, 32, 125,
              10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 105,
              110, 115, 116, 97, 110, 99, 101, 46, 108, 111, 97, 100, 83, 116,
              97, 116, 101, 77, 97, 99, 104, 105, 110, 101, 40, 115, 116, 97,
              116, 101, 77, 97, 99, 104, 105, 110, 101, 73, 100, 41, 59, 10, 32,
              32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 108, 111, 97, 100, 83,
              116, 97, 116, 101, 77, 97, 99, 104, 105, 110, 101, 68, 97, 116,
              97, 40, 114, 101, 113, 117, 101, 115, 116, 41, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 105, 110, 115,
              116, 97, 110, 99, 101, 73, 100, 32, 61, 32, 114, 101, 113, 117,
              101, 115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 105, 110, 115,
              116, 97, 110, 99, 101, 73, 100, 59, 10, 32, 32, 32, 32, 32, 32,
              99, 111, 110, 115, 116, 32, 115, 116, 97, 116, 101, 77, 97, 99,
              104, 105, 110, 101, 68, 97, 116, 97, 32, 61, 32, 114, 101, 113,
              117, 101, 115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 115, 116,
              97, 116, 101, 77, 97, 99, 104, 105, 110, 101, 68, 97, 116, 97, 59,
              10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 105, 110,
              115, 116, 97, 110, 99, 101, 32, 61, 32, 105, 110, 115, 116, 97,
              110, 99, 101, 115, 77, 97, 112, 46, 103, 101, 116, 40, 105, 110,
              115, 116, 97, 110, 99, 101, 73, 100, 41, 59, 10, 32, 32, 32, 32,
              32, 32, 105, 102, 32, 40, 33, 105, 110, 115, 116, 97, 110, 99,
              101, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104,
              114, 111, 119, 32, 110, 101, 119, 32, 69, 114, 114, 111, 114, 40,
              96, 73, 110, 115, 116, 97, 110, 99, 101, 32, 119, 105, 116, 104,
              32, 105, 100, 32, 36, 123, 105, 110, 115, 116, 97, 110, 99, 101,
              73, 100, 125, 32, 100, 111, 101, 115, 32, 110, 111, 116, 32, 101,
              120, 105, 115, 116, 46, 96, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32,
              105, 110, 115, 116, 97, 110, 99, 101, 46, 108, 111, 97, 100, 83,
              116, 97, 116, 101, 77, 97, 99, 104, 105, 110, 101, 68, 97, 116,
              97, 40, 115, 116, 97, 116, 101, 77, 97, 99, 104, 105, 110, 101,
              68, 97, 116, 97, 41, 59, 10, 32, 32, 32, 32, 125, 44, 10, 32, 32,
              32, 32, 99, 114, 101, 97, 116, 101, 58, 32, 40, 114, 101, 113,
              117, 101, 115, 116, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 99, 111, 110, 115, 116, 32, 105, 110, 115, 116, 97, 110,
              99, 101, 73, 100, 32, 61, 32, 114, 101, 113, 117, 101, 115, 116,
              46, 112, 97, 114, 97, 109, 115, 46, 105, 110, 115, 116, 97, 110,
              99, 101, 73, 100, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110,
              115, 116, 32, 99, 111, 110, 102, 105, 103, 32, 61, 32, 114, 101,
              113, 117, 101, 115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 99,
              111, 110, 102, 105, 103, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111,
              110, 115, 116, 32, 119, 105, 100, 116, 104, 32, 61, 32, 114, 101,
              113, 117, 101, 115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 119,
              105, 100, 116, 104, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110,
              115, 116, 32, 104, 101, 105, 103, 104, 116, 32, 61, 32, 114, 101,
              113, 117, 101, 115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 104,
              101, 105, 103, 104, 116, 59, 10, 32, 32, 32, 32, 32, 32, 105, 102,
              32, 40, 105, 110, 115, 116, 97, 110, 99, 101, 115, 77, 97, 112,
              46, 104, 97, 115, 40, 105, 110, 115, 116, 97, 110, 99, 101, 73,
              100, 41, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116,
              104, 114, 111, 119, 32, 110, 101, 119, 32, 69, 114, 114, 111, 114,
              40, 96, 73, 110, 115, 116, 97, 110, 99, 101, 32, 119, 105, 116,
              104, 32, 105, 100, 32, 36, 123, 105, 110, 115, 116, 97, 110, 99,
              101, 73, 100, 125, 32, 97, 108, 114, 101, 97, 100, 121, 32, 101,
              120, 105, 115, 116, 115, 46, 96, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 125, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32,
              105, 110, 115, 116, 97, 110, 99, 101, 32, 61, 32, 110, 101, 119,
              32, 68, 111, 116, 76, 111, 116, 116, 105, 101, 40, 99, 111, 110,
              102, 105, 103, 41, 59, 10, 32, 32, 32, 32, 32, 32, 105, 110, 115,
              116, 97, 110, 99, 101, 46, 99, 97, 110, 118, 97, 115, 46, 104,
              101, 105, 103, 104, 116, 32, 61, 32, 104, 101, 105, 103, 104, 116,
              59, 10, 32, 32, 32, 32, 32, 32, 105, 110, 115, 116, 97, 110, 99,
              101, 46, 99, 97, 110, 118, 97, 115, 46, 119, 105, 100, 116, 104,
              32, 61, 32, 119, 105, 100, 116, 104, 59, 10, 32, 32, 32, 32, 32,
              32, 105, 110, 115, 116, 97, 110, 99, 101, 115, 77, 97, 112, 46,
              115, 101, 116, 40, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100,
              44, 32, 105, 110, 115, 116, 97, 110, 99, 101, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 101, 118, 101, 110,
              116, 115, 32, 61, 32, 91, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34,
              99, 111, 109, 112, 108, 101, 116, 101, 34, 44, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 34, 102, 114, 97, 109, 101, 34, 44, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 34, 108, 111, 97, 100, 34, 44, 10, 32, 32,
              32, 32, 32, 32, 32, 32, 34, 108, 111, 97, 100, 69, 114, 114, 111,
              114, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 108, 111,
              111, 112, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 112, 97,
              117, 115, 101, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34,
              112, 108, 97, 121, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34,
              115, 116, 111, 112, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              34, 100, 101, 115, 116, 114, 111, 121, 34, 44, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 34, 102, 114, 101, 101, 122, 101, 34, 44, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 34, 117, 110, 102, 114, 101, 101, 122,
              101, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 114, 101,
              110, 100, 101, 114, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              34, 114, 101, 97, 100, 121, 34, 10, 32, 32, 32, 32, 32, 32, 93,
              59, 10, 32, 32, 32, 32, 32, 32, 101, 118, 101, 110, 116, 115, 46,
              102, 111, 114, 69, 97, 99, 104, 40, 40, 101, 118, 101, 110, 116,
              41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105,
              110, 115, 116, 97, 110, 99, 101, 46, 97, 100, 100, 69, 118, 101,
              110, 116, 76, 105, 115, 116, 101, 110, 101, 114, 40, 101, 118,
              101, 110, 116, 44, 32, 101, 118, 101, 110, 116, 72, 97, 110, 100,
              108, 101, 114, 77, 97, 112, 91, 101, 118, 101, 110, 116, 93, 40,
              105, 110, 115, 116, 97, 110, 99, 101, 73, 100, 41, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 125, 41, 59, 10, 32, 32, 32, 32, 32, 32, 114,
              101, 116, 117, 114, 110, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100, 10, 32, 32, 32,
              32, 32, 32, 125, 59, 10, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32,
              32, 100, 101, 115, 116, 114, 111, 121, 58, 32, 40, 114, 101, 113,
              117, 101, 115, 116, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 99, 111, 110, 115, 116, 32, 105, 110, 115, 116, 97, 110,
              99, 101, 73, 100, 32, 61, 32, 114, 101, 113, 117, 101, 115, 116,
              46, 112, 97, 114, 97, 109, 115, 46, 105, 110, 115, 116, 97, 110,
              99, 101, 73, 100, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110,
              115, 116, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32, 61, 32,
              105, 110, 115, 116, 97, 110, 99, 101, 115, 77, 97, 112, 46, 103,
              101, 116, 40, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33, 105, 110,
              115, 116, 97, 110, 99, 101, 41, 32, 114, 101, 116, 117, 114, 110,
              59, 10, 32, 32, 32, 32, 32, 32, 105, 110, 115, 116, 97, 110, 99,
              101, 46, 100, 101, 115, 116, 114, 111, 121, 40, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 105, 110, 115, 116, 97, 110, 99, 101, 115, 77,
              97, 112, 46, 100, 101, 108, 101, 116, 101, 40, 105, 110, 115, 116,
              97, 110, 99, 101, 73, 100, 41, 59, 10, 32, 32, 32, 32, 125, 44,
              10, 32, 32, 32, 32, 102, 114, 101, 101, 122, 101, 58, 32, 40, 114,
              101, 113, 117, 101, 115, 116, 41, 32, 61, 62, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 105, 110, 115, 116,
              97, 110, 99, 101, 73, 100, 32, 61, 32, 114, 101, 113, 117, 101,
              115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 105, 110, 115, 116,
              97, 110, 99, 101, 73, 100, 59, 10, 32, 32, 32, 32, 32, 32, 99,
              111, 110, 115, 116, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32,
              61, 32, 105, 110, 115, 116, 97, 110, 99, 101, 115, 77, 97, 112,
              46, 103, 101, 116, 40, 105, 110, 115, 116, 97, 110, 99, 101, 73,
              100, 41, 59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33,
              105, 110, 115, 116, 97, 110, 99, 101, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 116, 104, 114, 111, 119, 32, 110, 101, 119,
              32, 69, 114, 114, 111, 114, 40, 96, 73, 110, 115, 116, 97, 110,
              99, 101, 32, 119, 105, 116, 104, 32, 105, 100, 32, 36, 123, 105,
              110, 115, 116, 97, 110, 99, 101, 73, 100, 125, 32, 100, 111, 101,
              115, 32, 110, 111, 116, 32, 101, 120, 105, 115, 116, 46, 96, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32,
              105, 110, 115, 116, 97, 110, 99, 101, 46, 102, 114, 101, 101, 122,
              101, 40, 41, 59, 10, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32,
              108, 111, 97, 100, 58, 32, 40, 114, 101, 113, 117, 101, 115, 116,
              41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110,
              115, 116, 32, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100, 32,
              61, 32, 114, 101, 113, 117, 101, 115, 116, 46, 112, 97, 114, 97,
              109, 115, 46, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100, 59,
              10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 99, 111,
              110, 102, 105, 103, 32, 61, 32, 114, 101, 113, 117, 101, 115, 116,
              46, 112, 97, 114, 97, 109, 115, 46, 99, 111, 110, 102, 105, 103,
              59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 105,
              110, 115, 116, 97, 110, 99, 101, 32, 61, 32, 105, 110, 115, 116,
              97, 110, 99, 101, 115, 77, 97, 112, 46, 103, 101, 116, 40, 105,
              110, 115, 116, 97, 110, 99, 101, 73, 100, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 105, 102, 32, 40, 33, 105, 110, 115, 116, 97, 110, 99,
              101, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104,
              114, 111, 119, 32, 110, 101, 119, 32, 69, 114, 114, 111, 114, 40,
              96, 73, 110, 115, 116, 97, 110, 99, 101, 32, 119, 105, 116, 104,
              32, 105, 100, 32, 36, 123, 105, 110, 115, 116, 97, 110, 99, 101,
              73, 100, 125, 32, 100, 111, 101, 115, 32, 110, 111, 116, 32, 101,
              120, 105, 115, 116, 46, 96, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 32, 32, 105, 110, 115, 116, 97, 110, 99,
              101, 46, 108, 111, 97, 100, 40, 99, 111, 110, 102, 105, 103, 41,
              59, 10, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 108, 111, 97,
              100, 65, 110, 105, 109, 97, 116, 105, 111, 110, 58, 32, 40, 114,
              101, 113, 117, 101, 115, 116, 41, 32, 61, 62, 32, 123, 10, 32, 32,
              32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 105, 110, 115, 116,
              97, 110, 99, 101, 73, 100, 32, 61, 32, 114, 101, 113, 117, 101,
              115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 105, 110, 115, 116,
              97, 110, 99, 101, 73, 100, 59, 10, 32, 32, 32, 32, 32, 32, 99,
              111, 110, 115, 116, 32, 97, 110, 105, 109, 97, 116, 105, 111, 110,
              73, 100, 32, 61, 32, 114, 101, 113, 117, 101, 115, 116, 46, 112,
              97, 114, 97, 109, 115, 46, 97, 110, 105, 109, 97, 116, 105, 111,
              110, 73, 100, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115,
              116, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32, 61, 32, 105,
              110, 115, 116, 97, 110, 99, 101, 115, 77, 97, 112, 46, 103, 101,
              116, 40, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33, 105, 110, 115,
              116, 97, 110, 99, 101, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 116, 104, 114, 111, 119, 32, 110, 101, 119, 32, 69, 114,
              114, 111, 114, 40, 96, 73, 110, 115, 116, 97, 110, 99, 101, 32,
              119, 105, 116, 104, 32, 105, 100, 32, 36, 123, 105, 110, 115, 116,
              97, 110, 99, 101, 73, 100, 125, 32, 100, 111, 101, 115, 32, 110,
              111, 116, 32, 101, 120, 105, 115, 116, 46, 96, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 105, 110, 115,
              116, 97, 110, 99, 101, 46, 108, 111, 97, 100, 65, 110, 105, 109,
              97, 116, 105, 111, 110, 40, 97, 110, 105, 109, 97, 116, 105, 111,
              110, 73, 100, 41, 59, 10, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32,
              32, 115, 101, 116, 84, 104, 101, 109, 101, 58, 32, 40, 114, 101,
              113, 117, 101, 115, 116, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 99, 111, 110, 115, 116, 32, 105, 110, 115, 116, 97,
              110, 99, 101, 73, 100, 32, 61, 32, 114, 101, 113, 117, 101, 115,
              116, 46, 112, 97, 114, 97, 109, 115, 46, 105, 110, 115, 116, 97,
              110, 99, 101, 73, 100, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111,
              110, 115, 116, 32, 116, 104, 101, 109, 101, 73, 100, 32, 61, 32,
              114, 101, 113, 117, 101, 115, 116, 46, 112, 97, 114, 97, 109, 115,
              46, 116, 104, 101, 109, 101, 73, 100, 59, 10, 32, 32, 32, 32, 32,
              32, 99, 111, 110, 115, 116, 32, 105, 110, 115, 116, 97, 110, 99,
              101, 32, 61, 32, 105, 110, 115, 116, 97, 110, 99, 101, 115, 77,
              97, 112, 46, 103, 101, 116, 40, 105, 110, 115, 116, 97, 110, 99,
              101, 73, 100, 41, 59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32,
              40, 33, 105, 110, 115, 116, 97, 110, 99, 101, 41, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 116, 104, 114, 111, 119, 32, 110, 101,
              119, 32, 69, 114, 114, 111, 114, 40, 96, 73, 110, 115, 116, 97,
              110, 99, 101, 32, 119, 105, 116, 104, 32, 105, 100, 32, 36, 123,
              105, 110, 115, 116, 97, 110, 99, 101, 73, 100, 125, 32, 100, 111,
              101, 115, 32, 110, 111, 116, 32, 101, 120, 105, 115, 116, 46, 96,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32,
              32, 114, 101, 116, 117, 114, 110, 32, 105, 110, 115, 116, 97, 110,
              99, 101, 46, 115, 101, 116, 84, 104, 101, 109, 101, 40, 116, 104,
              101, 109, 101, 73, 100, 41, 59, 10, 32, 32, 32, 32, 125, 44, 10,
              32, 32, 32, 32, 115, 101, 116, 84, 104, 101, 109, 101, 68, 97,
              116, 97, 58, 32, 40, 114, 101, 113, 117, 101, 115, 116, 41, 32,
              61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115,
              116, 32, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100, 32, 61,
              32, 114, 101, 113, 117, 101, 115, 116, 46, 112, 97, 114, 97, 109,
              115, 46, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100, 59, 10,
              32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 116, 104, 101,
              109, 101, 68, 97, 116, 97, 32, 61, 32, 114, 101, 113, 117, 101,
              115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 116, 104, 101, 109,
              101, 68, 97, 116, 97, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111,
              110, 115, 116, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32, 61,
              32, 105, 110, 115, 116, 97, 110, 99, 101, 115, 77, 97, 112, 46,
              103, 101, 116, 40, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33, 105,
              110, 115, 116, 97, 110, 99, 101, 41, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 116, 104, 114, 111, 119, 32, 110, 101, 119, 32,
              69, 114, 114, 111, 114, 40, 96, 73, 110, 115, 116, 97, 110, 99,
              101, 32, 119, 105, 116, 104, 32, 105, 100, 32, 36, 123, 105, 110,
              115, 116, 97, 110, 99, 101, 73, 100, 125, 32, 100, 111, 101, 115,
              32, 110, 111, 116, 32, 101, 120, 105, 115, 116, 46, 96, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 114,
              101, 116, 117, 114, 110, 32, 105, 110, 115, 116, 97, 110, 99, 101,
              46, 115, 101, 116, 84, 104, 101, 109, 101, 68, 97, 116, 97, 40,
              116, 104, 101, 109, 101, 68, 97, 116, 97, 41, 59, 10, 32, 32, 32,
              32, 125, 44, 10, 32, 32, 32, 32, 112, 97, 117, 115, 101, 58, 32,
              40, 114, 101, 113, 117, 101, 115, 116, 41, 32, 61, 62, 32, 123,
              10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 105, 110,
              115, 116, 97, 110, 99, 101, 73, 100, 32, 61, 32, 114, 101, 113,
              117, 101, 115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 105, 110,
              115, 116, 97, 110, 99, 101, 73, 100, 59, 10, 32, 32, 32, 32, 32,
              32, 99, 111, 110, 115, 116, 32, 105, 110, 115, 116, 97, 110, 99,
              101, 32, 61, 32, 105, 110, 115, 116, 97, 110, 99, 101, 115, 77,
              97, 112, 46, 103, 101, 116, 40, 105, 110, 115, 116, 97, 110, 99,
              101, 73, 100, 41, 59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32,
              40, 33, 105, 110, 115, 116, 97, 110, 99, 101, 41, 32, 123, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 116, 104, 114, 111, 119, 32, 110, 101,
              119, 32, 69, 114, 114, 111, 114, 40, 96, 73, 110, 115, 116, 97,
              110, 99, 101, 32, 119, 105, 116, 104, 32, 105, 100, 32, 36, 123,
              105, 110, 115, 116, 97, 110, 99, 101, 73, 100, 125, 32, 100, 111,
              101, 115, 32, 110, 111, 116, 32, 101, 120, 105, 115, 116, 46, 96,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32,
              32, 114, 101, 116, 117, 114, 110, 32, 105, 110, 115, 116, 97, 110,
              99, 101, 46, 112, 97, 117, 115, 101, 40, 41, 59, 10, 32, 32, 32,
              32, 125, 44, 10, 32, 32, 32, 32, 112, 108, 97, 121, 58, 32, 40,
              114, 101, 113, 117, 101, 115, 116, 41, 32, 61, 62, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 105, 110, 115,
              116, 97, 110, 99, 101, 73, 100, 32, 61, 32, 114, 101, 113, 117,
              101, 115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 105, 110, 115,
              116, 97, 110, 99, 101, 73, 100, 59, 10, 32, 32, 32, 32, 32, 32,
              99, 111, 110, 115, 116, 32, 105, 110, 115, 116, 97, 110, 99, 101,
              32, 61, 32, 105, 110, 115, 116, 97, 110, 99, 101, 115, 77, 97,
              112, 46, 103, 101, 116, 40, 105, 110, 115, 116, 97, 110, 99, 101,
              73, 100, 41, 59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33,
              105, 110, 115, 116, 97, 110, 99, 101, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 116, 104, 114, 111, 119, 32, 110, 101, 119,
              32, 69, 114, 114, 111, 114, 40, 96, 73, 110, 115, 116, 97, 110,
              99, 101, 32, 119, 105, 116, 104, 32, 105, 100, 32, 36, 123, 105,
              110, 115, 116, 97, 110, 99, 101, 73, 100, 125, 32, 100, 111, 101,
              115, 32, 110, 111, 116, 32, 101, 120, 105, 115, 116, 46, 96, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32,
              114, 101, 116, 117, 114, 110, 32, 105, 110, 115, 116, 97, 110, 99,
              101, 46, 112, 108, 97, 121, 40, 41, 59, 10, 32, 32, 32, 32, 125,
              44, 10, 32, 32, 32, 32, 114, 101, 115, 105, 122, 101, 58, 32, 40,
              114, 101, 113, 117, 101, 115, 116, 41, 32, 61, 62, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 105, 110, 115,
              116, 97, 110, 99, 101, 73, 100, 32, 61, 32, 114, 101, 113, 117,
              101, 115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 105, 110, 115,
              116, 97, 110, 99, 101, 73, 100, 59, 10, 32, 32, 32, 32, 32, 32,
              99, 111, 110, 115, 116, 32, 119, 105, 100, 116, 104, 32, 61, 32,
              114, 101, 113, 117, 101, 115, 116, 46, 112, 97, 114, 97, 109, 115,
              46, 119, 105, 100, 116, 104, 59, 10, 32, 32, 32, 32, 32, 32, 99,
              111, 110, 115, 116, 32, 104, 101, 105, 103, 104, 116, 32, 61, 32,
              114, 101, 113, 117, 101, 115, 116, 46, 112, 97, 114, 97, 109, 115,
              46, 104, 101, 105, 103, 104, 116, 59, 10, 32, 32, 32, 32, 32, 32,
              99, 111, 110, 115, 116, 32, 105, 110, 115, 116, 97, 110, 99, 101,
              32, 61, 32, 105, 110, 115, 116, 97, 110, 99, 101, 115, 77, 97,
              112, 46, 103, 101, 116, 40, 105, 110, 115, 116, 97, 110, 99, 101,
              73, 100, 41, 59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33,
              105, 110, 115, 116, 97, 110, 99, 101, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 116, 104, 114, 111, 119, 32, 110, 101, 119,
              32, 69, 114, 114, 111, 114, 40, 96, 73, 110, 115, 116, 97, 110,
              99, 101, 32, 119, 105, 116, 104, 32, 105, 100, 32, 36, 123, 105,
              110, 115, 116, 97, 110, 99, 101, 73, 100, 125, 32, 100, 111, 101,
              115, 32, 110, 111, 116, 32, 101, 120, 105, 115, 116, 46, 96, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32,
              105, 110, 115, 116, 97, 110, 99, 101, 46, 99, 97, 110, 118, 97,
              115, 46, 104, 101, 105, 103, 104, 116, 32, 61, 32, 104, 101, 105,
              103, 104, 116, 59, 10, 32, 32, 32, 32, 32, 32, 105, 110, 115, 116,
              97, 110, 99, 101, 46, 99, 97, 110, 118, 97, 115, 46, 119, 105,
              100, 116, 104, 32, 61, 32, 119, 105, 100, 116, 104, 59, 10, 32,
              32, 32, 32, 32, 32, 105, 110, 115, 116, 97, 110, 99, 101, 46, 114,
              101, 115, 105, 122, 101, 40, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              114, 101, 116, 117, 114, 110, 32, 123, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 115, 117, 99, 99, 101, 115, 115, 58, 32, 116, 114, 117,
              101, 10, 32, 32, 32, 32, 32, 32, 125, 59, 10, 32, 32, 32, 32, 125,
              44, 10, 32, 32, 32, 32, 115, 101, 116, 66, 97, 99, 107, 103, 114,
              111, 117, 110, 100, 67, 111, 108, 111, 114, 58, 32, 40, 114, 101,
              113, 117, 101, 115, 116, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 99, 111, 110, 115, 116, 32, 105, 110, 115, 116, 97,
              110, 99, 101, 73, 100, 32, 61, 32, 114, 101, 113, 117, 101, 115,
              116, 46, 112, 97, 114, 97, 109, 115, 46, 105, 110, 115, 116, 97,
              110, 99, 101, 73, 100, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111,
              110, 115, 116, 32, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100,
              67, 111, 108, 111, 114, 32, 61, 32, 114, 101, 113, 117, 101, 115,
              116, 46, 112, 97, 114, 97, 109, 115, 46, 98, 97, 99, 107, 103,
              114, 111, 117, 110, 100, 67, 111, 108, 111, 114, 59, 10, 32, 32,
              32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 105, 110, 115, 116,
              97, 110, 99, 101, 32, 61, 32, 105, 110, 115, 116, 97, 110, 99,
              101, 115, 77, 97, 112, 46, 103, 101, 116, 40, 105, 110, 115, 116,
              97, 110, 99, 101, 73, 100, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              105, 102, 32, 40, 33, 105, 110, 115, 116, 97, 110, 99, 101, 41,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 114, 111,
              119, 32, 110, 101, 119, 32, 69, 114, 114, 111, 114, 40, 96, 73,
              110, 115, 116, 97, 110, 99, 101, 32, 119, 105, 116, 104, 32, 105,
              100, 32, 36, 123, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100,
              125, 32, 100, 111, 101, 115, 32, 110, 111, 116, 32, 101, 120, 105,
              115, 116, 46, 96, 41, 59, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32,
              32, 32, 32, 32, 32, 105, 110, 115, 116, 97, 110, 99, 101, 46, 115,
              101, 116, 66, 97, 99, 107, 103, 114, 111, 117, 110, 100, 67, 111,
              108, 111, 114, 40, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100,
              67, 111, 108, 111, 114, 41, 59, 10, 32, 32, 32, 32, 125, 44, 10,
              32, 32, 32, 32, 115, 101, 116, 70, 114, 97, 109, 101, 58, 32, 40,
              114, 101, 113, 117, 101, 115, 116, 41, 32, 61, 62, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 105, 110, 115,
              116, 97, 110, 99, 101, 73, 100, 32, 61, 32, 114, 101, 113, 117,
              101, 115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 105, 110, 115,
              116, 97, 110, 99, 101, 73, 100, 59, 10, 32, 32, 32, 32, 32, 32,
              99, 111, 110, 115, 116, 32, 102, 114, 97, 109, 101, 32, 61, 32,
              114, 101, 113, 117, 101, 115, 116, 46, 112, 97, 114, 97, 109, 115,
              46, 102, 114, 97, 109, 101, 59, 10, 32, 32, 32, 32, 32, 32, 99,
              111, 110, 115, 116, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32,
              61, 32, 105, 110, 115, 116, 97, 110, 99, 101, 115, 77, 97, 112,
              46, 103, 101, 116, 40, 105, 110, 115, 116, 97, 110, 99, 101, 73,
              100, 41, 59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33,
              105, 110, 115, 116, 97, 110, 99, 101, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 116, 104, 114, 111, 119, 32, 110, 101, 119,
              32, 69, 114, 114, 111, 114, 40, 96, 73, 110, 115, 116, 97, 110,
              99, 101, 32, 119, 105, 116, 104, 32, 105, 100, 32, 36, 123, 105,
              110, 115, 116, 97, 110, 99, 101, 73, 100, 125, 32, 100, 111, 101,
              115, 32, 110, 111, 116, 32, 101, 120, 105, 115, 116, 46, 96, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32,
              105, 110, 115, 116, 97, 110, 99, 101, 46, 115, 101, 116, 70, 114,
              97, 109, 101, 40, 102, 114, 97, 109, 101, 41, 59, 10, 32, 32, 32,
              32, 125, 44, 10, 32, 32, 32, 32, 115, 101, 116, 77, 111, 100, 101,
              58, 32, 40, 114, 101, 113, 117, 101, 115, 116, 41, 32, 61, 62, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 105,
              110, 115, 116, 97, 110, 99, 101, 73, 100, 32, 61, 32, 114, 101,
              113, 117, 101, 115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 105,
              110, 115, 116, 97, 110, 99, 101, 73, 100, 59, 10, 32, 32, 32, 32,
              32, 32, 99, 111, 110, 115, 116, 32, 109, 111, 100, 101, 32, 61,
              32, 114, 101, 113, 117, 101, 115, 116, 46, 112, 97, 114, 97, 109,
              115, 46, 109, 111, 100, 101, 59, 10, 32, 32, 32, 32, 32, 32, 99,
              111, 110, 115, 116, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32,
              61, 32, 105, 110, 115, 116, 97, 110, 99, 101, 115, 77, 97, 112,
              46, 103, 101, 116, 40, 105, 110, 115, 116, 97, 110, 99, 101, 73,
              100, 41, 59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33,
              105, 110, 115, 116, 97, 110, 99, 101, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 116, 104, 114, 111, 119, 32, 110, 101, 119,
              32, 69, 114, 114, 111, 114, 40, 96, 73, 110, 115, 116, 97, 110,
              99, 101, 32, 119, 105, 116, 104, 32, 105, 100, 32, 36, 123, 105,
              110, 115, 116, 97, 110, 99, 101, 73, 100, 125, 32, 100, 111, 101,
              115, 32, 110, 111, 116, 32, 101, 120, 105, 115, 116, 46, 96, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32,
              105, 110, 115, 116, 97, 110, 99, 101, 46, 115, 101, 116, 77, 111,
              100, 101, 40, 109, 111, 100, 101, 41, 59, 10, 32, 32, 32, 32, 125,
              44, 10, 32, 32, 32, 32, 115, 101, 116, 82, 101, 110, 100, 101,
              114, 67, 111, 110, 102, 105, 103, 58, 32, 40, 114, 101, 113, 117,
              101, 115, 116, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 99, 111, 110, 115, 116, 32, 105, 110, 115, 116, 97, 110, 99,
              101, 73, 100, 32, 61, 32, 114, 101, 113, 117, 101, 115, 116, 46,
              112, 97, 114, 97, 109, 115, 46, 105, 110, 115, 116, 97, 110, 99,
              101, 73, 100, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115,
              116, 32, 114, 101, 110, 100, 101, 114, 67, 111, 110, 102, 105,
              103, 32, 61, 32, 114, 101, 113, 117, 101, 115, 116, 46, 112, 97,
              114, 97, 109, 115, 46, 114, 101, 110, 100, 101, 114, 67, 111, 110,
              102, 105, 103, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115,
              116, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32, 61, 32, 105,
              110, 115, 116, 97, 110, 99, 101, 115, 77, 97, 112, 46, 103, 101,
              116, 40, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33, 105, 110, 115,
              116, 97, 110, 99, 101, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 116, 104, 114, 111, 119, 32, 110, 101, 119, 32, 69, 114,
              114, 111, 114, 40, 96, 73, 110, 115, 116, 97, 110, 99, 101, 32,
              119, 105, 116, 104, 32, 105, 100, 32, 36, 123, 105, 110, 115, 116,
              97, 110, 99, 101, 73, 100, 125, 32, 100, 111, 101, 115, 32, 110,
              111, 116, 32, 101, 120, 105, 115, 116, 46, 96, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 105, 110, 115,
              116, 97, 110, 99, 101, 46, 115, 101, 116, 82, 101, 110, 100, 101,
              114, 67, 111, 110, 102, 105, 103, 40, 114, 101, 110, 100, 101,
              114, 67, 111, 110, 102, 105, 103, 41, 59, 10, 32, 32, 32, 32, 125,
              44, 10, 32, 32, 32, 32, 115, 101, 116, 83, 101, 103, 109, 101,
              110, 116, 58, 32, 40, 114, 101, 113, 117, 101, 115, 116, 41, 32,
              61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115,
              116, 32, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100, 32, 61,
              32, 114, 101, 113, 117, 101, 115, 116, 46, 112, 97, 114, 97, 109,
              115, 46, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100, 59, 10,
              32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 115, 101, 103,
              109, 101, 110, 116, 32, 61, 32, 114, 101, 113, 117, 101, 115, 116,
              46, 112, 97, 114, 97, 109, 115, 46, 115, 101, 103, 109, 101, 110,
              116, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32,
              105, 110, 115, 116, 97, 110, 99, 101, 32, 61, 32, 105, 110, 115,
              116, 97, 110, 99, 101, 115, 77, 97, 112, 46, 103, 101, 116, 40,
              105, 110, 115, 116, 97, 110, 99, 101, 73, 100, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 105, 102, 32, 40, 33, 105, 110, 115, 116, 97, 110,
              99, 101, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116,
              104, 114, 111, 119, 32, 110, 101, 119, 32, 69, 114, 114, 111, 114,
              40, 96, 73, 110, 115, 116, 97, 110, 99, 101, 32, 119, 105, 116,
              104, 32, 105, 100, 32, 36, 123, 105, 110, 115, 116, 97, 110, 99,
              101, 73, 100, 125, 32, 100, 111, 101, 115, 32, 110, 111, 116, 32,
              101, 120, 105, 115, 116, 46, 96, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 125, 10, 32, 32, 32, 32, 32, 32, 105, 110, 115, 116, 97, 110,
              99, 101, 46, 115, 101, 116, 83, 101, 103, 109, 101, 110, 116, 40,
              115, 101, 103, 109, 101, 110, 116, 91, 48, 93, 44, 32, 115, 101,
              103, 109, 101, 110, 116, 91, 49, 93, 41, 59, 10, 32, 32, 32, 32,
              125, 44, 10, 32, 32, 32, 32, 115, 101, 116, 83, 112, 101, 101,
              100, 58, 32, 40, 114, 101, 113, 117, 101, 115, 116, 41, 32, 61,
              62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116,
              32, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100, 32, 61, 32,
              114, 101, 113, 117, 101, 115, 116, 46, 112, 97, 114, 97, 109, 115,
              46, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100, 59, 10, 32, 32,
              32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 115, 112, 101, 101,
              100, 32, 61, 32, 114, 101, 113, 117, 101, 115, 116, 46, 112, 97,
              114, 97, 109, 115, 46, 115, 112, 101, 101, 100, 59, 10, 32, 32,
              32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 105, 110, 115, 116,
              97, 110, 99, 101, 32, 61, 32, 105, 110, 115, 116, 97, 110, 99,
              101, 115, 77, 97, 112, 46, 103, 101, 116, 40, 105, 110, 115, 116,
              97, 110, 99, 101, 73, 100, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              105, 102, 32, 40, 33, 105, 110, 115, 116, 97, 110, 99, 101, 41,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 114, 111,
              119, 32, 110, 101, 119, 32, 69, 114, 114, 111, 114, 40, 96, 73,
              110, 115, 116, 97, 110, 99, 101, 32, 119, 105, 116, 104, 32, 105,
              100, 32, 36, 123, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100,
              125, 32, 100, 111, 101, 115, 32, 110, 111, 116, 32, 101, 120, 105,
              115, 116, 46, 96, 41, 59, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32,
              32, 32, 32, 32, 32, 105, 110, 115, 116, 97, 110, 99, 101, 46, 115,
              101, 116, 83, 112, 101, 101, 100, 40, 115, 112, 101, 101, 100, 41,
              59, 10, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 115, 101,
              116, 85, 115, 101, 70, 114, 97, 109, 101, 73, 110, 116, 101, 114,
              112, 111, 108, 97, 116, 105, 111, 110, 58, 32, 40, 114, 101, 113,
              117, 101, 115, 116, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 99, 111, 110, 115, 116, 32, 105, 110, 115, 116, 97, 110,
              99, 101, 73, 100, 32, 61, 32, 114, 101, 113, 117, 101, 115, 116,
              46, 112, 97, 114, 97, 109, 115, 46, 105, 110, 115, 116, 97, 110,
              99, 101, 73, 100, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110,
              115, 116, 32, 117, 115, 101, 70, 114, 97, 109, 101, 73, 110, 116,
              101, 114, 112, 111, 108, 97, 116, 105, 111, 110, 32, 61, 32, 114,
              101, 113, 117, 101, 115, 116, 46, 112, 97, 114, 97, 109, 115, 46,
              117, 115, 101, 70, 114, 97, 109, 101, 73, 110, 116, 101, 114, 112,
              111, 108, 97, 116, 105, 111, 110, 59, 10, 32, 32, 32, 32, 32, 32,
              99, 111, 110, 115, 116, 32, 105, 110, 115, 116, 97, 110, 99, 101,
              32, 61, 32, 105, 110, 115, 116, 97, 110, 99, 101, 115, 77, 97,
              112, 46, 103, 101, 116, 40, 105, 110, 115, 116, 97, 110, 99, 101,
              73, 100, 41, 59, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33,
              105, 110, 115, 116, 97, 110, 99, 101, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 32, 32, 116, 104, 114, 111, 119, 32, 110, 101, 119,
              32, 69, 114, 114, 111, 114, 40, 96, 73, 110, 115, 116, 97, 110,
              99, 101, 32, 119, 105, 116, 104, 32, 105, 100, 32, 36, 123, 105,
              110, 115, 116, 97, 110, 99, 101, 73, 100, 125, 32, 100, 111, 101,
              115, 32, 110, 111, 116, 32, 101, 120, 105, 115, 116, 46, 96, 41,
              59, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32,
              105, 110, 115, 116, 97, 110, 99, 101, 46, 115, 101, 116, 85, 115,
              101, 70, 114, 97, 109, 101, 73, 110, 116, 101, 114, 112, 111, 108,
              97, 116, 105, 111, 110, 40, 117, 115, 101, 70, 114, 97, 109, 101,
              73, 110, 116, 101, 114, 112, 111, 108, 97, 116, 105, 111, 110, 41,
              59, 10, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 115, 101,
              116, 87, 97, 115, 109, 85, 114, 108, 58, 32, 40, 114, 101, 113,
              117, 101, 115, 116, 41, 32, 61, 62, 32, 123, 10, 32, 32, 32, 32,
              32, 32, 68, 111, 116, 76, 111, 116, 116, 105, 101, 46, 115, 101,
              116, 87, 97, 115, 109, 85, 114, 108, 40, 114, 101, 113, 117, 101,
              115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 117, 114, 108, 41,
              59, 10, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 115, 116,
              111, 112, 58, 32, 40, 114, 101, 113, 117, 101, 115, 116, 41, 32,
              61, 62, 32, 123, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115,
              116, 32, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100, 32, 61,
              32, 114, 101, 113, 117, 101, 115, 116, 46, 112, 97, 114, 97, 109,
              115, 46, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100, 59, 10,
              32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 105, 110, 115,
              116, 97, 110, 99, 101, 32, 61, 32, 105, 110, 115, 116, 97, 110,
              99, 101, 115, 77, 97, 112, 46, 103, 101, 116, 40, 105, 110, 115,
              116, 97, 110, 99, 101, 73, 100, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 105, 102, 32, 40, 33, 105, 110, 115, 116, 97, 110, 99, 101,
              41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 114,
              111, 119, 32, 110, 101, 119, 32, 69, 114, 114, 111, 114, 40, 96,
              73, 110, 115, 116, 97, 110, 99, 101, 32, 119, 105, 116, 104, 32,
              105, 100, 32, 36, 123, 105, 110, 115, 116, 97, 110, 99, 101, 73,
              100, 125, 32, 100, 111, 101, 115, 32, 110, 111, 116, 32, 101, 120,
              105, 115, 116, 46, 96, 41, 59, 10, 32, 32, 32, 32, 32, 32, 125,
              10, 32, 32, 32, 32, 32, 32, 105, 110, 115, 116, 97, 110, 99, 101,
              46, 115, 116, 111, 112, 40, 41, 59, 10, 32, 32, 32, 32, 125, 44,
              10, 32, 32, 32, 32, 117, 110, 102, 114, 101, 101, 122, 101, 58,
              32, 40, 114, 101, 113, 117, 101, 115, 116, 41, 32, 61, 62, 32,
              123, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 105,
              110, 115, 116, 97, 110, 99, 101, 73, 100, 32, 61, 32, 114, 101,
              113, 117, 101, 115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 105,
              110, 115, 116, 97, 110, 99, 101, 73, 100, 59, 10, 32, 32, 32, 32,
              32, 32, 99, 111, 110, 115, 116, 32, 105, 110, 115, 116, 97, 110,
              99, 101, 32, 61, 32, 105, 110, 115, 116, 97, 110, 99, 101, 115,
              77, 97, 112, 46, 103, 101, 116, 40, 105, 110, 115, 116, 97, 110,
              99, 101, 73, 100, 41, 59, 10, 32, 32, 32, 32, 32, 32, 105, 102,
              32, 40, 33, 105, 110, 115, 116, 97, 110, 99, 101, 41, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 114, 111, 119, 32, 110,
              101, 119, 32, 69, 114, 114, 111, 114, 40, 96, 73, 110, 115, 116,
              97, 110, 99, 101, 32, 119, 105, 116, 104, 32, 105, 100, 32, 36,
              123, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100, 125, 32, 100,
              111, 101, 115, 32, 110, 111, 116, 32, 101, 120, 105, 115, 116, 46,
              96, 41, 59, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32,
              32, 32, 105, 110, 115, 116, 97, 110, 99, 101, 46, 117, 110, 102,
              114, 101, 101, 122, 101, 40, 41, 59, 10, 32, 32, 32, 32, 125, 44,
              10, 32, 32, 32, 32, 115, 101, 116, 86, 105, 101, 119, 112, 111,
              114, 116, 40, 114, 101, 113, 117, 101, 115, 116, 41, 32, 123, 10,
              32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 105, 110, 115,
              116, 97, 110, 99, 101, 73, 100, 32, 61, 32, 114, 101, 113, 117,
              101, 115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 105, 110, 115,
              116, 97, 110, 99, 101, 73, 100, 59, 10, 32, 32, 32, 32, 32, 32,
              99, 111, 110, 115, 116, 32, 120, 32, 61, 32, 114, 101, 113, 117,
              101, 115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 120, 59, 10,
              32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 121, 32, 61,
              32, 114, 101, 113, 117, 101, 115, 116, 46, 112, 97, 114, 97, 109,
              115, 46, 121, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115,
              116, 32, 119, 105, 100, 116, 104, 32, 61, 32, 114, 101, 113, 117,
              101, 115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 119, 105, 100,
              116, 104, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116,
              32, 104, 101, 105, 103, 104, 116, 32, 61, 32, 114, 101, 113, 117,
              101, 115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 104, 101, 105,
              103, 104, 116, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115,
              116, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32, 61, 32, 105,
              110, 115, 116, 97, 110, 99, 101, 115, 77, 97, 112, 46, 103, 101,
              116, 40, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100, 41, 59,
              10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33, 105, 110, 115,
              116, 97, 110, 99, 101, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32,
              32, 32, 116, 104, 114, 111, 119, 32, 110, 101, 119, 32, 69, 114,
              114, 111, 114, 40, 96, 73, 110, 115, 116, 97, 110, 99, 101, 32,
              119, 105, 116, 104, 32, 105, 100, 32, 36, 123, 105, 110, 115, 116,
              97, 110, 99, 101, 73, 100, 125, 32, 100, 111, 101, 115, 32, 110,
              111, 116, 32, 101, 120, 105, 115, 116, 46, 96, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116,
              117, 114, 110, 32, 105, 110, 115, 116, 97, 110, 99, 101, 46, 115,
              101, 116, 86, 105, 101, 119, 112, 111, 114, 116, 40, 120, 44, 32,
              121, 44, 32, 119, 105, 100, 116, 104, 44, 32, 104, 101, 105, 103,
              104, 116, 41, 59, 10, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32,
              115, 101, 116, 77, 97, 114, 107, 101, 114, 40, 114, 101, 113, 117,
              101, 115, 116, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 99, 111,
              110, 115, 116, 32, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100,
              32, 61, 32, 114, 101, 113, 117, 101, 115, 116, 46, 112, 97, 114,
              97, 109, 115, 46, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100,
              59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 109,
              97, 114, 107, 101, 114, 32, 61, 32, 114, 101, 113, 117, 101, 115,
              116, 46, 112, 97, 114, 97, 109, 115, 46, 109, 97, 114, 107, 101,
              114, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32,
              105, 110, 115, 116, 97, 110, 99, 101, 32, 61, 32, 105, 110, 115,
              116, 97, 110, 99, 101, 115, 77, 97, 112, 46, 103, 101, 116, 40,
              105, 110, 115, 116, 97, 110, 99, 101, 73, 100, 41, 59, 10, 32, 32,
              32, 32, 32, 32, 105, 102, 32, 40, 33, 105, 110, 115, 116, 97, 110,
              99, 101, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116,
              104, 114, 111, 119, 32, 110, 101, 119, 32, 69, 114, 114, 111, 114,
              40, 96, 73, 110, 115, 116, 97, 110, 99, 101, 32, 119, 105, 116,
              104, 32, 105, 100, 32, 36, 123, 105, 110, 115, 116, 97, 110, 99,
              101, 73, 100, 125, 32, 100, 111, 101, 115, 32, 110, 111, 116, 32,
              101, 120, 105, 115, 116, 46, 96, 41, 59, 10, 32, 32, 32, 32, 32,
              32, 125, 10, 32, 32, 32, 32, 32, 32, 105, 110, 115, 116, 97, 110,
              99, 101, 46, 115, 101, 116, 77, 97, 114, 107, 101, 114, 40, 109,
              97, 114, 107, 101, 114, 41, 59, 10, 32, 32, 32, 32, 32, 32, 114,
              101, 116, 117, 114, 110, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32,
              32, 115, 117, 99, 99, 101, 115, 115, 58, 32, 116, 114, 117, 101,
              10, 32, 32, 32, 32, 32, 32, 125, 59, 10, 32, 32, 32, 32, 125, 44,
              10, 32, 32, 32, 32, 115, 101, 116, 76, 111, 111, 112, 40, 114,
              101, 113, 117, 101, 115, 116, 41, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 99, 111, 110, 115, 116, 32, 105, 110, 115, 116, 97, 110, 99,
              101, 73, 100, 32, 61, 32, 114, 101, 113, 117, 101, 115, 116, 46,
              112, 97, 114, 97, 109, 115, 46, 105, 110, 115, 116, 97, 110, 99,
              101, 73, 100, 59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115,
              116, 32, 108, 111, 111, 112, 32, 61, 32, 114, 101, 113, 117, 101,
              115, 116, 46, 112, 97, 114, 97, 109, 115, 46, 108, 111, 111, 112,
              59, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 105,
              110, 115, 116, 97, 110, 99, 101, 32, 61, 32, 105, 110, 115, 116,
              97, 110, 99, 101, 115, 77, 97, 112, 46, 103, 101, 116, 40, 105,
              110, 115, 116, 97, 110, 99, 101, 73, 100, 41, 59, 10, 32, 32, 32,
              32, 32, 32, 105, 102, 32, 40, 33, 105, 110, 115, 116, 97, 110, 99,
              101, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104,
              114, 111, 119, 32, 110, 101, 119, 32, 69, 114, 114, 111, 114, 40,
              96, 73, 110, 115, 116, 97, 110, 99, 101, 32, 119, 105, 116, 104,
              32, 105, 100, 32, 36, 123, 105, 110, 115, 116, 97, 110, 99, 101,
              73, 100, 125, 32, 100, 111, 101, 115, 32, 110, 111, 116, 32, 101,
              120, 105, 115, 116, 46, 96, 41, 59, 10, 32, 32, 32, 32, 32, 32,
              125, 10, 32, 32, 32, 32, 32, 32, 105, 110, 115, 116, 97, 110, 99,
              101, 46, 115, 101, 116, 76, 111, 111, 112, 40, 108, 111, 111, 112,
              41, 59, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110,
              32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 115, 117, 99, 99,
              101, 115, 115, 58, 32, 116, 114, 117, 101, 10, 32, 32, 32, 32, 32,
              32, 125, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 125, 59, 10, 32,
              32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 101, 120, 101, 99,
              117, 116, 101, 67, 111, 109, 109, 97, 110, 100, 40, 114, 112, 99,
              82, 101, 113, 117, 101, 115, 116, 41, 32, 123, 10, 32, 32, 32, 32,
              99, 111, 110, 115, 116, 32, 109, 101, 116, 104, 111, 100, 32, 61,
              32, 114, 112, 99, 82, 101, 113, 117, 101, 115, 116, 46, 109, 101,
              116, 104, 111, 100, 59, 10, 32, 32, 32, 32, 105, 102, 32, 40, 116,
              121, 112, 101, 111, 102, 32, 99, 111, 109, 109, 97, 110, 100, 115,
              91, 109, 101, 116, 104, 111, 100, 93, 32, 61, 61, 61, 32, 34, 102,
              117, 110, 99, 116, 105, 111, 110, 34, 41, 32, 123, 10, 32, 32, 32,
              32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 99, 111, 109, 109,
              97, 110, 100, 115, 91, 109, 101, 116, 104, 111, 100, 93, 40, 114,
              112, 99, 82, 101, 113, 117, 101, 115, 116, 41, 59, 10, 32, 32, 32,
              32, 125, 32, 101, 108, 115, 101, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 116, 104, 114, 111, 119, 32, 110, 101, 119, 32, 69, 114, 114,
              111, 114, 40, 96, 77, 101, 116, 104, 111, 100, 32, 36, 123, 109,
              101, 116, 104, 111, 100, 125, 32, 105, 115, 32, 110, 111, 116, 32,
              105, 109, 112, 108, 101, 109, 101, 110, 116, 101, 100, 32, 105,
              110, 32, 99, 111, 109, 109, 97, 110, 100, 115, 46, 96, 41, 59, 10,
              32, 32, 32, 32, 125, 10, 32, 32, 125, 10, 32, 32, 115, 101, 108,
              102, 46, 111, 110, 109, 101, 115, 115, 97, 103, 101, 32, 61, 32,
              40, 101, 118, 101, 110, 116, 41, 32, 61, 62, 32, 123, 10, 32, 32,
              32, 32, 116, 114, 121, 32, 123, 10, 32, 32, 32, 32, 32, 32, 99,
              111, 110, 115, 116, 32, 114, 101, 115, 117, 108, 116, 32, 61, 32,
              101, 120, 101, 99, 117, 116, 101, 67, 111, 109, 109, 97, 110, 100,
              40, 101, 118, 101, 110, 116, 46, 100, 97, 116, 97, 41, 59, 10, 32,
              32, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 114, 101, 115,
              112, 111, 110, 115, 101, 32, 61, 32, 123, 10, 32, 32, 32, 32, 32,
              32, 32, 32, 105, 100, 58, 32, 101, 118, 101, 110, 116, 46, 100,
              97, 116, 97, 46, 105, 100, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              109, 101, 116, 104, 111, 100, 58, 32, 101, 118, 101, 110, 116, 46,
              100, 97, 116, 97, 46, 109, 101, 116, 104, 111, 100, 44, 10, 32,
              32, 32, 32, 32, 32, 32, 32, 114, 101, 115, 117, 108, 116, 10, 32,
              32, 32, 32, 32, 32, 125, 59, 10, 32, 32, 32, 32, 32, 32, 115, 101,
              108, 102, 46, 112, 111, 115, 116, 77, 101, 115, 115, 97, 103, 101,
              40, 114, 101, 115, 112, 111, 110, 115, 101, 41, 59, 10, 32, 32,
              32, 32, 125, 32, 99, 97, 116, 99, 104, 32, 40, 101, 114, 114, 111,
              114, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 99, 111, 110, 115,
              116, 32, 101, 114, 114, 111, 114, 82, 101, 115, 112, 111, 110,
              115, 101, 32, 61, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32,
              105, 100, 58, 32, 101, 118, 101, 110, 116, 46, 100, 97, 116, 97,
              46, 105, 100, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 109, 101,
              116, 104, 111, 100, 58, 32, 101, 118, 101, 110, 116, 46, 100, 97,
              116, 97, 46, 109, 101, 116, 104, 111, 100, 44, 10, 32, 32, 32, 32,
              32, 32, 32, 32, 101, 114, 114, 111, 114, 58, 32, 101, 114, 114,
              111, 114, 46, 109, 101, 115, 115, 97, 103, 101, 10, 32, 32, 32,
              32, 32, 32, 125, 59, 10, 32, 32, 32, 32, 32, 32, 115, 101, 108,
              102, 46, 112, 111, 115, 116, 77, 101, 115, 115, 97, 103, 101, 40,
              101, 114, 114, 111, 114, 82, 101, 115, 112, 111, 110, 115, 101,
              41, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 125, 59, 10, 32, 32,
              118, 97, 114, 32, 100, 117, 109, 109, 121, 32, 61, 32, 34, 34, 59,
              10, 32, 32, 118, 97, 114, 32, 100, 111, 116, 108, 111, 116, 116,
              105, 101, 95, 119, 111, 114, 107, 101, 114, 95, 100, 101, 102, 97,
              117, 108, 116, 32, 61, 32, 100, 117, 109, 109, 121, 59, 10, 125,
              41, 40, 41, 59, 10,
            ]),
          ],
          { type: "application/javascript" }
        ),
        t = URL.createObjectURL(e),
        n = new Worker(t);
      return URL.revokeObjectURL(t), n;
    }
  },
  nQ = tQ,
  rQ = class {
    constructor() {
      wt(this, "_workers", new Map()),
        wt(this, "_animationWorkerMap", new Map());
    }
    getWorker(e) {
      return (
        this._workers.has(e) || this._workers.set(e, new nQ()),
        this._workers.get(e)
      );
    }
    assignAnimationToWorker(e, t) {
      this._animationWorkerMap.set(e, t);
    }
    unassignAnimationFromWorker(e) {
      this._animationWorkerMap.delete(e);
    }
    sendMessage(e, t, n) {
      this.getWorker(e).postMessage(t, n || []);
    }
    terminateWorker(e) {
      let t = this._workers.get(e);
      t && (t.terminate(), this._workers.delete(e));
    }
  };
function lb(e, t) {
  if (e instanceof HTMLCanvasElement) {
    let { height: n, width: r } = e.getBoundingClientRect();
    if (n !== 0 && r !== 0) return { width: r * t, height: n * t };
  }
  return { width: e.width, height: e.height };
}
function ub() {
  return Date.now().toString(36) + Math.random().toString(36).substr(2, 9);
}
var cb = class jo {
  constructor(t) {
    wt(this, "_eventManager", new nA()),
      wt(this, "_id"),
      wt(this, "_worker"),
      wt(this, "_canvas"),
      wt(this, "_dotLottieInstanceState", {
        markers: [],
        autoplay: !1,
        backgroundColor: "",
        currentFrame: 0,
        duration: 0,
        loop: !1,
        mode: "forward",
        segment: [0, 0],
        segmentDuration: 0,
        speed: 1,
        totalFrames: 0,
        isLoaded: !1,
        isPlaying: !1,
        isPaused: !1,
        isStopped: !0,
        isFrozen: !1,
        useFrameInterpolation: !1,
        renderConfig: { devicePixelRatio: Do() },
        activeAnimationId: "",
        activeThemeId: "",
        layout: void 0,
        marker: void 0,
        isReady: !1,
        manifest: null,
      }),
      wt(this, "_created", !1),
      wt(this, "_pointerUpMethod"),
      wt(this, "_pointerDownMethod"),
      wt(this, "_pointerMoveMethod"),
      wt(this, "_pointerEnterMethod"),
      wt(this, "_pointerExitMethod");
    var n, r, i;
    (this._canvas = t.canvas), (this._id = `dotlottie-${ub()}`);
    let s = t.workerId || "defaultWorker";
    (this._worker = jo._workerManager.getWorker(s)),
      jo._workerManager.assignAnimationToWorker(this._id, s),
      jo._wasmUrl && this._sendMessage("setWasmUrl", { url: jo._wasmUrl }),
      this._create(
        Ur(tr({}, t), {
          renderConfig: Ur(tr({}, t.renderConfig), {
            devicePixelRatio:
              ((n = t.renderConfig) == null ? void 0 : n.devicePixelRatio) ||
              Do(),
            freezeOnOffscreen:
              (i =
                (r = t.renderConfig) == null ? void 0 : r.freezeOnOffscreen) !=
              null
                ? i
                : !0,
          }),
        })
      ),
      this._worker.addEventListener(
        "message",
        this._handleWorkerEvent.bind(this)
      ),
      (this._pointerUpMethod = this._onPointerUp.bind(this)),
      (this._pointerDownMethod = this._onPointerDown.bind(this)),
      (this._pointerMoveMethod = this._onPointerMove.bind(this)),
      (this._pointerEnterMethod = this._onPointerEnter.bind(this)),
      (this._pointerExitMethod = this._onPointerLeave.bind(this));
  }
  _handleWorkerEvent(t) {
    return Tt(this, null, function* () {
      let n = t.data;
      n.id ||
        (n.method === "onLoad" &&
          n.result.instanceId === this._id &&
          (yield this._updateDotLottieInstanceState(),
          this._eventManager.dispatch(n.result.event),
          mr &&
            this._canvas instanceof HTMLCanvasElement &&
            (this._dotLottieInstanceState.renderConfig.freezeOnOffscreen &&
              i2.observe(this._canvas, this),
            this._dotLottieInstanceState.renderConfig.autoResize &&
              s2.observe(this._canvas, this))),
        n.method === "onComplete" &&
          n.result.instanceId === this._id &&
          (yield this._updateDotLottieInstanceState(),
          this._eventManager.dispatch(n.result.event)),
        n.method === "onDestroy" &&
          n.result.instanceId === this._id &&
          this._eventManager.dispatch(n.result.event),
        n.method === "onUnfreeze" &&
          n.result.instanceId === this._id &&
          (yield this._updateDotLottieInstanceState(),
          (this._dotLottieInstanceState.isFrozen = !1),
          this._eventManager.dispatch(n.result.event)),
        n.method === "onFrame" &&
          n.result.instanceId === this._id &&
          ((this._dotLottieInstanceState.currentFrame =
            n.result.event.currentFrame),
          this._eventManager.dispatch(n.result.event)),
        n.method === "onRender" &&
          n.result.instanceId === this._id &&
          this._eventManager.dispatch(n.result.event),
        n.method === "onFreeze" &&
          n.result.instanceId === this._id &&
          (yield this._updateDotLottieInstanceState(),
          this._eventManager.dispatch(n.result.event)),
        n.method === "onPause" &&
          n.result.instanceId === this._id &&
          (yield this._updateDotLottieInstanceState(),
          this._eventManager.dispatch(n.result.event)),
        n.method === "onPlay" &&
          n.result.instanceId === this._id &&
          (yield this._updateDotLottieInstanceState(),
          this._eventManager.dispatch(n.result.event)),
        n.method === "onStop" &&
          n.result.instanceId === this._id &&
          (yield this._updateDotLottieInstanceState(),
          this._eventManager.dispatch(n.result.event)),
        n.method === "onLoadError" &&
          n.result.instanceId === this._id &&
          (yield this._updateDotLottieInstanceState(),
          this._eventManager.dispatch(n.result.event)),
        n.method === "onReady" &&
          n.result.instanceId === this._id &&
          (yield this._updateDotLottieInstanceState(),
          this._eventManager.dispatch(n.result.event)));
    });
  }
  _create(t) {
    return Tt(this, null, function* () {
      var n;
      let r;
      this._canvas instanceof HTMLCanvasElement
        ? (r = this._canvas.transferControlToOffscreen())
        : (r = this._canvas);
      let { instanceId: i } = yield this._sendMessage(
        "create",
        tr(
          { instanceId: this._id, config: Ur(tr({}, t), { canvas: r }) },
          lb(
            this._canvas,
            ((n = t.renderConfig) == null ? void 0 : n.devicePixelRatio) || Do()
          )
        ),
        [r]
      );
      if (i !== this._id) throw new Error("Instance ID mismatch");
      (this._created = !0), yield this._updateDotLottieInstanceState();
    });
  }
  get isLoaded() {
    return this._dotLottieInstanceState.isLoaded;
  }
  get isPlaying() {
    return this._dotLottieInstanceState.isPlaying;
  }
  get isPaused() {
    return this._dotLottieInstanceState.isPaused;
  }
  get isStopped() {
    return this._dotLottieInstanceState.isStopped;
  }
  get currentFrame() {
    return this._dotLottieInstanceState.currentFrame;
  }
  get isFrozen() {
    return this._dotLottieInstanceState.isFrozen;
  }
  get segmentDuration() {
    return this._dotLottieInstanceState.segmentDuration;
  }
  get totalFrames() {
    return this._dotLottieInstanceState.totalFrames;
  }
  get segment() {
    return this._dotLottieInstanceState.segment;
  }
  get speed() {
    return this._dotLottieInstanceState.speed;
  }
  get duration() {
    return this._dotLottieInstanceState.duration;
  }
  get isReady() {
    return this._dotLottieInstanceState.isReady;
  }
  get mode() {
    return this._dotLottieInstanceState.mode;
  }
  get canvas() {
    return this._canvas;
  }
  get autoplay() {
    return this._dotLottieInstanceState.autoplay;
  }
  get backgroundColor() {
    return this._dotLottieInstanceState.backgroundColor;
  }
  get loop() {
    return this._dotLottieInstanceState.loop;
  }
  get useFrameInterpolation() {
    return this._dotLottieInstanceState.useFrameInterpolation;
  }
  get renderConfig() {
    return this._dotLottieInstanceState.renderConfig;
  }
  get manifest() {
    return this._dotLottieInstanceState.manifest;
  }
  get activeAnimationId() {
    return this._dotLottieInstanceState.activeAnimationId;
  }
  get marker() {
    return this._dotLottieInstanceState.marker;
  }
  get activeThemeId() {
    return this._dotLottieInstanceState.activeThemeId;
  }
  get layout() {
    return this._dotLottieInstanceState.layout;
  }
  play() {
    return Tt(this, null, function* () {
      this._created &&
        (yield this._sendMessage("play", { instanceId: this._id }),
        yield this._updateDotLottieInstanceState(),
        mr &&
          this._canvas instanceof HTMLCanvasElement &&
          this._dotLottieInstanceState.renderConfig.freezeOnOffscreen &&
          !rA(this._canvas) &&
          (yield this.freeze()));
    });
  }
  pause() {
    return Tt(this, null, function* () {
      this._created &&
        (yield this._sendMessage("pause", { instanceId: this._id }),
        yield this._updateDotLottieInstanceState());
    });
  }
  stop() {
    return Tt(this, null, function* () {
      this._created &&
        (yield this._sendMessage("stop", { instanceId: this._id }),
        yield this._updateDotLottieInstanceState());
    });
  }
  setSpeed(t) {
    return Tt(this, null, function* () {
      this._created &&
        (yield this._sendMessage("setSpeed", {
          instanceId: this._id,
          speed: t,
        }),
        yield this._updateDotLottieInstanceState());
    });
  }
  setMode(t) {
    return Tt(this, null, function* () {
      this._created &&
        (yield this._sendMessage("setMode", { instanceId: this._id, mode: t }),
        yield this._updateDotLottieInstanceState());
    });
  }
  setFrame(t) {
    return Tt(this, null, function* () {
      this._created &&
        (yield this._sendMessage("setFrame", {
          frame: t,
          instanceId: this._id,
        }),
        yield this._updateDotLottieInstanceState());
    });
  }
  setSegment(t, n) {
    return Tt(this, null, function* () {
      this._created &&
        (yield this._sendMessage("setSegment", {
          instanceId: this._id,
          segment: [t, n],
        }),
        yield this._updateDotLottieInstanceState());
    });
  }
  setRenderConfig(t) {
    return Tt(this, null, function* () {
      if (!this._created) return;
      let n = t,
        { devicePixelRatio: r, freezeOnOffscreen: i } = n,
        s = J_(n, ["devicePixelRatio", "freezeOnOffscreen"]);
      yield this._sendMessage("setRenderConfig", {
        instanceId: this._id,
        renderConfig: Ur(
          tr(tr({}, this._dotLottieInstanceState.renderConfig), s),
          { devicePixelRatio: r || Do(), freezeOnOffscreen: i ?? !0 }
        ),
      }),
        yield this._updateDotLottieInstanceState(),
        mr &&
          this._canvas instanceof HTMLCanvasElement &&
          (this._dotLottieInstanceState.renderConfig.autoResize
            ? s2.observe(this._canvas, this)
            : s2.unobserve(this._canvas),
          this._dotLottieInstanceState.renderConfig.freezeOnOffscreen
            ? i2.observe(this._canvas, this)
            : (i2.unobserve(this._canvas),
              this._dotLottieInstanceState.isFrozen &&
                (yield this.unfreeze())));
    });
  }
  setUseFrameInterpolation(t) {
    return Tt(this, null, function* () {
      this._created &&
        (yield this._sendMessage("setUseFrameInterpolation", {
          instanceId: this._id,
          useFrameInterpolation: t,
        }),
        yield this._updateDotLottieInstanceState());
    });
  }
  setTheme(t) {
    return Tt(this, null, function* () {
      if (!this._created) return !1;
      let n = this._sendMessage("setTheme", {
        instanceId: this._id,
        themeId: t,
      });
      return yield this._updateDotLottieInstanceState(), n;
    });
  }
  load(t) {
    return Tt(this, null, function* () {
      this._created &&
        (yield this._sendMessage("load", { config: t, instanceId: this._id }),
        yield this._updateDotLottieInstanceState());
    });
  }
  setLoop(t) {
    return Tt(this, null, function* () {
      this._created &&
        (yield this._sendMessage("setLoop", { instanceId: this._id, loop: t }),
        yield this._updateDotLottieInstanceState());
    });
  }
  resize() {
    return Tt(this, null, function* () {
      if (!this._created) return;
      let { height: t, width: n } = lb(
        this._canvas,
        this._dotLottieInstanceState.renderConfig.devicePixelRatio || Do()
      );
      yield this._sendMessage("resize", {
        height: t,
        instanceId: this._id,
        width: n,
      }),
        yield this._updateDotLottieInstanceState();
    });
  }
  destroy() {
    return Tt(this, null, function* () {
      this._created &&
        ((this._created = !1),
        yield this._sendMessage("destroy", { instanceId: this._id }),
        this._cleanupStateMachineListeners(),
        jo._workerManager.unassignAnimationFromWorker(this._id),
        this._eventManager.removeAllEventListeners(),
        mr &&
          this._canvas instanceof HTMLCanvasElement &&
          (i2.unobserve(this._canvas), s2.unobserve(this._canvas)));
    });
  }
  freeze() {
    return Tt(this, null, function* () {
      this._created &&
        (yield this._sendMessage("freeze", { instanceId: this._id }),
        yield this._updateDotLottieInstanceState());
    });
  }
  unfreeze() {
    return Tt(this, null, function* () {
      this._created &&
        (yield this._sendMessage("unfreeze", { instanceId: this._id }),
        yield this._updateDotLottieInstanceState());
    });
  }
  setBackgroundColor(t) {
    return Tt(this, null, function* () {
      this._created &&
        (yield this._sendMessage("setBackgroundColor", {
          instanceId: this._id,
          backgroundColor: t,
        }),
        yield this._updateDotLottieInstanceState());
    });
  }
  loadAnimation(t) {
    return Tt(this, null, function* () {
      this._created &&
        (yield this._sendMessage("loadAnimation", {
          animationId: t,
          instanceId: this._id,
        }),
        yield this._updateDotLottieInstanceState());
    });
  }
  setLayout(t) {
    return Tt(this, null, function* () {
      this._created &&
        (yield this._sendMessage("setLayout", {
          instanceId: this._id,
          layout: t,
        }),
        yield this._updateDotLottieInstanceState());
    });
  }
  _updateDotLottieInstanceState() {
    return Tt(this, null, function* () {
      if (!this._created) return;
      let t = yield this._sendMessage("getDotLottieInstanceState", {
        instanceId: this._id,
      });
      this._dotLottieInstanceState = t.state;
    });
  }
  markers() {
    return this._dotLottieInstanceState.markers;
  }
  setMarker(t) {
    return Tt(this, null, function* () {
      this._created &&
        (yield this._sendMessage("setMarker", {
          instanceId: this._id,
          marker: t,
        }),
        yield this._updateDotLottieInstanceState());
    });
  }
  setThemeData(t) {
    return Tt(this, null, function* () {
      if (!this._created) return !1;
      let n = yield this._sendMessage("setThemeData", {
        instanceId: this._id,
        themeData: t,
      });
      return yield this._updateDotLottieInstanceState(), n;
    });
  }
  setViewport(t, n, r, i) {
    return Tt(this, null, function* () {
      return this._created
        ? this._sendMessage("setViewport", {
            x: t,
            y: n,
            width: r,
            height: i,
            instanceId: this._id,
          })
        : !1;
    });
  }
  _sendMessage(t, n, r) {
    return Tt(this, null, function* () {
      let i = { id: `dotlottie-request-${ub()}`, method: t, params: n };
      return (
        this._worker.postMessage(i, r || []),
        new Promise((s, o) => {
          let l = (c) => {
            let f = c.data;
            f.id === i.id &&
              (this._worker.removeEventListener("message", l),
              f.error
                ? o(new Error(`Failed to execute method ${t}: ${f.error}`))
                : s(f.result));
          };
          this._worker.addEventListener("message", l);
        })
      );
    });
  }
  addEventListener(t, n) {
    this._eventManager.addEventListener(t, n);
  }
  removeEventListener(t, n) {
    this._eventManager.removeEventListener(t, n);
  }
  static setWasmUrl(t) {
    jo._wasmUrl = t;
  }
  loadStateMachine(t) {
    return Tt(this, null, function* () {
      if (!this._created) return !1;
      let n = yield this._sendMessage("loadStateMachine", {
        instanceId: this._id,
        stateMachineId: t,
      });
      return yield this._updateDotLottieInstanceState(), n;
    });
  }
  loadStateMachineData(t) {
    return Tt(this, null, function* () {
      if (!this._created) return !1;
      let n = yield this._sendMessage("loadStateMachineData", {
        instanceId: this._id,
        stateMachineData: t,
      });
      return yield this._updateDotLottieInstanceState(), n;
    });
  }
  startStateMachine() {
    return Tt(this, null, function* () {
      if (!this._created) return !1;
      this._setupStateMachineListeners();
      let t = yield this._sendMessage("startStateMachine", {
        instanceId: this._id,
      });
      return yield this._updateDotLottieInstanceState(), t;
    });
  }
  stopStateMachine() {
    return Tt(this, null, function* () {
      return this._created
        ? (this._cleanupStateMachineListeners(),
          this._sendMessage("stopStateMachine", { instanceId: this._id }))
        : !1;
    });
  }
  getStateMachineListeners() {
    return Tt(this, null, function* () {
      return this._created
        ? this._sendMessage("getStateMachineListeners", {
            instanceId: this._id,
          })
        : [];
    });
  }
  _getPointerPosition(t) {
    let n = this._canvas.getBoundingClientRect(),
      r = this._canvas.width / n.width,
      i = this._canvas.height / n.height,
      s =
        this._dotLottieInstanceState.renderConfig.devicePixelRatio ||
        window.devicePixelRatio ||
        1,
      o = ((t.clientX - n.left) * r) / s,
      l = ((t.clientY - n.top) * i) / s;
    return { x: o, y: l };
  }
  _onPointerUp(t) {
    let { x: n, y: r } = this._getPointerPosition(t);
    this._sendMessage("postPointerUpEvent", {
      instanceId: this._id,
      x: n,
      y: r,
    });
  }
  _onPointerDown(t) {
    let { x: n, y: r } = this._getPointerPosition(t);
    this._sendMessage("postPointerDownEvent", {
      instanceId: this._id,
      x: n,
      y: r,
    });
  }
  _onPointerMove(t) {
    let { x: n, y: r } = this._getPointerPosition(t);
    this._sendMessage("postPointerMoveEvent", {
      instanceId: this._id,
      x: n,
      y: r,
    });
  }
  _onPointerEnter(t) {
    let { x: n, y: r } = this._getPointerPosition(t);
    this._sendMessage("postPointerEnterEvent", {
      instanceId: this._id,
      x: n,
      y: r,
    });
  }
  _onPointerLeave(t) {
    let { x: n, y: r } = this._getPointerPosition(t);
    this._sendMessage("postPointerExitEvent", {
      instanceId: this._id,
      x: n,
      y: r,
    });
  }
  _setupStateMachineListeners() {
    return Tt(this, null, function* () {
      if (mr && this._canvas instanceof HTMLCanvasElement && this.isLoaded) {
        let t = yield this._sendMessage("getStateMachineListeners", {
          instanceId: this._id,
        });
        t.includes("PointerUp") &&
          this._canvas.addEventListener("pointerup", this._pointerUpMethod),
          t.includes("PointerDown") &&
            this._canvas.addEventListener(
              "pointerdown",
              this._pointerDownMethod
            ),
          t.includes("PointerMove") &&
            this._canvas.addEventListener(
              "pointermove",
              this._pointerMoveMethod
            ),
          t.includes("PointerEnter") &&
            this._canvas.addEventListener(
              "pointerenter",
              this._pointerEnterMethod
            ),
          t.includes("PointerExit") &&
            this._canvas.addEventListener(
              "pointerleave",
              this._pointerExitMethod
            );
      }
    });
  }
  _cleanupStateMachineListeners() {
    mr &&
      this._canvas instanceof HTMLCanvasElement &&
      (this._canvas.removeEventListener("pointerup", this._pointerUpMethod),
      this._canvas.removeEventListener("pointerdown", this._pointerDownMethod),
      this._canvas.removeEventListener("pointermove", this._pointerMoveMethod),
      this._canvas.removeEventListener(
        "pointerenter",
        this._pointerEnterMethod
      ),
      this._canvas.removeEventListener(
        "pointerleave",
        this._pointerExitMethod
      ));
  }
};
wt(cb, "_workerManager", new rQ()), wt(cb, "_wasmUrl", "");
var iQ = ({
    animationId: e,
    autoplay: t,
    backgroundColor: n,
    className: r,
    createDotLottie: i,
    data: s,
    dotLottieRefCallback: o,
    layout: l,
    loop: c,
    mode: f,
    playOnHover: d,
    renderConfig: p,
    segment: m,
    speed: g,
    src: w,
    style: b,
    themeData: x,
    themeId: E,
    useFrameInterpolation: P,
    workerId: _,
    ...T
  }) => {
    let [M, L] = N.useState(null),
      O = N.useRef(null),
      U = N.useRef(null),
      D = N.useRef(o),
      H = {
        speed: g,
        mode: f,
        loop: c,
        useFrameInterpolation: P,
        segment: m,
        backgroundColor: n,
        autoplay: t,
        themeId: E,
        workerId: _,
        src: w,
        data: s,
        layout: l,
        renderConfig: p,
      },
      $ = N.useRef(H);
    (D.current = o),
      (U.current = M),
      ($.current = H),
      N.useEffect(() => {
        typeof D.current == "function" && M && D.current(M);
      }, [M]);
    let F = N.useCallback((B) => {
      if (((O.current = B), B)) {
        let j = i({ ...$.current, canvas: B });
        L(j);
      } else M == null || M.destroy(), L(null);
    }, []);
    return (
      N.useEffect(() => {
        var j, G;
        let B = (u1) => {
          var e1, i1;
          d &&
            (u1.type === "mouseenter" &&
              ((e1 = U.current) == null || e1.play()),
            u1.type === "mouseleave" &&
              ((i1 = U.current) == null || i1.pause()));
        };
        return (
          (j = O.current) == null || j.addEventListener("mouseenter", B),
          (G = O.current) == null || G.addEventListener("mouseleave", B),
          () => {
            var u1, e1;
            (u1 = O.current) == null || u1.removeEventListener("mouseenter", B),
              (e1 = O.current) == null ||
                e1.removeEventListener("mouseleave", B);
          }
        );
      }, [d]),
      N.useEffect(
        () => () => {
          M && (M.destroy(), L(null));
        },
        [M]
      ),
      N.useEffect(() => {
        var B;
        (B = U.current) == null || B.setSpeed(g ?? 1);
      }, [g]),
      N.useEffect(() => {
        var B;
        (B = U.current) == null || B.setMode(f ?? "forward");
      }, [f]),
      N.useEffect(() => {
        var B;
        (B = U.current) == null || B.setLoop(c ?? !1);
      }, [c]),
      N.useEffect(() => {
        var B;
        (B = U.current) == null || B.setUseFrameInterpolation(P ?? !0);
      }, [P]),
      N.useEffect(() => {
        var B;
        typeof (m == null ? void 0 : m[0]) == "number" &&
          typeof m[1] == "number" &&
          ((B = U.current) == null || B.setSegment(m[0], m[1]));
      }, [m]),
      N.useEffect(() => {
        var B;
        (B = U.current) == null || B.setBackgroundColor(n ?? "");
      }, [n]),
      N.useEffect(() => {
        var B;
        (B = U.current) == null || B.setRenderConfig(p ?? {});
      }, [JSON.stringify(p)]),
      N.useEffect(() => {
        var B;
        (typeof s != "string" && typeof s != "object") ||
          (B = U.current) == null ||
          B.load({ data: s, ...$.current });
      }, [s]),
      N.useEffect(() => {
        var B;
        typeof w == "string" &&
          ((B = U.current) == null || B.load({ src: w, ...$.current }));
      }, [w]),
      N.useEffect(() => {
        var B;
        (B = U.current) == null || B.setMarker(T.marker ?? "");
      }, [T.marker]),
      N.useEffect(() => {
        var B;
        (B = U.current) == null || B.loadAnimation(e ?? "");
      }, [e]),
      N.useEffect(() => {
        var B;
        typeof E == "string" && ((B = U.current) == null || B.setTheme(E));
      }, [E]),
      N.useEffect(() => {
        var B;
        (B = U.current) == null || B.setThemeData(x ?? "");
      }, [x]),
      N.useEffect(() => {
        var B;
        (B = U.current) == null ||
          B.setLayout({
            align: (l == null ? void 0 : l.align) ?? [0.5, 0.5],
            fit: (l == null ? void 0 : l.fit) ?? "contain",
          });
      }, [
        l == null ? void 0 : l.align[0],
        l == null ? void 0 : l.align[1],
        l == null ? void 0 : l.fit,
      ]),
      v.jsx("div", {
        className: r,
        ...(!r && {
          style: { width: "100%", height: "100%", lineHeight: 0, ...b },
        }),
        children: v.jsx("canvas", {
          ref: F,
          style: { width: "100%", height: "100%" },
          ...T,
        }),
      })
    );
  },
  sQ = (e) => new eQ(e),
  oQ = (e) => v.jsx(iQ, { ...e, createDotLottie: sQ });
const ii = N.memo(
  ({ path: e, size: t, className: n, loop: r = !0, autoplay: i = !0 }) =>
    v.jsx("div", {
      style: { width: `${t}px`, height: `${t}px`, flexShrink: 0 },
      className: n,
      "data-testid": e,
      children: v.jsx(oQ, { autoplay: i, src: e, loop: r }),
    })
);
ii.displayName = "Animation";
const rf = ({ price: e = 0, classes: t, plus: n, iconClasses: r }) =>
    v.jsxs("div", {
      className: me(
        "py-[3px] px-1 flex items-center gap-0.5 bg-gray-600 rounded text-[9px] leading-[11px] font-bold",
        t
      ),
      children: [
        v.jsx(zt, { width: 9, height: 9, className: me("text-blue-200", r) }),
        v.jsxs("span", {
          children: [
            Number(Jt.fromNano(e)).toFixed(2).toLocaleString(),
            n && "+",
          ],
        }),
      ],
    }),
  sf = ({
    preset: e,
    nftId: t,
    price: n,
    priceBadge: r,
    plusPrice: i,
    animationLink: s,
    backdrop: o = {},
    pattern: l = {},
    fixedWidth: c = !1,
    fixedHeight: f = !1,
    rounded: d = !0,
  }) => {
    const { centerColor: p = "", edgeColor: m = "", patternColor: g = "" } = o,
      { iconLink: w = "" } = l;
    return v.jsxs("div", {
      style: {
        background:
          p && m && `radial-gradient(50% 50% at 50% 50%, ${p} 0%, ${m} 100%)`,
        minWidth: c && e.size + 32,
        maxWidth: c && e.size + 32,
        maxHeight: f && e.size + 32,
        minHeight: e.size + 32,
      },
      className: me(
        "flex items-center justify-center shrink-0 relative grow",
        d && "rounded-lg",
        !p && !m && "bg-gray-700"
      ),
      children: [
        v.jsx(ii, { loop: !1, path: s, size: e.size }),
        w &&
          e.pattern.map(({ id: b, position: x }) =>
            v.jsx(Am, { url: w, color: g, ...x }, b)
          ),
        t &&
          v.jsxs("div", {
            className:
              "absolute bottom-1 left-1 text-[9px] leading-[11px] font-bold flex items-center justify-center px-1 py-0.5 rounded  bg-white/[0.16]",
            children: ["#", t],
          }),
        r &&
          v.jsx(rf, { price: n, plus: i, classes: "absolute top-1 right-1" }),
      ],
    });
  },
  Tm = ({
    preset: e,
    nftId: t,
    animationLink: n,
    backdrop: r,
    price: i,
    priceBadge: s,
    pattern: o,
    children: l,
    fixedWidth: c = !1,
    fixedHeight: f = !1,
  }) =>
    v.jsxs("div", {
      style: { maxWidth: c && e.size + 32 },
      className: "flex flex-col overflow-hidden rounded-lg shrink-0",
      children: [
        v.jsx(sf, {
          nftId: t,
          animationLink: n,
          backdrop: r,
          pattern: o,
          fixedWidth: c,
          fixedHeight: f,
          preset: e,
          rounded: !1,
          price: i,
          priceBadge: s,
        }),
        l,
      ],
    }),
  aQ = [
    { id: 1, position: { top: 6, left: 6, width: 7, height: 7 } },
    { id: 2, position: { top: 5, left: 26.5, width: 9, height: 9 } },
    { id: 3, position: { top: 6, right: 6, width: 7, height: 7 } },
    { id: 4, position: { top: 5, right: 26.5, width: 9, height: 9 } },
    { id: 5, position: { top: 20, left: 16.5, width: 11, height: 11 } },
    { id: 6, position: { top: 20, right: 16.5, width: 11, height: 11 } },
    { id: 7, position: { top: 37, left: 6.5, width: 13, height: 13 } },
    { id: 8, position: { top: 37, right: 6.5, width: 13, height: 13 } },
    { id: 9, position: { bottom: 21, left: 16.5, width: 11, height: 11 } },
    { id: 10, position: { bottom: 21, right: 16.5, width: 11, height: 11 } },
    { id: 11, position: { bottom: 6, right: 26.5, width: 9, height: 9 } },
    { id: 12, position: { bottom: 6, left: 26.5, width: 9, height: 9 } },
    { id: 13, position: { bottom: 7, right: 7, width: 7, height: 7 } },
    { id: 14, position: { bottom: 7, left: 7, width: 7, height: 7 } },
  ],
  lQ = [
    { id: 1, position: { top: 9, left: 6, width: 9, height: 9 } },
    { id: 2, position: { top: 8, left: 30.5, width: 11, height: 11 } },
    { id: 3, position: { top: 9, right: 6, width: 9, height: 9 } },
    { id: 4, position: { top: 8, right: 30.5, width: 11, height: 11 } },
    { id: 5, position: { top: 28, left: 16.5, width: 13, height: 13 } },
    { id: 6, position: { top: 28, right: 16.5, width: 13, height: 13 } },
    { id: 7, position: { top: 50, left: 6.5, width: 15, height: 15 } },
    { id: 8, position: { top: 50, right: 6.5, width: 15, height: 15 } },
    { id: 9, position: { bottom: 28, left: 16.5, width: 13, height: 13 } },
    { id: 10, position: { bottom: 28, right: 16.5, width: 13, height: 13 } },
    { id: 11, position: { bottom: 9, right: 6, width: 9, height: 9 } },
    { id: 12, position: { bottom: 9, left: 6, width: 9, height: 9 } },
    { id: 13, position: { bottom: 8, right: 30.5, width: 11, height: 11 } },
    { id: 14, position: { bottom: 8, left: 30.5, width: 11, height: 11 } },
  ],
  uQ = [
    { id: 1, position: { top: "8%", left: "27%", width: 12, height: 12 } },
    { id: 2, position: { top: "8%", right: "27%", width: 12, height: 12 } },
    { id: 3, position: { top: "5%", left: "37%", width: 17, height: 17 } },
    { id: 4, position: { top: "5%", right: "37%", width: 17, height: 17 } },
    { id: 5, position: { top: "25%", left: "32%", width: 17, height: 17 } },
    { id: 6, position: { top: "25%", right: "32%", width: 17, height: 17 } },
    { id: 7, position: { top: "44%", left: "27%", width: 21, height: 21 } },
    { id: 8, position: { top: "44%", right: "27%", width: 21, height: 21 } },
    { id: 9, position: { bottom: "23%", left: "31%", width: 17, height: 17 } },
    {
      id: 10,
      position: { bottom: "23%", right: "32%", width: 17, height: 17 },
    },
    { id: 11, position: { bottom: "6%", right: "27%", width: 12, height: 12 } },
    { id: 12, position: { bottom: "6%", left: "27%", width: 12, height: 12 } },
    { id: 13, position: { bottom: "5%", left: "38%", width: 17, height: 17 } },
    { id: 14, position: { bottom: "5%", right: "38%", width: 17, height: 17 } },
  ],
  h2 = {
    medium: { size: 56, pattern: aQ },
    large: { size: 83, pattern: lQ },
    xl: { size: 99, pattern: uQ },
  },
  sA = ({
    modelAnimation: e,
    animationLink: t,
    iconLink: n,
    nftId: r,
    name: i,
    rounded: s = !0,
    backdrop: o,
    price: l,
  }) => {
    const {
      centerColor: c = "#293440",
      edgeColor: f = "#293440",
      patternColor: d = "",
    } = o;
    return v.jsxs("div", {
      style: {
        background: `radial-gradient(50% 50% at 50% 50%, ${c} 0%, ${f} 100%)`,
      },
      className: me(
        "py-4 w-full flex items-center justify-center relative",
        s && "rounded-lg"
      ),
      children: [
        v.jsx(ii, { path: e || t, size: h2.xl.size, className: "z-10" }),
        n &&
          h2.xl.pattern.map(({ id: p, position: m }) =>
            v.jsx(Am, { url: n, color: d, ...m }, p)
          ),
        v.jsx("span", {
          className:
            "absolute top-2 left-2 text-[14px] leading-[17px] font-bold",
          children: i,
        }),
        l &&
          v.jsx(rf, {
            price: l,
            classes:
              "bg-blue-300 absolute top-2 right-2 text-[12px] leading-[15px] h-7 px-2",
            iconClasses: "text-white",
          }),
        !!r &&
          v.jsxs("div", {
            className:
              "absolute top-7 left-2 text-[7px] leading-[8px] font-bold flex items-center justify-center px-1 py-0.5 rounded-full bg-white/20 backdrop-blur-[12.5px]",
            children: ["#", r],
          }),
      ],
    });
  },
  cQ = ({
    animationLink: e,
    model: t = {},
    backDrop: n = {},
    pattern: r = {},
    sellPrice: i,
    nftId: s,
    name: o,
    onSell: l,
    onTryAgain: c,
    hideActions: f,
  }) => {
    const [d, p] = N.useState(!1),
      { t: m } = Ze(),
      g = or(),
      { iconLink: w } = r,
      { animationLink: b } = t,
      x = async () => {
        p(!0), await (l == null ? void 0 : l()), p(!1);
      };
    return v.jsxs(v.Fragment, {
      children: [
        v.jsx(sA, {
          iconLink: w,
          modelAnimation: b,
          animationLink: e,
          nftId: s,
          price: i,
          name: o,
          backdrop: n,
        }),
        !f &&
          v.jsxs("div", {
            className: "grid grid-cols-2 gap-2",
            children: [
              v.jsx(He, {
                classes: "bg-gray-350 h-10",
                onClick: c,
                disabled: d,
                children: m("case.section.buy.button.again"),
              }),
              v.jsx(He, {
                classes: "bg-gray-350 h-10",
                disabled: d,
                onClick: () => g(se.PAGES.PROFILE.TO_FULL_ROUTE_INVENTORY),
                children: m("case.section.buy.button.inventory"),
              }),
              v.jsx(He, {
                classes: "h-10 col-start-1 -col-end-1",
                onClick: x,
                loading: d,
                children: v.jsxs("div", {
                  className: "flex gap-1",
                  children: [
                    m("case.section.buy.button.sell"),
                    v.jsx(zt, { width: 14, className: "text-white" }),
                    m("pretty.number.precision.2", { value: Jt.fromNano(i) }),
                  ],
                }),
              }),
            ],
          }),
      ],
    });
  },
  Pm = ({
    price: e,
    chance: t,
    animationLink: n,
    t: r,
    name: i,
    plusPrice: s,
    onClick: o,
  }) =>
    v.jsxs(Sn.button, {
      type: "button",
      onClick: o,
      initial: { scale: 0.95, opacity: 0 },
      animate: { scale: 1, opacity: 1 },
      whileTap: o && { scale: J2 },
      className: me(
        "flex flex-col items-center gap-[3px] pt-6 pb-1 px-6 rounded-lg bg-gray-800 relative",
        !o && "cursor-default"
      ),
      children: [
        v.jsx(ii, { path: n, size: 67, loop: !1 }),
        t &&
          v.jsxs("p", {
            className:
              "px-1 py-[3px] text-green-300 text-[9px] font-bold leading-[11px] absolute top-1 left-1",
            children: [r("pretty.number.precision.3", { value: t / 1e3 }), "%"],
          }),
        v.jsx(rf, { price: e, plus: s, classes: "absolute top-1 right-1" }),
        v.jsx("span", {
          className: "text-[9px] leading-[11px] text-gray-250 py-[3px] px-1",
          children: i,
        }),
      ],
    }),
  oA = N.memo(({ items: e = [] }) => {
    const { t } = Ze(),
      n = N.useMemo(
        () => [...e].sort(({ chance: r }, { chance: i }) => r - i),
        [e]
      );
    return v.jsxs("div", {
      className: "flex flex-col items-center gap-4",
      children: [
        v.jsx("h2", {
          className: "text-white text-[17px] font-bold leading-[normal]",
          children: t("game.section.drop"),
        }),
        v.jsx("div", {
          className: "flex flex-wrap gap-2 items-center justify-center",
          children: n.map(
            ({
              chance: r,
              gift: { name: i, animationLink: s, floorPrice: o },
            }) =>
              v.jsx(
                Pm,
                { t, chance: r, name: i, price: o, animationLink: s },
                i
              )
          ),
        }),
      ],
    });
  });
oA.displayName = "DropList";
const dQ = (e) =>
    N.createElement(
      "svg",
      {
        width: 16,
        height: 8,
        viewBox: "0 0 22 8",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        ...e,
      },
      N.createElement("path", {
        d: "M0.5 12L11.5 0.435471C12.0523 -0.145157 12.9477 -0.145157 13.5 0.435471L24.5 12H0.5Z",
        fill: "#248BDA",
      })
    ),
  aA = 1e4,
  qn = { LOADING: 1, LOADED: 2, REQUEST_OPEN: 3, OPENING: 4, OPENED: 5 },
  fQ = 80,
  db = 70,
  L6 = 123,
  hQ = () => {
    const e = (L6 - 8) / 2;
    return Math.floor(Math.random() * e * 2) - e;
  },
  pQ = (e) =>
    e != null && e.length
      ? Array.from({ length: fQ }, (t, n) => e[n % e.length]).sort(
          () => Math.random() - 0.5
        )
      : [],
  lA = N.memo(({ isSpinning: e, prize: t, items: n = [] }) => {
    const r = N.useRef(null),
      [i, s] = N.useState(0),
      [o, l] = N.useState([]),
      [c, f] = N.useState(0);
    return (
      N.useEffect(() => {
        if (!r.current) return;
        const d = () => {
            f(r.current.clientWidth);
          },
          p = new ResizeObserver(d);
        return (
          p.observe(r.current),
          window.addEventListener("resize", d),
          () => {
            p.disconnect(), window.removeEventListener("resize", d);
          }
        );
      }, []),
      N.useEffect(() => {
        l(pQ(n));
      }, [n]),
      N.useEffect(() => {
        if (!e) return;
        l((g) => {
          const w = [...g];
          return (w[db] = t), w;
        });
        const d = c / 2,
          p = db * L6 + hQ(),
          m = d - L6 / 2;
        s(-p + m);
      }, [e]),
      v.jsxs("div", {
        ref: r,
        className:
          "w-full h-[131px] bg-gray-600 overflow-hidden py-2 rounded-lg relative",
        children: [
          v.jsx("div", {
            className: "flex gap-2",
            style: {
              transition: e
                ? `all ${aA}ms cubic-bezier(0.1, 0.7, 0.1, 1) 0s`
                : "none",
              transform: `translate3d(${i}px, 0px, 0px)`,
            },
            children: o.map(
              (
                {
                  gift: {
                    imageLink: d = "",
                    floorPrice: p = 0,
                    name: m = "",
                  } = {},
                },
                g
              ) =>
                v.jsxs(
                  "div",
                  {
                    className:
                      "bg-gray-800 px-6 py-6 rounded-lg shrink-0 first:ml-2 relative",
                    children: [
                      v.jsx("img", { src: d, alt: m, width: 67, height: 67 }),
                      v.jsx(rf, {
                        price: p,
                        classes: "absolute top-1 right-1",
                      }),
                    ],
                  },
                  `${d}-${g}`
                )
            ),
          }),
          v.jsx(dQ, {
            className: "absolute bottom-0 left-1/2 -translate-x-1/2",
          }),
        ],
      })
    );
  });
lA.displayName = "Carousel";
const mQ = ({ label: e, icon: t, value: n, setValue: r, disabled: i }) =>
    v.jsxs("div", {
      className: me(
        "flex items-center justify-between py-2 px-3 bg-gray-700 rounded-lg",
        i && "opacity-50"
      ),
      children: [
        v.jsxs("div", {
          className: "flex items-center gap-3",
          children: [
            v.jsx("div", {
              className: me(
                "transition-colors",
                n ? "text-blue-300" : "text-gray-550"
              ),
              children: t,
            }),
            v.jsx("span", {
              className: "text-[14px] leading-[17px] font-bold",
              children: e,
            }),
          ],
        }),
        v.jsx("button", {
          type: "button",
          role: "switch",
          "aria-checked": n,
          disabled: i,
          onClick: () => r((s) => !s),
          className: me(
            "relative inline-flex h-6 w-[38px] items-center rounded-full transition-colors focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-ring",
            n ? "bg-blue-300" : "bg-gray-375"
          ),
          children: v.jsx("span", {
            className: me(
              "inline-block h-5 w-5 transform rounded-full transition-transform bg-white",
              n ? "translate-x-4" : "translate-x-0.5"
            ),
          }),
        }),
      ],
    }),
  of = (e, t) => {
    const n = N4(),
      [r] = la(),
      [i] = Vp(),
      s = or();
    return {
      handleOpenDepositPage: N.useCallback(() => {
        if (!n) {
          r.openModal();
          return;
        }
        if (n !== e) {
          i(n).then(() => {
            s(se.PAGES.DEPOSIT.FULL_ROUTE_MAIN, { state: t });
          });
          return;
        }
        s(se.PAGES.DEPOSIT.FULL_ROUTE_MAIN, { state: t });
      }, [n, e, t]),
    };
  },
  gQ = () => {
    const e = v2(),
      { t } = Ze(),
      { pathname: n } = Un(),
      [r, i] = N.useState(!1),
      [s, o] = N.useState(!1),
      { caseId: l } = fu(),
      {
        data: {
          name: c,
          ticketPrice: f,
          primeTicketPrice: d,
          items: p = [],
          primeItems: m = [],
        } = {},
        isSuccess: g,
      } = cz(l),
      [w] = Wp(),
      { data: { balance: b = 0, wallet: x } = {} } = da(),
      { handleOpenDepositPage: E } = of(x, n),
      P = N.useRef(0),
      [_, T] = N.useState(qn.LOADING),
      [M, L] = N.useState({});
    U3({ url: -1 });
    const O = N.useMemo(() => (r ? d : f), [r, d, f]),
      U = N.useMemo(() => (r ? m : p), [r, p, m]),
      D = async () => {
        if (b < O && !s) {
          E();
          return;
        }
        T(qn.REQUEST_OPEN);
        try {
          const { data: F } = await Cu.post("/user/cases/open", {
            caseId: Number(l),
            primeMode: r,
            demo: s,
          });
          L(F),
            T(qn.OPENING),
            s || e(zr.util.invalidateTags(["Profile", "History", "Inventory"])),
            (P.current = setTimeout(() => {
              T(qn.OPENED);
            }, aA));
        } catch (F) {
          console.log(F), T(qn.LOADED);
        }
      },
      H = () => {
        clearTimeout(P.current), T(qn.OPENED);
      },
      $ = async () => {
        if (s) {
          T(qn.LOADED);
          return;
        }
        try {
          const {
            data: { success: F },
          } = await w({ inventoryId: M.inventoryId });
          F &&
            (e(zr.util.invalidateTags(["Profile", "History", "Inventory"])),
            T(qn.LOADED));
        } catch (F) {
          console.log(F);
        }
      };
    return (
      N.useEffect(() => {
        g && T(qn.LOADED);
      }, [g]),
      _ === qn.LOADING
        ? v.jsx("div", {
            className: "h-full flex items-center justify-center",
            children: v.jsx(Fn, {
              width: 55,
              height: 55,
              className: "animate-spin",
            }),
          })
        : v.jsxs($Y, {
            name: c,
            children: [
              v.jsxs("div", {
                className: "flex flex-col gap-4",
                children: [
                  _ !== qn.OPENED &&
                    v.jsxs(v.Fragment, {
                      children: [
                        v.jsx(lA, {
                          items: U,
                          prize: M,
                          isSpinning: _ === qn.OPENING,
                        }),
                        _ === qn.OPENING
                          ? v.jsx(He, {
                              classes: "h-10",
                              onClick: H,
                              children: t("case.section.buy.button.skip"),
                            })
                          : v.jsx(He, {
                              classes: "h-10",
                              onClick: D,
                              loading: _ === qn.REQUEST_OPEN,
                              children: v.jsx(Z4, {
                                i18nKey: "case.section.buy",
                                count: t("pretty.number.precision.2", {
                                  value: Jt.fromNano(O),
                                }),
                              }),
                            }),
                        v.jsx(mQ, {
                          value: r,
                          setValue: i,
                          icon: v.jsx(hk, { width: 16 }),
                          label: t("game.prime.switch"),
                          disabled: _ !== qn.LOADED,
                        }),
                        v.jsx(He, {
                          classes:
                            "h-10 bg-transparent text-[13px] font-normal text-blue-200 p-0",
                          textClasses: "mb-auto",
                          onClick: () => o((F) => !F),
                          disabled: _ !== qn.LOADED,
                          children: t(
                            s ? "case.demo.button.on" : "case.demo.button.off"
                          ),
                        }),
                      ],
                    }),
                  _ === qn.OPENED &&
                    v.jsx(cQ, {
                      onSell: $,
                      onTryAgain: () => T(qn.LOADED),
                      ...M.gift,
                    }),
                ],
              }),
              v.jsx(oA, { items: U }),
            ],
          })
    );
  },
  yQ = ({ id: e, image: t, name: n, ticketPrice: r }) =>
    v.jsx(pu, {
      to: se.PAGES.CASES.TO_CASE(e),
      children: v.jsxs(Sn.div, {
        whileTap: { scale: J2 },
        className: "flex flex-col gap-3 w-full p-3 rounded-lg bg-gray-700",
        children: [
          v.jsxs("div", {
            children: [
              v.jsx("h2", {
                className:
                  "text-white text-center text-sm leading-[17px] font-bold",
                children: n,
              }),
              v.jsx(ii, { className: "mx-auto", path: t, size: 120 }),
            ],
          }),
          v.jsxs("div", {
            className:
              "flex items-center h-10 gap-1 justify-center bg-gray-600 rounded-lg text-white text-sm font-bold",
            children: [
              v.jsx(zt, { width: 14, className: "text-blue-200" }),
              Jt.fromNano(r),
            ],
          }),
        ],
      }),
    }),
  vQ = ({ count: e }) => {
    const t = e.toString().split(""),
      { t: n } = Ze();
    return v.jsxs("div", {
      className: "flex items-center justify-center gap-1.5 py-1.5",
      children: [
        v.jsx("span", {
          className: "text-sm text-gray-300",
          children: n("cases.section.opened"),
        }),
        v.jsx("div", {
          className: "flex items-center justify-center gap-[1px]",
          children: t.map((r, i) =>
            v.jsx(
              "div",
              {
                className:
                  "bg-gray-600 py-[5px] w-[20px] text-center rounded-[3px] first:rounded-l-md last:rounded-r-md",
                children: r,
              },
              i
            )
          ),
        }),
      ],
    });
  },
  uA = N.memo(() => {
    const { data: { totalOpenCases: e, items: t = [] } = {} } = fk(void 0, {
        refetchOnMountOrArgChange: !0,
      }),
      n = N.useMemo(
        () => [...t].sort(({ priority: r }, { priority: i }) => r - i),
        [t]
      );
    return v.jsxs("div", {
      className: "flex flex-col gap-4",
      children: [
        v.jsx("div", {
          className: "grid grid-cols-2 gap-4",
          children: n.map(({ id: r, ...i }) => v.jsx(yQ, { id: r, ...i }, r)),
        }),
        v.jsx(vQ, { count: e }),
      ],
    });
  });
uA.displayName = "CasesMain";
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ var cA =
    function (e, t) {
      return (cA =
        Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array &&
          function (n, r) {
            n.__proto__ = r;
          }) ||
        function (n, r) {
          for (var i in r) r.hasOwnProperty(i) && (n[i] = r[i]);
        })(e, t);
    },
  wQ,
  ed,
  bQ =
    ((function (e) {
      /*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/ (function () {
        var t = {}.hasOwnProperty;
        function n() {
          for (var r = [], i = 0; i < arguments.length; i++) {
            var s = arguments[i];
            if (s) {
              var o = typeof s;
              if (o === "string" || o === "number") r.push(s);
              else if (Array.isArray(s) && s.length) {
                var l = n.apply(null, s);
                l && r.push(l);
              } else if (o === "object")
                for (var c in s) t.call(s, c) && s[c] && r.push(c);
            }
          }
          return r.join(" ");
        }
        e.exports
          ? ((n.default = n), (e.exports = n))
          : (window.classNames = n);
      })();
    })(
      (ed = {
        path: wQ,
        exports: {},
        require: function (e, t) {
          return (function () {
            throw new Error(
              "Dynamic requires are not currently supported by @rollup/plugin-commonjs"
            );
          })(t == null && ed.path);
        },
      }),
      ed.exports
    ),
    ed.exports);
function I6(e, t, n) {
  var r, i, s, o, l;
  function c() {
    var d = Date.now() - o;
    d < t && d >= 0
      ? (r = setTimeout(c, t - d))
      : ((r = null), n || ((l = e.apply(s, i)), (s = i = null)));
  }
  t == null && (t = 100);
  var f = function () {
    (s = this), (i = arguments), (o = Date.now());
    var d = n && !r;
    return (
      r || (r = setTimeout(c, t)), d && ((l = e.apply(s, i)), (s = i = null)), l
    );
  };
  return (
    (f.clear = function () {
      r && (clearTimeout(r), (r = null));
    }),
    (f.flush = function () {
      r && ((l = e.apply(s, i)), (s = i = null), clearTimeout(r), (r = null));
    }),
    f
  );
}
I6.debounce = I6;
var xQ = I6;
(function (e, t) {
  t === void 0 && (t = {});
  var n = t.insertAt;
  if (typeof document < "u") {
    var r = document.head || document.getElementsByTagName("head")[0],
      i = document.createElement("style");
    (i.type = "text/css"),
      n === "top" && r.firstChild
        ? r.insertBefore(i, r.firstChild)
        : r.appendChild(i),
      i.styleSheet
        ? (i.styleSheet.cssText = e)
        : i.appendChild(document.createTextNode(e));
  }
})(`.indiana-scroll-container {
  overflow: auto; }
  .indiana-scroll-container--dragging {
    scroll-behavior: auto !important; }
    .indiana-scroll-container--dragging > * {
      pointer-events: none;
      cursor: -webkit-grab;
      cursor: grab; }
  .indiana-scroll-container--hide-scrollbars {
    overflow: hidden;
    overflow: -moz-scrollbars-none;
    -ms-overflow-style: none;
    scrollbar-width: none; }
    .indiana-scroll-container--hide-scrollbars::-webkit-scrollbar {
      display: none !important;
      height: 0 !important;
      width: 0 !important;
      background: transparent !important;
      -webkit-appearance: none !important; }
  .indiana-scroll-container--native-scroll {
    overflow: auto; }

.indiana-dragging {
  cursor: -webkit-grab;
  cursor: grab; }
`);
var t5,
  CQ =
    ((t5 = "indiana-scroll-container"),
    function (e, t) {
      if (!e) return t5;
      var n;
      typeof e == "string" ? (n = e) : (t = e);
      var r = t5;
      return (
        n && (r += "__" + n),
        r +
          (t
            ? Object.keys(t).reduce(function (i, s) {
                var o = t[s];
                return (
                  o &&
                    (i +=
                      " " +
                      (typeof o == "boolean"
                        ? r + "--" + s
                        : r + "--" + s + "_" + o)),
                  i
                );
              }, "")
            : "")
      );
    }),
  af = (function (e) {
    function t(n) {
      var r = e.call(this, n) || this;
      return (
        (r.onEndScroll = function () {
          (r.scrolling = !1), !r.pressed && r.started && r.processEnd();
        }),
        (r.onScroll = function (i) {
          var s = r.container.current;
          (s.scrollLeft === r.scrollLeft && s.scrollTop === r.scrollTop) ||
            ((r.scrolling = !0), r.processScroll(i), r.onEndScroll());
        }),
        (r.onTouchStart = function (i) {
          var s = r.props.nativeMobileScroll;
          if (r.isDraggable(i.target))
            if (((r.internal = !0), s && r.scrolling)) r.pressed = !0;
            else {
              var o = i.touches[0];
              r.processClick(i, o.clientX, o.clientY),
                !s && r.props.stopPropagation && i.stopPropagation();
            }
        }),
        (r.onTouchEnd = function (i) {
          var s = r.props.nativeMobileScroll;
          r.pressed &&
            (!r.started || (r.scrolling && s)
              ? (r.pressed = !1)
              : r.processEnd(),
            r.forceUpdate());
        }),
        (r.onTouchMove = function (i) {
          var s = r.props.nativeMobileScroll;
          if (r.pressed && (!s || !r.isMobile)) {
            var o = i.touches[0];
            o && r.processMove(i, o.clientX, o.clientY),
              i.preventDefault(),
              r.props.stopPropagation && i.stopPropagation();
          }
        }),
        (r.onMouseDown = function (i) {
          r.isDraggable(i.target) &&
            r.isScrollable() &&
            ((r.internal = !0),
            r.props.buttons.indexOf(i.button) !== -1 &&
              (r.processClick(i, i.clientX, i.clientY),
              i.preventDefault(),
              r.props.stopPropagation && i.stopPropagation()));
        }),
        (r.onMouseMove = function (i) {
          r.pressed &&
            (r.processMove(i, i.clientX, i.clientY),
            i.preventDefault(),
            r.props.stopPropagation && i.stopPropagation());
        }),
        (r.onMouseUp = function (i) {
          r.pressed &&
            (r.started
              ? r.processEnd()
              : ((r.internal = !1),
                (r.pressed = !1),
                r.forceUpdate(),
                r.props.onClick && r.props.onClick(i)),
            i.preventDefault(),
            r.props.stopPropagation && i.stopPropagation());
        }),
        (r.container = st.createRef()),
        (r.onEndScroll = xQ(r.onEndScroll, 300)),
        (r.scrolling = !1),
        (r.started = !1),
        (r.pressed = !1),
        (r.internal = !1),
        (r.getRef = r.getRef.bind(r)),
        r
      );
    }
    return (
      (function (n, r) {
        function i() {
          this.constructor = n;
        }
        cA(n, r),
          (n.prototype =
            r === null
              ? Object.create(r)
              : ((i.prototype = r.prototype), new i()));
      })(t, e),
      (t.prototype.componentDidMount = function () {
        var n = this.props.nativeMobileScroll,
          r = this.container.current;
        window.addEventListener("mouseup", this.onMouseUp),
          window.addEventListener("mousemove", this.onMouseMove),
          window.addEventListener("touchmove", this.onTouchMove, {
            passive: !1,
          }),
          window.addEventListener("touchend", this.onTouchEnd),
          r.addEventListener("touchstart", this.onTouchStart, { passive: !1 }),
          r.addEventListener("mousedown", this.onMouseDown, { passive: !1 }),
          n &&
            ((this.isMobile = this.isMobileDevice()),
            this.isMobile && this.forceUpdate());
      }),
      (t.prototype.componentWillUnmount = function () {
        window.removeEventListener("mouseup", this.onMouseUp),
          window.removeEventListener("mousemove", this.onMouseMove),
          window.removeEventListener("touchmove", this.onTouchMove),
          window.removeEventListener("touchend", this.onTouchEnd);
      }),
      (t.prototype.getElement = function () {
        return this.container.current;
      }),
      (t.prototype.isMobileDevice = function () {
        return (
          window.orientation !== void 0 ||
          navigator.userAgent.indexOf("IEMobile") !== -1
        );
      }),
      (t.prototype.isDraggable = function (n) {
        var r = this.props.ignoreElements;
        if (r) {
          var i = n.closest(r);
          return i === null || i.contains(this.getElement());
        }
        return !0;
      }),
      (t.prototype.isScrollable = function () {
        var n = this.container.current;
        return (
          n &&
          (n.scrollWidth > n.clientWidth || n.scrollHeight > n.clientHeight)
        );
      }),
      (t.prototype.processClick = function (n, r, i) {
        var s = this.container.current;
        (this.scrollLeft = s.scrollLeft),
          (this.scrollTop = s.scrollTop),
          (this.clientX = r),
          (this.clientY = i),
          (this.pressed = !0);
      }),
      (t.prototype.processStart = function (n) {
        n === void 0 && (n = !0);
        var r = this.props.onStartScroll;
        (this.started = !0),
          n && document.body.classList.add("indiana-dragging"),
          r && r({ external: !this.internal }),
          this.forceUpdate();
      }),
      (t.prototype.processScroll = function (n) {
        if (this.started) {
          var r = this.props.onScroll;
          r && r({ external: !this.internal });
        } else this.processStart(!1);
      }),
      (t.prototype.processMove = function (n, r, i) {
        var s = this.props,
          o = s.horizontal,
          l = s.vertical,
          c = s.activationDistance,
          f = s.onScroll,
          d = this.container.current;
        this.started
          ? (o && (d.scrollLeft -= r - this.clientX),
            l && (d.scrollTop -= i - this.clientY),
            f && f({ external: !this.internal }),
            (this.clientX = r),
            (this.clientY = i),
            (this.scrollLeft = d.scrollLeft),
            (this.scrollTop = d.scrollTop))
          : ((o && Math.abs(r - this.clientX) > c) ||
              (l && Math.abs(i - this.clientY) > c)) &&
            ((this.clientX = r), (this.clientY = i), this.processStart());
      }),
      (t.prototype.processEnd = function () {
        var n = this.props.onEndScroll;
        this.container.current && n && n({ external: !this.internal }),
          (this.pressed = !1),
          (this.started = !1),
          (this.scrolling = !1),
          (this.internal = !1),
          document.body.classList.remove("indiana-dragging"),
          this.forceUpdate();
      }),
      (t.prototype.getRef = function (n) {
        [this.container, this.props.innerRef].forEach(function (r) {
          r && (typeof r == "function" ? r(n) : (r.current = n));
        });
      }),
      (t.prototype.render = function () {
        var n = this.props,
          r = n.children,
          i = n.draggingClassName,
          s = n.className,
          o = n.style,
          l = n.hideScrollbars,
          c = n.component;
        return st.createElement(
          c,
          {
            className: bQ(
              s,
              this.pressed && i,
              CQ({
                dragging: this.pressed,
                "hide-scrollbars": l,
                "native-scroll": this.isMobile,
              })
            ),
            style: o,
            ref: this.getRef,
            onScroll: this.onScroll,
          },
          r
        );
      }),
      (t.defaultProps = {
        nativeMobileScroll: !0,
        hideScrollbars: !0,
        activationDistance: 10,
        vertical: !0,
        horizontal: !0,
        stopPropagation: !1,
        style: {},
        component: "div",
        buttons: [0],
      }),
      t
    );
  })(N.PureComponent);
const SQ = [
    { id: 1, position: { top: 3.5, left: 11, width: 6, height: 6 } },
    { id: 2, position: { top: 3.5, right: 11, width: 6, height: 6 } },
    { id: 3, position: { top: 19.5, left: 2, width: 8, height: 8 } },
    { id: 4, position: { top: 19.5, right: 2, width: 8, height: 8 } },
    { id: 5, position: { bottom: 4.5, left: 11, width: 6, height: 6 } },
    { id: 6, position: { bottom: 4.5, right: 11, width: 6, height: 6 } },
  ],
  dA = N.memo(
    ({
      animationLink: e,
      caseId: t,
      model: n = {},
      backDrop: r = {},
      pattern: i = {},
      expensive: s,
      autoplay: o,
    }) => {
      const { animationLink: l } = n,
        {
          centerColor: c = "#293440",
          edgeColor: f = "#293440",
          patternColor: d = "",
        } = r,
        { iconLink: p = "" } = i;
      return v.jsxs(pu, {
        to: se.PAGES.CASES.TO_CASE(t),
        style: {
          background: `radial-gradient(50% 50% at 50% 50%, ${c} 0%, ${f} 100%)`,
        },
        className: me(
          "flex items-center justify-center shrink-0 w-12 h-12 rounded relative",
          s && "border border-blue-200"
        ),
        children: [
          v.jsx(ii, {
            path: l || e,
            size: 32,
            loop: !1,
            autoplay: o,
            className: "z-10",
          }),
          p &&
            SQ.map(({ id: m, position: g }) =>
              v.jsx(Am, { url: p, color: d, ...g }, m)
            ),
          s &&
            v.jsxs(v.Fragment, {
              children: [
                v.jsx("span", {
                  className:
                    "absolute -inset-[2px] rounded border-2 border-blue-200/50 pointer-events-none z-0",
                }),
                v.jsx("span", {
                  className:
                    "absolute -inset-[2px] rounded border-2 border-blue-200 pointer-events-none z-0",
                }),
              ],
            }),
        ],
      });
    }
  );
dA.displayName = "Item";
const Wi = ({
    items: e = [],
    pageSize: t = fa.medium,
    sortFn: n,
    filterFn: r,
  }) => {
    const [i, s] = N.useState(t),
      o = N.useRef(null),
      l = N.useRef(null),
      c = N.useMemo(() => {
        let p = e;
        return r && (p = p.filter(r)), n && (p = [...p].sort(n)), p;
      }, [e, r, n]),
      f = N.useMemo(() => c.slice(0, i), [c, i]),
      d = N.useCallback(() => {
        s((p) => Math.min(p + t, c.length));
      }, [c.length, t]);
    return (
      N.useEffect(() => {
        const p = o.current;
        if (!(!p || i >= c.length))
          return (
            (l.current = new IntersectionObserver(
              ([m]) => {
                m.isIntersecting && d();
              },
              { threshold: 0.1 }
            )),
            l.current.observe(p),
            () => {
              var m;
              return (m = l.current) == null ? void 0 : m.disconnect();
            }
          );
      }, [d, i, c.length]),
      { visibleItems: f, loaderRef: o, isDone: i >= c.length }
    );
  },
  EQ = () => {
    const e = N.useRef(!1),
      { data: { online: t = 0 } = {} } = GW(),
      { data: { items: n = [] } = {} } = dz(),
      [r, i] = N.useState([]),
      [s, o] = N.useState(0),
      { visibleItems: l, isDone: c, loaderRef: f } = Wi({ items: r }),
      { messages: d } = ib(M8.NEW_DROP),
      { messages: p } = ib(M8.ONLINE);
    return (
      N.useEffect(() => {
        n.length && i(n.map((m) => ({ ...m, isNew: !1 })));
      }, [n]),
      N.useEffect(() => {
        if (!d.length) return;
        const [{ data: m }] = d;
        i((g) => [m, ...g].slice(0, 50)), (e.current = !0);
      }, [d]),
      N.useEffect(() => {
        if (!p.length) return;
        const [
          {
            data: { online: m },
          },
        ] = p;
        o(m);
      }, [p]),
      v.jsxs("div", {
        className: "flex gap-2 items-center justify-start w-full",
        children: [
          v.jsxs("div", {
            className:
              "flex flex-col items-center gap-1 px-1 py-1.5 bg-green-800 rounded rotate-180",
            children: [
              v.jsx("span", {
                className: "w-1 h-1 bg-green-300 rounded-full animate-pulse",
              }),
              v.jsx("span", {
                className:
                  "text-[9px] font-bold leading-[normal] text-green-300 [writing-mode:vertical-lr]",
                children: s || t,
              }),
            ],
          }),
          v.jsxs(af, {
            className: "flex gap-2 items-center -my-0.5 py-0.5 pl-[2px]",
            vertical: !1,
            children: [
              v.jsx(ss, {
                initial: !1,
                children: l.map(
                  ({
                    date: m,
                    caseId: g,
                    expensive: w,
                    gift: b = {},
                    isNew: x,
                  }) =>
                    v.jsx(
                      Sn.div,
                      {
                        initial: x ?? e.current ? { opacity: 0, x: -64 } : !1,
                        animate: { opacity: 1, x: 0 },
                        transition: { duration: 0.5 },
                        layout: !0,
                        children: v.jsx(dA, {
                          animationLink: b.animationLink,
                          caseId: g,
                          model: b.model,
                          backDrop: b.backDrop,
                          pattern: b.pattern,
                          expensive: w,
                          autoplay: x ?? e.current,
                        }),
                      },
                      m
                    )
                ),
              }),
              !c &&
                v.jsx("div", {
                  ref: f,
                  className: "flex items-center justify-center",
                  children: v.jsx(Fn, {
                    width: 20,
                    height: 20,
                    className: "animate-spin",
                  }),
                }),
            ],
          }),
        ],
      })
    );
  },
  fA = N.memo(() =>
    v.jsxs("div", {
      className: "flex flex-col relative min-h-full",
      children: [
        v.jsx("section", {
          className:
            "min-h-[64px] flex sticky top-0 w-full py-2 pl-4 bg-blue-800 z-10 overflow-hidden",
          children: v.jsx(EQ, {}),
        }),
        v.jsx("section", {
          className: "px-4 py-4 flex-grow",
          children: v.jsx(ua, {}),
        }),
      ],
    })
  );
fA.displayName = "CasesLayout";
const n5 = { Layout: fA, Main: uA, Case: gQ },
  hA = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 21,
        height: 20,
        fill: "none",
        ...e,
      },
      N.createElement("path", {
        fill: "currentColor",
        fillRule: "evenodd",
        d: "M7.03.76H4.55c-1.2 0-2.27.76-2.67 1.9L.62 6.21a2.05 2.05 0 0 0 1.27 2.62v7.56a2.85 2.85 0 0 0 2.83 2.84h11.65a2.85 2.85 0 0 0 2.84-2.84V8.8a2.05 2.05 0 0 0 1.17-2.58l-1.26-3.57a2.84 2.84 0 0 0-2.67-1.9H7.03Zm6.35 1.45h-2.15V7.5h3.41l-1.26-5.28Zm2.17 6.73h2.21v7.46a1.4 1.4 0 0 1-1.39 1.39H4.72a1.4 1.4 0 0 1-1.38-1.39V8.94h12.21ZM6.32 7.5 7.6 2.21h2.18V7.5H6.32Zm-1.5 0L6.1 2.21H4.55c-.58 0-1.11.37-1.3.93L1.99 6.7a.6.6 0 0 0 .56.8h2.28Zm11.32 0-1.27-5.28h1.58c.58 0 1.11.37 1.3.93l1.26 3.56a.6.6 0 0 1-.56.8h-2.31Z",
        clipRule: "evenodd",
      }),
      N.createElement("path", {
        fill: "currentColor",
        fillRule: "evenodd",
        d: "M5.12 12.06c0-.8.65-1.45 1.45-1.45h2.46c.8 0 1.45.65 1.45 1.45v6.45a.66.66 0 1 1-1.32 0v-6.45a.14.14 0 0 0-.13-.13H6.57a.14.14 0 0 0-.13.13v6.45a.66.66 0 1 1-1.32 0v-6.45ZM13.19 11.93v1.77h1.77v-1.77h-1.77Zm-1.32-.26c0-.59.47-1.06 1.06-1.06h2.29c.58 0 1.06.47 1.06 1.06v2.29c0 .58-.48 1.06-1.06 1.06h-2.3c-.58 0-1.05-.48-1.05-1.06v-2.3Z",
        clipRule: "evenodd",
      })
    ),
  pA = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 21,
        height: 20,
        viewBox: "0 0 21 20",
        fill: "none",
        ...e,
      },
      N.createElement("path", {
        fill: "currentColor",
        fillRule: "evenodd",
        d: "M7.47 1.69c-.38 0-.7.32-.7.7v1.22h6.66V2.39c0-.38-.32-.7-.7-.7H7.47Zm7.65 1.92V2.39A2.4 2.4 0 0 0 12.73 0H7.47a2.4 2.4 0 0 0-2.39 2.4v1.2H3.47A3.38 3.38 0 0 0 .1 6.99v2.47a.86.86 0 0 0 0 .06v7.4C.1 18.6 1.5 20 3.2 20H17a3.1 3.1 0 0 0 3.09-3.1V9.48a.8.8 0 0 0 0-.03V6.98a3.38 3.38 0 0 0-3.37-3.37h-1.61Zm3.3 6.72v6.57c0 .77-.64 1.41-1.4 1.41H3.18c-.77 0-1.4-.64-1.4-1.4v-6.58h16.63ZM1.78 8.63h16.64V6.99a1.7 1.7 0 0 0-1.69-1.69H3.47A1.7 1.7 0 0 0 1.78 7v1.65Z",
        clipRule: "evenodd",
      })
    ),
  j6 = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 20,
        height: 20,
        fill: "none",
        ...e,
      },
      N.createElement("path", {
        fill: "currentColor",
        fillRule: "evenodd",
        d: "M7.36 4.03c1.04 0 1.54-.7 1.54-1.17 0-.46-.5-1.17-1.54-1.17-1.05 0-1.55.71-1.55 1.17 0 .46.5 1.17 1.55 1.17Zm1.7 5.95v8.33h-3.6a1.98 1.98 0 0 1-1.96-1.97V9.98h5.56Zm1.7-1.69V5.85h6.15c.47 0 .85.38.85.85v1.6h-7Zm-1.7 0H2.04V6.7c0-.46.38-.84.85-.84h6.17v2.44Zm7.26 1.7h-5.57v8.32h3.6c1.08 0 1.97-.89 1.97-1.97V9.98Zm-1-5.83c.23-.4.35-.84.35-1.3 0-1.58-1.44-2.86-3.23-2.86-1.03 0-1.95.43-2.54 1.1A3.39 3.39 0 0 0 7.36 0C5.57 0 4.12 1.28 4.12 2.86c0 .47.13.91.35 1.3H2.9A2.55 2.55 0 0 0 .35 6.7v1.6c0 .83.63 1.55 1.46 1.67v6.37A3.66 3.66 0 0 0 5.47 20h8.87a3.66 3.66 0 0 0 3.67-3.66V9.96a1.7 1.7 0 0 0 1.44-1.67V6.7c0-1.39-1.15-2.53-2.54-2.53h-1.59Zm-1.34-1.3c0 .46-.49 1.17-1.54 1.17-1.04 0-1.54-.7-1.54-1.17 0-.46.5-1.17 1.54-1.17 1.05 0 1.54.71 1.54 1.17Z",
        clipRule: "evenodd",
      })
    ),
  lf = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 8,
        height: 8,
        viewBox: "0 0 8 8",
        fill: "none",
        ...e,
      },
      N.createElement("path", {
        fill: "currentColor",
        fillRule: "evenodd",
        d: "M4 0c.32 0 .57.26.57.57v6.86a.57.57 0 0 1-1.14 0V.57C3.43.26 3.68 0 4 0Z",
        clipRule: "evenodd",
      }),
      N.createElement("path", {
        fill: "currentColor",
        fillRule: "evenodd",
        d: "M8 4c0 .32-.26.57-.57.57H.57a.57.57 0 0 1 0-1.14h6.86c.31 0 .57.25.57.57Z",
        clipRule: "evenodd",
      })
    ),
  kQ = ({ balance: e, onOpen: t }) =>
    v.jsx(He, {
      onClick: t,
      text: e,
      classes: "leading-[17px] bg-gray-600",
      leftIcon: v.jsx(zt, {
        width: 14,
        height: 14,
        className: "shrink-0 text-blue-200",
      }),
      rightIcon: v.jsx("div", {
        className:
          "w-[18px] h-[18px] flex items-center justify-center rounded-full bg-blue-300",
        children: v.jsx(lf, { width: 8, height: 8, className: "shrink-0" }),
      }),
    }),
  uf = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 12,
        height: 6,
        fill: "none",
        ...e,
      },
      N.createElement("path", {
        fill: "#677A8C",
        fillRule: "evenodd",
        d: "M.9.24a.82.82 0 0 1 1.16 0L5.97 4.2 9.95.24A.82.82 0 1 1 11.1 1.4L6.85 5.64c-.5.49-1.26.47-1.74.02v-.01L.88 1.4A.82.82 0 0 1 .9.24Z",
        clipRule: "evenodd",
      })
    ),
  _Q = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 18,
        height: 18,
        fill: "none",
        ...e,
      },
      N.createElement("path", {
        fill: "#fff",
        fillRule: "evenodd",
        d: "M9 1.14a7.86 7.86 0 0 0-5.34 13.63 3.62 3.62 0 0 1 3.49-2.63h3.76c1.64 0 3.03 1.09 3.47 2.58a8.1 8.1 0 0 0 1.88-2.71A7.86 7.86 0 0 0 9 1.14Zm4.38 14.38a2.47 2.47 0 0 0-2.47-2.24H7.15c-1.3 0-2.37 1-2.47 2.28a7.86 7.86 0 0 0 8.7-.04ZM2.64 2.64a9 9 0 1 1 12.72 12.72A9 9 0 0 1 2.64 2.64ZM9 5.1a2.3 2.3 0 1 0 0 4.6 2.3 2.3 0 0 0 0-4.6Zm-2.43-.14a3.44 3.44 0 1 1 4.86 4.87 3.44 3.44 0 0 1-4.86-4.87Z",
        clipRule: "evenodd",
      })
    ),
  AQ = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 18,
        height: 16,
        fill: "none",
        ...e,
      },
      N.createElement("path", {
        fill: "#fff",
        d: "M2.71 6.09c-.5 0-.95-.12-1.36-.36A2.68 2.68 0 0 1 0 3.37a2.64 2.64 0 0 1 1.35-2.34A2.6 2.6 0 0 1 2.7.66a2.72 2.72 0 0 1 0 5.43Zm0-1.32c.4 0 .72-.14.99-.4.27-.28.4-.6.4-1 0-.39-.13-.72-.4-.99s-.6-.4-.99-.4-.71.13-.98.4-.4.6-.4.99c0 .4.13.72.4 1 .27.26.6.4.98.4Zm12.57 1.32c-.5 0-.96-.12-1.37-.36a2.68 2.68 0 0 1-1.35-2.36 2.64 2.64 0 0 1 1.35-2.34 2.6 2.6 0 0 1 1.37-.37 2.7 2.7 0 0 1 2.35 4.09c-.24.4-.57.73-.99.98-.4.24-.86.36-1.36.36Zm0-1.32c.4 0 .73-.14 1-.4.26-.28.4-.6.4-1 0-.39-.14-.72-.4-.99-.28-.27-.6-.4-1-.4-.38 0-.71.13-.99.4-.27.27-.4.6-.4.99 0 .4.13.72.4 1 .27.26.6.4.99.4ZM9 15.35A2.78 2.78 0 0 1 6.65 14a2.68 2.68 0 0 1-.36-1.38 2.64 2.64 0 0 1 1.35-2.34A2.6 2.6 0 0 1 9 9.91a2.71 2.71 0 0 1 0 5.43Zm0-1.33a1.37 1.37 0 0 0 1.39-1.4c0-.39-.13-.72-.4-.98-.26-.27-.6-.4-.99-.4-.38 0-.71.13-.98.4-.27.26-.4.6-.4.98 0 .4.13.72.4 1 .27.27.6.4.98.4ZM6.85 4.11a.72.72 0 0 1-.73-.73c0-.2.07-.36.21-.5a.7.7 0 0 1 .52-.22c.2 0 .37.07.51.22.14.14.21.3.21.5a.7.7 0 0 1-.2.52.7.7 0 0 1-.52.2ZM9 4.1a.7.7 0 0 1-.51-.21.7.7 0 0 1-.21-.52c0-.2.07-.36.21-.5A.69.69 0 0 1 9 2.66c.2 0 .37.07.51.22.15.14.22.3.22.5s-.07.38-.22.52a.69.69 0 0 1-.5.2Zm2.14 0a.72.72 0 0 1-.72-.73c0-.2.07-.36.21-.5a.7.7 0 0 1 .51-.22c.2 0 .38.07.52.22.14.14.22.3.22.5s-.08.38-.22.52a.7.7 0 0 1-.52.2Zm1.98 3.81a.72.72 0 0 1-.72-.72c0-.2.07-.37.2-.51a.72.72 0 0 1 .52-.21.7.7 0 0 1 .72.72.72.72 0 0 1-.72.72Zm-1.56 1.73a.72.72 0 0 1-.73-.72c0-.2.07-.37.21-.5a.7.7 0 0 1 1.02 0c.15.13.22.3.22.5a.7.7 0 0 1-.22.51.69.69 0 0 1-.5.21Zm-5.12 0a.72.72 0 0 1-.73-.72c0-.2.07-.37.21-.5a.7.7 0 0 1 .52-.23c.2 0 .37.08.5.22.15.14.23.31.23.5a.7.7 0 0 1-.22.52.7.7 0 0 1-.51.21ZM4.87 7.92a.72.72 0 0 1-.73-.72.72.72 0 0 1 .72-.72c.2 0 .37.07.51.2.15.15.22.32.22.52a.7.7 0 0 1-.22.51.69.69 0 0 1-.5.21Z",
      })
    ),
  mA = (e) => {
    const t = encodeURIComponent(sC("profile.friends.invite.text")),
      n = `${se.EXTERNAL.TG_BOT_REFERRAL_LINK}${e}`;
    return `${se.EXTERNAL.TG_SHARE}?url=${n}&text=${t}`;
  },
  TQ = (e, t) => {
    const n = encodeURIComponent(sC("giveaway.page.share.text")),
      r = se.EXTERNAL.GET_TG_BOT_SHARE_GIVEAWAY_LINK(e, t);
    return `${se.EXTERNAL.TG_SHARE}?url=${r}&text=${n}`;
  },
  PQ = ({ avatar: e, firstName: t = "", lastName: n = "" }) => {
    const r = N.useRef(null),
      i = N.useRef(null),
      o = Un().pathname.startsWith(`/${se.PAGES.PROFILE.MAIN}`),
      { t: l } = Ze(),
      [c, f] = N.useState(!1),
      d = ia(N3.telegram.getUserId);
    N.useEffect(() => {
      function m(g) {
        const w = r.current,
          b = i.current;
        (b && b.contains(g.target)) || (w && !w.contains(g.target) && f(!1));
      }
      return (
        document.addEventListener("mousedown", m),
        () => {
          document.removeEventListener("mousedown", m);
        }
      );
    }, []);
    const p = N.useCallback(async () => {
      try {
        await window.Telegram.WebApp.openTelegramLink(mA(d));
      } catch (m) {
        console.log(m);
      } finally {
        f(!1);
      }
    }, []);
    return v.jsxs("div", {
      className: "relative",
      children: [
        v.jsx(He, {
          onClick: () => f((m) => !m),
          ref: i,
          text: v.jsx("span", {
            className: "line-clamp-1 max-w-16 text-left",
            children: `${t} ${n}`,
          }),
          classes: "leading-[17px] bg-gray-600",
          leftIcon: v.jsx("div", {
            className:
              "w-[18px] h-[18px] rounded-full overflow-hidden mr-[1px]",
            children: v.jsx("img", {
              src: e,
              alt: "avatar",
              width: 18,
              height: 18,
            }),
          }),
          rightIcon: v.jsx("div", {
            className: "w-3.5 h-3 pb-0.5 flex items-end",
            children: v.jsx(uf, { width: 11 }),
          }),
        }),
        v.jsx(ss, {
          children:
            c &&
            v.jsx(
              Sn.div,
              {
                initial: { opacity: 0, scale: 0.7, y: -5, x: -50 },
                animate: { opacity: 1, scale: 1, y: 0, x: 0 },
                exit: { opacity: 0, scale: 0.7, y: -5, x: -50 },
                transition: { duration: 0.2, ease: "easeOut" },
                className:
                  "absolute left-0 mt-2 w-52 origin-top-right rounded-lg bg-gray-500 z-50",
                ref: r,
                children: v.jsxs("div", {
                  className: "py-1.5 text-[14px] leading-[17px]",
                  children: [
                    !o &&
                      v.jsxs(pu, {
                        to: `/${se.PAGES.PROFILE.MAIN}`,
                        onClick: () => f(!1),
                        className:
                          "py-[9px] px-3 flex items-center gap-3 hover:bg-gray-400",
                        children: [
                          v.jsx(_Q, {
                            width: 18,
                            height: 18,
                            className: "shrink-0",
                          }),
                          l("nav.Profile"),
                        ],
                      }),
                    v.jsxs("button", {
                      onClick: p,
                      className:
                        "py-[9px] px-3 flex items-center gap-3 hover:bg-gray-400 w-full",
                      children: [
                        v.jsx(AQ, {
                          width: 18,
                          height: 18,
                          className: "shrink-0",
                        }),
                        l("button.share"),
                      ],
                    }),
                  ],
                }),
              },
              "dropdown"
            ),
        }),
      ],
    });
  },
  gA = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 14,
        height: 14,
        viewBox: "0 0 14 14",
        fill: "none",
        ...e,
      },
      N.createElement("path", {
        fill: "currentColor",
        d: "M8.75 12.17H2.92A2.92 2.92 0 0 1 0 9.25V3.42A2.92 2.92 0 0 1 2.92.5h5.83a2.92 2.92 0 0 1 2.92 2.92v5.83a2.92 2.92 0 0 1-2.92 2.92ZM2.92 1.67a1.75 1.75 0 0 0-1.75 1.75v5.83A1.75 1.75 0 0 0 2.92 11h5.83a1.75 1.75 0 0 0 1.75-1.75V3.42a1.75 1.75 0 0 0-1.75-1.75H2.92ZM14 11.58V4a.58.58 0 0 0-1.17 0v7.58a1.75 1.75 0 0 1-1.75 1.75H3.5a.58.58 0 0 0 0 1.17h7.58A2.92 2.92 0 0 0 14 11.58Z",
      })
    ),
  MQ = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        stroke: "currentColor",
        strokeWidth: 1.5,
        viewBox: "0 0 22 22",
        ...e,
      },
      N.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15.75 9V5.25A2.25 2.25 0 0 0 13.5 3h-6a2.25 2.25 0 0 0-2.25 2.25v13.5A2.25 2.25 0 0 0 7.5 21h6a2.25 2.25 0 0 0 2.25-2.25V15m3 0 3-3m0 0-3-3m3 3H9",
      })
    ),
  RQ = (e) => `${e.slice(0, 3)}...${e.slice(-3)}`,
  LQ = ({ wallet: e = "" }) => {
    const t = N.useRef(null),
      n = N.useRef(null),
      [r, i] = N.useState(!1),
      { t: s } = Ze(),
      [o] = Vp(),
      [l] = la(),
      c = N4(),
      f = e || c ? RQ(e || c) : s("profile.wallet");
    N.useEffect(() => {
      c && e !== c && o(c);
    }, [c, e]),
      N.useEffect(() => {
        function g(w) {
          const b = t.current,
            x = n.current;
          (x && x.contains(w.target)) || (b && !b.contains(w.target) && i(!1));
        }
        return (
          document.addEventListener("mousedown", g),
          () => {
            document.removeEventListener("mousedown", g);
          }
        );
      }, []);
    const d = N.useCallback(() => {
        l.connected && (l.disconnect(), o("")), i(!1);
      }, [l]),
      p = N.useCallback((g, w) => {
        g &&
          navigator.clipboard &&
          navigator.clipboard
            .writeText(g)
            .then(() => w(!1))
            .catch((b) => {
              console.error("Ошибка копирования:", b);
            });
      }, []),
      m = N.useCallback(() => {
        if (l.connected) {
          i((g) => !g);
          return;
        }
        l.openModal(), i(!1);
      }, [l]);
    return v.jsxs("div", {
      className: "relative",
      children: [
        v.jsx(He, {
          ref: n,
          onClick: m,
          text: f,
          classes: ["leading-[18px]", c && "bg-gray-600"],
          rightIcon:
            c &&
            v.jsx("div", {
              className: "w-3.5 h-3 pb-0.5 flex items-end",
              children: v.jsx(uf, { width: 11 }),
            }),
        }),
        v.jsx(ss, {
          children:
            r &&
            v.jsx(
              Sn.div,
              {
                initial: { opacity: 0, scale: 0.7, y: -5, x: 30 },
                animate: { opacity: 1, scale: 1, y: 0, x: 0 },
                exit: { opacity: 0, scale: 0.7, y: -5, x: 30 },
                transition: { duration: 0.2, ease: "easeOut" },
                className:
                  "absolute right-0 mt-2 w-52 origin-top-right rounded-lg bg-gray-500 z-50",
                ref: t,
                children: v.jsxs("div", {
                  className: "py-1.5 text-[14px] leading-[17px]",
                  children: [
                    v.jsxs("button", {
                      onClick: () => p(c, i),
                      className:
                        "py-[9px] px-3 flex items-center gap-3 hover:bg-gray-400 w-full",
                      children: [
                        v.jsx(gA, {
                          width: 18,
                          height: 18,
                          className: "shrink-0",
                        }),
                        s("button.copy"),
                      ],
                    }),
                    v.jsxs("button", {
                      onClick: d,
                      className:
                        "py-[9px] px-3 flex items-center gap-3 hover:bg-gray-400 w-full",
                      children: [
                        v.jsx(MQ, {
                          width: 18,
                          height: 18,
                          className: "shrink-0",
                        }),
                        s("button.disconnect"),
                      ],
                    }),
                  ],
                }),
              },
              "dropdown"
            ),
        }),
      ],
    });
  },
  IQ = () => {
    const { data: e = {} } = da(),
      { pathname: t } = Un(),
      { wallet: n, avatar: r, firstName: i, lastName: s, balance: o } = e,
      { handleOpenDepositPage: l } = of(n, t),
      c = N.useMemo(
        () => String(Math.floor(Number(Jt.fromNano(o ?? 0)) * 100) / 100),
        [o]
      );
    return v.jsxs("div", {
      className: "px-4 py-2 flex justify-between items-center bg-blue-800",
      children: [
        v.jsxs("div", {
          className: "flex flex-nowrap gap-2",
          children: [
            v.jsx(PQ, { avatar: r, firstName: i, lastName: s }),
            v.jsx(kQ, { balance: c, onOpen: l }),
          ],
        }),
        v.jsx(LQ, { wallet: n }),
      ],
    });
  },
  Mm = N.createContext(null),
  jQ = ({ children: e }) => {
    const t = N.useRef(null),
      n = () => {
        var r;
        (r = t.current) == null || r.scrollTo({ top: 0 });
      };
    return v.jsx(Mm.Provider, {
      value: { scrollToTop: n },
      children: v.jsx("main", {
        ref: t,
        className: "flex-grow overflow-y-auto",
        children: e,
      }),
    });
  },
  r5 = ({ name: e, icon: t, ...n }) =>
    v.jsx(R3, {
      className: ({ isActive: r }) =>
        me(
          "text-[10px] font-bold leading-[12px] text-blue-200",
          !r && "text-gray-250"
        ),
      ...n,
      children: v.jsxs("div", {
        className: "flex flex-col gap-1.5 items-center",
        children: [t, e],
      }),
    }),
  NQ = () => {
    const { t: e } = Ze(),
      { pathname: t } = Un(),
      n =
        Os({ path: se.PAGES.CREATE_GIVEAWAY.MAIN, end: !1 }, t) ||
        Os({ path: se.PAGES.CASES.FULL_ROUTE_CASE, end: !0 }, t) ||
        Os({ path: se.PAGES.DEPOSIT.FULL_ROUTE_MAIN, end: !1 }, t);
    return (
      UY(),
      v.jsxs("div", {
        className: "w-full h-dvh max-h-dvh bg-background flex flex-col",
        children: [
          v.jsx(IQ, {}),
          v.jsx(jQ, { children: v.jsx(ua, {}) }),
          !n &&
            v.jsxs("nav", {
              className:
                "w-full h-20 bg-blue-800 flex shrink-0 items-center justify-around px-8",
              children: [
                v.jsx(r5, {
                  name: e("nav.case"),
                  to: se.PAGES.CASES.MAIN,
                  icon: v.jsx(pA, { width: 20, height: 20 }),
                }),
                v.jsx(r5, {
                  name: e("nav.trade"),
                  to: se.PAGES.TRADE.MAIN,
                  icon: v.jsx(hA, { width: 20, height: 20 }),
                }),
                v.jsx(r5, {
                  name: e("nav.giveaways"),
                  to: se.PAGES.GIVEAWAYS.MAIN,
                  icon: v.jsx(j6, { width: 20, height: 20 }),
                }),
              ],
            }),
        ],
      })
    );
  },
  yA = N.forwardRef(({ name: e, count: t, ...n }, r) =>
    v.jsx(R3, {
      ref: r,
      className: ({ isActive: i }) =>
        me(
          "text-[14px] font-bold leading-[17px] relative transition-colors duration-300",
          i ? "text-white" : "text-gray-250"
        ),
      ...n,
      children: v.jsxs("div", {
        className: "flex items-center justify-between gap-1 flex-nowrap",
        children: [
          e,
          t
            ? v.jsx("div", {
                className:
                  "text-[10px] shrink-0 px-[5px] text-center rounded-full bg-gray-450",
                children: t,
              })
            : null,
        ],
      }),
    })
  );
yA.displayName = "StyledLink";
const fb = [
    { nameKey: "profile.tabs.inventory", path: se.PAGES.PROFILE.INVENTORY },
    { nameKey: "profile.tabs.referrals", path: se.PAGES.PROFILE.REFERRALS },
    { nameKey: "profile.tabs.history", path: se.PAGES.PROFILE.HISTORY },
  ],
  OQ = () => {
    const { t: e } = Ze(),
      t = Un(),
      { data: n = {} } = da(),
      { data: { items: r = [] } = {}, isLoading: i } = dk(),
      { avatar: s, username: o, friendsInvited: l } = n;
    U3({ url: `/${se.PAGES.CASES.MAIN}` });
    const c = N.useMemo(
        () =>
          fb.findIndex((d) =>
            t.pathname.startsWith(`/${se.PAGES.PROFILE.MAIN}/${d.path}`)
          ),
        [t.pathname]
      ),
      f = N.useMemo(
        () => ({
          "profile.tabs.inventory": (r == null ? void 0 : r.length) ?? 0,
          "profile.tabs.referrals": l,
        }),
        [r, l]
      );
    return v.jsxs("div", {
      className: "p-4 pt-0 flex flex-col",
      children: [
        v.jsxs("div", {
          className: "flex flex-col py-4 gap-4 sticky top-0 z-30 bg-background",
          children: [
            v.jsxs("div", {
              className: "flex flex-col items-center justify-center gap-2",
              children: [
                v.jsx("div", {
                  className:
                    "w-[65px] h-[66px] rounded-full bg-gray-700 overflow-hidden",
                  children: v.jsx("img", {
                    alt: "avatar",
                    src: s,
                    width: 65,
                    height: 65,
                  }),
                }),
                v.jsx("p", {
                  className: "text-[22px] font-bold leading-[27px]",
                  children: o,
                }),
              ],
            }),
            v.jsxs("nav", {
              className:
                "w-full px-2 pt-3 grid grid-cols-[repeat(3,_max-content)_1fr] gap-x-4 gap-y-2",
              children: [
                fb.map((d) =>
                  v.jsx(
                    yA,
                    { name: e(d.nameKey), count: f[d.nameKey], to: d.path },
                    d.path
                  )
                ),
                v.jsx(Sn.div, {
                  layout: !0,
                  transition: { type: "spring", stiffness: 300, damping: 30 },
                  className: me(
                    "h-[3px] w-full row-start-2 bg-blue-300 rounded-lg",
                    ["col-start-1", "col-start-2", "col-start-3"][c]
                  ),
                }),
              ],
            }),
          ],
        }),
        v.jsx(ua, { context: { inventoryList: r, isLoading: i } }),
      ],
    });
  },
  Lt = {
    DEPOSIT_TON: "deposit-ton",
    REFERRAL_CLAIM_TON: "referral-claim-ton",
    GIVEAWAY_PARTICIPATE: "giveaway-participate",
    GIVEAWAY_CANCEL: "giveaway-cancel",
    ITEM_DEPOSIT: "item-deposit",
    ITEM_WITHDRAW: "item-withdraw",
    ITEM_CASE_OPEN: "item-case-open",
    ITEM_SELL: "item-sell",
    ITEM_MARKET_BUY: "item-market-buy",
    ITEM_GIVEAWAY_CLASSIC_CREATE: "item-giveaway-classic-create",
    ITEM_GIVEAWAY_PRIME_CREATE: "item-giveaway-prime-create",
    ITEM_GIVEAWAY_WIN: "item-giveaway-win",
  },
  BQ = {
    [Lt.ITEM_DEPOSIT]: "history.item.action.deposit",
    [Lt.ITEM_WITHDRAW]: "history.item.action.withdraw",
    [Lt.ITEM_GIVEAWAY_CLASSIC_CREATE]:
      "history.item.action.giveawayClassicCreate",
    [Lt.ITEM_GIVEAWAY_WIN]: "history.item.action.giveawayWin",
  },
  hb = {
    [Lt.DEPOSIT_TON]: "history.desc.deposit",
    [Lt.REFERRAL_CLAIM_TON]: "history.desc.referral",
    [Lt.GIVEAWAY_PARTICIPATE]: "history.desc.giveawayParticipate",
    [Lt.GIVEAWAY_CANCEL]: "history.desc.giveawayCancel",
    [Lt.ITEM_GIVEAWAY_WIN]: "history.item.desc.win",
    [Lt.ITEM_SELL]: "history.item.desc.sell",
    [Lt.ITEM_MARKET_BUY]: "history.item.desc.buy",
    [Lt.ITEM_CASE_OPEN]: "history.item.desc.caseOpen",
    [Lt.ITEM_GIVEAWAY_PRIME_CREATE]: "history.item.desc.giveawayCreate",
    [Lt.ITEM_GIVEAWAY_CLASSIC_CREATE]: "history.item.desc.giveawayCreate",
    [Lt.ITEM_DEPOSIT]: "history.item.desc.deposit",
    [Lt.ITEM_WITHDRAW]: "history.item.desc.withdraw",
  },
  DQ = {
    [Lt.DEPOSIT_TON]: v.jsx(zt, {
      height: 20,
      width: 20,
      className: "text-blue-200",
    }),
    [Lt.REFERRAL_CLAIM_TON]: v.jsx(zt, {
      height: 20,
      width: 20,
      className: "text-blue-200",
    }),
    [Lt.GIVEAWAY_PARTICIPATE]: v.jsx(j6, {
      height: 20,
      width: 20,
      className: "text-blue-200",
    }),
    [Lt.GIVEAWAY_CANCEL]: v.jsx(j6, {
      height: 20,
      width: 20,
      className: "text-blue-200",
    }),
  },
  pb = {
    [Lt.DEPOSIT_TON]: "history.title.deposit",
    [Lt.REFERRAL_CLAIM_TON]: "history.title.referral",
    [Lt.GIVEAWAY_PARTICIPATE]: "history.title.giveawayParticipate",
    [Lt.GIVEAWAY_CANCEL]: "history.title.giveawayCancel",
  },
  FQ = ({ amount: e }) => {
    const t = N.useMemo(
      () => Math.floor(Number(Jt.fromNano(e ?? 0)) * 100) / 100,
      [e]
    );
    return v.jsxs("div", {
      className: "flex items-center gap-1 flex-nowrap",
      children: [
        v.jsx(zt, { width: 14, className: "text-blue-200" }),
        v.jsx("span", {
          className: "text-[14px] leading-[17px] font-bold",
          children: e > 0 ? `+${t}` : t,
        }),
      ],
    });
  },
  UQ = ({ type: e, animationLink: t, centerColor: n, edgeColor: r }) =>
    v.jsx("div", {
      style: {
        background: `radial-gradient(50% 50% at 50% 50%, ${n} 0%, ${r} 100%)`,
      },
      className: "grid place-items-center w-8 h-8 rounded",
      children: t ? v.jsx(ii, { loop: !1, path: t, size: 20 }) : DQ[e],
    }),
  vA = N.memo(({ type: e, onClick: t, t: n, amount: r, gift: i = {} }) => {
    const {
        animationLink: s = "",
        name: o = "",
        nftId: l = "",
        backDrop: c = {},
        model: f = {},
      } = i,
      { centerColor: d = "#293440", edgeColor: p = "#293440" } = c,
      { animationLink: m = "" } = f;
    return v.jsxs("div", {
      onClick: t,
      className:
        "grid grid-cols-[32px_1fr_max-content] gap-x-2 items-center pl-1.5 pr-3 py-1.5 bg-gray-700 cursor-pointer",
      children: [
        v.jsx(UQ, {
          type: e,
          animationLink: m || s,
          centerColor: d,
          edgeColor: p,
        }),
        v.jsxs("div", {
          className: "flex flex-col",
          children: [
            v.jsx("span", {
              className: "text-[14px] leading-[17px] font-bold",
              children: pb[e] ? n(pb[e]) : `${o} ${l ? `#${l}` : ""}`,
            }),
            v.jsx("span", {
              className: "text-[12px] leading-[15px] text-gray-300",
              children: hb[e] ? n(hb[e]) : null,
            }),
          ],
        }),
        v.jsx("div", {
          children: r !== null ? v.jsx(FQ, { amount: r }) : n(BQ[e]),
        }),
      ],
    });
  });
vA.displayName = "HistoryTableItem";
const $Q = ({ headers: e = [], history: t = [] }) => {
    const n = or(),
      { t: r } = Ze(),
      { visibleItems: i, isDone: s, loaderRef: o } = Wi({ items: t });
    if (!(t != null && t.length)) return null;
    const l = (c, f) => {
      switch (f) {
        case Lt.GIVEAWAY_CANCEL:
        case Lt.ITEM_GIVEAWAY_CLASSIC_CREATE:
        case Lt.GIVEAWAY_PARTICIPATE:
        case Lt.ITEM_GIVEAWAY_PRIME_CREATE:
        case Lt.ITEM_GIVEAWAY_WIN:
          n(se.PAGES.GIVEAWAYS.TO_FULL_ROUTE_GIVEAWAY(c));
          break;
        case Lt.REFERRAL_CLAIM_TON:
          n(se.PAGES.PROFILE.REFERRALS, { replace: !0 });
          break;
        case Lt.ITEM_WITHDRAW:
        case Lt.ITEM_SELL:
          n(se.PAGES.PROFILE.INVENTORY, { replace: !0 });
          break;
        case Lt.ITEM_CASE_OPEN:
          n(se.PAGES.CASES.TO_FULL_ROUTE_CASE(c));
          break;
        case Lt.DEPOSIT_TON:
          n(se.PAGES.DEPOSIT.FULL_ROUTE_MAIN);
          break;
        case Lt.ITEM_DEPOSIT:
          n(se.PAGES.DEPOSIT.GIFTS.FULL_ROUTE_GIFTS);
          break;
        case Lt.ITEM_MARKET_BUY:
          n(se.PAGES.TRADE.FULL_ROUTE_TRADE);
          break;
      }
    };
    return v.jsxs("div", {
      className: "w-full rounded-lg flex flex-col overflow-hidden",
      children: [
        v.jsx("div", {
          className:
            "w-full px-3 py-1.5 flex items-center justify-between bg-gray-600",
          children:
            e == null
              ? void 0
              : e.map((c) =>
                  v.jsx(
                    "span",
                    {
                      className:
                        "text-[12px] font-bold leading-[15px] text-gray-300",
                      children: c,
                    },
                    c
                  )
                ),
        }),
        v.jsxs("div", {
          className: "flex flex-col gap-[1px]",
          children: [
            i == null
              ? void 0
              : i.map(({ date: c, amount: f, data: d, type: p, gift: m }) =>
                  v.jsx(
                    vA,
                    {
                      t: r,
                      amount: f,
                      onClick: () => l(d, p),
                      type: p,
                      gift: m,
                    },
                    c
                  )
                ),
            !s &&
              v.jsx("div", {
                ref: o,
                className: "w-full flex items-center justify-center",
                children: v.jsx(Fn, {
                  width: 20,
                  height: 20,
                  className: "animate-spin",
                }),
              }),
          ],
        }),
      ],
    });
  },
  VQ = () => {
    const { t: e } = Ze(),
      { data: { items: t = [] } = {} } = ZW();
    return v.jsx($Q, {
      history: t,
      headers: [e("table.header.info"), e("table.header.action")],
    });
  },
  WQ = () => {
    const { t: e } = Ze(),
      t = v2(),
      { data: n = {} } = da(),
      [r, { isLoading: i }] = XW(),
      {
        earnedFromReferrals: s = 0,
        referralPercent: o = 0,
        referralRewards: l = 0,
      } = n,
      c = ia(N3.telegram.getUserId),
      f = `${se.EXTERNAL.TG_BOT_REFERRAL_LINK}${c}`,
      d = N.useCallback(async () => {
        try {
          await window.Telegram.WebApp.openTelegramLink(mA(c));
        } catch (b) {
          console.log(b);
        }
      }, [c]),
      p = N.useCallback(() => {
        navigator.clipboard && navigator.clipboard.writeText(f);
      }, [f]),
      m = N.useCallback(async () => {
        try {
          const {
            data: { success: b },
          } = await r();
          b && t(zr.util.invalidateTags(["Profile", "History"]));
        } catch (b) {
          console.log(b);
        }
      }, []),
      g = N.useMemo(
        () => Math.floor(Number(Jt.fromNano(l ?? 0)) * 100) / 100,
        [l]
      ),
      w = N.useMemo(
        () => Math.floor(Number(Jt.fromNano(s ?? 0)) * 100) / 100,
        [s]
      );
    return v.jsx(Zs, {
      children: v.jsxs("div", {
        className: "flex flex-col gap-3",
        children: [
          v.jsxs("div", {
            className: "flex items-center justify-between gap-3",
            children: [
              v.jsxs("div", {
                className: "flex flex-col gap-1",
                children: [
                  v.jsxs("div", {
                    className:
                      "flex items-center gap-1 text-[14px] leading-[17px] font-bold text-white",
                    children: [
                      v.jsx(zt, {
                        width: 14,
                        height: 14,
                        className: "text-blue-200",
                      }),
                      e("profile.friends.earned", { count: w }),
                    ],
                  }),
                  e("profile.friends.text", { percent: o }),
                ],
              }),
              v.jsxs("div", {
                className: "flex items-center gap-2 text-white",
                children: [
                  v.jsx(He, {
                    classes: "h-8",
                    text: e("profile.button.invite"),
                    onClick: d,
                  }),
                  v.jsx(He, {
                    classes: "h-8",
                    onClick: p,
                    children: v.jsx(gA, { width: 14, height: 14 }),
                  }),
                ],
              }),
            ],
          }),
          v.jsx(He, {
            disabled: l === 0,
            onClick: m,
            loading: i,
            text: v.jsxs("div", {
              className:
                "flex items-center gap-1 text-[14px] leading-[17px] font-bold",
              children: [
                e("profile.button.withdraw"),
                v.jsx(zt, { width: 14, height: 14 }),
                l === 0 ? "0.00" : g,
              ],
            }),
            classes: "h-[40px] text-white",
          }),
        ],
      }),
    });
  },
  zQ = ({ t: e }) => {
    const t = or();
    return v.jsxs("div", {
      className:
        "flex flex-col items-center gap-3 p-2 h-[115px] justify-between bg-gray-700 rounded-lg",
      children: [
        v.jsxs("div", {
          className: "flex flex-col gap-2 items-center",
          children: [
            v.jsx(pA, {
              width: 16,
              height: 16,
              className: "text-blue-200 m-1.5",
            }),
            v.jsx("span", {
              className: "text-[12px] leading-[15px] font-bold",
              children: e("inventory.promo.card.title"),
            }),
          ],
        }),
        v.jsx(He, {
          text: e("inventory.promo.card.button"),
          classes: "text-[12px]",
          onClick: () => t(`/${se.PAGES.CASES.MAIN}`),
        }),
      ],
    });
  };
var td = { exports: {} },
  Es = {},
  i5 = { exports: {} },
  s5,
  mb;
function HQ() {
  if (mb) return s5;
  mb = 1;
  var e = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return (s5 = e), s5;
}
var o5, gb;
function qQ() {
  if (gb) return o5;
  gb = 1;
  var e = HQ();
  function t() {}
  function n() {}
  return (
    (n.resetWarningCache = t),
    (o5 = function () {
      function r(o, l, c, f, d, p) {
        if (p !== e) {
          var m = new Error(
            "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
          );
          throw ((m.name = "Invariant Violation"), m);
        }
      }
      r.isRequired = r;
      function i() {
        return r;
      }
      var s = {
        array: r,
        bigint: r,
        bool: r,
        func: r,
        number: r,
        object: r,
        string: r,
        symbol: r,
        any: r,
        arrayOf: i,
        element: r,
        elementType: r,
        instanceOf: i,
        node: r,
        objectOf: i,
        oneOf: i,
        oneOfType: i,
        shape: i,
        exact: i,
        checkPropTypes: n,
        resetWarningCache: t,
      };
      return (s.PropTypes = s), s;
    }),
    o5
  );
}
var yb;
function wA() {
  return yb || ((yb = 1), (i5.exports = qQ()())), i5.exports;
}
var nd = { exports: {} },
  pi = {},
  rd = { exports: {} },
  vb;
function bA() {
  return (
    vb ||
      ((vb = 1),
      (function (e, t) {
        Object.defineProperty(t, "__esModule", { value: !0 }), (t.default = d);
        /*!
         * Adapted from jQuery UI core
         *
         * http://jqueryui.com
         *
         * Copyright 2014 jQuery Foundation and other contributors
         * Released under the MIT license.
         * http://jquery.org/license
         *
         * http://api.jqueryui.com/category/ui-core/
         */ var n = "none",
          r = "contents",
          i = /^(input|select|textarea|button|object|iframe)$/;
        function s(p, m) {
          return (
            m.getPropertyValue("overflow") !== "visible" ||
            (p.scrollWidth <= 0 && p.scrollHeight <= 0)
          );
        }
        function o(p) {
          var m = p.offsetWidth <= 0 && p.offsetHeight <= 0;
          if (m && !p.innerHTML) return !0;
          try {
            var g = window.getComputedStyle(p),
              w = g.getPropertyValue("display");
            return m ? w !== r && s(p, g) : w === n;
          } catch {
            return console.warn("Failed to inspect element style"), !1;
          }
        }
        function l(p) {
          for (
            var m = p, g = p.getRootNode && p.getRootNode();
            m && m !== document.body;

          ) {
            if ((g && m === g && (m = g.host.parentNode), o(m))) return !1;
            m = m.parentNode;
          }
          return !0;
        }
        function c(p, m) {
          var g = p.nodeName.toLowerCase(),
            w = (i.test(g) && !p.disabled) || (g === "a" && p.href) || m;
          return w && l(p);
        }
        function f(p) {
          var m = p.getAttribute("tabindex");
          m === null && (m = void 0);
          var g = isNaN(m);
          return (g || m >= 0) && c(p, !g);
        }
        function d(p) {
          var m = [].slice
            .call(p.querySelectorAll("*"), 0)
            .reduce(function (g, w) {
              return g.concat(w.shadowRoot ? d(w.shadowRoot) : [w]);
            }, []);
          return m.filter(f);
        }
        e.exports = t.default;
      })(rd, rd.exports)),
    rd.exports
  );
}
var wb;
function KQ() {
  if (wb) return pi;
  (wb = 1),
    Object.defineProperty(pi, "__esModule", { value: !0 }),
    (pi.resetState = o),
    (pi.log = l),
    (pi.handleBlur = c),
    (pi.handleFocus = f),
    (pi.markForFocusLater = d),
    (pi.returnFocus = p),
    (pi.popWithoutFocus = m),
    (pi.setupScopedFocus = g),
    (pi.teardownScopedFocus = w);
  var e = bA(),
    t = n(e);
  function n(b) {
    return b && b.__esModule ? b : { default: b };
  }
  var r = [],
    i = null,
    s = !1;
  function o() {
    r = [];
  }
  function l() {}
  function c() {
    s = !0;
  }
  function f() {
    if (s) {
      if (((s = !1), !i)) return;
      setTimeout(function () {
        if (!i.contains(document.activeElement)) {
          var b = (0, t.default)(i)[0] || i;
          b.focus();
        }
      }, 0);
    }
  }
  function d() {
    r.push(document.activeElement);
  }
  function p() {
    var b = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1,
      x = null;
    try {
      r.length !== 0 && ((x = r.pop()), x.focus({ preventScroll: b }));
      return;
    } catch {
      console.warn(
        [
          "You tried to return focus to",
          x,
          "but it is not in the DOM anymore",
        ].join(" ")
      );
    }
  }
  function m() {
    r.length > 0 && r.pop();
  }
  function g(b) {
    (i = b),
      window.addEventListener
        ? (window.addEventListener("blur", c, !1),
          document.addEventListener("focus", f, !0))
        : (window.attachEvent("onBlur", c), document.attachEvent("onFocus", f));
  }
  function w() {
    (i = null),
      window.addEventListener
        ? (window.removeEventListener("blur", c),
          document.removeEventListener("focus", f))
        : (window.detachEvent("onBlur", c), document.detachEvent("onFocus", f));
  }
  return pi;
}
var id = { exports: {} },
  bb;
function GQ() {
  return (
    bb ||
      ((bb = 1),
      (function (e, t) {
        Object.defineProperty(t, "__esModule", { value: !0 }), (t.default = o);
        var n = bA(),
          r = i(n);
        function i(l) {
          return l && l.__esModule ? l : { default: l };
        }
        function s() {
          var l =
            arguments.length > 0 && arguments[0] !== void 0
              ? arguments[0]
              : document;
          return l.activeElement.shadowRoot
            ? s(l.activeElement.shadowRoot)
            : l.activeElement;
        }
        function o(l, c) {
          var f = (0, r.default)(l);
          if (!f.length) {
            c.preventDefault();
            return;
          }
          var d = void 0,
            p = c.shiftKey,
            m = f[0],
            g = f[f.length - 1],
            w = s();
          if (l === w) {
            if (!p) return;
            d = g;
          }
          if ((g === w && !p && (d = m), m === w && p && (d = g), d)) {
            c.preventDefault(), d.focus();
            return;
          }
          var b = /(\bChrome\b|\bSafari\b)\//.exec(navigator.userAgent),
            x =
              b != null &&
              b[1] != "Chrome" &&
              /\biPod\b|\biPad\b/g.exec(navigator.userAgent) == null;
          if (x) {
            var E = f.indexOf(w);
            if ((E > -1 && (E += p ? -1 : 1), (d = f[E]), typeof d > "u")) {
              c.preventDefault(), (d = p ? g : m), d.focus();
              return;
            }
            c.preventDefault(), d.focus();
          }
        }
        e.exports = t.default;
      })(id, id.exports)),
    id.exports
  );
}
var Ti = {},
  a5,
  xb;
function YQ() {
  if (xb) return a5;
  xb = 1;
  var e = function () {};
  return (a5 = e), a5;
}
var Ji = {},
  l5 = { exports: {} };
/*!
  Copyright (c) 2015 Jed Watson.
  Based on code that is Copyright 2013-2015, Facebook, Inc.
  All rights reserved.
*/ var Cb;
function QQ() {
  return (
    Cb ||
      ((Cb = 1),
      (function (e) {
        (function () {
          var t = !!(
              typeof window < "u" &&
              window.document &&
              window.document.createElement
            ),
            n = {
              canUseDOM: t,
              canUseWorkers: typeof Worker < "u",
              canUseEventListeners:
                t && !!(window.addEventListener || window.attachEvent),
              canUseViewport: t && !!window.screen,
            };
          e.exports ? (e.exports = n) : (window.ExecutionEnvironment = n);
        })();
      })(l5)),
    l5.exports
  );
}
var Sb;
function Rm() {
  if (Sb) return Ji;
  (Sb = 1),
    Object.defineProperty(Ji, "__esModule", { value: !0 }),
    (Ji.canUseDOM = Ji.SafeNodeList = Ji.SafeHTMLCollection = void 0);
  var e = QQ(),
    t = n(e);
  function n(s) {
    return s && s.__esModule ? s : { default: s };
  }
  var r = t.default,
    i = r.canUseDOM ? window.HTMLElement : {};
  return (
    (Ji.SafeHTMLCollection = r.canUseDOM ? window.HTMLCollection : {}),
    (Ji.SafeNodeList = r.canUseDOM ? window.NodeList : {}),
    (Ji.canUseDOM = r.canUseDOM),
    (Ji.default = i),
    Ji
  );
}
var Eb;
function xA() {
  if (Eb) return Ti;
  (Eb = 1),
    Object.defineProperty(Ti, "__esModule", { value: !0 }),
    (Ti.resetState = s),
    (Ti.log = o),
    (Ti.assertNodeList = l),
    (Ti.setElement = c),
    (Ti.validateElement = f),
    (Ti.hide = d),
    (Ti.show = p),
    (Ti.documentNotReadyOrSSRTesting = m);
  var e = YQ(),
    t = r(e),
    n = Rm();
  function r(g) {
    return g && g.__esModule ? g : { default: g };
  }
  var i = null;
  function s() {
    i &&
      (i.removeAttribute
        ? i.removeAttribute("aria-hidden")
        : i.length != null
        ? i.forEach(function (g) {
            return g.removeAttribute("aria-hidden");
          })
        : document.querySelectorAll(i).forEach(function (g) {
            return g.removeAttribute("aria-hidden");
          })),
      (i = null);
  }
  function o() {}
  function l(g, w) {
    if (!g || !g.length)
      throw new Error(
        "react-modal: No elements were found for selector " + w + "."
      );
  }
  function c(g) {
    var w = g;
    if (typeof w == "string" && n.canUseDOM) {
      var b = document.querySelectorAll(w);
      l(b, w), (w = b);
    }
    return (i = w || i), i;
  }
  function f(g) {
    var w = g || i;
    return w
      ? Array.isArray(w) || w instanceof HTMLCollection || w instanceof NodeList
        ? w
        : [w]
      : ((0, t.default)(
          !1,
          [
            "react-modal: App element is not defined.",
            "Please use `Modal.setAppElement(el)` or set `appElement={el}`.",
            "This is needed so screen readers don't see main content",
            "when modal is opened. It is not recommended, but you can opt-out",
            "by setting `ariaHideApp={false}`.",
          ].join(" ")
        ),
        []);
  }
  function d(g) {
    var w = !0,
      b = !1,
      x = void 0;
    try {
      for (
        var E = f(g)[Symbol.iterator](), P;
        !(w = (P = E.next()).done);
        w = !0
      ) {
        var _ = P.value;
        _.setAttribute("aria-hidden", "true");
      }
    } catch (T) {
      (b = !0), (x = T);
    } finally {
      try {
        !w && E.return && E.return();
      } finally {
        if (b) throw x;
      }
    }
  }
  function p(g) {
    var w = !0,
      b = !1,
      x = void 0;
    try {
      for (
        var E = f(g)[Symbol.iterator](), P;
        !(w = (P = E.next()).done);
        w = !0
      ) {
        var _ = P.value;
        _.removeAttribute("aria-hidden");
      }
    } catch (T) {
      (b = !0), (x = T);
    } finally {
      try {
        !w && E.return && E.return();
      } finally {
        if (b) throw x;
      }
    }
  }
  function m() {
    i = null;
  }
  return Ti;
}
var wo = {},
  kb;
function ZQ() {
  if (kb) return wo;
  (kb = 1),
    Object.defineProperty(wo, "__esModule", { value: !0 }),
    (wo.resetState = r),
    (wo.log = i);
  var e = {},
    t = {};
  function n(f, d) {
    f.classList.remove(d);
  }
  function r() {
    var f = document.getElementsByTagName("html")[0];
    for (var d in e) n(f, e[d]);
    var p = document.body;
    for (var m in t) n(p, t[m]);
    (e = {}), (t = {});
  }
  function i() {}
  var s = function (d, p) {
      return d[p] || (d[p] = 0), (d[p] += 1), p;
    },
    o = function (d, p) {
      return d[p] && (d[p] -= 1), p;
    },
    l = function (d, p, m) {
      m.forEach(function (g) {
        s(p, g), d.add(g);
      });
    },
    c = function (d, p, m) {
      m.forEach(function (g) {
        o(p, g), p[g] === 0 && d.remove(g);
      });
    };
  return (
    (wo.add = function (d, p) {
      return l(
        d.classList,
        d.nodeName.toLowerCase() == "html" ? e : t,
        p.split(" ")
      );
    }),
    (wo.remove = function (d, p) {
      return c(
        d.classList,
        d.nodeName.toLowerCase() == "html" ? e : t,
        p.split(" ")
      );
    }),
    wo
  );
}
var qa = {},
  _b;
function CA() {
  if (_b) return qa;
  (_b = 1),
    Object.defineProperty(qa, "__esModule", { value: !0 }),
    (qa.log = r),
    (qa.resetState = i);
  function e(s, o) {
    if (!(s instanceof o))
      throw new TypeError("Cannot call a class as a function");
  }
  var t = function s() {
      var o = this;
      e(this, s),
        (this.register = function (l) {
          o.openInstances.indexOf(l) === -1 &&
            (o.openInstances.push(l), o.emit("register"));
        }),
        (this.deregister = function (l) {
          var c = o.openInstances.indexOf(l);
          c !== -1 && (o.openInstances.splice(c, 1), o.emit("deregister"));
        }),
        (this.subscribe = function (l) {
          o.subscribers.push(l);
        }),
        (this.emit = function (l) {
          o.subscribers.forEach(function (c) {
            return c(l, o.openInstances.slice());
          });
        }),
        (this.openInstances = []),
        (this.subscribers = []);
    },
    n = new t();
  function r() {
    console.log("portalOpenInstances ----------"),
      console.log(n.openInstances.length),
      n.openInstances.forEach(function (s) {
        return console.log(s);
      }),
      console.log("end portalOpenInstances ----------");
  }
  function i() {
    n = new t();
  }
  return (qa.default = n), qa;
}
var S0 = {},
  Ab;
function XQ() {
  if (Ab) return S0;
  (Ab = 1),
    Object.defineProperty(S0, "__esModule", { value: !0 }),
    (S0.resetState = o),
    (S0.log = l);
  var e = CA(),
    t = n(e);
  function n(d) {
    return d && d.__esModule ? d : { default: d };
  }
  var r = void 0,
    i = void 0,
    s = [];
  function o() {
    for (var d = [r, i], p = 0; p < d.length; p++) {
      var m = d[p];
      m && m.parentNode && m.parentNode.removeChild(m);
    }
    (r = i = null), (s = []);
  }
  function l() {
    console.log("bodyTrap ----------"), console.log(s.length);
    for (var d = [r, i], p = 0; p < d.length; p++) {
      var m = d[p],
        g = m || {};
      console.log(g.nodeName, g.className, g.id);
    }
    console.log("edn bodyTrap ----------");
  }
  function c() {
    s.length !== 0 && s[s.length - 1].focusContent();
  }
  function f(d, p) {
    !r &&
      !i &&
      ((r = document.createElement("div")),
      r.setAttribute("data-react-modal-body-trap", ""),
      (r.style.position = "absolute"),
      (r.style.opacity = "0"),
      r.setAttribute("tabindex", "0"),
      r.addEventListener("focus", c),
      (i = r.cloneNode()),
      i.addEventListener("focus", c)),
      (s = p),
      s.length > 0
        ? (document.body.firstChild !== r &&
            document.body.insertBefore(r, document.body.firstChild),
          document.body.lastChild !== i && document.body.appendChild(i))
        : (r.parentElement && r.parentElement.removeChild(r),
          i.parentElement && i.parentElement.removeChild(i));
  }
  return t.default.subscribe(f), S0;
}
var Tb;
function JQ() {
  return (
    Tb ||
      ((Tb = 1),
      (function (e, t) {
        Object.defineProperty(t, "__esModule", { value: !0 });
        var n =
            Object.assign ||
            function (j) {
              for (var G = 1; G < arguments.length; G++) {
                var u1 = arguments[G];
                for (var e1 in u1)
                  Object.prototype.hasOwnProperty.call(u1, e1) &&
                    (j[e1] = u1[e1]);
              }
              return j;
            },
          r =
            typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
              ? function (j) {
                  return typeof j;
                }
              : function (j) {
                  return j &&
                    typeof Symbol == "function" &&
                    j.constructor === Symbol &&
                    j !== Symbol.prototype
                    ? "symbol"
                    : typeof j;
                },
          i = (function () {
            function j(G, u1) {
              for (var e1 = 0; e1 < u1.length; e1++) {
                var i1 = u1[e1];
                (i1.enumerable = i1.enumerable || !1),
                  (i1.configurable = !0),
                  "value" in i1 && (i1.writable = !0),
                  Object.defineProperty(G, i1.key, i1);
              }
            }
            return function (G, u1, e1) {
              return u1 && j(G.prototype, u1), e1 && j(G, e1), G;
            };
          })(),
          s = E3(),
          o = wA(),
          l = M(o),
          c = KQ(),
          f = T(c),
          d = GQ(),
          p = M(d),
          m = xA(),
          g = T(m),
          w = ZQ(),
          b = T(w),
          x = Rm(),
          E = M(x),
          P = CA(),
          _ = M(P);
        XQ();
        function T(j) {
          if (j && j.__esModule) return j;
          var G = {};
          if (j != null)
            for (var u1 in j)
              Object.prototype.hasOwnProperty.call(j, u1) && (G[u1] = j[u1]);
          return (G.default = j), G;
        }
        function M(j) {
          return j && j.__esModule ? j : { default: j };
        }
        function L(j, G) {
          if (!(j instanceof G))
            throw new TypeError("Cannot call a class as a function");
        }
        function O(j, G) {
          if (!j)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          return G && (typeof G == "object" || typeof G == "function") ? G : j;
        }
        function U(j, G) {
          if (typeof G != "function" && G !== null)
            throw new TypeError(
              "Super expression must either be null or a function, not " +
                typeof G
            );
          (j.prototype = Object.create(G && G.prototype, {
            constructor: {
              value: j,
              enumerable: !1,
              writable: !0,
              configurable: !0,
            },
          })),
            G &&
              (Object.setPrototypeOf
                ? Object.setPrototypeOf(j, G)
                : (j.__proto__ = G));
        }
        var D = {
            overlay: "ReactModal__Overlay",
            content: "ReactModal__Content",
          },
          H = function (G) {
            return G.code === "Tab" || G.keyCode === 9;
          },
          $ = function (G) {
            return G.code === "Escape" || G.keyCode === 27;
          },
          F = 0,
          B = (function (j) {
            U(G, j);
            function G(u1) {
              L(this, G);
              var e1 = O(
                this,
                (G.__proto__ || Object.getPrototypeOf(G)).call(this, u1)
              );
              return (
                (e1.setOverlayRef = function (i1) {
                  (e1.overlay = i1),
                    e1.props.overlayRef && e1.props.overlayRef(i1);
                }),
                (e1.setContentRef = function (i1) {
                  (e1.content = i1),
                    e1.props.contentRef && e1.props.contentRef(i1);
                }),
                (e1.afterClose = function () {
                  var i1 = e1.props,
                    Z = i1.appElement,
                    b1 = i1.ariaHideApp,
                    o1 = i1.htmlOpenClassName,
                    k1 = i1.bodyOpenClassName,
                    Y1 = i1.parentSelector,
                    G1 = (Y1 && Y1().ownerDocument) || document;
                  k1 && b.remove(G1.body, k1),
                    o1 && b.remove(G1.getElementsByTagName("html")[0], o1),
                    b1 && F > 0 && ((F -= 1), F === 0 && g.show(Z)),
                    e1.props.shouldFocusAfterRender &&
                      (e1.props.shouldReturnFocusAfterClose
                        ? (f.returnFocus(e1.props.preventScroll),
                          f.teardownScopedFocus())
                        : f.popWithoutFocus()),
                    e1.props.onAfterClose && e1.props.onAfterClose(),
                    _.default.deregister(e1);
                }),
                (e1.open = function () {
                  e1.beforeOpen(),
                    e1.state.afterOpen && e1.state.beforeClose
                      ? (clearTimeout(e1.closeTimer),
                        e1.setState({ beforeClose: !1 }))
                      : (e1.props.shouldFocusAfterRender &&
                          (f.setupScopedFocus(e1.node), f.markForFocusLater()),
                        e1.setState({ isOpen: !0 }, function () {
                          e1.openAnimationFrame = requestAnimationFrame(
                            function () {
                              e1.setState({ afterOpen: !0 }),
                                e1.props.isOpen &&
                                  e1.props.onAfterOpen &&
                                  e1.props.onAfterOpen({
                                    overlayEl: e1.overlay,
                                    contentEl: e1.content,
                                  });
                            }
                          );
                        }));
                }),
                (e1.close = function () {
                  e1.props.closeTimeoutMS > 0
                    ? e1.closeWithTimeout()
                    : e1.closeWithoutTimeout();
                }),
                (e1.focusContent = function () {
                  return (
                    e1.content &&
                    !e1.contentHasFocus() &&
                    e1.content.focus({ preventScroll: !0 })
                  );
                }),
                (e1.closeWithTimeout = function () {
                  var i1 = Date.now() + e1.props.closeTimeoutMS;
                  e1.setState({ beforeClose: !0, closesAt: i1 }, function () {
                    e1.closeTimer = setTimeout(
                      e1.closeWithoutTimeout,
                      e1.state.closesAt - Date.now()
                    );
                  });
                }),
                (e1.closeWithoutTimeout = function () {
                  e1.setState(
                    {
                      beforeClose: !1,
                      isOpen: !1,
                      afterOpen: !1,
                      closesAt: null,
                    },
                    e1.afterClose
                  );
                }),
                (e1.handleKeyDown = function (i1) {
                  H(i1) && (0, p.default)(e1.content, i1),
                    e1.props.shouldCloseOnEsc &&
                      $(i1) &&
                      (i1.stopPropagation(), e1.requestClose(i1));
                }),
                (e1.handleOverlayOnClick = function (i1) {
                  e1.shouldClose === null && (e1.shouldClose = !0),
                    e1.shouldClose &&
                      e1.props.shouldCloseOnOverlayClick &&
                      (e1.ownerHandlesClose()
                        ? e1.requestClose(i1)
                        : e1.focusContent()),
                    (e1.shouldClose = null);
                }),
                (e1.handleContentOnMouseUp = function () {
                  e1.shouldClose = !1;
                }),
                (e1.handleOverlayOnMouseDown = function (i1) {
                  !e1.props.shouldCloseOnOverlayClick &&
                    i1.target == e1.overlay &&
                    i1.preventDefault();
                }),
                (e1.handleContentOnClick = function () {
                  e1.shouldClose = !1;
                }),
                (e1.handleContentOnMouseDown = function () {
                  e1.shouldClose = !1;
                }),
                (e1.requestClose = function (i1) {
                  return e1.ownerHandlesClose() && e1.props.onRequestClose(i1);
                }),
                (e1.ownerHandlesClose = function () {
                  return e1.props.onRequestClose;
                }),
                (e1.shouldBeClosed = function () {
                  return !e1.state.isOpen && !e1.state.beforeClose;
                }),
                (e1.contentHasFocus = function () {
                  return (
                    document.activeElement === e1.content ||
                    e1.content.contains(document.activeElement)
                  );
                }),
                (e1.buildClassName = function (i1, Z) {
                  var b1 =
                      (typeof Z > "u" ? "undefined" : r(Z)) === "object"
                        ? Z
                        : {
                            base: D[i1],
                            afterOpen: D[i1] + "--after-open",
                            beforeClose: D[i1] + "--before-close",
                          },
                    o1 = b1.base;
                  return (
                    e1.state.afterOpen && (o1 = o1 + " " + b1.afterOpen),
                    e1.state.beforeClose && (o1 = o1 + " " + b1.beforeClose),
                    typeof Z == "string" && Z ? o1 + " " + Z : o1
                  );
                }),
                (e1.attributesFromObject = function (i1, Z) {
                  return Object.keys(Z).reduce(function (b1, o1) {
                    return (b1[i1 + "-" + o1] = Z[o1]), b1;
                  }, {});
                }),
                (e1.state = { afterOpen: !1, beforeClose: !1 }),
                (e1.shouldClose = null),
                (e1.moveFromContentToOverlay = null),
                e1
              );
            }
            return (
              i(G, [
                {
                  key: "componentDidMount",
                  value: function () {
                    this.props.isOpen && this.open();
                  },
                },
                {
                  key: "componentDidUpdate",
                  value: function (e1, i1) {
                    this.props.isOpen && !e1.isOpen
                      ? this.open()
                      : !this.props.isOpen && e1.isOpen && this.close(),
                      this.props.shouldFocusAfterRender &&
                        this.state.isOpen &&
                        !i1.isOpen &&
                        this.focusContent();
                  },
                },
                {
                  key: "componentWillUnmount",
                  value: function () {
                    this.state.isOpen && this.afterClose(),
                      clearTimeout(this.closeTimer),
                      cancelAnimationFrame(this.openAnimationFrame);
                  },
                },
                {
                  key: "beforeOpen",
                  value: function () {
                    var e1 = this.props,
                      i1 = e1.appElement,
                      Z = e1.ariaHideApp,
                      b1 = e1.htmlOpenClassName,
                      o1 = e1.bodyOpenClassName,
                      k1 = e1.parentSelector,
                      Y1 = (k1 && k1().ownerDocument) || document;
                    o1 && b.add(Y1.body, o1),
                      b1 && b.add(Y1.getElementsByTagName("html")[0], b1),
                      Z && ((F += 1), g.hide(i1)),
                      _.default.register(this);
                  },
                },
                {
                  key: "render",
                  value: function () {
                    var e1 = this.props,
                      i1 = e1.id,
                      Z = e1.className,
                      b1 = e1.overlayClassName,
                      o1 = e1.defaultStyles,
                      k1 = e1.children,
                      Y1 = Z ? {} : o1.content,
                      G1 = b1 ? {} : o1.overlay;
                    if (this.shouldBeClosed()) return null;
                    var M1 = {
                        ref: this.setOverlayRef,
                        className: this.buildClassName("overlay", b1),
                        style: n({}, G1, this.props.style.overlay),
                        onClick: this.handleOverlayOnClick,
                        onMouseDown: this.handleOverlayOnMouseDown,
                      },
                      Q1 = n(
                        {
                          id: i1,
                          ref: this.setContentRef,
                          style: n({}, Y1, this.props.style.content),
                          className: this.buildClassName("content", Z),
                          tabIndex: "-1",
                          onKeyDown: this.handleKeyDown,
                          onMouseDown: this.handleContentOnMouseDown,
                          onMouseUp: this.handleContentOnMouseUp,
                          onClick: this.handleContentOnClick,
                          role: this.props.role,
                          "aria-label": this.props.contentLabel,
                        },
                        this.attributesFromObject(
                          "aria",
                          n({ modal: !0 }, this.props.aria)
                        ),
                        this.attributesFromObject(
                          "data",
                          this.props.data || {}
                        ),
                        { "data-testid": this.props.testId }
                      ),
                      re = this.props.contentElement(Q1, k1);
                    return this.props.overlayElement(M1, re);
                  },
                },
              ]),
              G
            );
          })(s.Component);
        (B.defaultProps = {
          style: { overlay: {}, content: {} },
          defaultStyles: {},
        }),
          (B.propTypes = {
            isOpen: l.default.bool.isRequired,
            defaultStyles: l.default.shape({
              content: l.default.object,
              overlay: l.default.object,
            }),
            style: l.default.shape({
              content: l.default.object,
              overlay: l.default.object,
            }),
            className: l.default.oneOfType([
              l.default.string,
              l.default.object,
            ]),
            overlayClassName: l.default.oneOfType([
              l.default.string,
              l.default.object,
            ]),
            parentSelector: l.default.func,
            bodyOpenClassName: l.default.string,
            htmlOpenClassName: l.default.string,
            ariaHideApp: l.default.bool,
            appElement: l.default.oneOfType([
              l.default.instanceOf(E.default),
              l.default.instanceOf(x.SafeHTMLCollection),
              l.default.instanceOf(x.SafeNodeList),
              l.default.arrayOf(l.default.instanceOf(E.default)),
            ]),
            onAfterOpen: l.default.func,
            onAfterClose: l.default.func,
            onRequestClose: l.default.func,
            closeTimeoutMS: l.default.number,
            shouldFocusAfterRender: l.default.bool,
            shouldCloseOnOverlayClick: l.default.bool,
            shouldReturnFocusAfterClose: l.default.bool,
            preventScroll: l.default.bool,
            role: l.default.string,
            contentLabel: l.default.string,
            aria: l.default.object,
            data: l.default.object,
            children: l.default.node,
            shouldCloseOnEsc: l.default.bool,
            overlayRef: l.default.func,
            contentRef: l.default.func,
            id: l.default.string,
            overlayElement: l.default.func,
            contentElement: l.default.func,
            testId: l.default.string,
          }),
          (t.default = B),
          (e.exports = t.default);
      })(nd, nd.exports)),
    nd.exports
  );
}
function SA() {
  var e = this.constructor.getDerivedStateFromProps(this.props, this.state);
  e != null && this.setState(e);
}
function EA(e) {
  function t(n) {
    var r = this.constructor.getDerivedStateFromProps(e, n);
    return r ?? null;
  }
  this.setState(t.bind(this));
}
function kA(e, t) {
  try {
    var n = this.props,
      r = this.state;
    (this.props = e),
      (this.state = t),
      (this.__reactInternalSnapshotFlag = !0),
      (this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(n, r));
  } finally {
    (this.props = n), (this.state = r);
  }
}
SA.__suppressDeprecationWarning = !0;
EA.__suppressDeprecationWarning = !0;
kA.__suppressDeprecationWarning = !0;
function eZ(e) {
  var t = e.prototype;
  if (!t || !t.isReactComponent)
    throw new Error("Can only polyfill class components");
  if (
    typeof e.getDerivedStateFromProps != "function" &&
    typeof t.getSnapshotBeforeUpdate != "function"
  )
    return e;
  var n = null,
    r = null,
    i = null;
  if (
    (typeof t.componentWillMount == "function"
      ? (n = "componentWillMount")
      : typeof t.UNSAFE_componentWillMount == "function" &&
        (n = "UNSAFE_componentWillMount"),
    typeof t.componentWillReceiveProps == "function"
      ? (r = "componentWillReceiveProps")
      : typeof t.UNSAFE_componentWillReceiveProps == "function" &&
        (r = "UNSAFE_componentWillReceiveProps"),
    typeof t.componentWillUpdate == "function"
      ? (i = "componentWillUpdate")
      : typeof t.UNSAFE_componentWillUpdate == "function" &&
        (i = "UNSAFE_componentWillUpdate"),
    n !== null || r !== null || i !== null)
  ) {
    var s = e.displayName || e.name,
      o =
        typeof e.getDerivedStateFromProps == "function"
          ? "getDerivedStateFromProps()"
          : "getSnapshotBeforeUpdate()";
    throw Error(
      `Unsafe legacy lifecycles will not be called for components using new component APIs.

` +
        s +
        " uses " +
        o +
        " but also contains the following legacy lifecycles:" +
        (n !== null
          ? `
  ` + n
          : "") +
        (r !== null
          ? `
  ` + r
          : "") +
        (i !== null
          ? `
  ` + i
          : "") +
        `

The above lifecycles should be removed. Learn more about this warning here:
https://fb.me/react-async-component-lifecycle-hooks`
    );
  }
  if (
    (typeof e.getDerivedStateFromProps == "function" &&
      ((t.componentWillMount = SA), (t.componentWillReceiveProps = EA)),
    typeof t.getSnapshotBeforeUpdate == "function")
  ) {
    if (typeof t.componentDidUpdate != "function")
      throw new Error(
        "Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype"
      );
    t.componentWillUpdate = kA;
    var l = t.componentDidUpdate;
    t.componentDidUpdate = function (f, d, p) {
      var m = this.__reactInternalSnapshotFlag
        ? this.__reactInternalSnapshot
        : p;
      l.call(this, f, d, m);
    };
  }
  return e;
}
const tZ = Object.freeze(
    Object.defineProperty(
      { __proto__: null, polyfill: eZ },
      Symbol.toStringTag,
      { value: "Module" }
    )
  ),
  nZ = nC(tZ);
var Pb;
function rZ() {
  if (Pb) return Es;
  (Pb = 1),
    Object.defineProperty(Es, "__esModule", { value: !0 }),
    (Es.bodyOpenClassName = Es.portalClassName = void 0);
  var e =
      Object.assign ||
      function ($) {
        for (var F = 1; F < arguments.length; F++) {
          var B = arguments[F];
          for (var j in B)
            Object.prototype.hasOwnProperty.call(B, j) && ($[j] = B[j]);
        }
        return $;
      },
    t = (function () {
      function $(F, B) {
        for (var j = 0; j < B.length; j++) {
          var G = B[j];
          (G.enumerable = G.enumerable || !1),
            (G.configurable = !0),
            "value" in G && (G.writable = !0),
            Object.defineProperty(F, G.key, G);
        }
      }
      return function (F, B, j) {
        return B && $(F.prototype, B), j && $(F, j), F;
      };
    })(),
    n = E3(),
    r = x(n),
    i = vC(),
    s = x(i),
    o = wA(),
    l = x(o),
    c = JQ(),
    f = x(c),
    d = xA(),
    p = b(d),
    m = Rm(),
    g = x(m),
    w = nZ;
  function b($) {
    if ($ && $.__esModule) return $;
    var F = {};
    if ($ != null)
      for (var B in $)
        Object.prototype.hasOwnProperty.call($, B) && (F[B] = $[B]);
    return (F.default = $), F;
  }
  function x($) {
    return $ && $.__esModule ? $ : { default: $ };
  }
  function E($, F) {
    if (!($ instanceof F))
      throw new TypeError("Cannot call a class as a function");
  }
  function P($, F) {
    if (!$)
      throw new ReferenceError(
        "this hasn't been initialised - super() hasn't been called"
      );
    return F && (typeof F == "object" || typeof F == "function") ? F : $;
  }
  function _($, F) {
    if (typeof F != "function" && F !== null)
      throw new TypeError(
        "Super expression must either be null or a function, not " + typeof F
      );
    ($.prototype = Object.create(F && F.prototype, {
      constructor: { value: $, enumerable: !1, writable: !0, configurable: !0 },
    })),
      F &&
        (Object.setPrototypeOf
          ? Object.setPrototypeOf($, F)
          : ($.__proto__ = F));
  }
  var T = (Es.portalClassName = "ReactModalPortal"),
    M = (Es.bodyOpenClassName = "ReactModal__Body--open"),
    L = m.canUseDOM && s.default.createPortal !== void 0,
    O = function (F) {
      return document.createElement(F);
    },
    U = function () {
      return L
        ? s.default.createPortal
        : s.default.unstable_renderSubtreeIntoContainer;
    };
  function D($) {
    return $();
  }
  var H = (function ($) {
    _(F, $);
    function F() {
      var B, j, G, u1;
      E(this, F);
      for (var e1 = arguments.length, i1 = Array(e1), Z = 0; Z < e1; Z++)
        i1[Z] = arguments[Z];
      return (
        (u1 =
          ((j =
            ((G = P(
              this,
              (B = F.__proto__ || Object.getPrototypeOf(F)).call.apply(
                B,
                [this].concat(i1)
              )
            )),
            G)),
          (G.removePortal = function () {
            !L && s.default.unmountComponentAtNode(G.node);
            var b1 = D(G.props.parentSelector);
            b1 && b1.contains(G.node)
              ? b1.removeChild(G.node)
              : console.warn(
                  'React-Modal: "parentSelector" prop did not returned any DOM element. Make sure that the parent element is unmounted to avoid any memory leaks.'
                );
          }),
          (G.portalRef = function (b1) {
            G.portal = b1;
          }),
          (G.renderPortal = function (b1) {
            var o1 = U(),
              k1 = o1(
                G,
                r.default.createElement(
                  f.default,
                  e({ defaultStyles: F.defaultStyles }, b1)
                ),
                G.node
              );
            G.portalRef(k1);
          }),
          j)),
        P(G, u1)
      );
    }
    return (
      t(
        F,
        [
          {
            key: "componentDidMount",
            value: function () {
              if (m.canUseDOM) {
                L || (this.node = O("div")),
                  (this.node.className = this.props.portalClassName);
                var j = D(this.props.parentSelector);
                j.appendChild(this.node), !L && this.renderPortal(this.props);
              }
            },
          },
          {
            key: "getSnapshotBeforeUpdate",
            value: function (j) {
              var G = D(j.parentSelector),
                u1 = D(this.props.parentSelector);
              return { prevParent: G, nextParent: u1 };
            },
          },
          {
            key: "componentDidUpdate",
            value: function (j, G, u1) {
              if (m.canUseDOM) {
                var e1 = this.props,
                  i1 = e1.isOpen,
                  Z = e1.portalClassName;
                j.portalClassName !== Z && (this.node.className = Z);
                var b1 = u1.prevParent,
                  o1 = u1.nextParent;
                o1 !== b1 &&
                  (b1.removeChild(this.node), o1.appendChild(this.node)),
                  !(!j.isOpen && !i1) && !L && this.renderPortal(this.props);
              }
            },
          },
          {
            key: "componentWillUnmount",
            value: function () {
              if (!(!m.canUseDOM || !this.node || !this.portal)) {
                var j = this.portal.state,
                  G = Date.now(),
                  u1 =
                    j.isOpen &&
                    this.props.closeTimeoutMS &&
                    (j.closesAt || G + this.props.closeTimeoutMS);
                u1
                  ? (j.beforeClose || this.portal.closeWithTimeout(),
                    setTimeout(this.removePortal, u1 - G))
                  : this.removePortal();
              }
            },
          },
          {
            key: "render",
            value: function () {
              if (!m.canUseDOM || !L) return null;
              !this.node && L && (this.node = O("div"));
              var j = U();
              return j(
                r.default.createElement(
                  f.default,
                  e(
                    { ref: this.portalRef, defaultStyles: F.defaultStyles },
                    this.props
                  )
                ),
                this.node
              );
            },
          },
        ],
        [
          {
            key: "setAppElement",
            value: function (j) {
              p.setElement(j);
            },
          },
        ]
      ),
      F
    );
  })(n.Component);
  return (
    (H.propTypes = {
      isOpen: l.default.bool.isRequired,
      style: l.default.shape({
        content: l.default.object,
        overlay: l.default.object,
      }),
      portalClassName: l.default.string,
      bodyOpenClassName: l.default.string,
      htmlOpenClassName: l.default.string,
      className: l.default.oneOfType([
        l.default.string,
        l.default.shape({
          base: l.default.string.isRequired,
          afterOpen: l.default.string.isRequired,
          beforeClose: l.default.string.isRequired,
        }),
      ]),
      overlayClassName: l.default.oneOfType([
        l.default.string,
        l.default.shape({
          base: l.default.string.isRequired,
          afterOpen: l.default.string.isRequired,
          beforeClose: l.default.string.isRequired,
        }),
      ]),
      appElement: l.default.oneOfType([
        l.default.instanceOf(g.default),
        l.default.instanceOf(m.SafeHTMLCollection),
        l.default.instanceOf(m.SafeNodeList),
        l.default.arrayOf(l.default.instanceOf(g.default)),
      ]),
      onAfterOpen: l.default.func,
      onRequestClose: l.default.func,
      closeTimeoutMS: l.default.number,
      ariaHideApp: l.default.bool,
      shouldFocusAfterRender: l.default.bool,
      shouldCloseOnOverlayClick: l.default.bool,
      shouldReturnFocusAfterClose: l.default.bool,
      preventScroll: l.default.bool,
      parentSelector: l.default.func,
      aria: l.default.object,
      data: l.default.object,
      role: l.default.string,
      contentLabel: l.default.string,
      shouldCloseOnEsc: l.default.bool,
      overlayRef: l.default.func,
      contentRef: l.default.func,
      id: l.default.string,
      overlayElement: l.default.func,
      contentElement: l.default.func,
    }),
    (H.defaultProps = {
      isOpen: !1,
      portalClassName: T,
      bodyOpenClassName: M,
      role: "dialog",
      ariaHideApp: !0,
      closeTimeoutMS: 0,
      shouldFocusAfterRender: !0,
      shouldCloseOnEsc: !0,
      shouldCloseOnOverlayClick: !0,
      shouldReturnFocusAfterClose: !0,
      preventScroll: !1,
      parentSelector: function () {
        return document.body;
      },
      overlayElement: function (F, B) {
        return r.default.createElement("div", F, B);
      },
      contentElement: function (F, B) {
        return r.default.createElement("div", F, B);
      },
    }),
    (H.defaultStyles = {
      overlay: {
        position: "fixed",
        top: 0,
        left: 0,
        right: 0,
        bottom: 0,
        backgroundColor: "rgba(255, 255, 255, 0.75)",
      },
      content: {
        position: "absolute",
        top: "40px",
        left: "40px",
        right: "40px",
        bottom: "40px",
        border: "1px solid #ccc",
        background: "#fff",
        overflow: "auto",
        WebkitOverflowScrolling: "touch",
        borderRadius: "4px",
        outline: "none",
        padding: "20px",
      },
    }),
    (0, w.polyfill)(H),
    (Es.default = H),
    Es
  );
}
var Mb;
function iZ() {
  return (
    Mb ||
      ((Mb = 1),
      (function (e, t) {
        Object.defineProperty(t, "__esModule", { value: !0 });
        var n = rZ(),
          r = i(n);
        function i(s) {
          return s && s.__esModule ? s : { default: s };
        }
        (t.default = r.default), (e.exports = t.default);
      })(td, td.exports)),
    td.exports
  );
}
var sZ = iZ();
const Lm = qs(sZ),
  _A = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 9,
        height: 9,
        fill: "none",
        ...e,
      },
      N.createElement("path", {
        fill: "currentColor",
        fillRule: "evenodd",
        d: "M.23 8.77a.8.8 0 0 0 1.14 0L4.5 5.63l3.13 3.14a.8.8 0 0 0 1.14-1.14L5.63 4.5l3.14-3.13A.8.8 0 0 0 7.63.23L4.5 3.37 1.37.23A.8.8 0 0 0 .23 1.37L3.37 4.5.23 7.63a.8.8 0 0 0 0 1.14Z",
        clipRule: "evenodd",
      })
    ),
  cf = ({ children: e, isOpen: t, close: n, closeButton: r, title: i, ...s }) =>
    v.jsx(Lm, {
      isOpen: t,
      onRequestClose: n,
      closeTimeoutMS: 300,
      overlayClassName: "fixed inset-0 w-full h-full z-30 bg-black/50",
      ...s,
      children: v.jsxs("div", {
        className: "p-4",
        children: [
          r || i
            ? v.jsxs("div", {
                className:
                  "flex justify-between items-center text-[22px] leading-[27px] font-bold mb-4",
                children: [
                  i,
                  v.jsx("button", {
                    className:
                      "w-[27px] h-[27px] grid place-content-center rounded-full bg-blue-400",
                    onClick: n,
                    children: v.jsx(_A, {}),
                  }),
                ],
              })
            : null,
          e,
        ],
      }),
    }),
  oZ = ({ rows: e }) =>
    v.jsx("ul", {
      className: "flex flex-col gap-[1px] rounded-lg overflow-hidden",
      children: e.map(({ header: t, name: n, chance: r }) =>
        v.jsxs(
          "li",
          {
            className:
              "flex items-center bg-gray-700 text-[12px] leading-[15px] h-10 px-3",
            children: [
              v.jsx("span", {
                className: "text-gray-300 w-[100px] pr-3",
                children: t,
              }),
              v.jsx("span", {
                className: "font-bold pl-3 pr-1.5",
                children: n,
              }),
              v.jsxs("div", {
                className:
                  " rounded-full text-blue-200 py-[3px] px-[5px] text-[9px] leading-[11px] bg-blue-200/10",
                children: [r / 10, "%"],
              }),
            ],
          },
          t
        )
      ),
    }),
  aZ = ({ onClose: e, ...t }) => {
    const {
        animationLink: n,
        inventoryId: r,
        backDrop: i = {},
        model: s,
        name: o,
        nftId: l = "",
        pattern: c = {},
        sellPrice: f = 0,
      } = t,
      d = (s == null ? void 0 : s.name) || o,
      { t: p } = Ze(),
      [m, { isLoading: g }] = Wp(),
      [w, { isLoading: b }] = sz(),
      x = v2(),
      E = N.useCallback(
        async (T) => {
          try {
            const {
              data: { success: M },
            } = await T({ inventoryId: r });
            M &&
              (x(zr.util.invalidateTags(["Profile", "History", "Inventory"])),
              e());
          } catch (M) {
            console.log(M);
          }
        },
        [r]
      ),
      P = N.useCallback(() => E(m), [E]),
      _ = N.useCallback(() => E(w), [E]);
    return v.jsxs("div", {
      className: "flex flex-col gap-4",
      children: [
        v.jsxs("div", {
          className: "-mt-4 -mx-4 relative",
          children: [
            v.jsx(sA, {
              nftId: l,
              animationLink: n,
              name: d,
              backdrop: i,
              iconLink: c == null ? void 0 : c.iconLink,
              rounded: !1,
              modelAnimation: s == null ? void 0 : s.animationLink,
            }),
            v.jsx("button", {
              className:
                "absolute top-3 right-3 w-7 h-7 grid place-content-center rounded-full bg-white/[0.16]",
              onClick: e,
              children: v.jsx(_A, {}),
            }),
          ],
        }),
        s &&
          v.jsx(oZ, {
            rows: [
              {
                header: p("inventory.modal.model"),
                name: s.name,
                chance: s.chance,
              },
              {
                header: p("inventory.modal.backdrop"),
                name: i.name,
                chance: i.chance,
              },
              {
                header: p("inventory.modal.Symbol"),
                name: c.name,
                chance: c.chance,
              },
            ],
          }),
        v.jsxs("div", {
          className: "flex flex-col gap-2 pt-2 pb-[35px]",
          children: [
            v.jsx(He, {
              classes: "h-10 col-start-1 -col-end-1",
              onClick: P,
              loading: g,
              disabled: b,
              children: v.jsxs("div", {
                className: "flex gap-1",
                children: [
                  p("inventory.modal.button.sell"),
                  v.jsx(zt, { width: 14, className: "text-white" }),
                  p("pretty.number.precision.2", { value: Jt.fromNano(f) }),
                ],
              }),
            }),
            v.jsx(He, {
              classes: "h-10 col-start-1 -col-end-1 bg-gray-350",
              onClick: _,
              loading: b,
              disabled: g,
              children: p("inventory.modal.button.withdraw"),
            }),
            v.jsxs(Zs, {
              className: "flex items-center justify-between gap-1",
              children: [
                v.jsx("div", {
                  children: v.jsx(Ks, {
                    i18nKey: "trade.withdraw.information.text",
                    components: {
                      tag: v.jsx("button", {
                        className: "text-blue-200 inline",
                        onClick: wr(se.EXTERNAL.TG_ITEMS_BOT),
                        children: j3,
                      }),
                    },
                  }),
                }),
                v.jsx(He, {
                  classes: "text-white h-7",
                  textClasses: "text-[12px] leading-[15px] text-nowrap",
                  text: p("trade.withdraw.information.button"),
                  onClick: wr(se.EXTERNAL.TG_ITEMS_BOT),
                }),
              ],
            }),
          ],
        }),
      ],
    });
  },
  df = N.memo(
    ({
      onClick: e,
      animationLink: t,
      price: n,
      nftId: r,
      pattern: i,
      isSelected: s = !1,
      backDrop: o = {},
    }) =>
      v.jsx(Sn.button, {
        type: "button",
        onClick: e,
        initial: { scale: 0.95, opacity: 0 },
        animate: { scale: 1, opacity: 1 },
        whileTap: { scale: J2 },
        className: me(
          "rounded-[10px] bg-gray-600",
          s && "border-2 border-blue-200 -m-0.5"
        ),
        children: v.jsx(sf, {
          pattern: i,
          nftId: r,
          animationLink: t,
          backdrop: o,
          preset: h2.large,
          price: n,
          priceBadge: !0,
        }),
      })
  );
df.displayName = "TradeCard";
const lZ = () => {
    const { t: e } = Ze(),
      { inventoryList: t, isLoading: n } = lE(),
      [r, i] = N.useState(null),
      { visibleItems: s, isDone: o, loaderRef: l } = Wi({ items: t });
    return n
      ? v.jsx(Fn, { width: 20, height: 20, className: "animate-spin mx-auto" })
      : v.jsxs("div", {
          className: "flex flex-col gap-4",
          children: [
            v.jsxs(Zs, {
              className: "flex items-center justify-between gap-3",
              children: [
                v.jsx("div", {
                  children: v.jsx(Ks, {
                    i18nKey: "deposit.information.text",
                    components: {
                      tag: v.jsx("button", {
                        className: "text-blue-200 inline",
                        onClick: wr(se.EXTERNAL.TG_ITEMS_BOT),
                        children: j3,
                      }),
                    },
                  }),
                }),
                v.jsx(He, {
                  classes:
                    "px-3 text-white text-[12px] leading-[15px] text-nowrap",
                  text: e("deposit.information.button"),
                  onClick: wr(se.EXTERNAL.TG_ITEMS_BOT),
                }),
              ],
            }),
            v.jsxs("div", {
              className: "grid grid-cols-3 gap-2",
              children: [
                v.jsx(zQ, { t: e }),
                s == null
                  ? void 0
                  : s.map(({ inventoryId: c, gift: f }) => {
                      var d;
                      return v.jsx(
                        df,
                        {
                          onClick: () => i({ inventoryId: c, ...f }),
                          pattern: f.pattern,
                          nftId: f.nftId,
                          animationLink:
                            ((d = f.model) == null
                              ? void 0
                              : d.animationLink) || f.animationLink,
                          preset: h2.large,
                          price: f.sellPrice,
                          backDrop: f.backDrop,
                        },
                        c
                      );
                    }),
                !o &&
                  v.jsx("div", {
                    ref: l,
                    className:
                      "grid col-start-1 -col-end-1 justify-self-center",
                    children: v.jsx(Fn, {
                      width: 20,
                      height: 20,
                      className: "animate-spin",
                    }),
                  }),
              ],
            }),
            v.jsx(cf, {
              isOpen: !!r,
              close: () => i(null),
              children: v.jsx(aZ, { ...r, onClose: () => i(null) }),
            }),
          ],
        });
  },
  uZ = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 33,
        height: 32,
        fill: "none",
        viewBox: "0 0 33 32",
        ...e,
      },
      N.createElement("path", {
        fill: "#4DB2FF",
        d: "M19 1.82c.15-.87.99-1.46 1.84-1.22A16 16 0 1 1 1.69 9.94c.34-.82 1.32-1.12 2.1-.7.78.41 1.06 1.38.75 2.2a12.8 12.8 0 1 0 15.74-7.67c-.85-.26-1.43-1.08-1.28-1.95Z",
      })
    ),
  cZ = () =>
    v.jsx("div", {
      className: "absolute inset-0 grid place-content-center",
      children: v.jsx(uZ, { width: 55, height: 55, className: "animate-spin" }),
    }),
  dZ = () => {
    const { t: e } = Ze();
    return v.jsx("div", {
      className: "flex flex-col",
      children: v.jsxs("div", {
        className: "p-4",
        children: [
          v.jsxs(Zs, {
            className: "flex flex-col gap-3",
            children: [
              v.jsx("div", {
                children: v.jsx(Ks, {
                  i18nKey: "trade.withdraw.information.text",
                  components: {
                    tag: v.jsx("button", {
                      className: "text-blue-200 inline",
                      onClick: wr(se.EXTERNAL.TG_ITEMS_BOT),
                      children: j3,
                    }),
                  },
                }),
              }),
              v.jsx(He, {
                classes: "h-[40px] text-white",
                text: e("trade.withdraw.information.button"),
                onClick: wr(se.EXTERNAL.TG_ITEMS_BOT),
              }),
            ],
          }),
          v.jsx(ua, {}),
        ],
      }),
    });
  },
  AA = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 16,
        height: 16,
        fill: "none",
        viewBox: "0 0 16 16",
        ...e,
      },
      N.createElement("path", {
        fill: "currentColor",
        fillRule: "evenodd",
        d: "M8 1.02a6.98 6.98 0 1 0 0 13.96A6.98 6.98 0 0 0 8 1.02ZM0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm5.1-2.9c.2-.2.52-.2.72 0L8 7.28l2.18-2.18a.5.5 0 0 1 .72.72L8.72 8l2.18 2.18a.5.5 0 1 1-.72.72L8 8.72 5.82 10.9a.5.5 0 1 1-.72-.72L7.28 8 5.1 5.82a.5.5 0 0 1 0-.72Z",
        clipRule: "evenodd",
      })
    ),
  No = { FIELDS: "fields", GIFTS: "gifts" },
  Tr = { CLASSIC: "classic", PRIME: "prime" },
  fZ = [
    { value: 300, label: "giveaway.form.fields.duration.select.5" },
    { value: 900, label: "giveaway.form.fields.duration.select.15" },
    { value: 1800, label: "giveaway.form.fields.duration.select.30" },
    { value: 3600, label: "giveaway.form.fields.duration.select.60" },
    { value: 7200, label: "giveaway.form.fields.duration.select.120" },
    { value: 10800, label: "giveaway.form.fields.duration.select.180" },
    { value: 21600, label: "giveaway.form.fields.duration.select.360" },
    { value: 43200, label: "giveaway.form.fields.duration.select.720" },
    { value: 86400, label: "giveaway.form.fields.duration.select.1440" },
    { value: 259200, label: "giveaway.form.fields.duration.select.259200" },
  ],
  os = ({
    media: e,
    title: t,
    desc: n,
    mediaClasses: r,
    titleClasses: i,
    descClasses: s,
    containerClasses: o,
    ...l
  }) =>
    v.jsxs("div", {
      className: me("flex items-center gap-2 overflow-hidden", o),
      ...l,
      children: [
        v.jsx("div", {
          className: me("h-8 w-8 flex items-center justify-center shrink-0", r),
          children: e,
        }),
        v.jsxs("div", {
          className: "flex flex-col grow overflow-hidden",
          children: [
            v.jsx("div", {
              className: me("text-[14px] leading-[17px] font-bold truncate", i),
              children: t,
            }),
            v.jsx("div", {
              className: me(
                "text-[12px] leading-[15px] capitalize text-gray-300 truncate",
                s
              ),
              children: n,
            }),
          ],
        }),
      ],
    }),
  hZ = ({ price: e, isSalePrice: t = !1 }) => {
    const n = N.useMemo(
        () => Math.floor(Number(Jt.fromNano(e)) * 100) / 100,
        [e]
      ),
      r = parseFloat((n * 10).toFixed(2));
    return v.jsxs("div", {
      className: "flex items-center gap-1 flex-nowrap",
      children: [
        v.jsx(zt, { width: 12, className: "text-blue-200" }),
        t
          ? v.jsxs(v.Fragment, {
              children: [
                v.jsx("span", {
                  className:
                    "text-[12px] leading-[14px] text-gray-300 font-bold line-through",
                  children: r,
                }),
                v.jsx("span", {
                  className:
                    "text-[12px] leading-[14px] font-bold text-blue-300",
                  children: n,
                }),
              ],
            })
          : v.jsx("span", {
              className: "text-[12px] leading-[14px] font-bold",
              children: n,
            }),
      ],
    });
  },
  TA = N.memo(
    ({
      nftId: e,
      price: t,
      onRemove: n,
      animationLink: r,
      name: i,
      itemId: s,
      mode: o,
      backDrop: l = {},
    }) => {
      const { centerColor: c = "#293440", edgeColor: f = "#293440" } = l,
        d = o === Tr.PRIME;
      return v.jsxs("div", {
        className:
          "flex items-center justify-between gap-x-[30px] pl-1.5 pr-3 py-1.5 bg-gray-700",
        children: [
          v.jsx(os, {
            containerClasses: "flex-1",
            media: v.jsx("div", {
              style: {
                background: `radial-gradient(50% 50% at 50% 50%, ${c} 0%, ${f} 100%)`,
              },
              className: "grid place-items-center w-8 h-8 rounded shrink-0",
              children: v.jsx(ii, { loop: !1, path: r, size: 20 }),
            }),
            title: i,
            desc: e && `#${e}`,
          }),
          v.jsxs("div", {
            className: "flex items-center justify-between flex-1",
            children: [
              v.jsx(hZ, { price: t, isSalePrice: d }),
              v.jsx("button", {
                onClick: () => n(s),
                className: "text-red-300",
                children: v.jsx(AA, { width: 20, height: 20 }),
              }),
            ],
          }),
        ],
      });
    }
  );
TA.displayName = "GiftsTableItem";
const PA = ({ selectedItems: e, setSelectedItems: t, mode: n }) => {
    const { t: r } = Ze(),
      { visibleItems: i, isDone: s, loaderRef: o } = Wi({ items: e }),
      l = (c) => {
        t((f) => f.filter((d) => d.itemId !== c));
      };
    return e != null && e.length
      ? v.jsxs("div", {
          className:
            "w-full rounded-lg flex flex-col overflow-hidden max-h-[300px]",
          children: [
            v.jsxs("div", {
              className:
                "w-full px-3 py-1.5 gap-6 flex items-center justify-between bg-gray-600",
              children: [
                v.jsx("span", {
                  className:
                    "text-[12px] font-bold leading-[15px] text-gray-300 flex-1",
                  children: r("modal.gifts.info"),
                }),
                v.jsxs("div", {
                  className: "flex items-center justify-between flex-1",
                  children: [
                    v.jsx("span", {
                      className:
                        "text-[12px] font-bold leading-[15px] text-gray-300",
                      children: r("modal.gifts.price"),
                    }),
                    v.jsx("span", {
                      className:
                        "text-[12px] font-bold leading-[15px] text-gray-300",
                      children: r("modal.gifts.action"),
                    }),
                  ],
                }),
              ],
            }),
            v.jsxs("div", {
              className: "flex flex-col gap-[1px] overflow-auto",
              children: [
                i == null
                  ? void 0
                  : i.map((c) => {
                      var p;
                      const { gift: f, itemId: d } = c;
                      return v.jsx(
                        TA,
                        {
                          mode: n,
                          nftId: f == null ? void 0 : f.nftId,
                          price: f == null ? void 0 : f.buyPrice,
                          backDrop: f == null ? void 0 : f.backDrop,
                          animationLink:
                            ((p = f == null ? void 0 : f.model) == null
                              ? void 0
                              : p.animationLink) ||
                            (f == null ? void 0 : f.animationLink),
                          name: f == null ? void 0 : f.name,
                          itemId: d,
                          onRemove: l,
                        },
                        d
                      );
                    }),
                !s &&
                  v.jsx("div", {
                    ref: o,
                    className: "w-full flex items-center justify-center",
                    children: v.jsx(Fn, {
                      width: 20,
                      height: 20,
                      className: "animate-spin",
                    }),
                  }),
              ],
            }),
          ],
        })
      : null;
  },
  pZ = ({ onClose: e, selectedItems: t, setSelectedItems: n }) => {
    const [r, { isLoading: i }] = JW(),
      { pathname: s } = Un(),
      { data: { balance: o = 0, wallet: l } = {} } = da(),
      { handleOpenDepositPage: c } = of(l, s),
      { t: f } = Ze(),
      d = v2(),
      [p, m] = N.useState(!1);
    N.useEffect(() => {
      (t != null && t.length) || m(!1);
    }, [t == null ? void 0 : t.length]);
    const g = t.reduce((E, P) => {
        var _;
        return (
          E + ((_ = P == null ? void 0 : P.gift) == null ? void 0 : _.buyPrice)
        );
      }, 0),
      w = String(Math.floor(Number(Jt.fromNano(g ?? 0)) * 100) / 100),
      b = N.useCallback(async () => {
        try {
          const {
            data: { success: E },
          } = await r({ itemIds: t.map(({ itemId: P }) => P) });
          E &&
            (d(zr.util.invalidateTags(["Profile", "History", "Inventory"])),
            d(Cl.util.invalidateTags(["TradeItems"])),
            m(!1),
            e());
        } catch (E) {
          console.log(E);
        }
      }, [t]),
      x = N.useCallback(() => {
        if (o < g) {
          c();
          return;
        }
        m(!0);
      }, [o, g]);
    return v.jsxs(v.Fragment, {
      children: [
        v.jsx("div", {
          className: "flex items-center justify-center",
          children: v.jsx(He, {
            onClick: x,
            text: v.jsxs("span", {
              className: "flex items-center gap-1 text-[14px] leading-[17px]",
              children: [
                v.jsx(zt, { width: 14, height: 14, className: "shrink-0" }),
                w,
              ],
            }),
            classes: "h-[40px]",
            disabled: g <= 0,
          }),
        }),
        v.jsxs(cf, {
          isOpen: p,
          close: () => m(!1),
          title: f("modal.buy.title"),
          children: [
            v.jsx(PA, { selectedItems: t, setSelectedItems: n }),
            v.jsx(He, {
              onClick: b,
              loading: i,
              text: v.jsxs("span", {
                className: "flex items-center gap-1",
                children: [
                  f("modal.buy.item"),
                  " ",
                  v.jsx(zt, { width: 14, height: 14, className: "shrink-0" }),
                  " ",
                  w,
                ],
              }),
              classes: "h-[40px] w-full mt-4 mb-[19px]",
              disabled: w <= 0 || i,
            }),
          ],
        }),
      ],
    });
  },
  mZ = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 17,
        height: 17,
        fill: "none",
        ...e,
      },
      N.createElement("path", {
        fill: "#fff",
        fillRule: "evenodd",
        d: "M9.14.38c.55.53.57 1.4.05 1.94l-4.6 4.8h11.04a1.37 1.37 0 1 1 0 2.75H4.59l4.6 4.8a1.37 1.37 0 0 1-1.99 1.9L.62 9.7a1.47 1.47 0 0 1-.38-.42 1.37 1.37 0 0 1 0-1.54 1.49 1.49 0 0 1 .38-.42L7.2.42c.53-.54 1.4-.56 1.94-.04Z",
        clipRule: "evenodd",
      })
    ),
  Tu = N.forwardRef(
    (
      {
        title: e,
        children: t,
        titleLvl: n = 1,
        containerClasses: r = "",
        contentClasses: i = "",
        titleClasses: s = "",
        rightComponent: o = null,
        backMode: l = !1,
        loading: c = !1,
        titleContainerClasses: f = "",
      },
      d
    ) => {
      const p = `h${n}`,
        m = or();
      return v.jsxs("section", {
        ref: d,
        className: me("flex flex-col relative", [r]),
        children: [
          v.jsxs("div", {
            className: me(
              "flex justify-between pt-4 pb-2 sticky top-10 z-10 bg-background",
              [f]
            ),
            children: [
              l
                ? v.jsxs("button", {
                    type: "button",
                    onClick: () => m(-1),
                    className: "flex flex-nowrap gap-2 items-center pl-2",
                    children: [
                      v.jsx(mZ, { width: 17, height: 17 }),
                      v.jsx(p, { className: me([s]), children: e }),
                    ],
                  })
                : v.jsx(p, {
                    className: me("pl-2 text-nowrap", [s]),
                    children: e,
                  }),
              o,
            ],
          }),
          v.jsx("div", {
            className: me("grow", [i]),
            children: c
              ? v.jsx(Fn, {
                  width: 20,
                  height: 20,
                  className: "animate-spin mx-auto",
                })
              : t,
          }),
        ],
      });
    }
  );
Tu.displayName = "Section";
const ff = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 15,
        height: 11,
        fill: "none",
        ...e,
      },
      N.createElement("path", {
        fill: "#838F9C",
        fillRule: "evenodd",
        d: "M3 2.4 1.3 4.1A.72.72 0 0 1 .3 3.08L3.15.2 3.2.17c.3-.23.7-.23.99 0l.04.03 2.92 2.88a.72.72 0 1 1-1.01 1.03l-1.7-1.68v7.22a.72.72 0 1 1-1.45 0V2.41Z",
        clipRule: "evenodd",
      }),
      N.createElement("path", {
        fill: "#fff",
        fillRule: "evenodd",
        d: "M11.35.63c.4 0 .72.32.72.72v7.22l1.7-1.68a.72.72 0 0 1 1.02 1.03l-2.93 2.88-.04.03c-.3.23-.7.23-.99 0l-.04-.03-2.87-2.88A.72.72 0 1 1 8.95 6.9l1.68 1.7V1.34c0-.4.32-.72.72-.72Z",
        clipRule: "evenodd",
      })
    ),
  gZ = ({ collection: e, onClick: t }) => {
    const { t: n } = Ze(),
      { animationLink: r, name: i, amount: s, id: o } = e;
    return v.jsxs("div", {
      onClick: () => t({ name: i, id: o }),
      className:
        "grid grid-cols-[32px_1fr_max-content] gap-x-2 items-center pl-1.5 pr-3 py-1.5 bg-gray-700 cursor-pointer",
      children: [
        v.jsx("div", {
          className: "grid place-items-center w-8 h-8 rounded",
          children: v.jsx(ii, { loop: !1, path: r, size: 32 }),
        }),
        v.jsxs("div", {
          className: "flex flex-col",
          children: [
            v.jsx("span", {
              className: "text-[14px] leading-[17px] font-bold",
              children: i,
            }),
            v.jsx("span", {
              className: "text-[12px] leading-[15px] text-gray-300",
              children: n("modal.select.collection.item", { count: s }),
            }),
          ],
        }),
        v.jsx(uf, { width: 11, className: "-rotate-90" }),
      ],
    });
  },
  yZ = ({ onClose: e, collectionList: t, setSelectedCollection: n }) => {
    if ((t == null ? void 0 : t.length) === 0) return null;
    const r = (s) => {
        n(s), e();
      },
      i = [...t].sort((s, o) => s.name.localeCompare(o.name));
    return v.jsx("div", {
      className:
        "flex flex-col gap-[1px] max-h-[75dvh] overflow-y-auto rounded-lg",
      children: i.map((s) => v.jsx(gZ, { collection: s, onClick: r }, s.id)),
    });
  },
  vZ = { TRADE_ITEM: "tradeItem" },
  MA = ({
    scrollToTop: e,
    selectedItems: t,
    setSelectedItems: n,
    getSelectedStateFunc: r,
    mode: i,
    titleContainerClasses: s = "",
    isShowHeader: o = !1,
  }) => {
    var D;
    const { t: l } = Ze(),
      c = N.useRef(null),
      [f, d] = N.useState("DESC"),
      [p, m] = N.useState(null),
      [g, w] = N.useState(!1),
      { data: { items: b = [] } = {} } = uz(),
      {
        data: x,
        fetchNextPage: E,
        hasNextPage: P,
        isFetchingNextPage: _,
        isLoading: T,
        isError: M,
      } = lz(
        { order: f, collectionId: p == null ? void 0 : p.id },
        { refetchOnMountOrArgChange: !0 }
      ),
      L = x == null ? void 0 : x.pages.map((H) => H.items).flat();
    N.useEffect(() => {
      e();
    }, [f, p]),
      N.useEffect(() => {
        const H = c.current;
        if (!H || !P) return;
        const $ = new IntersectionObserver(
          (F) => {
            F[0].isIntersecting && !_ && E();
          },
          { rootMargin: "100px" }
        );
        return (
          $.observe(H),
          () => {
            H && $.unobserve(H);
          }
        );
      }, [E, P, _]);
    const O = N.useCallback(() => {
        w(!1);
      }, []),
      U = N.useCallback(() => {
        if (p !== null) return m(null);
        w(!0);
      }, [p]);
    return v.jsxs("div", {
      className: "flex flex-col gap-4 relative",
      children: [
        o &&
          v.jsx("div", {
            className:
              "text-[14px] font-bold leading-[17px] text-white py-[11.5px] px-4 bg-gray-700 -mx-4 -mt-4",
            children: v.jsxs("div", {
              className: "flex items-center justify-center gap-1 flex-nowrap",
              children: [
                l("giveaway.form.gifts.prime.title"),
                (L == null ? void 0 : L.length) > 0
                  ? v.jsx("div", {
                      className:
                        "text-[10px] shrink-0 px-[5px] text-center rounded-full bg-gray-450",
                      children:
                        (D = L == null ? void 0 : L.length) == null
                          ? void 0
                          : D.toLocaleString(),
                    })
                  : null,
              ],
            }),
          }),
        v.jsx(Tu, {
          loading: T,
          title: l("trade.withdraw.section.title"),
          containerClasses: t.length > 0 ? "pb-10" : "",
          titleContainerClasses: me("-mx-2 px-2 pb-1", s),
          titleLvl: 1,
          titleClasses: "text-[22px] font-bold",
          rightComponent: v.jsxs("div", {
            className: "flex gap-1.5 items-center",
            children: [
              v.jsx(He, {
                classes: "text-[13px] leading-[18px] bg-gray-600 truncate",
                rightIcon: v.jsx("div", {
                  className: "w-3.5 h-3 pb-0.5 flex items-end",
                  children: v.jsx(uf, { width: 11 }),
                }),
                onClick: U,
                text:
                  (p == null ? void 0 : p.name) || l("deposit.section.title"),
              }),
              v.jsx(He, {
                classes: "text-[13px] leading-[18px] bg-gray-600",
                leftIcon: v.jsx(ff, {
                  width: 15,
                  height: 12,
                  className: me(
                    "shrink-0 text-blue-200",
                    f === "ASC" && "scale-[-1] origin-center"
                  ),
                }),
                onClick: () => d((H) => (H === "ASC" ? "DESC" : "ASC")),
                text: l("deposit.section.sort"),
              }),
            ],
          }),
          children:
            (L == null ? void 0 : L.length) === 0 && !T
              ? v.jsx("div", {
                  className: "text-center text-gray-400",
                  children: l("trade.withdraw.noItems"),
                })
              : v.jsxs("div", {
                  className: "grid grid-cols-3 gap-2 pt-1",
                  children: [
                    L == null
                      ? void 0
                      : L.map(({ itemId: H, gift: $ }) => {
                          const F =
                            i === Tr.PRIME
                              ? Math.ceil($.buyPrice * 0.1)
                              : $.buyPrice;
                          return v.jsx(
                            df,
                            {
                              onClick: () => n(H, $),
                              animationLink: $.model.animationLink,
                              backDrop: $.backDrop,
                              pattern: $.pattern,
                              mode: vZ.TRADE_ITEM,
                              isSelected: r(H),
                              nftId: $.nftId,
                              price: F,
                            },
                            H
                          );
                        }),
                    P &&
                      v.jsx("div", {
                        ref: c,
                        className:
                          "grid col-start-1 -col-end-1 justify-self-center",
                        children: v.jsx(Fn, {
                          width: 20,
                          height: 20,
                          className: "animate-spin",
                        }),
                      }),
                  ],
                }),
        }),
        v.jsx(cf, {
          title: l("modal.select.collection"),
          closeButton: !0,
          isOpen: g,
          close: O,
          children: v.jsx(yZ, {
            onClose: O,
            collectionList: b,
            setSelectedCollection: m,
          }),
        }),
      ],
    });
  },
  wZ = ({ gift: e }) => e.type === "nft",
  bZ = ({
    scrollToTop: e,
    selectedItems: t,
    setSelectedItems: n,
    getSelectedStateFunc: r,
  }) => {
    const { t: i } = Ze(),
      { data: { items: s = [] } = {}, isLoading: o } = dk(),
      [l, c] = N.useState("desc");
    N.useEffect(() => {
      e();
    }, [l]);
    const f = N.useCallback(
        (g, w) =>
          l === "asc"
            ? g.gift.sellPrice - w.gift.sellPrice
            : w.gift.sellPrice - g.gift.sellPrice,
        [l]
      ),
      {
        visibleItems: d,
        isDone: p,
        loaderRef: m,
      } = Wi({ items: s, sortFn: f, filterFn: wZ, pageSize: fa.large });
    return v.jsxs("div", {
      className: "flex flex-col gap-4 relative",
      children: [
        v.jsx("div", {
          className:
            "text-[14px] font-bold leading-[17px] text-white py-[11.5px] px-4 bg-gray-700 -mx-4 -mt-4",
          children: v.jsxs("div", {
            className: "flex items-center justify-center gap-1 flex-nowrap",
            children: [
              i("giveaway.form.gifts.classic.title"),
              (d == null ? void 0 : d.length) > 0
                ? v.jsx("div", {
                    className:
                      "text-[10px] shrink-0 px-[5px] text-center rounded-full bg-gray-450",
                    children: d == null ? void 0 : d.length,
                  })
                : null,
            ],
          }),
        }),
        v.jsxs(Zs, {
          className: "flex items-center justify-between gap-3",
          children: [
            v.jsx("div", {
              children: v.jsx(Ks, {
                i18nKey: "deposit.information.text",
                components: {
                  tag: v.jsx("button", {
                    className: "text-blue-200 inline",
                    onClick: wr(se.EXTERNAL.TG_ITEMS_BOT),
                    children: j3,
                  }),
                },
              }),
            }),
            v.jsx(He, {
              classes: "px-3 text-white text-[12px] leading-[15px] text-nowrap",
              text: i("deposit.information.button"),
              onClick: wr(se.EXTERNAL.TG_ITEMS_BOT),
            }),
          ],
        }),
        v.jsx(Tu, {
          loading: o,
          title: i("trade.withdraw.section.title"),
          titleLvl: 1,
          containerClasses: t.length > 0 ? "pb-10" : "",
          titleClasses: "text-[22px] font-bold",
          titleContainerClasses: "-mx-2 px-2 py-1 top-0",
          rightComponent: v.jsx(He, {
            classes: "text-[13px] leading-[18px] bg-gray-600",
            leftIcon: v.jsx(ff, {
              width: 15,
              height: 12,
              className: me(
                "shrink-0 text-blue-200",
                l === "asc" && "scale-[-1] origin-center"
              ),
            }),
            onClick: () => c((g) => (g === "asc" ? "desc" : "asc")),
            text: i("deposit.section.sort"),
          }),
          children: v.jsxs("div", {
            className: "grid grid-cols-3 gap-2 pt-1",
            children: [
              d == null
                ? void 0
                : d.map(({ inventoryId: g, gift: w }) => {
                    var b;
                    return v.jsx(
                      df,
                      {
                        onClick: () => n(g, w),
                        animationLink:
                          ((b = w == null ? void 0 : w.model) == null
                            ? void 0
                            : b.animationLink) ?? w.animationLink,
                        backDrop: w.backDrop,
                        pattern: w.pattern,
                        isSelected: r(g),
                        nftId: w.nftId,
                        price: w.sellPrice,
                      },
                      g
                    );
                  }),
              !p &&
                v.jsx("div", {
                  ref: m,
                  className: "grid col-start-1 -col-end-1 justify-self-center",
                  children: v.jsx(Fn, {
                    width: 20,
                    height: 20,
                    className: "animate-spin",
                  }),
                }),
            ],
          }),
        }),
      ],
    });
  },
  xZ = (e) => (t) => e.some((n) => n.itemId === t),
  CZ = () => {
    const { scrollToTop: e } = N.useContext(Mm),
      [t, n] = N.useState([]),
      [r, i] = N.useState(!1);
    N.useEffect(() => {
      t.length === 0 && i(!1);
    }, [t.length]);
    const s = N.useCallback(() => {
        n([]);
      }, []),
      o = N.useCallback(
        (l, c) => {
          if (t.some((d) => d.itemId === l)) {
            n(t.filter((d) => d.itemId !== l));
            return;
          }
          n((d) => [...d, { itemId: l, gift: c }]), i(!0);
        },
        [t]
      );
    return v.jsxs(v.Fragment, {
      children: [
        v.jsx(MA, {
          selectedItems: t,
          setSelectedItems: o,
          scrollToTop: e,
          getSelectedStateFunc: xZ(t),
          titleContainerClasses: "top-0",
        }),
        v.jsx("div", {
          className: me(
            "fixed bottom-[88px] inset-x-7 transition-all duration-300 transform z-10",
            r
              ? "opacity-100 scale-100 pointer-events-auto"
              : "opacity-0 scale-95 pointer-events-none"
          ),
          children: v.jsx(pZ, {
            onClose: s,
            selectedItems: t,
            setSelectedItems: n,
          }),
        }),
      ],
    });
  },
  SZ = ({ name: e, ...t }) =>
    v.jsx(R3, {
      className: ({ isActive: n }) =>
        me(
          "text-[14px] text-center font-bold leading-[17px] pb-2 relative transition-colors duration-300",
          n ? "text-white" : "text-gray-250"
        ),
      ...t,
      children: v.jsx("div", {
        className: "flex items-center justify-center gap-1 flex-nowrap",
        children: e,
      }),
    }),
  Rb = [
    { nameKey: "giveaways.tabs.active", path: se.PAGES.GIVEAWAYS.ACTIVE },
    { nameKey: "giveaways.tabs.history", path: se.PAGES.GIVEAWAYS.HISTORY },
  ],
  EZ = () => {
    const { t: e } = Ze(),
      t = Un(),
      n = Os({ path: se.PAGES.GIVEAWAYS.FULL_ROUTE_GIVEAWAY }, t.pathname),
      r = N.useMemo(
        () =>
          Rb.findIndex((i) =>
            t.pathname.startsWith(`/${se.PAGES.GIVEAWAYS.MAIN}/${i.path}`)
          ),
        [t.pathname]
      );
    return v.jsxs("div", {
      className: "flex flex-col",
      children: [
        !n &&
          v.jsxs("nav", {
            className:
              "w-full bg-blue-800 shrink-0 grid grid-cols-2 pt-3 px-4 sticky top-0 z-30",
            children: [
              Rb.map((i) =>
                v.jsx(
                  SZ,
                  { name: e(i.nameKey), count: i.count, to: i.path },
                  i.path
                )
              ),
              v.jsx(Sn.div, {
                layout: !0,
                transition: { type: "spring", stiffness: 300, damping: 30 },
                className: me(
                  "h-[3px] w-full row-start-2 bg-blue-300 rounded-t-lg",
                  ["col-start-1", "col-start-2"][r]
                ),
              }),
            ],
          }),
        v.jsx("div", { className: "p-4", children: v.jsx(ua, {}) }),
      ],
    });
  },
  RA = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 11,
        height: 12,
        fill: "none",
        viewBox: "0 0 11 12",
        ...e,
      },
      N.createElement(
        "g",
        { fill: "currentColor", clipPath: "url(#a)" },
        N.createElement("path", {
          d: "M5.25 6.92a3.75 3.75 0 0 0-3.42 3.8v.1a.69.69 0 0 0 1.38 0v-.13A2.36 2.36 0 0 1 5.27 8.3a2.3 2.3 0 0 1 2.52 2.28v.23a.69.69 0 1 0 1.38 0v-.23a3.67 3.67 0 0 0-3.92-3.66ZM5.5 6a2.75 2.75 0 1 0 0-5.5 2.75 2.75 0 0 0 0 5.5Zm0-4.13a1.38 1.38 0 1 1 0 2.76 1.38 1.38 0 0 1 0-2.75Z",
        })
      ),
      N.createElement(
        "defs",
        null,
        N.createElement(
          "clipPath",
          { id: "a" },
          N.createElement("path", { fill: "#fff", d: "M0 .5h11v11H0z" })
        )
      )
    ),
  ra = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 11,
        height: 10,
        fill: "none",
        viewBox: "0 0 11 10",
        ...e,
      },
      N.createElement("path", {
        fill: "currentColor",
        fillRule: "evenodd",
        d: "M2.49 4.64c-.26 0-.46.2-.46.46 0 .25.2.46.46.46h3.27c.25 0 .46-.21.46-.46s-.2-.46-.46-.46H2.49Zm0-1.77c-.26 0-.46.2-.46.46 0 .25.2.46.46.46h4.5c.25 0 .45-.21.45-.46 0-.26-.2-.46-.46-.46h-4.5Zm8.05.37c.25 0 .46.2.46.46v3.16a2.76 2.76 0 0 1-2.76 2.76H3.43a.46.46 0 0 1-.46-.46c0-.25.2-.46.46-.46h4.81c1.02 0 1.84-.82 1.84-1.84V3.7c0-.25.2-.46.46-.46ZM1.84 1.3c-.5 0-.92.41-.92.92V6.2c0 .5.41.92.92.92h6.2c.26 0 .47-.21.47-.46V2.22c0-.5-.42-.92-.92-.92H1.84ZM0 2.22C0 1.2.82.38 1.84.38h5.75c1.01 0 1.83.82 1.83 1.84v4.45c0 .75-.62 1.38-1.37 1.38H1.84A1.84 1.84 0 0 1 0 6.2v-4Z",
        clipRule: "evenodd",
      })
    ),
  kZ = ({ channels: e }) => {
    const t = e.slice(0, 4),
      n = t.length,
      r = 32 / Math.ceil(Math.sqrt(n)),
      i = n === 2;
    return v.jsx("div", {
      className: me("w-8 h-8 flex flex-wrap-reverse shrink-0", i && "flex-col"),
      children: t.map((s, o) =>
        v.jsx(
          "div",
          {
            className: me(
              "overflow-hidden rounded-full bg-black/25 mx-auto",
              i && o === 0 && "ml-auto mr-0",
              i && o === 1 && "mr-auto ml-0"
            ),
            style: { width: r, height: r },
            children: v.jsx("img", {
              src: `https://t.me/i/userpic/320/${s}.jpg`,
              width: r,
              height: r,
            }),
          },
          s
        )
      ),
    });
  },
  _Z = ({
    channels: e,
    roundedPrice: t,
    itemsCount: n,
    ticketPrice: r,
    participantsAmount: i,
  }) => {
    const { t: s } = Ze();
    return v.jsxs("div", {
      className:
        "flex items-center justify-between pl-1.5 pr-3 py-1.5 bg-gray-600",
      children: [
        v.jsx(os, {
          containerClasses: "grow",
          media: v.jsx(kZ, { channels: e }),
          titleClasses: "text-blue-200",
          title: e.map((o) =>
            v.jsxs(
              "button",
              {
                type: "button",
                className: "inline",
                onClick: () => wr(`https://t.me/${o}`)(),
                children: [
                  "@",
                  o,
                  e.indexOf(o) !== e.length - 1 &&
                    v.jsx("span", { className: "text-white", children: ", " }),
                ],
              },
              o
            )
          ),
          desc: v.jsxs("div", {
            className: "flex items-center gap-1 ",
            children: [
              s("giveaways.active.title.stat", { count: n }),
              v.jsxs("div", {
                className: "flex items-center gap-1 flex-nowrap",
                children: [
                  v.jsx(zt, { width: 12, className: "text-blue-200" }),
                  v.jsx("span", {
                    className: "text-white font-bold",
                    children: t,
                  }),
                ],
              }),
            ],
          }),
        }),
        v.jsxs("div", {
          className: me(
            "text-[11px] leading-[13px] font-bold flex items-center gap-0.5 px-[5px] py-[3.5px]  rounded-md",
            r > 0
              ? "bg-blue-200/10 text-blue-200"
              : "text-green-300 bg-green-300/10"
          ),
          children: [
            r > 0
              ? v.jsx(ra, { width: 11, height: 11 })
              : v.jsx(RA, { width: 11, height: 11 }),
            i == null ? void 0 : i.toLocaleString(),
          ],
        }),
      ],
    });
  },
  Im = ({ items: e, preset: t }) => {
    const {
      isDone: n,
      loaderRef: r,
      visibleItems: i,
    } = Wi({ items: e, pageSize: fa.small });
    return v.jsxs(af, {
      className: "scroll-container flex gap-2 -mx-4 px-4",
      children: [
        i == null
          ? void 0
          : i.map((s) => {
              const {
                  nftId: o,
                  model: l = {},
                  backDrop: c = {},
                  pattern: f = {},
                } = s,
                { animationLink: d } = l;
              return v.jsx(
                sf,
                {
                  animationLink: d,
                  pattern: f,
                  nftId: o,
                  fixedWidth: !0,
                  backdrop: c,
                  preset: t,
                },
                o
              );
            }),
        !n &&
          v.jsx("div", {
            ref: r,
            style: { width: t.size + 32, height: t.size + 32 },
            className:
              "rounded-lg bg-black/25 flex flex-col shrink-0 items-center justify-center gap-1",
            children: v.jsx(Fn, {
              className: "animate-spin w-[20px] h-[20px]",
            }),
          }),
      ],
    });
  },
  LA = ({ items: e, preset: t }) =>
    v.jsx("div", {
      className: "flex items-center gap-2 flex-wrap justify-center",
      children:
        e == null
          ? void 0
          : e.map((n) => {
              const {
                  nftId: r,
                  model: i = {},
                  backDrop: s = {},
                  pattern: o = {},
                } = n,
                { animationLink: l } = i;
              return v.jsx(
                sf,
                {
                  animationLink: l,
                  pattern: o,
                  nftId: r,
                  fixedWidth: !0,
                  backdrop: s,
                  preset: t,
                },
                r
              );
            }),
    }),
  Gn = {
    ACTIVE: "active",
    COMPLETED: "completed",
    WAITING: "waiting",
    CANCELED: "canceled",
  },
  l3 = { PRIME: "prime" },
  sd = { NONE: "none", SOLD: "sold", WITHDRAWN: "withdrawn" },
  IA = 6048e5,
  AZ = 864e5,
  Lb = Symbol.for("constructDateFrom");
function ts(e, t) {
  return typeof e == "function"
    ? e(t)
    : e && typeof e == "object" && Lb in e
    ? e[Lb](t)
    : e instanceof Date
    ? new e.constructor(t)
    : new Date(t);
}
function qr(e, t) {
  return ts(t || e, e);
}
function TZ(e, t, n) {
  const r = qr(e, n == null ? void 0 : n.in);
  return isNaN(t) ? ts(e, NaN) : (r.setDate(r.getDate() + t), r);
}
let PZ = {};
function hf() {
  return PZ;
}
function tu(e, t) {
  var l, c, f, d;
  const n = hf(),
    r =
      (t == null ? void 0 : t.weekStartsOn) ??
      ((c = (l = t == null ? void 0 : t.locale) == null ? void 0 : l.options) ==
      null
        ? void 0
        : c.weekStartsOn) ??
      n.weekStartsOn ??
      ((d = (f = n.locale) == null ? void 0 : f.options) == null
        ? void 0
        : d.weekStartsOn) ??
      0,
    i = qr(e, t == null ? void 0 : t.in),
    s = i.getDay(),
    o = (s < r ? 7 : 0) + s - r;
  return i.setDate(i.getDate() - o), i.setHours(0, 0, 0, 0), i;
}
function h4(e, t) {
  return tu(e, { ...t, weekStartsOn: 1 });
}
function jA(e, t) {
  const n = qr(e, t == null ? void 0 : t.in),
    r = n.getFullYear(),
    i = ts(n, 0);
  i.setFullYear(r + 1, 0, 4), i.setHours(0, 0, 0, 0);
  const s = h4(i),
    o = ts(n, 0);
  o.setFullYear(r, 0, 4), o.setHours(0, 0, 0, 0);
  const l = h4(o);
  return n.getTime() >= s.getTime()
    ? r + 1
    : n.getTime() >= l.getTime()
    ? r
    : r - 1;
}
function Ib(e) {
  const t = qr(e),
    n = new Date(
      Date.UTC(
        t.getFullYear(),
        t.getMonth(),
        t.getDate(),
        t.getHours(),
        t.getMinutes(),
        t.getSeconds(),
        t.getMilliseconds()
      )
    );
  return n.setUTCFullYear(t.getFullYear()), +e - +n;
}
function MZ(e, ...t) {
  const n = ts.bind(
    null,
    t.find((r) => typeof r == "object")
  );
  return t.map(n);
}
function jb(e, t) {
  const n = qr(e, t == null ? void 0 : t.in);
  return n.setHours(0, 0, 0, 0), n;
}
function RZ(e, t, n) {
  const [r, i] = MZ(n == null ? void 0 : n.in, e, t),
    s = jb(r),
    o = jb(i),
    l = +s - Ib(s),
    c = +o - Ib(o);
  return Math.round((l - c) / AZ);
}
function LZ(e, t) {
  const n = jA(e, t),
    r = ts(e, 0);
  return r.setFullYear(n, 0, 4), r.setHours(0, 0, 0, 0), h4(r);
}
function IZ(e) {
  return (
    e instanceof Date ||
    (typeof e == "object" &&
      Object.prototype.toString.call(e) === "[object Date]")
  );
}
function jZ(e) {
  return !((!IZ(e) && typeof e != "number") || isNaN(+qr(e)));
}
function NZ(e) {
  return (t) => {
    const r = (e ? Math[e] : Math.trunc)(t);
    return r === 0 ? 0 : r;
  };
}
function OZ(e, t) {
  return +qr(e) - +qr(t);
}
function BZ(e, t, n) {
  const r = OZ(e, t) / 1e3;
  return NZ(n == null ? void 0 : n.roundingMethod)(r);
}
function DZ(e, t) {
  const n = qr(e, t == null ? void 0 : t.in);
  return n.setFullYear(n.getFullYear(), 0, 1), n.setHours(0, 0, 0, 0), n;
}
const FZ = {
    lessThanXSeconds: {
      one: "less than a second",
      other: "less than {{count}} seconds",
    },
    xSeconds: { one: "1 second", other: "{{count}} seconds" },
    halfAMinute: "half a minute",
    lessThanXMinutes: {
      one: "less than a minute",
      other: "less than {{count}} minutes",
    },
    xMinutes: { one: "1 minute", other: "{{count}} minutes" },
    aboutXHours: { one: "about 1 hour", other: "about {{count}} hours" },
    xHours: { one: "1 hour", other: "{{count}} hours" },
    xDays: { one: "1 day", other: "{{count}} days" },
    aboutXWeeks: { one: "about 1 week", other: "about {{count}} weeks" },
    xWeeks: { one: "1 week", other: "{{count}} weeks" },
    aboutXMonths: { one: "about 1 month", other: "about {{count}} months" },
    xMonths: { one: "1 month", other: "{{count}} months" },
    aboutXYears: { one: "about 1 year", other: "about {{count}} years" },
    xYears: { one: "1 year", other: "{{count}} years" },
    overXYears: { one: "over 1 year", other: "over {{count}} years" },
    almostXYears: { one: "almost 1 year", other: "almost {{count}} years" },
  },
  UZ = (e, t, n) => {
    let r;
    const i = FZ[e];
    return (
      typeof i == "string"
        ? (r = i)
        : t === 1
        ? (r = i.one)
        : (r = i.other.replace("{{count}}", t.toString())),
      n != null && n.addSuffix
        ? n.comparison && n.comparison > 0
          ? "in " + r
          : r + " ago"
        : r
    );
  };
function u5(e) {
  return (t = {}) => {
    const n = t.width ? String(t.width) : e.defaultWidth;
    return e.formats[n] || e.formats[e.defaultWidth];
  };
}
const $Z = {
    full: "EEEE, MMMM do, y",
    long: "MMMM do, y",
    medium: "MMM d, y",
    short: "MM/dd/yyyy",
  },
  VZ = {
    full: "h:mm:ss a zzzz",
    long: "h:mm:ss a z",
    medium: "h:mm:ss a",
    short: "h:mm a",
  },
  WZ = {
    full: "{{date}} 'at' {{time}}",
    long: "{{date}} 'at' {{time}}",
    medium: "{{date}}, {{time}}",
    short: "{{date}}, {{time}}",
  },
  zZ = {
    date: u5({ formats: $Z, defaultWidth: "full" }),
    time: u5({ formats: VZ, defaultWidth: "full" }),
    dateTime: u5({ formats: WZ, defaultWidth: "full" }),
  },
  HZ = {
    lastWeek: "'last' eeee 'at' p",
    yesterday: "'yesterday at' p",
    today: "'today at' p",
    tomorrow: "'tomorrow at' p",
    nextWeek: "eeee 'at' p",
    other: "P",
  },
  qZ = (e, t, n, r) => HZ[e];
function E0(e) {
  return (t, n) => {
    const r = n != null && n.context ? String(n.context) : "standalone";
    let i;
    if (r === "formatting" && e.formattingValues) {
      const o = e.defaultFormattingWidth || e.defaultWidth,
        l = n != null && n.width ? String(n.width) : o;
      i = e.formattingValues[l] || e.formattingValues[o];
    } else {
      const o = e.defaultWidth,
        l = n != null && n.width ? String(n.width) : e.defaultWidth;
      i = e.values[l] || e.values[o];
    }
    const s = e.argumentCallback ? e.argumentCallback(t) : t;
    return i[s];
  };
}
const KZ = {
    narrow: ["B", "A"],
    abbreviated: ["BC", "AD"],
    wide: ["Before Christ", "Anno Domini"],
  },
  GZ = {
    narrow: ["1", "2", "3", "4"],
    abbreviated: ["Q1", "Q2", "Q3", "Q4"],
    wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"],
  },
  YZ = {
    narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
    abbreviated: [
      "Jan",
      "Feb",
      "Mar",
      "Apr",
      "May",
      "Jun",
      "Jul",
      "Aug",
      "Sep",
      "Oct",
      "Nov",
      "Dec",
    ],
    wide: [
      "January",
      "February",
      "March",
      "April",
      "May",
      "June",
      "July",
      "August",
      "September",
      "October",
      "November",
      "December",
    ],
  },
  QZ = {
    narrow: ["S", "M", "T", "W", "T", "F", "S"],
    short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
    abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
    wide: [
      "Sunday",
      "Monday",
      "Tuesday",
      "Wednesday",
      "Thursday",
      "Friday",
      "Saturday",
    ],
  },
  ZZ = {
    narrow: {
      am: "a",
      pm: "p",
      midnight: "mi",
      noon: "n",
      morning: "morning",
      afternoon: "afternoon",
      evening: "evening",
      night: "night",
    },
    abbreviated: {
      am: "AM",
      pm: "PM",
      midnight: "midnight",
      noon: "noon",
      morning: "morning",
      afternoon: "afternoon",
      evening: "evening",
      night: "night",
    },
    wide: {
      am: "a.m.",
      pm: "p.m.",
      midnight: "midnight",
      noon: "noon",
      morning: "morning",
      afternoon: "afternoon",
      evening: "evening",
      night: "night",
    },
  },
  XZ = {
    narrow: {
      am: "a",
      pm: "p",
      midnight: "mi",
      noon: "n",
      morning: "in the morning",
      afternoon: "in the afternoon",
      evening: "in the evening",
      night: "at night",
    },
    abbreviated: {
      am: "AM",
      pm: "PM",
      midnight: "midnight",
      noon: "noon",
      morning: "in the morning",
      afternoon: "in the afternoon",
      evening: "in the evening",
      night: "at night",
    },
    wide: {
      am: "a.m.",
      pm: "p.m.",
      midnight: "midnight",
      noon: "noon",
      morning: "in the morning",
      afternoon: "in the afternoon",
      evening: "in the evening",
      night: "at night",
    },
  },
  JZ = (e, t) => {
    const n = Number(e),
      r = n % 100;
    if (r > 20 || r < 10)
      switch (r % 10) {
        case 1:
          return n + "st";
        case 2:
          return n + "nd";
        case 3:
          return n + "rd";
      }
    return n + "th";
  },
  eX = {
    ordinalNumber: JZ,
    era: E0({ values: KZ, defaultWidth: "wide" }),
    quarter: E0({
      values: GZ,
      defaultWidth: "wide",
      argumentCallback: (e) => e - 1,
    }),
    month: E0({ values: YZ, defaultWidth: "wide" }),
    day: E0({ values: QZ, defaultWidth: "wide" }),
    dayPeriod: E0({
      values: ZZ,
      defaultWidth: "wide",
      formattingValues: XZ,
      defaultFormattingWidth: "wide",
    }),
  };
function k0(e) {
  return (t, n = {}) => {
    const r = n.width,
      i = (r && e.matchPatterns[r]) || e.matchPatterns[e.defaultMatchWidth],
      s = t.match(i);
    if (!s) return null;
    const o = s[0],
      l = (r && e.parsePatterns[r]) || e.parsePatterns[e.defaultParseWidth],
      c = Array.isArray(l) ? nX(l, (p) => p.test(o)) : tX(l, (p) => p.test(o));
    let f;
    (f = e.valueCallback ? e.valueCallback(c) : c),
      (f = n.valueCallback ? n.valueCallback(f) : f);
    const d = t.slice(o.length);
    return { value: f, rest: d };
  };
}
function tX(e, t) {
  for (const n in e)
    if (Object.prototype.hasOwnProperty.call(e, n) && t(e[n])) return n;
}
function nX(e, t) {
  for (let n = 0; n < e.length; n++) if (t(e[n])) return n;
}
function rX(e) {
  return (t, n = {}) => {
    const r = t.match(e.matchPattern);
    if (!r) return null;
    const i = r[0],
      s = t.match(e.parsePattern);
    if (!s) return null;
    let o = e.valueCallback ? e.valueCallback(s[0]) : s[0];
    o = n.valueCallback ? n.valueCallback(o) : o;
    const l = t.slice(i.length);
    return { value: o, rest: l };
  };
}
const iX = /^(\d+)(th|st|nd|rd)?/i,
  sX = /\d+/i,
  oX = {
    narrow: /^(b|a)/i,
    abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
    wide: /^(before christ|before common era|anno domini|common era)/i,
  },
  aX = { any: [/^b/i, /^(a|c)/i] },
  lX = {
    narrow: /^[1234]/i,
    abbreviated: /^q[1234]/i,
    wide: /^[1234](th|st|nd|rd)? quarter/i,
  },
  uX = { any: [/1/i, /2/i, /3/i, /4/i] },
  cX = {
    narrow: /^[jfmasond]/i,
    abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
    wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,
  },
  dX = {
    narrow: [
      /^j/i,
      /^f/i,
      /^m/i,
      /^a/i,
      /^m/i,
      /^j/i,
      /^j/i,
      /^a/i,
      /^s/i,
      /^o/i,
      /^n/i,
      /^d/i,
    ],
    any: [
      /^ja/i,
      /^f/i,
      /^mar/i,
      /^ap/i,
      /^may/i,
      /^jun/i,
      /^jul/i,
      /^au/i,
      /^s/i,
      /^o/i,
      /^n/i,
      /^d/i,
    ],
  },
  fX = {
    narrow: /^[smtwf]/i,
    short: /^(su|mo|tu|we|th|fr|sa)/i,
    abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
    wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,
  },
  hX = {
    narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
    any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],
  },
  pX = {
    narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
    any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,
  },
  mX = {
    any: {
      am: /^a/i,
      pm: /^p/i,
      midnight: /^mi/i,
      noon: /^no/i,
      morning: /morning/i,
      afternoon: /afternoon/i,
      evening: /evening/i,
      night: /night/i,
    },
  },
  gX = {
    ordinalNumber: rX({
      matchPattern: iX,
      parsePattern: sX,
      valueCallback: (e) => parseInt(e, 10),
    }),
    era: k0({
      matchPatterns: oX,
      defaultMatchWidth: "wide",
      parsePatterns: aX,
      defaultParseWidth: "any",
    }),
    quarter: k0({
      matchPatterns: lX,
      defaultMatchWidth: "wide",
      parsePatterns: uX,
      defaultParseWidth: "any",
      valueCallback: (e) => e + 1,
    }),
    month: k0({
      matchPatterns: cX,
      defaultMatchWidth: "wide",
      parsePatterns: dX,
      defaultParseWidth: "any",
    }),
    day: k0({
      matchPatterns: fX,
      defaultMatchWidth: "wide",
      parsePatterns: hX,
      defaultParseWidth: "any",
    }),
    dayPeriod: k0({
      matchPatterns: pX,
      defaultMatchWidth: "any",
      parsePatterns: mX,
      defaultParseWidth: "any",
    }),
  },
  yX = {
    code: "en-US",
    formatDistance: UZ,
    formatLong: zZ,
    formatRelative: qZ,
    localize: eX,
    match: gX,
    options: { weekStartsOn: 0, firstWeekContainsDate: 1 },
  };
function vX(e, t) {
  const n = qr(e, t == null ? void 0 : t.in);
  return RZ(n, DZ(n)) + 1;
}
function wX(e, t) {
  const n = qr(e, t == null ? void 0 : t.in),
    r = +h4(n) - +LZ(n);
  return Math.round(r / IA) + 1;
}
function NA(e, t) {
  var d, p, m, g;
  const n = qr(e, t == null ? void 0 : t.in),
    r = n.getFullYear(),
    i = hf(),
    s =
      (t == null ? void 0 : t.firstWeekContainsDate) ??
      ((p = (d = t == null ? void 0 : t.locale) == null ? void 0 : d.options) ==
      null
        ? void 0
        : p.firstWeekContainsDate) ??
      i.firstWeekContainsDate ??
      ((g = (m = i.locale) == null ? void 0 : m.options) == null
        ? void 0
        : g.firstWeekContainsDate) ??
      1,
    o = ts((t == null ? void 0 : t.in) || e, 0);
  o.setFullYear(r + 1, 0, s), o.setHours(0, 0, 0, 0);
  const l = tu(o, t),
    c = ts((t == null ? void 0 : t.in) || e, 0);
  c.setFullYear(r, 0, s), c.setHours(0, 0, 0, 0);
  const f = tu(c, t);
  return +n >= +l ? r + 1 : +n >= +f ? r : r - 1;
}
function bX(e, t) {
  var l, c, f, d;
  const n = hf(),
    r =
      (t == null ? void 0 : t.firstWeekContainsDate) ??
      ((c = (l = t == null ? void 0 : t.locale) == null ? void 0 : l.options) ==
      null
        ? void 0
        : c.firstWeekContainsDate) ??
      n.firstWeekContainsDate ??
      ((d = (f = n.locale) == null ? void 0 : f.options) == null
        ? void 0
        : d.firstWeekContainsDate) ??
      1,
    i = NA(e, t),
    s = ts((t == null ? void 0 : t.in) || e, 0);
  return s.setFullYear(i, 0, r), s.setHours(0, 0, 0, 0), tu(s, t);
}
function xX(e, t) {
  const n = qr(e, t == null ? void 0 : t.in),
    r = +tu(n, t) - +bX(n, t);
  return Math.round(r / IA) + 1;
}
function Vt(e, t) {
  const n = e < 0 ? "-" : "",
    r = Math.abs(e).toString().padStart(t, "0");
  return n + r;
}
const ks = {
    y(e, t) {
      const n = e.getFullYear(),
        r = n > 0 ? n : 1 - n;
      return Vt(t === "yy" ? r % 100 : r, t.length);
    },
    M(e, t) {
      const n = e.getMonth();
      return t === "M" ? String(n + 1) : Vt(n + 1, 2);
    },
    d(e, t) {
      return Vt(e.getDate(), t.length);
    },
    a(e, t) {
      const n = e.getHours() / 12 >= 1 ? "pm" : "am";
      switch (t) {
        case "a":
        case "aa":
          return n.toUpperCase();
        case "aaa":
          return n;
        case "aaaaa":
          return n[0];
        case "aaaa":
        default:
          return n === "am" ? "a.m." : "p.m.";
      }
    },
    h(e, t) {
      return Vt(e.getHours() % 12 || 12, t.length);
    },
    H(e, t) {
      return Vt(e.getHours(), t.length);
    },
    m(e, t) {
      return Vt(e.getMinutes(), t.length);
    },
    s(e, t) {
      return Vt(e.getSeconds(), t.length);
    },
    S(e, t) {
      const n = t.length,
        r = e.getMilliseconds(),
        i = Math.trunc(r * Math.pow(10, n - 3));
      return Vt(i, t.length);
    },
  },
  Ka = {
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night",
  },
  Nb = {
    G: function (e, t, n) {
      const r = e.getFullYear() > 0 ? 1 : 0;
      switch (t) {
        case "G":
        case "GG":
        case "GGG":
          return n.era(r, { width: "abbreviated" });
        case "GGGGG":
          return n.era(r, { width: "narrow" });
        case "GGGG":
        default:
          return n.era(r, { width: "wide" });
      }
    },
    y: function (e, t, n) {
      if (t === "yo") {
        const r = e.getFullYear(),
          i = r > 0 ? r : 1 - r;
        return n.ordinalNumber(i, { unit: "year" });
      }
      return ks.y(e, t);
    },
    Y: function (e, t, n, r) {
      const i = NA(e, r),
        s = i > 0 ? i : 1 - i;
      if (t === "YY") {
        const o = s % 100;
        return Vt(o, 2);
      }
      return t === "Yo"
        ? n.ordinalNumber(s, { unit: "year" })
        : Vt(s, t.length);
    },
    R: function (e, t) {
      const n = jA(e);
      return Vt(n, t.length);
    },
    u: function (e, t) {
      const n = e.getFullYear();
      return Vt(n, t.length);
    },
    Q: function (e, t, n) {
      const r = Math.ceil((e.getMonth() + 1) / 3);
      switch (t) {
        case "Q":
          return String(r);
        case "QQ":
          return Vt(r, 2);
        case "Qo":
          return n.ordinalNumber(r, { unit: "quarter" });
        case "QQQ":
          return n.quarter(r, { width: "abbreviated", context: "formatting" });
        case "QQQQQ":
          return n.quarter(r, { width: "narrow", context: "formatting" });
        case "QQQQ":
        default:
          return n.quarter(r, { width: "wide", context: "formatting" });
      }
    },
    q: function (e, t, n) {
      const r = Math.ceil((e.getMonth() + 1) / 3);
      switch (t) {
        case "q":
          return String(r);
        case "qq":
          return Vt(r, 2);
        case "qo":
          return n.ordinalNumber(r, { unit: "quarter" });
        case "qqq":
          return n.quarter(r, { width: "abbreviated", context: "standalone" });
        case "qqqqq":
          return n.quarter(r, { width: "narrow", context: "standalone" });
        case "qqqq":
        default:
          return n.quarter(r, { width: "wide", context: "standalone" });
      }
    },
    M: function (e, t, n) {
      const r = e.getMonth();
      switch (t) {
        case "M":
        case "MM":
          return ks.M(e, t);
        case "Mo":
          return n.ordinalNumber(r + 1, { unit: "month" });
        case "MMM":
          return n.month(r, { width: "abbreviated", context: "formatting" });
        case "MMMMM":
          return n.month(r, { width: "narrow", context: "formatting" });
        case "MMMM":
        default:
          return n.month(r, { width: "wide", context: "formatting" });
      }
    },
    L: function (e, t, n) {
      const r = e.getMonth();
      switch (t) {
        case "L":
          return String(r + 1);
        case "LL":
          return Vt(r + 1, 2);
        case "Lo":
          return n.ordinalNumber(r + 1, { unit: "month" });
        case "LLL":
          return n.month(r, { width: "abbreviated", context: "standalone" });
        case "LLLLL":
          return n.month(r, { width: "narrow", context: "standalone" });
        case "LLLL":
        default:
          return n.month(r, { width: "wide", context: "standalone" });
      }
    },
    w: function (e, t, n, r) {
      const i = xX(e, r);
      return t === "wo"
        ? n.ordinalNumber(i, { unit: "week" })
        : Vt(i, t.length);
    },
    I: function (e, t, n) {
      const r = wX(e);
      return t === "Io"
        ? n.ordinalNumber(r, { unit: "week" })
        : Vt(r, t.length);
    },
    d: function (e, t, n) {
      return t === "do"
        ? n.ordinalNumber(e.getDate(), { unit: "date" })
        : ks.d(e, t);
    },
    D: function (e, t, n) {
      const r = vX(e);
      return t === "Do"
        ? n.ordinalNumber(r, { unit: "dayOfYear" })
        : Vt(r, t.length);
    },
    E: function (e, t, n) {
      const r = e.getDay();
      switch (t) {
        case "E":
        case "EE":
        case "EEE":
          return n.day(r, { width: "abbreviated", context: "formatting" });
        case "EEEEE":
          return n.day(r, { width: "narrow", context: "formatting" });
        case "EEEEEE":
          return n.day(r, { width: "short", context: "formatting" });
        case "EEEE":
        default:
          return n.day(r, { width: "wide", context: "formatting" });
      }
    },
    e: function (e, t, n, r) {
      const i = e.getDay(),
        s = (i - r.weekStartsOn + 8) % 7 || 7;
      switch (t) {
        case "e":
          return String(s);
        case "ee":
          return Vt(s, 2);
        case "eo":
          return n.ordinalNumber(s, { unit: "day" });
        case "eee":
          return n.day(i, { width: "abbreviated", context: "formatting" });
        case "eeeee":
          return n.day(i, { width: "narrow", context: "formatting" });
        case "eeeeee":
          return n.day(i, { width: "short", context: "formatting" });
        case "eeee":
        default:
          return n.day(i, { width: "wide", context: "formatting" });
      }
    },
    c: function (e, t, n, r) {
      const i = e.getDay(),
        s = (i - r.weekStartsOn + 8) % 7 || 7;
      switch (t) {
        case "c":
          return String(s);
        case "cc":
          return Vt(s, t.length);
        case "co":
          return n.ordinalNumber(s, { unit: "day" });
        case "ccc":
          return n.day(i, { width: "abbreviated", context: "standalone" });
        case "ccccc":
          return n.day(i, { width: "narrow", context: "standalone" });
        case "cccccc":
          return n.day(i, { width: "short", context: "standalone" });
        case "cccc":
        default:
          return n.day(i, { width: "wide", context: "standalone" });
      }
    },
    i: function (e, t, n) {
      const r = e.getDay(),
        i = r === 0 ? 7 : r;
      switch (t) {
        case "i":
          return String(i);
        case "ii":
          return Vt(i, t.length);
        case "io":
          return n.ordinalNumber(i, { unit: "day" });
        case "iii":
          return n.day(r, { width: "abbreviated", context: "formatting" });
        case "iiiii":
          return n.day(r, { width: "narrow", context: "formatting" });
        case "iiiiii":
          return n.day(r, { width: "short", context: "formatting" });
        case "iiii":
        default:
          return n.day(r, { width: "wide", context: "formatting" });
      }
    },
    a: function (e, t, n) {
      const i = e.getHours() / 12 >= 1 ? "pm" : "am";
      switch (t) {
        case "a":
        case "aa":
          return n.dayPeriod(i, {
            width: "abbreviated",
            context: "formatting",
          });
        case "aaa":
          return n
            .dayPeriod(i, { width: "abbreviated", context: "formatting" })
            .toLowerCase();
        case "aaaaa":
          return n.dayPeriod(i, { width: "narrow", context: "formatting" });
        case "aaaa":
        default:
          return n.dayPeriod(i, { width: "wide", context: "formatting" });
      }
    },
    b: function (e, t, n) {
      const r = e.getHours();
      let i;
      switch (
        (r === 12
          ? (i = Ka.noon)
          : r === 0
          ? (i = Ka.midnight)
          : (i = r / 12 >= 1 ? "pm" : "am"),
        t)
      ) {
        case "b":
        case "bb":
          return n.dayPeriod(i, {
            width: "abbreviated",
            context: "formatting",
          });
        case "bbb":
          return n
            .dayPeriod(i, { width: "abbreviated", context: "formatting" })
            .toLowerCase();
        case "bbbbb":
          return n.dayPeriod(i, { width: "narrow", context: "formatting" });
        case "bbbb":
        default:
          return n.dayPeriod(i, { width: "wide", context: "formatting" });
      }
    },
    B: function (e, t, n) {
      const r = e.getHours();
      let i;
      switch (
        (r >= 17
          ? (i = Ka.evening)
          : r >= 12
          ? (i = Ka.afternoon)
          : r >= 4
          ? (i = Ka.morning)
          : (i = Ka.night),
        t)
      ) {
        case "B":
        case "BB":
        case "BBB":
          return n.dayPeriod(i, {
            width: "abbreviated",
            context: "formatting",
          });
        case "BBBBB":
          return n.dayPeriod(i, { width: "narrow", context: "formatting" });
        case "BBBB":
        default:
          return n.dayPeriod(i, { width: "wide", context: "formatting" });
      }
    },
    h: function (e, t, n) {
      if (t === "ho") {
        let r = e.getHours() % 12;
        return r === 0 && (r = 12), n.ordinalNumber(r, { unit: "hour" });
      }
      return ks.h(e, t);
    },
    H: function (e, t, n) {
      return t === "Ho"
        ? n.ordinalNumber(e.getHours(), { unit: "hour" })
        : ks.H(e, t);
    },
    K: function (e, t, n) {
      const r = e.getHours() % 12;
      return t === "Ko"
        ? n.ordinalNumber(r, { unit: "hour" })
        : Vt(r, t.length);
    },
    k: function (e, t, n) {
      let r = e.getHours();
      return (
        r === 0 && (r = 24),
        t === "ko" ? n.ordinalNumber(r, { unit: "hour" }) : Vt(r, t.length)
      );
    },
    m: function (e, t, n) {
      return t === "mo"
        ? n.ordinalNumber(e.getMinutes(), { unit: "minute" })
        : ks.m(e, t);
    },
    s: function (e, t, n) {
      return t === "so"
        ? n.ordinalNumber(e.getSeconds(), { unit: "second" })
        : ks.s(e, t);
    },
    S: function (e, t) {
      return ks.S(e, t);
    },
    X: function (e, t, n) {
      const r = e.getTimezoneOffset();
      if (r === 0) return "Z";
      switch (t) {
        case "X":
          return Bb(r);
        case "XXXX":
        case "XX":
          return Oo(r);
        case "XXXXX":
        case "XXX":
        default:
          return Oo(r, ":");
      }
    },
    x: function (e, t, n) {
      const r = e.getTimezoneOffset();
      switch (t) {
        case "x":
          return Bb(r);
        case "xxxx":
        case "xx":
          return Oo(r);
        case "xxxxx":
        case "xxx":
        default:
          return Oo(r, ":");
      }
    },
    O: function (e, t, n) {
      const r = e.getTimezoneOffset();
      switch (t) {
        case "O":
        case "OO":
        case "OOO":
          return "GMT" + Ob(r, ":");
        case "OOOO":
        default:
          return "GMT" + Oo(r, ":");
      }
    },
    z: function (e, t, n) {
      const r = e.getTimezoneOffset();
      switch (t) {
        case "z":
        case "zz":
        case "zzz":
          return "GMT" + Ob(r, ":");
        case "zzzz":
        default:
          return "GMT" + Oo(r, ":");
      }
    },
    t: function (e, t, n) {
      const r = Math.trunc(+e / 1e3);
      return Vt(r, t.length);
    },
    T: function (e, t, n) {
      return Vt(+e, t.length);
    },
  };
function Ob(e, t = "") {
  const n = e > 0 ? "-" : "+",
    r = Math.abs(e),
    i = Math.trunc(r / 60),
    s = r % 60;
  return s === 0 ? n + String(i) : n + String(i) + t + Vt(s, 2);
}
function Bb(e, t) {
  return e % 60 === 0
    ? (e > 0 ? "-" : "+") + Vt(Math.abs(e) / 60, 2)
    : Oo(e, t);
}
function Oo(e, t = "") {
  const n = e > 0 ? "-" : "+",
    r = Math.abs(e),
    i = Vt(Math.trunc(r / 60), 2),
    s = Vt(r % 60, 2);
  return n + i + t + s;
}
const Db = (e, t) => {
    switch (e) {
      case "P":
        return t.date({ width: "short" });
      case "PP":
        return t.date({ width: "medium" });
      case "PPP":
        return t.date({ width: "long" });
      case "PPPP":
      default:
        return t.date({ width: "full" });
    }
  },
  OA = (e, t) => {
    switch (e) {
      case "p":
        return t.time({ width: "short" });
      case "pp":
        return t.time({ width: "medium" });
      case "ppp":
        return t.time({ width: "long" });
      case "pppp":
      default:
        return t.time({ width: "full" });
    }
  },
  CX = (e, t) => {
    const n = e.match(/(P+)(p+)?/) || [],
      r = n[1],
      i = n[2];
    if (!i) return Db(e, t);
    let s;
    switch (r) {
      case "P":
        s = t.dateTime({ width: "short" });
        break;
      case "PP":
        s = t.dateTime({ width: "medium" });
        break;
      case "PPP":
        s = t.dateTime({ width: "long" });
        break;
      case "PPPP":
      default:
        s = t.dateTime({ width: "full" });
        break;
    }
    return s.replace("{{date}}", Db(r, t)).replace("{{time}}", OA(i, t));
  },
  SX = { p: OA, P: CX },
  EX = /^D+$/,
  kX = /^Y+$/,
  _X = ["D", "DD", "YY", "YYYY"];
function AX(e) {
  return EX.test(e);
}
function TX(e) {
  return kX.test(e);
}
function PX(e, t, n) {
  const r = MX(e, t, n);
  if ((console.warn(r), _X.includes(e))) throw new RangeError(r);
}
function MX(e, t, n) {
  const r = e[0] === "Y" ? "years" : "days of the month";
  return `Use \`${e.toLowerCase()}\` instead of \`${e}\` (in \`${t}\`) for formatting ${r} to the input \`${n}\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;
}
const RX = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,
  LX = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,
  IX = /^'([^]*?)'?$/,
  jX = /''/g,
  NX = /[a-zA-Z]/;
function OX(e, t, n) {
  var d, p, m, g;
  const r = hf(),
    i = r.locale ?? yX,
    s =
      r.firstWeekContainsDate ??
      ((p = (d = r.locale) == null ? void 0 : d.options) == null
        ? void 0
        : p.firstWeekContainsDate) ??
      1,
    o =
      r.weekStartsOn ??
      ((g = (m = r.locale) == null ? void 0 : m.options) == null
        ? void 0
        : g.weekStartsOn) ??
      0,
    l = qr(e, n == null ? void 0 : n.in);
  if (!jZ(l)) throw new RangeError("Invalid time value");
  let c = t
    .match(LX)
    .map((w) => {
      const b = w[0];
      if (b === "p" || b === "P") {
        const x = SX[b];
        return x(w, i.formatLong);
      }
      return w;
    })
    .join("")
    .match(RX)
    .map((w) => {
      if (w === "''") return { isToken: !1, value: "'" };
      const b = w[0];
      if (b === "'") return { isToken: !1, value: BX(w) };
      if (Nb[b]) return { isToken: !0, value: w };
      if (b.match(NX))
        throw new RangeError(
          "Format string contains an unescaped latin alphabet character `" +
            b +
            "`"
        );
      return { isToken: !1, value: w };
    });
  i.localize.preprocessor && (c = i.localize.preprocessor(l, c));
  const f = { firstWeekContainsDate: s, weekStartsOn: o, locale: i };
  return c
    .map((w) => {
      if (!w.isToken) return w.value;
      const b = w.value;
      (TX(b) || AX(b)) && PX(b, t, String(e));
      const x = Nb[b[0]];
      return x(l, b, i.localize, f);
    })
    .join("");
}
function BX(e) {
  const t = e.match(IX);
  return t ? t[1].replace(jX, "'") : e;
}
function DX(e, t = !1) {
  const [n, r] = N.useState({
    days: 0,
    hours: { tens: 0, units: 0 },
    minutes: { tens: 0, units: 0 },
    seconds: { tens: 0, units: 0 },
    done: !0,
  });
  return (
    N.useEffect(() => {
      if (!e || !t) return;
      const i = new Date(e),
        s = () => {
          const c = BZ(i, new Date());
          if (c <= 0) {
            r({
              days: 0,
              hours: { tens: 0, units: 0 },
              minutes: { tens: 0, units: 0 },
              seconds: { tens: 0, units: 0 },
              done: !0,
            });
            return;
          }
          const f = Math.floor(c / 86400),
            d = Math.floor((c % 86400) / 3600),
            p = Math.floor((c % 3600) / 60),
            m = c % 60;
          r({
            days: f,
            hours: c5(d),
            minutes: c5(p),
            seconds: c5(m),
            done: !1,
          });
        };
      s();
      const o = setInterval(s, 1e3);
      return () => clearInterval(o);
    }, [e, t]),
    n
  );
}
function c5(e) {
  const t = String(Math.min(e, 99)).padStart(2, "0");
  return { tens: Number(t[0]), units: Number(t[1]) };
}
const Ga = () =>
    v.jsxs("div", {
      className: "flex flex-col items-center justify-center gap-1.5",
      children: [
        v.jsx("div", { className: "w-[3px] h-[3px] rounded-full bg-gray-650" }),
        v.jsx("div", { className: "w-[3px] h-[3px] rounded-full bg-gray-650" }),
      ],
    }),
  Ya = ({ tens: e, units: t }) =>
    v.jsxs("div", {
      className: "flex items-center justify-center gap-[1px]",
      children: [
        v.jsx("div", {
          className:
            "bg-gray-600 rounded-l-md rounded-r-[3px] py-[5px] w-[20px] text-center",
          children: e,
        }),
        v.jsx("div", {
          className:
            "bg-gray-600 rounded-r-md rounded-l-[3px] py-[5px] w-[20px] text-center",
          children: t,
        }),
      ],
    }),
  BA = ({ createdDate: e, endDate: t, status: n, ticketsToStart: r }) => {
    const { t: i } = Ze(),
      s = N.useMemo(() => (n === Gn.WAITING ? TZ(e, 1) : t), [e, t]),
      {
        days: o,
        hours: { tens: l, units: c },
        minutes: { tens: f, units: d },
        seconds: { tens: p, units: m },
      } = DX(s, n === Gn.ACTIVE || n === Gn.WAITING);
    return n === Gn.COMPLETED
      ? v.jsxs("span", {
          className:
            "text-gray-300 text-center text-[12px] leading-[15px] py-3",
          children: [
            i("giveaways.active.timer.ends.on"),
            " ",
            t && OX(t, "MMMM d 'at' HH:mm"),
          ],
        })
      : n === Gn.CANCELED
      ? v.jsx("span", {
          className:
            "text-gray-300 text-center text-[12px] leading-[15px] py-3",
          children: i("giveaways.active.canceled"),
        })
      : n === Gn.WAITING
      ? v.jsxs("div", {
          className: "flex flex-col",
          children: [
            v.jsxs("div", {
              className: "flex items-center justify-center gap-1.5 py-1.5",
              children: [
                v.jsx("span", {
                  className:
                    "text-gray-300 text-center text-[12px] leading-[15px]",
                  children: i("giveaways.active.timer.starts.in"),
                }),
                v.jsx("div", {
                  className:
                    "bg-gray-600 rounded-md p-[5px] text-center text-[14px] leading-[17px] font-bold",
                  children: i("ticket", { count: r }),
                }),
              ],
            }),
            v.jsxs("div", {
              className: "flex items-center justify-center gap-1.5 py-1.5",
              children: [
                v.jsx("span", {
                  className: "text-[12px] leading-[15px] text-gray-300",
                  children: i("giveaways.active.timer.cancel.in"),
                }),
                v.jsxs("div", {
                  className:
                    "flex items-center justify-center gap-1.5 font-bold text-[14px] leading-[17px]",
                  children: [
                    !!o &&
                      v.jsxs(v.Fragment, {
                        children: [
                          v.jsx("div", {
                            className: "p-[5px] rounded-md bg-gray-600",
                            children: i("day", { count: o }),
                          }),
                          v.jsx(Ga, {}),
                        ],
                      }),
                    v.jsx(Ya, { tens: l, units: c }),
                    v.jsx(Ga, {}),
                    v.jsx(Ya, { tens: f, units: d }),
                    v.jsx(Ga, {}),
                    v.jsx(Ya, { tens: p, units: m }),
                  ],
                }),
              ],
            }),
          ],
        })
      : v.jsxs("div", {
          className: "flex items-center justify-center gap-1.5 p-1.5",
          children: [
            v.jsx("span", {
              className: "text-[12px] leading-[15px] text-gray-300",
              children: i("giveaways.active.timer.ends.in"),
            }),
            v.jsxs("div", {
              className:
                "flex items-center justify-center gap-1.5 font-bold text-[14px] leading-[17px]",
              children: [
                !!o &&
                  v.jsxs(v.Fragment, {
                    children: [
                      v.jsx("div", {
                        className: "p-[5px] rounded-md bg-gray-600",
                        children: i("day", { count: o }),
                      }),
                      v.jsx(Ga, {}),
                    ],
                  }),
                v.jsx(Ya, { tens: l, units: c }),
                v.jsx(Ga, {}),
                v.jsx(Ya, { tens: f, units: d }),
                v.jsx(Ga, {}),
                v.jsx(Ya, { tens: p, units: m }),
              ],
            }),
          ],
        });
  },
  FX = ({ status: e, ticketPrice: t, giveawayId: n }) => {
    const { t: r } = Ze(),
      i = or(),
      s = () => {
        i(se.PAGES.GIVEAWAYS.TO_FULL_ROUTE_GIVEAWAY(n));
      };
    return e === Gn.COMPLETED || e === Gn.CANCELED
      ? v.jsx(He, {
          classes: "h-[40px] bg-gray-350",
          onClick: s,
          text: r("giveaways.history.button.view"),
        })
      : t === 0
      ? v.jsx(He, {
          classes: "h-[40px] bg-gray-350",
          onClick: s,
          text: r("giveaways.active.button.free"),
        })
      : v.jsx(He, {
          classes: "h-[40px] bg-gray-350",
          onClick: s,
          children: v.jsx(Z4, {
            i18nKey: "giveaways.active.button.prime",
            count: r("pretty.number.precision.2", { value: Jt.fromNano(t) }),
          }),
        });
  },
  UX = ({ ...e }) => {
    const {
        id: t,
        channels: n,
        createdDate: r,
        endDate: i,
        itemsPrice: s,
        participantsAmount: o,
        status: l,
        ticketPrice: c,
        ticketsToStart: f,
        items: d = [],
      } = e,
      p = N.useMemo(() => Math.floor(Number(Jt.fromNano(s)) * 100) / 100, [s]);
    return v.jsxs(Sn.div, {
      initial: { scale: 0.95, opacity: 0 },
      animate: { scale: 1, opacity: 1 },
      className: "flex flex-col w-full rounded-lg overflow-hidden bg-gray-700",
      children: [
        v.jsx(_Z, {
          channels: n,
          roundedPrice: p,
          itemsCount: d.length,
          ticketPrice: c,
          participantsAmount: o,
        }),
        v.jsxs("div", {
          className: "flex flex-col gap-2 p-3",
          children: [
            v.jsx(Im, { items: d, preset: h2.medium }),
            v.jsx(BA, {
              createdDate: r,
              endDate: i,
              status: l,
              ticketsToStart: f,
            }),
            v.jsx(FX, { status: l, ticketPrice: c, giveawayId: t }),
          ],
        }),
      ],
    });
  },
  DA = ({ list: e, isLoading: t }) => {
    const { t: n } = Ze(),
      r = or(),
      {
        visibleItems: i,
        isDone: s,
        loaderRef: o,
      } = Wi({ items: e, pageSize: fa.small });
    return v.jsxs("div", {
      className: "flex flex-col gap-4 w-full",
      children: [
        v.jsx(He, {
          classes: "w-full h-[40px]",
          leftIcon: v.jsx(lf, { width: 14, height: 14 }),
          onClick: () => {
            r(`/${se.PAGES.CREATE_GIVEAWAY.MAIN}`);
          },
          children: n("giveaways.active.button.create"),
        }),
        t &&
          v.jsx(Fn, {
            className: "animate-spin w-full",
            width: 14,
            height: 14,
          }),
        i == null ? void 0 : i.map((l) => v.jsx(UX, { ...l }, l.id)),
        !s &&
          v.jsx("div", {
            ref: o,
            className: "w-full flex items-center justify-center",
            children: v.jsx(Fn, {
              width: 20,
              height: 20,
              className: "animate-spin",
            }),
          }),
      ],
    });
  },
  $X = () => {
    const { data: { items: e = [] } = {}, isLoading: t } = hz();
    return v.jsx(DA, { list: e, isLoading: t });
  },
  VX = () => {
    const { data: { items: e = [] } = {}, isLoading: t } = pz();
    return v.jsx(DA, { list: e, isLoading: t });
  },
  Fb = [
    {
      nameKey: "create.giveaway.tabs.classic",
      path: se.PAGES.CREATE_GIVEAWAY.CLASSIC,
    },
    {
      nameKey: "create.giveaway.tabs.prime",
      path: se.PAGES.CREATE_GIVEAWAY.PRIME,
    },
  ],
  WX = ({ name: e, ...t }) =>
    v.jsx(R3, {
      className: ({ isActive: n }) =>
        me(
          "text-[14px] text-center font-bold leading-[17px] pb-2 relative transition-colors duration-300",
          n ? "text-white" : "text-gray-250"
        ),
      ...t,
      children: e,
    }),
  zX = () => {
    const { t: e } = Ze(),
      t = Un(),
      [n, r] = N.useState(!0),
      i = N.useMemo(
        () =>
          Fb.findIndex((s) =>
            t.pathname.startsWith(`/${se.PAGES.CREATE_GIVEAWAY.MAIN}/${s.path}`)
          ),
        [t.pathname]
      );
    return v.jsxs("div", {
      className: "flex flex-col",
      children: [
        n &&
          v.jsxs("nav", {
            className:
              "w-full bg-blue-800 shrink-0 grid grid-cols-2 pt-3 px-4 sticky top-0 z-30",
            children: [
              Fb.map((s) =>
                v.jsx(WX, { name: e(s.nameKey), to: s.path }, s.path)
              ),
              v.jsx("div", {
                className: "relative h-[3px] w-full",
                children: v.jsx(Sn.div, {
                  layout: !0,
                  transition: { type: "spring", stiffness: 300, damping: 30 },
                  className:
                    "absolute bottom-0 h-[3px] w-full bg-blue-300 rounded-t-lg",
                  style: { width: "100%", left: `${i * 100}%` },
                }),
              }),
            ],
          }),
        v.jsx("div", {
          className: "p-4 pb-0",
          children: v.jsx(ua, { context: { setIsShowTabs: r } }),
        }),
      ],
    });
  };
var Pu = (e) => e.type === "checkbox",
  Ho = (e) => e instanceof Date,
  _r = (e) => e == null;
const FA = (e) => typeof e == "object";
var Mn = (e) => !_r(e) && !Array.isArray(e) && FA(e) && !Ho(e),
  UA = (e) =>
    Mn(e) && e.target ? (Pu(e.target) ? e.target.checked : e.target.value) : e,
  HX = (e) => e.substring(0, e.search(/\.\d+(\.|$)/)) || e,
  $A = (e, t) => e.has(HX(t)),
  qX = (e) => {
    const t = e.constructor && e.constructor.prototype;
    return Mn(t) && t.hasOwnProperty("isPrototypeOf");
  },
  jm =
    typeof window < "u" &&
    typeof window.HTMLElement < "u" &&
    typeof document < "u";
function yn(e) {
  let t;
  const n = Array.isArray(e),
    r = typeof FileList < "u" ? e instanceof FileList : !1;
  if (e instanceof Date) t = new Date(e);
  else if (e instanceof Set) t = new Set(e);
  else if (!(jm && (e instanceof Blob || r)) && (n || Mn(e)))
    if (((t = n ? [] : {}), !n && !qX(e))) t = e;
    else for (const i in e) e.hasOwnProperty(i) && (t[i] = yn(e[i]));
  else return e;
  return t;
}
var Mu = (e) => (Array.isArray(e) ? e.filter(Boolean) : []),
  sn = (e) => e === void 0,
  ue = (e, t, n) => {
    if (!t || !Mn(e)) return n;
    const r = Mu(t.split(/[,[\].]+?/)).reduce((i, s) => (_r(i) ? i : i[s]), e);
    return sn(r) || r === e ? (sn(e[t]) ? n : e[t]) : r;
  },
  Xr = (e) => typeof e == "boolean",
  Nm = (e) => /^\w*$/.test(e),
  VA = (e) => Mu(e.replace(/["|']|\]/g, "").split(/\.|\[/)),
  $t = (e, t, n) => {
    let r = -1;
    const i = Nm(t) ? [t] : VA(t),
      s = i.length,
      o = s - 1;
    for (; ++r < s; ) {
      const l = i[r];
      let c = n;
      if (r !== o) {
        const f = e[l];
        c = Mn(f) || Array.isArray(f) ? f : isNaN(+i[r + 1]) ? {} : [];
      }
      if (l === "__proto__" || l === "constructor" || l === "prototype") return;
      (e[l] = c), (e = e[l]);
    }
  };
const p4 = { BLUR: "blur", FOCUS_OUT: "focusout", CHANGE: "change" },
  yi = {
    onBlur: "onBlur",
    onChange: "onChange",
    onSubmit: "onSubmit",
    onTouched: "onTouched",
    all: "all",
  },
  I2 = {
    max: "max",
    min: "min",
    maxLength: "maxLength",
    minLength: "minLength",
    pattern: "pattern",
    required: "required",
    validate: "validate",
  },
  WA = st.createContext(null),
  $n = () => st.useContext(WA),
  zA = (e) => {
    const { children: t, ...n } = e;
    return st.createElement(WA.Provider, { value: n }, t);
  };
var HA = (e, t, n, r = !0) => {
  const i = { defaultValues: t._defaultValues };
  for (const s in e)
    Object.defineProperty(i, s, {
      get: () => {
        const o = s;
        return (
          t._proxyFormState[o] !== yi.all &&
            (t._proxyFormState[o] = !r || yi.all),
          n && (n[o] = !0),
          e[o]
        );
      },
    });
  return i;
};
const Om = typeof window < "u" ? N.useLayoutEffect : N.useEffect;
function KX(e) {
  const t = $n(),
    { control: n = t.control, disabled: r, name: i, exact: s } = e || {},
    [o, l] = st.useState(n._formState),
    c = st.useRef({
      isDirty: !1,
      isLoading: !1,
      dirtyFields: !1,
      touchedFields: !1,
      validatingFields: !1,
      isValidating: !1,
      isValid: !1,
      errors: !1,
    });
  return (
    Om(
      () =>
        n._subscribe({
          name: i,
          formState: c.current,
          exact: s,
          callback: (f) => {
            !r && l({ ...n._formState, ...f });
          },
        }),
      [i, r, s]
    ),
    st.useEffect(() => {
      c.current.isValid && n._setValid(!0);
    }, [n]),
    st.useMemo(() => HA(o, n, c.current, !1), [o, n])
  );
}
var o2 = (e) => typeof e == "string",
  qA = (e, t, n, r, i) =>
    o2(e)
      ? (r && t.watch.add(e), ue(n, e, i))
      : Array.isArray(e)
      ? e.map((s) => (r && t.watch.add(s), ue(n, s)))
      : (r && (t.watchAll = !0), n);
function Rr(e) {
  const t = $n(),
    {
      control: n = t.control,
      name: r,
      defaultValue: i,
      disabled: s,
      exact: o,
    } = e || {},
    l = st.useRef(i),
    [c, f] = st.useState(n._getWatch(r, l.current));
  return (
    Om(
      () =>
        n._subscribe({
          name: r,
          formState: { values: !0 },
          exact: o,
          callback: (d) =>
            !s && f(qA(r, n._names, d.values || n._formValues, !1, l.current)),
        }),
      [r, n, s, o]
    ),
    st.useEffect(() => n._removeUnmounted()),
    c
  );
}
function GX(e) {
  const t = $n(),
    { name: n, disabled: r, control: i = t.control, shouldUnregister: s } = e,
    o = $A(i._names.array, n),
    l = Rr({
      control: i,
      name: n,
      defaultValue: ue(
        i._formValues,
        n,
        ue(i._defaultValues, n, e.defaultValue)
      ),
      exact: !0,
    }),
    c = KX({ control: i, name: n, exact: !0 }),
    f = st.useRef(e),
    d = st.useRef(
      i.register(n, {
        ...e.rules,
        value: l,
        ...(Xr(e.disabled) ? { disabled: e.disabled } : {}),
      })
    ),
    p = st.useMemo(
      () =>
        Object.defineProperties(
          {},
          {
            invalid: { enumerable: !0, get: () => !!ue(c.errors, n) },
            isDirty: { enumerable: !0, get: () => !!ue(c.dirtyFields, n) },
            isTouched: { enumerable: !0, get: () => !!ue(c.touchedFields, n) },
            isValidating: {
              enumerable: !0,
              get: () => !!ue(c.validatingFields, n),
            },
            error: { enumerable: !0, get: () => ue(c.errors, n) },
          }
        ),
      [c, n]
    ),
    m = st.useCallback(
      (x) =>
        d.current.onChange({
          target: { value: UA(x), name: n },
          type: p4.CHANGE,
        }),
      [n]
    ),
    g = st.useCallback(
      () =>
        d.current.onBlur({
          target: { value: ue(i._formValues, n), name: n },
          type: p4.BLUR,
        }),
      [n, i._formValues]
    ),
    w = st.useCallback(
      (x) => {
        const E = ue(i._fields, n);
        E &&
          x &&
          (E._f.ref = {
            focus: () => x.focus(),
            select: () => x.select(),
            setCustomValidity: (P) => x.setCustomValidity(P),
            reportValidity: () => x.reportValidity(),
          });
      },
      [i._fields, n]
    ),
    b = st.useMemo(
      () => ({
        name: n,
        value: l,
        ...(Xr(r) || c.disabled ? { disabled: c.disabled || r } : {}),
        onChange: m,
        onBlur: g,
        ref: w,
      }),
      [n, r, c.disabled, m, g, w, l]
    );
  return (
    st.useEffect(() => {
      const x = i._options.shouldUnregister || s;
      i.register(n, {
        ...f.current.rules,
        ...(Xr(f.current.disabled) ? { disabled: f.current.disabled } : {}),
      });
      const E = (P, _) => {
        const T = ue(i._fields, P);
        T && T._f && (T._f.mount = _);
      };
      if ((E(n, !0), x)) {
        const P = yn(ue(i._options.defaultValues, n));
        $t(i._defaultValues, n, P),
          sn(ue(i._formValues, n)) && $t(i._formValues, n, P);
      }
      return (
        !o && i.register(n),
        () => {
          (o ? x && !i._state.action : x) ? i.unregister(n) : E(n, !1);
        }
      );
    }, [n, i, o, s]),
    st.useEffect(() => {
      i._setDisabledField({ disabled: r, name: n });
    }, [r, n, i]),
    st.useMemo(() => ({ field: b, formState: c, fieldState: p }), [b, c, p])
  );
}
const pf = (e) => e.render(GX(e));
var YX = (e, t, n, r, i) =>
    t
      ? {
          ...n[e],
          types: { ...(n[e] && n[e].types ? n[e].types : {}), [r]: i || !0 },
        }
      : {},
  Vr = (e) => (Array.isArray(e) ? e : [e]),
  Ub = () => {
    let e = [];
    return {
      get observers() {
        return e;
      },
      next: (i) => {
        for (const s of e) s.next && s.next(i);
      },
      subscribe: (i) => (
        e.push(i),
        {
          unsubscribe: () => {
            e = e.filter((s) => s !== i);
          },
        }
      ),
      unsubscribe: () => {
        e = [];
      },
    };
  },
  N6 = (e) => _r(e) || !FA(e);
function Ls(e, t) {
  if (N6(e) || N6(t)) return e === t;
  if (Ho(e) && Ho(t)) return e.getTime() === t.getTime();
  const n = Object.keys(e),
    r = Object.keys(t);
  if (n.length !== r.length) return !1;
  for (const i of n) {
    const s = e[i];
    if (!r.includes(i)) return !1;
    if (i !== "ref") {
      const o = t[i];
      if (
        (Ho(s) && Ho(o)) ||
        (Mn(s) && Mn(o)) ||
        (Array.isArray(s) && Array.isArray(o))
          ? !Ls(s, o)
          : s !== o
      )
        return !1;
    }
  }
  return !0;
}
var pr = (e) => Mn(e) && !Object.keys(e).length,
  Bm = (e) => e.type === "file",
  ji = (e) => typeof e == "function",
  m4 = (e) => {
    if (!jm) return !1;
    const t = e ? e.ownerDocument : 0;
    return (
      e instanceof
      (t && t.defaultView ? t.defaultView.HTMLElement : HTMLElement)
    );
  },
  KA = (e) => e.type === "select-multiple",
  Dm = (e) => e.type === "radio",
  QX = (e) => Dm(e) || Pu(e),
  d5 = (e) => m4(e) && e.isConnected;
function ZX(e, t) {
  const n = t.slice(0, -1).length;
  let r = 0;
  for (; r < n; ) e = sn(e) ? r++ : e[t[r++]];
  return e;
}
function XX(e) {
  for (const t in e) if (e.hasOwnProperty(t) && !sn(e[t])) return !1;
  return !0;
}
function In(e, t) {
  const n = Array.isArray(t) ? t : Nm(t) ? [t] : VA(t),
    r = n.length === 1 ? e : ZX(e, n),
    i = n.length - 1,
    s = n[i];
  return (
    r && delete r[s],
    i !== 0 &&
      ((Mn(r) && pr(r)) || (Array.isArray(r) && XX(r))) &&
      In(e, n.slice(0, -1)),
    e
  );
}
var GA = (e) => {
  for (const t in e) if (ji(e[t])) return !0;
  return !1;
};
function g4(e, t = {}) {
  const n = Array.isArray(e);
  if (Mn(e) || n)
    for (const r in e)
      Array.isArray(e[r]) || (Mn(e[r]) && !GA(e[r]))
        ? ((t[r] = Array.isArray(e[r]) ? [] : {}), g4(e[r], t[r]))
        : _r(e[r]) || (t[r] = !0);
  return t;
}
function YA(e, t, n) {
  const r = Array.isArray(e);
  if (Mn(e) || r)
    for (const i in e)
      Array.isArray(e[i]) || (Mn(e[i]) && !GA(e[i]))
        ? sn(t) || N6(n[i])
          ? (n[i] = Array.isArray(e[i]) ? g4(e[i], []) : { ...g4(e[i]) })
          : YA(e[i], _r(t) ? {} : t[i], n[i])
        : (n[i] = !Ls(e[i], t[i]));
  return n;
}
var _0 = (e, t) => YA(e, t, g4(t));
const $b = { value: !1, isValid: !1 },
  Vb = { value: !0, isValid: !0 };
var QA = (e) => {
    if (Array.isArray(e)) {
      if (e.length > 1) {
        const t = e
          .filter((n) => n && n.checked && !n.disabled)
          .map((n) => n.value);
        return { value: t, isValid: !!t.length };
      }
      return e[0].checked && !e[0].disabled
        ? e[0].attributes && !sn(e[0].attributes.value)
          ? sn(e[0].value) || e[0].value === ""
            ? Vb
            : { value: e[0].value, isValid: !0 }
          : Vb
        : $b;
    }
    return $b;
  },
  ZA = (e, { valueAsNumber: t, valueAsDate: n, setValueAs: r }) =>
    sn(e)
      ? e
      : t
      ? e === ""
        ? NaN
        : e && +e
      : n && o2(e)
      ? new Date(e)
      : r
      ? r(e)
      : e;
const Wb = { isValid: !1, value: null };
var XA = (e) =>
  Array.isArray(e)
    ? e.reduce(
        (t, n) =>
          n && n.checked && !n.disabled ? { isValid: !0, value: n.value } : t,
        Wb
      )
    : Wb;
function zb(e) {
  const t = e.ref;
  return Bm(t)
    ? t.files
    : Dm(t)
    ? XA(e.refs).value
    : KA(t)
    ? [...t.selectedOptions].map(({ value: n }) => n)
    : Pu(t)
    ? QA(e.refs).value
    : ZA(sn(t.value) ? e.ref.value : t.value, e);
}
var JX = (e, t, n, r) => {
    const i = {};
    for (const s of e) {
      const o = ue(t, s);
      o && $t(i, s, o._f);
    }
    return {
      criteriaMode: n,
      names: [...e],
      fields: i,
      shouldUseNativeValidation: r,
    };
  },
  y4 = (e) => e instanceof RegExp,
  A0 = (e) =>
    sn(e)
      ? e
      : y4(e)
      ? e.source
      : Mn(e)
      ? y4(e.value)
        ? e.value.source
        : e.value
      : e,
  u3 = (e) => ({
    isOnSubmit: !e || e === yi.onSubmit,
    isOnBlur: e === yi.onBlur,
    isOnChange: e === yi.onChange,
    isOnAll: e === yi.all,
    isOnTouch: e === yi.onTouched,
  });
const Hb = "AsyncFunction";
var eJ = (e) =>
    !!e &&
    !!e.validate &&
    !!(
      (ji(e.validate) && e.validate.constructor.name === Hb) ||
      (Mn(e.validate) &&
        Object.values(e.validate).find((t) => t.constructor.name === Hb))
    ),
  tJ = (e) =>
    e.mount &&
    (e.required ||
      e.min ||
      e.max ||
      e.maxLength ||
      e.minLength ||
      e.pattern ||
      e.validate),
  O6 = (e, t, n) =>
    !n &&
    (t.watchAll ||
      t.watch.has(e) ||
      [...t.watch].some(
        (r) => e.startsWith(r) && /^\.\w+/.test(e.slice(r.length))
      ));
const h3 = (e, t, n, r) => {
  for (const i of n || Object.keys(e)) {
    const s = ue(e, i);
    if (s) {
      const { _f: o, ...l } = s;
      if (o) {
        if (o.refs && o.refs[0] && t(o.refs[0], i) && !r) return !0;
        if (o.ref && t(o.ref, o.name) && !r) return !0;
        if (h3(l, t)) break;
      } else if (Mn(l) && h3(l, t)) break;
    }
  }
};
function qb(e, t, n) {
  const r = ue(e, n);
  if (r || Nm(n)) return { error: r, name: n };
  const i = n.split(".");
  for (; i.length; ) {
    const s = i.join("."),
      o = ue(t, s),
      l = ue(e, s);
    if (o && !Array.isArray(o) && n !== s) return { name: n };
    if (l && l.type) return { name: s, error: l };
    i.pop();
  }
  return { name: n };
}
var nJ = (e, t, n, r) => {
    n(e);
    const { name: i, ...s } = e;
    return (
      pr(s) ||
      Object.keys(s).length >= Object.keys(t).length ||
      Object.keys(s).find((o) => t[o] === (!r || yi.all))
    );
  },
  rJ = (e, t, n) =>
    !e ||
    !t ||
    e === t ||
    Vr(e).some((r) => r && (n ? r === t : r.startsWith(t) || t.startsWith(r))),
  iJ = (e, t, n, r, i) =>
    i.isOnAll
      ? !1
      : !n && i.isOnTouch
      ? !(t || e)
      : (n ? r.isOnBlur : i.isOnBlur)
      ? !e
      : (n ? r.isOnChange : i.isOnChange)
      ? e
      : !0,
  sJ = (e, t) => !Mu(ue(e, t)).length && In(e, t),
  JA = (e, t, n) => {
    const r = Vr(ue(e, n));
    return $t(r, "root", t[n]), $t(e, n, r), e;
  },
  Cd = (e) => o2(e);
function Kb(e, t, n = "validate") {
  if (Cd(e) || (Array.isArray(e) && e.every(Cd)) || (Xr(e) && !e))
    return { type: n, message: Cd(e) ? e : "", ref: t };
}
var Qa = (e) => (Mn(e) && !y4(e) ? e : { value: e, message: "" }),
  B6 = async (e, t, n, r, i, s) => {
    const {
        ref: o,
        refs: l,
        required: c,
        maxLength: f,
        minLength: d,
        min: p,
        max: m,
        pattern: g,
        validate: w,
        name: b,
        valueAsNumber: x,
        mount: E,
      } = e._f,
      P = ue(n, b);
    if (!E || t.has(b)) return {};
    const _ = l ? l[0] : o,
      T = (F) => {
        i &&
          _.reportValidity &&
          (_.setCustomValidity(Xr(F) ? "" : F || ""), _.reportValidity());
      },
      M = {},
      L = Dm(o),
      O = Pu(o),
      U = L || O,
      D =
        ((x || Bm(o)) && sn(o.value) && sn(P)) ||
        (m4(o) && o.value === "") ||
        P === "" ||
        (Array.isArray(P) && !P.length),
      H = YX.bind(null, b, r, M),
      $ = (F, B, j, G = I2.maxLength, u1 = I2.minLength) => {
        const e1 = F ? B : j;
        M[b] = { type: F ? G : u1, message: e1, ref: o, ...H(F ? G : u1, e1) };
      };
    if (
      s
        ? !Array.isArray(P) || !P.length
        : c &&
          ((!U && (D || _r(P))) ||
            (Xr(P) && !P) ||
            (O && !QA(l).isValid) ||
            (L && !XA(l).isValid))
    ) {
      const { value: F, message: B } = Cd(c)
        ? { value: !!c, message: c }
        : Qa(c);
      if (
        F &&
        ((M[b] = {
          type: I2.required,
          message: B,
          ref: _,
          ...H(I2.required, B),
        }),
        !r)
      )
        return T(B), M;
    }
    if (!D && (!_r(p) || !_r(m))) {
      let F, B;
      const j = Qa(m),
        G = Qa(p);
      if (!_r(P) && !isNaN(P)) {
        const u1 = o.valueAsNumber || (P && +P);
        _r(j.value) || (F = u1 > j.value), _r(G.value) || (B = u1 < G.value);
      } else {
        const u1 = o.valueAsDate || new Date(P),
          e1 = (b1) => new Date(new Date().toDateString() + " " + b1),
          i1 = o.type == "time",
          Z = o.type == "week";
        o2(j.value) &&
          P &&
          (F = i1
            ? e1(P) > e1(j.value)
            : Z
            ? P > j.value
            : u1 > new Date(j.value)),
          o2(G.value) &&
            P &&
            (B = i1
              ? e1(P) < e1(G.value)
              : Z
              ? P < G.value
              : u1 < new Date(G.value));
      }
      if ((F || B) && ($(!!F, j.message, G.message, I2.max, I2.min), !r))
        return T(M[b].message), M;
    }
    if ((f || d) && !D && (o2(P) || (s && Array.isArray(P)))) {
      const F = Qa(f),
        B = Qa(d),
        j = !_r(F.value) && P.length > +F.value,
        G = !_r(B.value) && P.length < +B.value;
      if ((j || G) && ($(j, F.message, B.message), !r))
        return T(M[b].message), M;
    }
    if (g && !D && o2(P)) {
      const { value: F, message: B } = Qa(g);
      if (
        y4(F) &&
        !P.match(F) &&
        ((M[b] = { type: I2.pattern, message: B, ref: o, ...H(I2.pattern, B) }),
        !r)
      )
        return T(B), M;
    }
    if (w) {
      if (ji(w)) {
        const F = await w(P, n),
          B = Kb(F, _);
        if (B && ((M[b] = { ...B, ...H(I2.validate, B.message) }), !r))
          return T(B.message), M;
      } else if (Mn(w)) {
        let F = {};
        for (const B in w) {
          if (!pr(F) && !r) break;
          const j = Kb(await w[B](P, n), _, B);
          j &&
            ((F = { ...j, ...H(B, j.message) }), T(j.message), r && (M[b] = F));
        }
        if (!pr(F) && ((M[b] = { ref: _, ...F }), !r)) return M;
      }
    }
    return T(!0), M;
  };
const oJ = {
  mode: yi.onSubmit,
  reValidateMode: yi.onChange,
  shouldFocusError: !0,
};
function aJ(e = {}) {
  let t = { ...oJ, ...e },
    n = {
      submitCount: 0,
      isDirty: !1,
      isReady: !1,
      isLoading: ji(t.defaultValues),
      isValidating: !1,
      isSubmitted: !1,
      isSubmitting: !1,
      isSubmitSuccessful: !1,
      isValid: !1,
      touchedFields: {},
      dirtyFields: {},
      validatingFields: {},
      errors: t.errors || {},
      disabled: t.disabled || !1,
    };
  const r = {};
  let i =
      Mn(t.defaultValues) || Mn(t.values)
        ? yn(t.defaultValues || t.values) || {}
        : {},
    s = t.shouldUnregister ? {} : yn(i),
    o = { action: !1, mount: !1, watch: !1 },
    l = {
      mount: new Set(),
      disabled: new Set(),
      unMount: new Set(),
      array: new Set(),
      watch: new Set(),
    },
    c,
    f = 0;
  const d = {
    isDirty: !1,
    dirtyFields: !1,
    validatingFields: !1,
    touchedFields: !1,
    isValidating: !1,
    isValid: !1,
    errors: !1,
  };
  let p = { ...d };
  const m = { array: Ub(), state: Ub() },
    g = u3(t.mode),
    w = u3(t.reValidateMode),
    b = t.criteriaMode === yi.all,
    x = (g1) => (E1) => {
      clearTimeout(f), (f = setTimeout(g1, E1));
    },
    E = async (g1) => {
      if (!t.disabled && (d.isValid || p.isValid || g1)) {
        const E1 = t.resolver ? pr((await D()).errors) : await $(r, !0);
        E1 !== n.isValid && m.state.next({ isValid: E1 });
      }
    },
    P = (g1, E1) => {
      !t.disabled &&
        (d.isValidating ||
          d.validatingFields ||
          p.isValidating ||
          p.validatingFields) &&
        ((g1 || Array.from(l.mount)).forEach((j1) => {
          j1 &&
            (E1 ? $t(n.validatingFields, j1, E1) : In(n.validatingFields, j1));
        }),
        m.state.next({
          validatingFields: n.validatingFields,
          isValidating: !pr(n.validatingFields),
        }));
    },
    _ = (g1, E1 = [], j1, a1, K = !0, t1 = !0) => {
      if (a1 && j1 && !t.disabled) {
        if (((o.action = !0), t1 && Array.isArray(ue(r, g1)))) {
          const r1 = j1(ue(r, g1), a1.argA, a1.argB);
          K && $t(r, g1, r1);
        }
        if (t1 && Array.isArray(ue(n.errors, g1))) {
          const r1 = j1(ue(n.errors, g1), a1.argA, a1.argB);
          K && $t(n.errors, g1, r1), sJ(n.errors, g1);
        }
        if (
          (d.touchedFields || p.touchedFields) &&
          t1 &&
          Array.isArray(ue(n.touchedFields, g1))
        ) {
          const r1 = j1(ue(n.touchedFields, g1), a1.argA, a1.argB);
          K && $t(n.touchedFields, g1, r1);
        }
        (d.dirtyFields || p.dirtyFields) && (n.dirtyFields = _0(i, s)),
          m.state.next({
            name: g1,
            isDirty: B(g1, E1),
            dirtyFields: n.dirtyFields,
            errors: n.errors,
            isValid: n.isValid,
          });
      } else $t(s, g1, E1);
    },
    T = (g1, E1) => {
      $t(n.errors, g1, E1), m.state.next({ errors: n.errors });
    },
    M = (g1) => {
      (n.errors = g1), m.state.next({ errors: n.errors, isValid: !1 });
    },
    L = (g1, E1, j1, a1) => {
      const K = ue(r, g1);
      if (K) {
        const t1 = ue(s, g1, sn(j1) ? ue(i, g1) : j1);
        sn(t1) || (a1 && a1.defaultChecked) || E1
          ? $t(s, g1, E1 ? t1 : zb(K._f))
          : u1(g1, t1),
          o.mount && E();
      }
    },
    O = (g1, E1, j1, a1, K) => {
      let t1 = !1,
        r1 = !1;
      const m1 = { name: g1 };
      if (!t.disabled) {
        if (!j1 || a1) {
          (d.isDirty || p.isDirty) &&
            ((r1 = n.isDirty),
            (n.isDirty = m1.isDirty = B()),
            (t1 = r1 !== m1.isDirty));
          const R = Ls(ue(i, g1), E1);
          (r1 = !!ue(n.dirtyFields, g1)),
            R ? In(n.dirtyFields, g1) : $t(n.dirtyFields, g1, !0),
            (m1.dirtyFields = n.dirtyFields),
            (t1 = t1 || ((d.dirtyFields || p.dirtyFields) && r1 !== !R));
        }
        if (j1) {
          const R = ue(n.touchedFields, g1);
          R ||
            ($t(n.touchedFields, g1, j1),
            (m1.touchedFields = n.touchedFields),
            (t1 = t1 || ((d.touchedFields || p.touchedFields) && R !== j1)));
        }
        t1 && K && m.state.next(m1);
      }
      return t1 ? m1 : {};
    },
    U = (g1, E1, j1, a1) => {
      const K = ue(n.errors, g1),
        t1 = (d.isValid || p.isValid) && Xr(E1) && n.isValid !== E1;
      if (
        (t.delayError && j1
          ? ((c = x(() => T(g1, j1))), c(t.delayError))
          : (clearTimeout(f),
            (c = null),
            j1 ? $t(n.errors, g1, j1) : In(n.errors, g1)),
        (j1 ? !Ls(K, j1) : K) || !pr(a1) || t1)
      ) {
        const r1 = {
          ...a1,
          ...(t1 && Xr(E1) ? { isValid: E1 } : {}),
          errors: n.errors,
          name: g1,
        };
        (n = { ...n, ...r1 }), m.state.next(r1);
      }
    },
    D = async (g1) => {
      P(g1, !0);
      const E1 = await t.resolver(
        s,
        t.context,
        JX(g1 || l.mount, r, t.criteriaMode, t.shouldUseNativeValidation)
      );
      return P(g1), E1;
    },
    H = async (g1) => {
      const { errors: E1 } = await D(g1);
      if (g1)
        for (const j1 of g1) {
          const a1 = ue(E1, j1);
          a1 ? $t(n.errors, j1, a1) : In(n.errors, j1);
        }
      else n.errors = E1;
      return E1;
    },
    $ = async (g1, E1, j1 = { valid: !0 }) => {
      for (const a1 in g1) {
        const K = g1[a1];
        if (K) {
          const { _f: t1, ...r1 } = K;
          if (t1) {
            const m1 = l.array.has(t1.name),
              R = K._f && eJ(K._f);
            R && d.validatingFields && P([a1], !0);
            const C = await B6(
              K,
              l.disabled,
              s,
              b,
              t.shouldUseNativeValidation && !E1,
              m1
            );
            if (
              (R && d.validatingFields && P([a1]),
              C[t1.name] && ((j1.valid = !1), E1))
            )
              break;
            !E1 &&
              (ue(C, t1.name)
                ? m1
                  ? JA(n.errors, C, t1.name)
                  : $t(n.errors, t1.name, C[t1.name])
                : In(n.errors, t1.name));
          }
          !pr(r1) && (await $(r1, E1, j1));
        }
      }
      return j1.valid;
    },
    F = () => {
      for (const g1 of l.unMount) {
        const E1 = ue(r, g1);
        E1 &&
          (E1._f.refs ? E1._f.refs.every((j1) => !d5(j1)) : !d5(E1._f.ref)) &&
          h1(g1);
      }
      l.unMount = new Set();
    },
    B = (g1, E1) => !t.disabled && (g1 && E1 && $t(s, g1, E1), !Ls(k1(), i)),
    j = (g1, E1, j1) =>
      qA(
        g1,
        l,
        { ...(o.mount ? s : sn(E1) ? i : o2(g1) ? { [g1]: E1 } : E1) },
        j1,
        E1
      ),
    G = (g1) =>
      Mu(ue(o.mount ? s : i, g1, t.shouldUnregister ? ue(i, g1, []) : [])),
    u1 = (g1, E1, j1 = {}) => {
      const a1 = ue(r, g1);
      let K = E1;
      if (a1) {
        const t1 = a1._f;
        t1 &&
          (!t1.disabled && $t(s, g1, ZA(E1, t1)),
          (K = m4(t1.ref) && _r(E1) ? "" : E1),
          KA(t1.ref)
            ? [...t1.ref.options].forEach(
                (r1) => (r1.selected = K.includes(r1.value))
              )
            : t1.refs
            ? Pu(t1.ref)
              ? t1.refs.length > 1
                ? t1.refs.forEach(
                    (r1) =>
                      (!r1.defaultChecked || !r1.disabled) &&
                      (r1.checked = Array.isArray(K)
                        ? !!K.find((m1) => m1 === r1.value)
                        : K === r1.value)
                  )
                : t1.refs[0] && (t1.refs[0].checked = !!K)
              : t1.refs.forEach((r1) => (r1.checked = r1.value === K))
            : Bm(t1.ref)
            ? (t1.ref.value = "")
            : ((t1.ref.value = K),
              t1.ref.type || m.state.next({ name: g1, values: yn(s) })));
      }
      (j1.shouldDirty || j1.shouldTouch) &&
        O(g1, K, j1.shouldTouch, j1.shouldDirty, !0),
        j1.shouldValidate && o1(g1);
    },
    e1 = (g1, E1, j1) => {
      for (const a1 in E1) {
        const K = E1[a1],
          t1 = `${g1}.${a1}`,
          r1 = ue(r, t1);
        (l.array.has(g1) || Mn(K) || (r1 && !r1._f)) && !Ho(K)
          ? e1(t1, K, j1)
          : u1(t1, K, j1);
      }
    },
    i1 = (g1, E1, j1 = {}) => {
      const a1 = ue(r, g1),
        K = l.array.has(g1),
        t1 = yn(E1);
      $t(s, g1, t1),
        K
          ? (m.array.next({ name: g1, values: yn(s) }),
            (d.isDirty || d.dirtyFields || p.isDirty || p.dirtyFields) &&
              j1.shouldDirty &&
              m.state.next({
                name: g1,
                dirtyFields: _0(i, s),
                isDirty: B(g1, t1),
              }))
          : a1 && !a1._f && !_r(t1)
          ? e1(g1, t1, j1)
          : u1(g1, t1, j1),
        O6(g1, l) && m.state.next({ ...n }),
        m.state.next({ name: o.mount ? g1 : void 0, values: yn(s) });
    },
    Z = async (g1) => {
      o.mount = !0;
      const E1 = g1.target;
      let j1 = E1.name,
        a1 = !0;
      const K = ue(r, j1),
        t1 = (r1) => {
          a1 =
            Number.isNaN(r1) ||
            (Ho(r1) && isNaN(r1.getTime())) ||
            Ls(r1, ue(s, j1, r1));
        };
      if (K) {
        let r1, m1;
        const R = E1.type ? zb(K._f) : UA(g1),
          C = g1.type === p4.BLUR || g1.type === p4.FOCUS_OUT,
          k =
            (!tJ(K._f) && !t.resolver && !ue(n.errors, j1) && !K._f.deps) ||
            iJ(C, ue(n.touchedFields, j1), n.isSubmitted, w, g),
          q = O6(j1, l, C);
        $t(s, j1, R),
          C
            ? (K._f.onBlur && K._f.onBlur(g1), c && c(0))
            : K._f.onChange && K._f.onChange(g1);
        const s1 = O(j1, R, C),
          v1 = !pr(s1) || q;
        if ((!C && m.state.next({ name: j1, type: g1.type, values: yn(s) }), k))
          return (
            (d.isValid || p.isValid) &&
              (t.mode === "onBlur" ? C && E() : C || E()),
            v1 && m.state.next({ name: j1, ...(q ? {} : s1) })
          );
        if ((!C && q && m.state.next({ ...n }), t.resolver)) {
          const { errors: w1 } = await D([j1]);
          if ((t1(R), a1)) {
            const $1 = qb(n.errors, r, j1),
              he = qb(w1, r, $1.name || j1);
            (r1 = he.error), (j1 = he.name), (m1 = pr(w1));
          }
        } else
          P([j1], !0),
            (r1 = (await B6(K, l.disabled, s, b, t.shouldUseNativeValidation))[
              j1
            ]),
            P([j1]),
            t1(R),
            a1 &&
              (r1
                ? (m1 = !1)
                : (d.isValid || p.isValid) && (m1 = await $(r, !0)));
        a1 && (K._f.deps && o1(K._f.deps), U(j1, m1, r1, s1));
      }
    },
    b1 = (g1, E1) => {
      if (ue(n.errors, E1) && g1.focus) return g1.focus(), 1;
    },
    o1 = async (g1, E1 = {}) => {
      let j1, a1;
      const K = Vr(g1);
      if (t.resolver) {
        const t1 = await H(sn(g1) ? g1 : K);
        (j1 = pr(t1)), (a1 = g1 ? !K.some((r1) => ue(t1, r1)) : j1);
      } else
        g1
          ? ((a1 = (
              await Promise.all(
                K.map(async (t1) => {
                  const r1 = ue(r, t1);
                  return await $(r1 && r1._f ? { [t1]: r1 } : r1);
                })
              )
            ).every(Boolean)),
            !(!a1 && !n.isValid) && E())
          : (a1 = j1 = await $(r));
      return (
        m.state.next({
          ...(!o2(g1) || ((d.isValid || p.isValid) && j1 !== n.isValid)
            ? {}
            : { name: g1 }),
          ...(t.resolver || !g1 ? { isValid: j1 } : {}),
          errors: n.errors,
        }),
        E1.shouldFocus && !a1 && h3(r, b1, g1 ? K : l.mount),
        a1
      );
    },
    k1 = (g1) => {
      const E1 = { ...(o.mount ? s : i) };
      return sn(g1) ? E1 : o2(g1) ? ue(E1, g1) : g1.map((j1) => ue(E1, j1));
    },
    Y1 = (g1, E1) => ({
      invalid: !!ue((E1 || n).errors, g1),
      isDirty: !!ue((E1 || n).dirtyFields, g1),
      error: ue((E1 || n).errors, g1),
      isValidating: !!ue(n.validatingFields, g1),
      isTouched: !!ue((E1 || n).touchedFields, g1),
    }),
    G1 = (g1) => {
      g1 && Vr(g1).forEach((E1) => In(n.errors, E1)),
        m.state.next({ errors: g1 ? n.errors : {} });
    },
    M1 = (g1, E1, j1) => {
      const a1 = (ue(r, g1, { _f: {} })._f || {}).ref,
        K = ue(n.errors, g1) || {},
        { ref: t1, message: r1, type: m1, ...R } = K;
      $t(n.errors, g1, { ...R, ...E1, ref: a1 }),
        m.state.next({ name: g1, errors: n.errors, isValid: !1 }),
        j1 && j1.shouldFocus && a1 && a1.focus && a1.focus();
    },
    Q1 = (g1, E1) =>
      ji(g1)
        ? m.state.subscribe({ next: (j1) => g1(j(void 0, E1), j1) })
        : j(g1, E1, !0),
    re = (g1) =>
      m.state.subscribe({
        next: (E1) => {
          rJ(g1.name, E1.name, g1.exact) &&
            nJ(E1, g1.formState || d, gt, g1.reRenderRoot) &&
            g1.callback({ values: { ...s }, ...n, ...E1 });
        },
      }).unsubscribe,
    d1 = (g1) => (
      (o.mount = !0),
      (p = { ...p, ...g1.formState }),
      re({ ...g1, formState: p })
    ),
    h1 = (g1, E1 = {}) => {
      for (const j1 of g1 ? Vr(g1) : l.mount)
        l.mount.delete(j1),
          l.array.delete(j1),
          E1.keepValue || (In(r, j1), In(s, j1)),
          !E1.keepError && In(n.errors, j1),
          !E1.keepDirty && In(n.dirtyFields, j1),
          !E1.keepTouched && In(n.touchedFields, j1),
          !E1.keepIsValidating && In(n.validatingFields, j1),
          !t.shouldUnregister && !E1.keepDefaultValue && In(i, j1);
      m.state.next({ values: yn(s) }),
        m.state.next({ ...n, ...(E1.keepDirty ? { isDirty: B() } : {}) }),
        !E1.keepIsValid && E();
    },
    y1 = ({ disabled: g1, name: E1 }) => {
      ((Xr(g1) && o.mount) || g1 || l.disabled.has(E1)) &&
        (g1 ? l.disabled.add(E1) : l.disabled.delete(E1));
    },
    A1 = (g1, E1 = {}) => {
      let j1 = ue(r, g1);
      const a1 = Xr(E1.disabled) || Xr(t.disabled);
      return (
        $t(r, g1, {
          ...(j1 || {}),
          _f: {
            ...(j1 && j1._f ? j1._f : { ref: { name: g1 } }),
            name: g1,
            mount: !0,
            ...E1,
          },
        }),
        l.mount.add(g1),
        j1
          ? y1({
              disabled: Xr(E1.disabled) ? E1.disabled : t.disabled,
              name: g1,
            })
          : L(g1, !0, E1.value),
        {
          ...(a1 ? { disabled: E1.disabled || t.disabled } : {}),
          ...(t.progressive
            ? {
                required: !!E1.required,
                min: A0(E1.min),
                max: A0(E1.max),
                minLength: A0(E1.minLength),
                maxLength: A0(E1.maxLength),
                pattern: A0(E1.pattern),
              }
            : {}),
          name: g1,
          onChange: Z,
          onBlur: Z,
          ref: (K) => {
            if (K) {
              A1(g1, E1), (j1 = ue(r, g1));
              const t1 =
                  (sn(K.value) &&
                    K.querySelectorAll &&
                    K.querySelectorAll("input,select,textarea")[0]) ||
                  K,
                r1 = QX(t1),
                m1 = j1._f.refs || [];
              if (r1 ? m1.find((R) => R === t1) : t1 === j1._f.ref) return;
              $t(r, g1, {
                _f: {
                  ...j1._f,
                  ...(r1
                    ? {
                        refs: [
                          ...m1.filter(d5),
                          t1,
                          ...(Array.isArray(ue(i, g1)) ? [{}] : []),
                        ],
                        ref: { type: t1.type, name: g1 },
                      }
                    : { ref: t1 }),
                },
              }),
                L(g1, !1, void 0, t1);
            } else
              (j1 = ue(r, g1, {})),
                j1._f && (j1._f.mount = !1),
                (t.shouldUnregister || E1.shouldUnregister) &&
                  !($A(l.array, g1) && o.action) &&
                  l.unMount.add(g1);
          },
        }
      );
    },
    L1 = () => t.shouldFocusError && h3(r, b1, l.mount),
    V1 = (g1) => {
      Xr(g1) &&
        (m.state.next({ disabled: g1 }),
        h3(
          r,
          (E1, j1) => {
            const a1 = ue(r, j1);
            a1 &&
              ((E1.disabled = a1._f.disabled || g1),
              Array.isArray(a1._f.refs) &&
                a1._f.refs.forEach((K) => {
                  K.disabled = a1._f.disabled || g1;
                }));
          },
          0,
          !1
        ));
    },
    ie = (g1, E1) => async (j1) => {
      let a1;
      j1 &&
        (j1.preventDefault && j1.preventDefault(), j1.persist && j1.persist());
      let K = yn(s);
      if ((m.state.next({ isSubmitting: !0 }), t.resolver)) {
        const { errors: t1, values: r1 } = await D();
        (n.errors = t1), (K = r1);
      } else await $(r);
      if (l.disabled.size) for (const t1 of l.disabled) $t(K, t1, void 0);
      if ((In(n.errors, "root"), pr(n.errors))) {
        m.state.next({ errors: {} });
        try {
          await g1(K, j1);
        } catch (t1) {
          a1 = t1;
        }
      } else E1 && (await E1({ ...n.errors }, j1)), L1(), setTimeout(L1);
      if (
        (m.state.next({
          isSubmitted: !0,
          isSubmitting: !1,
          isSubmitSuccessful: pr(n.errors) && !a1,
          submitCount: n.submitCount + 1,
          errors: n.errors,
        }),
        a1)
      )
        throw a1;
    },
    ae = (g1, E1 = {}) => {
      ue(r, g1) &&
        (sn(E1.defaultValue)
          ? i1(g1, yn(ue(i, g1)))
          : (i1(g1, E1.defaultValue), $t(i, g1, yn(E1.defaultValue))),
        E1.keepTouched || In(n.touchedFields, g1),
        E1.keepDirty ||
          (In(n.dirtyFields, g1),
          (n.isDirty = E1.defaultValue ? B(g1, yn(ue(i, g1))) : B())),
        E1.keepError || (In(n.errors, g1), d.isValid && E()),
        m.state.next({ ...n }));
    },
    Be = (g1, E1 = {}) => {
      const j1 = g1 ? yn(g1) : i,
        a1 = yn(j1),
        K = pr(g1),
        t1 = K ? i : a1;
      if ((E1.keepDefaultValues || (i = j1), !E1.keepValues)) {
        if (E1.keepDirtyValues) {
          const r1 = new Set([...l.mount, ...Object.keys(_0(i, s))]);
          for (const m1 of Array.from(r1))
            ue(n.dirtyFields, m1) ? $t(t1, m1, ue(s, m1)) : i1(m1, ue(t1, m1));
        } else {
          if (jm && sn(g1))
            for (const r1 of l.mount) {
              const m1 = ue(r, r1);
              if (m1 && m1._f) {
                const R = Array.isArray(m1._f.refs) ? m1._f.refs[0] : m1._f.ref;
                if (m4(R)) {
                  const C = R.closest("form");
                  if (C) {
                    C.reset();
                    break;
                  }
                }
              }
            }
          for (const r1 of l.mount) i1(r1, ue(t1, r1));
        }
        (s = yn(t1)),
          m.array.next({ values: { ...t1 } }),
          m.state.next({ values: { ...t1 } });
      }
      (l = {
        mount: E1.keepDirtyValues ? l.mount : new Set(),
        unMount: new Set(),
        array: new Set(),
        disabled: new Set(),
        watch: new Set(),
        watchAll: !1,
        focus: "",
      }),
        (o.mount = !d.isValid || !!E1.keepIsValid || !!E1.keepDirtyValues),
        (o.watch = !!t.shouldUnregister),
        m.state.next({
          submitCount: E1.keepSubmitCount ? n.submitCount : 0,
          isDirty: K
            ? !1
            : E1.keepDirty
            ? n.isDirty
            : !!(E1.keepDefaultValues && !Ls(g1, i)),
          isSubmitted: E1.keepIsSubmitted ? n.isSubmitted : !1,
          dirtyFields: K
            ? {}
            : E1.keepDirtyValues
            ? E1.keepDefaultValues && s
              ? _0(i, s)
              : n.dirtyFields
            : E1.keepDefaultValues && g1
            ? _0(i, g1)
            : E1.keepDirty
            ? n.dirtyFields
            : {},
          touchedFields: E1.keepTouched ? n.touchedFields : {},
          errors: E1.keepErrors ? n.errors : {},
          isSubmitSuccessful: E1.keepIsSubmitSuccessful
            ? n.isSubmitSuccessful
            : !1,
          isSubmitting: !1,
        });
    },
    Ve = (g1, E1) => Be(ji(g1) ? g1(s) : g1, E1),
    ce = (g1, E1 = {}) => {
      const j1 = ue(r, g1),
        a1 = j1 && j1._f;
      if (a1) {
        const K = a1.refs ? a1.refs[0] : a1.ref;
        K.focus && (K.focus(), E1.shouldSelect && ji(K.select) && K.select());
      }
    },
    gt = (g1) => {
      n = { ...n, ...g1 };
    },
    je = {
      control: {
        register: A1,
        unregister: h1,
        getFieldState: Y1,
        handleSubmit: ie,
        setError: M1,
        _subscribe: re,
        _runSchema: D,
        _getWatch: j,
        _getDirty: B,
        _setValid: E,
        _setFieldArray: _,
        _setDisabledField: y1,
        _setErrors: M,
        _getFieldArray: G,
        _reset: Be,
        _resetDefaultValues: () =>
          ji(t.defaultValues) &&
          t.defaultValues().then((g1) => {
            Ve(g1, t.resetOptions), m.state.next({ isLoading: !1 });
          }),
        _removeUnmounted: F,
        _disableForm: V1,
        _subjects: m,
        _proxyFormState: d,
        get _fields() {
          return r;
        },
        get _formValues() {
          return s;
        },
        get _state() {
          return o;
        },
        set _state(g1) {
          o = g1;
        },
        get _defaultValues() {
          return i;
        },
        get _names() {
          return l;
        },
        set _names(g1) {
          l = g1;
        },
        get _formState() {
          return n;
        },
        get _options() {
          return t;
        },
        set _options(g1) {
          t = { ...t, ...g1 };
        },
      },
      subscribe: d1,
      trigger: o1,
      register: A1,
      handleSubmit: ie,
      watch: Q1,
      setValue: i1,
      getValues: k1,
      reset: Ve,
      resetField: ae,
      clearErrors: G1,
      unregister: h1,
      setError: M1,
      setFocus: ce,
      getFieldState: Y1,
    };
  return { ...je, formControl: je };
}
var _s = () => {
    const e = typeof performance > "u" ? Date.now() : performance.now() * 1e3;
    return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (t) => {
      const n = (Math.random() * 16 + e) % 16 | 0;
      return (t == "x" ? n : (n & 3) | 8).toString(16);
    });
  },
  f5 = (e, t, n = {}) =>
    n.shouldFocus || sn(n.shouldFocus)
      ? n.focusName || `${e}.${sn(n.focusIndex) ? t : n.focusIndex}.`
      : "",
  h5 = (e, t) => [...e, ...Vr(t)],
  p5 = (e) => (Array.isArray(e) ? e.map(() => {}) : void 0);
function m5(e, t, n) {
  return [...e.slice(0, t), ...Vr(n), ...e.slice(t)];
}
var g5 = (e, t, n) =>
    Array.isArray(e)
      ? (sn(e[n]) && (e[n] = void 0), e.splice(n, 0, e.splice(t, 1)[0]), e)
      : [],
  y5 = (e, t) => [...Vr(t), ...Vr(e)];
function lJ(e, t) {
  let n = 0;
  const r = [...e];
  for (const i of t) r.splice(i - n, 1), n++;
  return Mu(r).length ? r : [];
}
var v5 = (e, t) =>
    sn(t)
      ? []
      : lJ(
          e,
          Vr(t).sort((n, r) => n - r)
        ),
  w5 = (e, t, n) => {
    [e[t], e[n]] = [e[n], e[t]];
  },
  Gb = (e, t, n) => ((e[t] = n), e);
function eT(e) {
  const t = $n(),
    {
      control: n = t.control,
      name: r,
      keyName: i = "id",
      shouldUnregister: s,
      rules: o,
    } = e,
    [l, c] = st.useState(n._getFieldArray(r)),
    f = st.useRef(n._getFieldArray(r).map(_s)),
    d = st.useRef(l),
    p = st.useRef(r),
    m = st.useRef(!1);
  (p.current = r),
    (d.current = l),
    n._names.array.add(r),
    o && n.register(r, o),
    st.useEffect(
      () =>
        n._subjects.array.subscribe({
          next: ({ values: L, name: O }) => {
            if (O === p.current || !O) {
              const U = ue(L, p.current);
              Array.isArray(U) && (c(U), (f.current = U.map(_s)));
            }
          },
        }).unsubscribe,
      [n]
    );
  const g = st.useCallback(
      (L) => {
        (m.current = !0), n._setFieldArray(r, L);
      },
      [n, r]
    ),
    w = (L, O) => {
      const U = Vr(yn(L)),
        D = h5(n._getFieldArray(r), U);
      (n._names.focus = f5(r, D.length - 1, O)),
        (f.current = h5(f.current, U.map(_s))),
        g(D),
        c(D),
        n._setFieldArray(r, D, h5, { argA: p5(L) });
    },
    b = (L, O) => {
      const U = Vr(yn(L)),
        D = y5(n._getFieldArray(r), U);
      (n._names.focus = f5(r, 0, O)),
        (f.current = y5(f.current, U.map(_s))),
        g(D),
        c(D),
        n._setFieldArray(r, D, y5, { argA: p5(L) });
    },
    x = (L) => {
      const O = v5(n._getFieldArray(r), L);
      (f.current = v5(f.current, L)),
        g(O),
        c(O),
        !Array.isArray(ue(n._fields, r)) && $t(n._fields, r, void 0),
        n._setFieldArray(r, O, v5, { argA: L });
    },
    E = (L, O, U) => {
      const D = Vr(yn(O)),
        H = m5(n._getFieldArray(r), L, D);
      (n._names.focus = f5(r, L, U)),
        (f.current = m5(f.current, L, D.map(_s))),
        g(H),
        c(H),
        n._setFieldArray(r, H, m5, { argA: L, argB: p5(O) });
    },
    P = (L, O) => {
      const U = n._getFieldArray(r);
      w5(U, L, O),
        w5(f.current, L, O),
        g(U),
        c(U),
        n._setFieldArray(r, U, w5, { argA: L, argB: O }, !1);
    },
    _ = (L, O) => {
      const U = n._getFieldArray(r);
      g5(U, L, O),
        g5(f.current, L, O),
        g(U),
        c(U),
        n._setFieldArray(r, U, g5, { argA: L, argB: O }, !1);
    },
    T = (L, O) => {
      const U = yn(O),
        D = Gb(n._getFieldArray(r), L, U);
      (f.current = [...D].map((H, $) => (!H || $ === L ? _s() : f.current[$]))),
        g(D),
        c([...D]),
        n._setFieldArray(r, D, Gb, { argA: L, argB: U }, !0, !1);
    },
    M = (L) => {
      const O = Vr(yn(L));
      (f.current = O.map(_s)),
        g([...O]),
        c([...O]),
        n._setFieldArray(r, [...O], (U) => U, {}, !0, !1);
    };
  return (
    st.useEffect(() => {
      if (
        ((n._state.action = !1),
        O6(r, n._names) && n._subjects.state.next({ ...n._formState }),
        m.current &&
          (!u3(n._options.mode).isOnSubmit || n._formState.isSubmitted) &&
          !u3(n._options.reValidateMode).isOnSubmit)
      )
        if (n._options.resolver)
          n._runSchema([r]).then((L) => {
            const O = ue(L.errors, r),
              U = ue(n._formState.errors, r);
            (U
              ? (!O && U.type) ||
                (O && (U.type !== O.type || U.message !== O.message))
              : O && O.type) &&
              (O ? $t(n._formState.errors, r, O) : In(n._formState.errors, r),
              n._subjects.state.next({ errors: n._formState.errors }));
          });
        else {
          const L = ue(n._fields, r);
          L &&
            L._f &&
            !(
              u3(n._options.reValidateMode).isOnSubmit &&
              u3(n._options.mode).isOnSubmit
            ) &&
            B6(
              L,
              n._names.disabled,
              n._formValues,
              n._options.criteriaMode === yi.all,
              n._options.shouldUseNativeValidation,
              !0
            ).then(
              (O) =>
                !pr(O) &&
                n._subjects.state.next({
                  errors: JA(n._formState.errors, O, r),
                })
            );
        }
      n._subjects.state.next({ name: r, values: yn(n._formValues) }),
        n._names.focus &&
          h3(n._fields, (L, O) => {
            if (n._names.focus && O.startsWith(n._names.focus) && L.focus)
              return L.focus(), 1;
          }),
        (n._names.focus = ""),
        n._setValid(),
        (m.current = !1);
    }, [l, r, n]),
    st.useEffect(
      () => (
        !ue(n._formValues, r) && n._setFieldArray(r),
        () => {
          const L = (O, U) => {
            const D = ue(n._fields, O);
            D && D._f && (D._f.mount = U);
          };
          n._options.shouldUnregister || s ? n.unregister(r) : L(r, !1);
        }
      ),
      [r, n, i, s]
    ),
    {
      swap: st.useCallback(P, [g, r, n]),
      move: st.useCallback(_, [g, r, n]),
      prepend: st.useCallback(b, [g, r, n]),
      append: st.useCallback(w, [g, r, n]),
      remove: st.useCallback(x, [g, r, n]),
      insert: st.useCallback(E, [g, r, n]),
      update: st.useCallback(T, [g, r, n]),
      replace: st.useCallback(M, [g, r, n]),
      fields: st.useMemo(
        () => l.map((L, O) => ({ ...L, [i]: f.current[O] || _s() })),
        [l, i]
      ),
    }
  );
}
function tT(e = {}) {
  const t = st.useRef(void 0),
    n = st.useRef(void 0),
    [r, i] = st.useState({
      isDirty: !1,
      isValidating: !1,
      isLoading: ji(e.defaultValues),
      isSubmitted: !1,
      isSubmitting: !1,
      isSubmitSuccessful: !1,
      isValid: !1,
      submitCount: 0,
      dirtyFields: {},
      touchedFields: {},
      validatingFields: {},
      errors: e.errors || {},
      disabled: e.disabled || !1,
      isReady: !1,
      defaultValues: ji(e.defaultValues) ? void 0 : e.defaultValues,
    });
  t.current ||
    ((t.current = { ...(e.formControl ? e.formControl : aJ(e)), formState: r }),
    e.formControl &&
      e.defaultValues &&
      !ji(e.defaultValues) &&
      e.formControl.reset(e.defaultValues, e.resetOptions));
  const s = t.current.control;
  return (
    (s._options = e),
    Om(() => {
      const o = s._subscribe({
        formState: s._proxyFormState,
        callback: () => i({ ...s._formState }),
        reRenderRoot: !0,
      });
      return i((l) => ({ ...l, isReady: !0 })), (s._formState.isReady = !0), o;
    }, [s]),
    st.useEffect(() => s._disableForm(e.disabled), [s, e.disabled]),
    st.useEffect(() => {
      e.mode && (s._options.mode = e.mode),
        e.reValidateMode && (s._options.reValidateMode = e.reValidateMode),
        e.errors && !pr(e.errors) && s._setErrors(e.errors);
    }, [s, e.errors, e.mode, e.reValidateMode]),
    st.useEffect(() => {
      e.shouldUnregister && s._subjects.state.next({ values: s._getWatch() });
    }, [s, e.shouldUnregister]),
    st.useEffect(() => {
      if (s._proxyFormState.isDirty) {
        const o = s._getDirty();
        o !== r.isDirty && s._subjects.state.next({ isDirty: o });
      }
    }, [s, r.isDirty]),
    st.useEffect(() => {
      e.values && !Ls(e.values, n.current)
        ? (s._reset(e.values, s._options.resetOptions),
          (n.current = e.values),
          i((o) => ({ ...o })))
        : s._resetDefaultValues();
    }, [s, e.values]),
    st.useEffect(() => {
      s._state.mount || (s._setValid(), (s._state.mount = !0)),
        s._state.watch &&
          ((s._state.watch = !1), s._subjects.state.next({ ...s._formState })),
        s._removeUnmounted();
    }),
    (t.current.formState = HA(r, s)),
    t.current
  );
}
const D6 = ({ name: e, label: t, icon: n, defaultValue: r = !1 }) => {
    const { control: i } = $n();
    return v.jsx(pf, {
      name: e,
      control: i,
      defaultValue: r,
      render: ({ field: { onChange: s, value: o } }) =>
        v.jsxs("div", {
          className:
            "flex items-center justify-between py-2 px-2 bg-gray-700 rounded-lg",
          children: [
            v.jsxs("div", {
              className: "flex items-center gap-3",
              children: [
                v.jsx("div", {
                  className: me(
                    "transition-colors",
                    o ? "text-blue-300" : "text-gray-550"
                  ),
                  children: n,
                }),
                v.jsx("span", {
                  className: "text-[14px] leading-[17px] font-bold",
                  children: t,
                }),
              ],
            }),
            v.jsx("button", {
              type: "button",
              role: "switch",
              "aria-checked": o,
              onClick: () => s(!o),
              className: me(
                "relative inline-flex h-6 w-[38px] items-center rounded-full transition-colors focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-ring",
                o ? "bg-blue-300" : "bg-gray-375"
              ),
              children: v.jsx("span", {
                className: me(
                  "inline-block h-5 w-5 transform rounded-full transition-transform bg-white",
                  o ? "translate-x-4" : "translate-x-0.5"
                ),
              }),
            }),
          ],
        }),
    });
  },
  uJ = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 16,
        height: 16,
        viewBox: "0 0 16 16",
        fill: "none",
        ...e,
      },
      N.createElement("path", {
        fill: "currentColor",
        fillRule: "evenodd",
        d: "m13.58 13.28-.78-3.13 2.54-2.08a1.8 1.8 0 0 0-1.01-3.2l-3.39-.25-1.3-3.05a1.8 1.8 0 0 0-3.32 0l-1.3 3.05-3.35.26a1.8 1.8 0 0 0-1 3.2l1.21.98c.45.36 1.07.7 1.76.87-.35.43-.6.92-.72 1.4l-.5 1.92a1.8 1.8 0 0 0 2.66 2l2.9-1.71 2.93 1.73a1.8 1.8 0 0 0 2.67-1.99Zm-1.13.29-.87-3.48a.62.62 0 0 1 .22-.63l2.8-2.3a.64.64 0 0 0-.36-1.12l-3.67-.28a.68.68 0 0 1-.58-.4L8.57 2.04a.64.64 0 0 0-1.17 0L5.97 5.37a.68.68 0 0 1-.57.4l-3.64.27a.64.64 0 0 0-.35 1.13l1.2.98a3.1 3.1 0 0 0 2.23.71L8 8.39h.03c.13-.02.26.04.32.15.08.15.02.33-.13.4l-.1.04-2.85 1.11c-.6.3-1.05.92-1.21 1.53l-.5 1.92c-.15.55.44 1 .93.71l3.14-1.86c.22-.13.5-.13.72 0l3.16 1.88a.64.64 0 0 0 .95-.7Z",
        clipRule: "evenodd",
      })
    ),
  cJ = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 16,
        height: 16,
        viewBox: "0 0 16 16",
        fill: "none",
        ...e,
      },
      N.createElement("path", {
        fill: "currentColor",
        fillRule: "evenodd",
        d: "M5.23.6H3.24c-.96 0-1.82.62-2.14 1.52l-1 2.85c-.32.9.18 1.82 1 2.1v6.05a2.28 2.28 0 0 0 2.28 2.27h9.32a2.28 2.28 0 0 0 2.27-2.27V7.04c.78-.31 1.24-1.2.94-2.07L14.9 2.12A2.27 2.27 0 0 0 12.76.61H5.23Zm5.07 1.17H8.58v4.22h2.74L10.3 1.77Zm1.74 5.39h1.77v5.96c0 .6-.5 1.11-1.11 1.11H3.38c-.6 0-1.1-.5-1.1-1.1V7.15h9.76ZM4.66 5.99l1.01-4.22h1.75v4.22H4.66Zm-1.2 0 1.02-4.22H3.24c-.47 0-.89.3-1.04.74L1.19 5.36c-.1.3.12.63.45.63h1.82Zm9.05 0L11.5 1.77h1.26c.47 0 .89.3 1.04.74l1.01 2.85c.1.3-.12.63-.45.63h-1.85Z",
        clipRule: "evenodd",
      }),
      N.createElement("path", {
        fill: "currentColor",
        fillRule: "evenodd",
        d: "M3.7 9.65c0-.64.52-1.16 1.16-1.16h1.97c.63 0 1.16.52 1.16 1.16v5.16a.53.53 0 0 1-1.06 0V9.65a.1.1 0 0 0-.1-.1H4.86a.1.1 0 0 0-.1.1v5.16a.53.53 0 0 1-1.06 0V9.65ZM10.15 9.54v1.42h1.41V9.54h-1.4Zm-1.05-.2c0-.47.37-.85.84-.85h1.84c.46 0 .84.38.84.84v1.84c0 .46-.38.84-.84.84H9.94a.85.85 0 0 1-.84-.84V9.33Z",
        clipRule: "evenodd",
      })
    ),
  F6 = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 16,
        height: 16,
        viewBox: "0 0 16 16",
        fill: "none",
        ...e,
      },
      N.createElement("path", {
        fill: "currentColor",
        d: "M8 3.6c1.2 0 2.28.48 3.08 1.26a.68.68 0 0 1 1.31.21v4.85c0 .61.52 1.12 1.13 1.12.62 0 1.13-.5 1.13-1.12V8a6.65 6.65 0 1 0-3.82 6.02.68.68 0 1 1 .58 1.22A8 8 0 1 1 16 8v1.92a2.49 2.49 0 0 1-2.49 2.47c-1 0-1.86-.6-2.25-1.45A4.38 4.38 0 0 1 3.6 8 4.4 4.4 0 0 1 8 3.6ZM4.96 8a3.04 3.04 0 0 0 6.08.04v-.08A3.04 3.04 0 0 0 4.96 8Z",
      })
    ),
  U6 = ({ placeholder: e, register: t, name: n }) => {
    const { t: r } = Ze();
    return v.jsx("input", {
      type: "text",
      className:
        "text-blue-300 font-bold bg-white/0 text-[14px] leading-[17px] py-[3.5px] focus-within:outline-none w-full placeholder:text-[14px] placeholder:text-gray-550 placeholder:font-normal",
      placeholder: e,
      ...t(n, { required: r("giveaway.form.fields.errors.required") }),
    });
  },
  nT = ({
    name: e,
    register: t,
    placeholder: n,
    classes: r,
    max: i,
    step: s = 1,
    min: o = 1,
  }) => {
    const { t: l } = Ze();
    return v.jsx("input", {
      min: o,
      step: s,
      max: i,
      type: "number",
      onWheel: (c) => c.target.blur(),
      inputMode: "numeric",
      placeholder: n,
      className: me(
        "text-blue-300 font-bold bg-white/0 text-[14px] leading-[17px] py-[3.5px] focus-within:outline-none w-full placeholder:text-[14px] placeholder:text-gray-550 placeholder:font-normal",
        r
      ),
      ...t(e, {
        required: l("giveaway.form.fields.errors.required"),
        min: {
          value: o,
          message: l("giveaway.form.fields.errors.min", { min: o }),
        },
        max: {
          value: i,
          message: l("giveaway.form.fields.errors.max", { max: i }),
        },
        valueAsNumber: !0,
      }),
    });
  },
  rT = ({
    name: e,
    register: t,
    placeholder: n,
    classes: r,
    step: i = 0.01,
    min: s = 0.05,
  }) => {
    const { t: o } = Ze();
    return v.jsx("input", {
      min: s,
      step: i,
      type: "number",
      inputMode: "decimal",
      onWheel: (l) => l.target.blur(),
      placeholder: n,
      className: me(
        "text-blue-300 font-bold bg-white/0 text-[14px] leading-[17px] py-[3.5px] focus-within:outline-none w-full placeholder:text-[14px] placeholder:text-gray-550 placeholder:font-normal",
        r
      ),
      ...t(e, {
        required: o("giveaway.form.fields.errors.required"),
        min: {
          value: s,
          message: o("giveaway.form.fields.errors.min", { min: s }),
        },
        valueAsNumber: !0,
        pattern: {
          value: /^[0-9]+(\.[0-9]{1,2})?$/,
          message: o("giveaway.form.fields.errors.decimal"),
        },
      }),
    });
  },
  dJ = () => {
    const { control: e, register: t } = $n(),
      { t: n } = Ze(),
      {
        fields: r,
        append: i,
        remove: s,
      } = eT({ control: e, name: "channelUsernames" }),
      o = Rr({ name: "channelUsernames" }) || [];
    return v.jsx("div", {
      className: "flex flex-col gap-[1px]",
      children: v.jsx(ss, {
        children: r.map((l, c) => {
          var f, d;
          return c === 0
            ? v.jsxs(
                "div",
                {
                  className: me(
                    "grid grid-cols-[16px_1fr_74px] gap-x-3 items-center py-1.5 px-2 bg-gray-700",
                    r.length > 1 && c === 0 && "rounded-t-lg",
                    r.length === 1 && "rounded-lg"
                  ),
                  children: [
                    v.jsx(F6, {
                      className: me(
                        "mx-auto",
                        (f = o[c]) != null && f.value
                          ? "text-blue-300"
                          : "text-gray-550"
                      ),
                    }),
                    v.jsx(U6, {
                      name: `channelUsernames.${c}.value`,
                      register: t,
                      placeholder: n(
                        "giveaway.form.fields.channelUsernames.placeholder"
                      ),
                    }),
                    v.jsx(He, {
                      classes: "text-[12px]",
                      disabled: r.length >= 5,
                      onClick: () => i({ value: "" }),
                      children: n(
                        "giveaway.form.fields.channelUsernames.button.add"
                      ),
                    }),
                  ],
                },
                l.id
              )
            : v.jsxs(
                Sn.div,
                {
                  initial: { opacity: 0, scaleY: 0 },
                  animate: { opacity: 1, scaleY: 1 },
                  exit: { opacity: 0, scaleY: 0 },
                  transition: { duration: 0.2 },
                  className: me(
                    "grid grid-cols-[16px_1fr_74px] gap-x-3 items-center py-1.5 px-2 bg-gray-700",
                    r.length > 1 && c === r.length - 1 && "rounded-b-lg"
                  ),
                  children: [
                    v.jsx(F6, {
                      className: me(
                        "mx-auto",
                        (d = o[c]) != null && d.value
                          ? "text-blue-300"
                          : "text-gray-550"
                      ),
                    }),
                    v.jsx(U6, {
                      name: `channelUsernames.${c}.value`,
                      register: t,
                      placeholder: n(
                        "giveaway.form.fields.channelUsernames.placeholder"
                      ),
                    }),
                    v.jsx(He, {
                      classes: "text-[12px]",
                      onClick: () => s(c),
                      children: n(
                        "giveaway.form.fields.channelUsernames.button.remove"
                      ),
                    }),
                  ],
                },
                l.id
              );
        }),
      }),
    });
  },
  iT = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 12,
        height: 12,
        fill: "none",
        viewBox: "0 0 12 12",
        ...e,
      },
      N.createElement("path", {
        fill: "currentColor",
        d: "M1.39 4.78a.75.75 0 0 1-.01-1.06L4.41.66a2.24 2.24 0 0 1 3.18 0l3.03 3.06a.75.75 0 0 1-1.07 1.06L6.53 1.72a.77.77 0 0 0-1.06 0L2.45 4.78c-.3.3-.77.3-1.06 0Zm8.16 2.44-3.02 3.06a.77.77 0 0 1-1.06 0L2.45 7.22a.75.75 0 1 0-1.07 1.06l3.03 3.06a2.23 2.23 0 0 0 3.18 0l3.03-3.06a.75.75 0 1 0-1.07-1.06Z",
      })
    ),
  fJ = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 16,
        height: 16,
        viewBox: "0 0 16 16",
        fill: "none",
        ...e,
      },
      N.createElement("path", {
        fill: "currentColor",
        fillRule: "evenodd",
        d: "M12.7 14.47c.3-.22.37-.64.15-.94a.68.68 0 0 0-.94-.15c-.38.27-.78.5-1.2.7a.68.68 0 0 0-.34.89c.15.33.55.49.89.34a8 8 0 0 0 1.44-.84Zm2.61-3.21a.68.68 0 0 0-.34-.9.68.68 0 0 0-.9.34c-.18.43-.42.83-.7 1.2-.2.3-.14.73.16.95.3.22.72.15.94-.15.33-.45.61-.93.84-1.44Zm.65-4.1a.68.68 0 0 0-.75-.6.68.68 0 0 0-.6.74c.05.47.05.93 0 1.4-.04.36.24.7.6.74.37.04.7-.24.75-.6.05-.56.05-1.12 0-1.68ZM14.47 3.3a.68.68 0 0 0-.94-.14.68.68 0 0 0-.15.93c.27.38.5.78.7 1.2.15.34.55.5.89.35.34-.15.5-.56.34-.9a8 8 0 0 0-.84-1.44ZM11.26.69a.68.68 0 0 0-.9.34c-.15.34 0 .74.34.9.43.18.83.42 1.2.7.3.2.73.14.95-.16a.68.68 0 0 0-.15-.94 8 8 0 0 0-1.44-.84Zm-3.43.66c.29 0 .58 0 .87.04.36.04.7-.24.74-.6a.68.68 0 0 0-.6-.75 8 8 0 1 0 0 15.91.68.68 0 0 0 .6-.74.68.68 0 0 0-.74-.6 6.65 6.65 0 1 1-.87-13.26Z",
        clipRule: "evenodd",
      }),
      N.createElement("path", {
        fill: "currentColor",
        d: "M7.32 4.45a.68.68 0 0 1 1.36 0v3.34l2.66 1.83h.01a.68.68 0 0 1-.76 1.12h-.02L7.62 8.7a.68.68 0 0 1-.3-.55v-3.7Z",
      })
    ),
  hJ = () => {
    const e = N.useRef(null),
      t = N.useRef(null),
      { setValue: n } = $n(),
      r = Rr({ name: "duration" }),
      { t: i } = Ze(),
      [s, o] = N.useState(!1);
    N.useEffect(() => {
      function c(f) {
        const d = e.current,
          p = t.current;
        (p && p.contains(f.target)) || (d && !d.contains(f.target) && o(!1));
      }
      return (
        document.addEventListener("mousedown", c),
        () => {
          document.removeEventListener("mousedown", c);
        }
      );
    }, []);
    const l = (c) => {
      n("duration", c, { shouldValidate: !0 }), o(!1);
    };
    return v.jsxs("div", {
      className: "relative",
      children: [
        v.jsx(Sn.button, {
          onClick: () => o((c) => !c),
          type: "button",
          ref: t,
          whileTap: { scale: J2 },
          className:
            "flex items-center justify-between py-2 px-2 bg-gray-700 rounded-lg w-full h-[40px]",
          children: v.jsxs("div", {
            className: "flex items-center justify-between w-full",
            children: [
              v.jsxs("div", {
                className: me(
                  "flex items-center gap-3",
                  r ? "text-blue-300" : "text-gray-550"
                ),
                children: [
                  v.jsx(fJ, {}),
                  v.jsx("span", {
                    className: "text-[14px] leading-[17px] font-bold",
                    children: i(
                      r ? r.label : "giveaway.form.fields.duration.label"
                    ),
                  }),
                ],
              }),
              v.jsx(iT, {
                width: 12,
                height: 12,
                className: "text-gray-550 mr-1.5",
              }),
            ],
          }),
        }),
        v.jsx(ss, {
          children:
            s &&
            v.jsx(
              Sn.div,
              {
                initial: { opacity: 0, scale: 0.7, y: -5, x: -50 },
                animate: { opacity: 1, scale: 1, y: 0, x: 0 },
                exit: { opacity: 0, scale: 0.7, y: -5, x: -50 },
                transition: { duration: 0.2, ease: "easeOut" },
                className:
                  "absolute right-0 mt-2 w-40 origin-top-right rounded-lg bg-gray-500 z-50 overflow-hidden",
                ref: e,
                children: fZ.map((c) =>
                  v.jsx(
                    Sn.button,
                    {
                      type: "button",
                      whileTap: { scale: J2 },
                      onClick: () => l(c),
                      className: me(
                        "flex w-full items-center px-3 py-2 text-left text-sm hover:bg-gray-400",
                        (r == null ? void 0 : r.value) === c.value
                          ? "bg-gray-600 text-blue-300"
                          : "text-white"
                      ),
                      children: i(c.label),
                    },
                    c.value
                  )
                ),
              },
              "DurationSelect"
            ),
        }),
      ],
    });
  },
  sT = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 16,
        height: 16,
        fill: "none",
        viewBox: "0 0 16 16",
        ...e,
      },
      N.createElement("path", {
        fill: "currentColor",
        d: "M12.6.77h2.45L9.7 6.89 16 15.23h-4.94L7.2 10.18l-4.42 5.05H.31l5.74-6.55L0 .77h5.06l3.5 4.62L12.6.77Zm-.86 13h1.36L4.32 2.15H2.86l8.88 11.6Z",
      })
    ),
  oT = ({
    toggleValue: e,
    toggleName: t,
    textName: n,
    label: r,
    placeholder: i,
    mainIcon: s,
    textIcon: o,
    max: l,
    step: c,
    min: f,
    mode: d = "text",
  }) => {
    const { register: p, control: m, setValue: g, clearErrors: w } = $n(),
      b = d === "text" ? "" : void 0;
    return (
      N.useEffect(() => {
        e || (g(n, b), w(n));
      }, [e, g, n, b, w]),
      v.jsx("div", {
        className: "flex flex-col gap-[1px]",
        children: v.jsxs(ss, {
          children: [
            v.jsx(pf, {
              name: t,
              control: m,
              defaultValue: !1,
              render: ({ field: { onChange: x, value: E } }) =>
                v.jsxs("div", {
                  className: me(
                    "flex items-center justify-between py-2 px-2 bg-gray-700",
                    e ? "rounded-t-lg" : "rounded-lg"
                  ),
                  children: [
                    v.jsxs("div", {
                      className: "flex items-center gap-3",
                      children: [
                        v.jsx("div", {
                          className: me(
                            "transition-colors",
                            E ? "text-blue-300" : "text-gray-550"
                          ),
                          children: s,
                        }),
                        v.jsx("span", {
                          className: "text-[14px] leading-[17px] font-bold",
                          children: r,
                        }),
                      ],
                    }),
                    v.jsx("button", {
                      type: "button",
                      role: "switch",
                      "aria-checked": E,
                      onClick: () => x(!E),
                      className: me(
                        "relative inline-flex h-6 w-[38px] items-center rounded-full transition-colors focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-ring",
                        E ? "bg-blue-300" : "bg-gray-375"
                      ),
                      children: v.jsx("span", {
                        className: me(
                          "inline-block h-5 w-5 transform rounded-full transition-transform bg-white",
                          E ? "translate-x-4" : "translate-x-0.5"
                        ),
                      }),
                    }),
                  ],
                }),
            }),
            e &&
              v.jsx(
                Sn.div,
                {
                  initial: { opacity: 0, scaleY: 0 },
                  animate: { opacity: 1, scaleY: 1 },
                  exit: { opacity: 0, scaleY: 0 },
                  transition: { duration: 0.2 },
                  className: "overflow-hidden",
                  children: v.jsxs("div", {
                    className:
                      "flex items-center gap-3 py-2 px-2 bg-gray-700 rounded-b-lg",
                    children: [
                      o,
                      d === "text" &&
                        v.jsx(U6, {
                          placeholder: i,
                          min: f,
                          max: l,
                          register: p,
                          name: n,
                        }),
                      d === "number" &&
                        v.jsx(nT, {
                          min: f,
                          max: l,
                          step: c,
                          placeholder: i,
                          register: p,
                          name: n,
                        }),
                      d === "decimal" &&
                        v.jsx(rT, {
                          min: f,
                          max: l,
                          step: c,
                          placeholder: i,
                          register: p,
                          name: n,
                        }),
                    ],
                  }),
                },
                n
              ),
          ],
        }),
      })
    );
  },
  S3 = ({ message: e }) =>
    e
      ? v.jsx("span", {
          className: "text-[9px] leading-[11px] text-red-300 px-1 my-1",
          children: e,
        })
      : null,
  pJ = () => {
    var i;
    const {
        formState: { errors: e },
      } = $n(),
      t = Rr({ name: "onlyX" }),
      n = Rr({ name: "XUsername" }),
      { t: r } = Ze();
    return v.jsxs("div", {
      children: [
        v.jsx(oT, {
          toggleValue: t,
          toggleName: "onlyX",
          textName: "XUsername",
          label: r("giveaway.form.fields.onlyX.label"),
          placeholder: r("giveaway.form.fields.XUsernames.placeholder"),
          mainIcon: v.jsx(sT, {}),
          textIcon: v.jsx(F6, {
            className: me(n ? "text-blue-300" : "text-gray-550"),
          }),
        }),
        v.jsx(S3, { message: (i = e.XUsername) == null ? void 0 : i.message }),
      ],
    });
  },
  mJ = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 16,
        height: 16,
        fill: "none",
        viewBox: "0 0 16 16",
        ...e,
      },
      N.createElement("path", {
        fill: "currentColor",
        d: "M2.86 5.43a.7.7 0 0 1 .98 1L2.59 7.69a4.05 4.05 0 1 0 5.72 5.73l1.25-1.25.01-.01a.7.7 0 0 1 .98 1L9.31 14.4A5.45 5.45 0 1 1 1.6 6.7l1.24-1.26h.02ZM6.74 1.55a5.45 5.45 0 0 1 7.66.05l.05.05a5.45 5.45 0 0 1 0 7.6l-.05.06-1.24 1.25a.7.7 0 0 1-1-1l1.25-1.24.04-.04a4.05 4.05 0 0 0 0-5.65l-.04-.04a4.05 4.05 0 0 0-5.69-.04l-.03.04-1.25 1.25-1-1L6.7 1.6l.05-.05Zm-.3 2.29a.7.7 0 0 1-1-1l1 1Z",
      }),
      N.createElement("path", {
        fill: "currentColor",
        d: "m5.44 9.57 4.13-4.13c.27-.28.77-.23 1 0a.7.7 0 0 1 0 1l-4.14 4.12c-.27.28-.77.23-1 0a.7.7 0 0 1 0-1Z",
      })
    ),
  aT = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 16,
        height: 12,
        fill: "none",
        viewBox: "0 0 16 12",
        ...e,
      },
      N.createElement("path", {
        fill: "currentColor",
        d: "M6.8 3.43a1.82 1.82 0 1 0-3.63 0 1.82 1.82 0 0 0 3.64 0Zm1.36 0a3.17 3.17 0 1 1-6.34 0 3.17 3.17 0 0 1 6.34 0ZM13 4.24a1.27 1.27 0 1 0-2.54 0 1.27 1.27 0 0 0 2.54 0Zm1.35 0a2.62 2.62 0 1 1-5.25 0 2.62 2.62 0 0 1 5.25 0ZM0 10.84a3.3 3.3 0 0 1 3.3-3.3h3.86a3.52 3.52 0 0 1 3.53 3.52.68.68 0 1 1-1.36 0c0-1.2-.97-2.17-2.17-2.17H3.3c-1.08 0-1.95.87-1.95 1.95a.68.68 0 0 1-1.35 0Z",
      }),
      N.createElement("path", {
        fill: "currentColor",
        fillRule: "evenodd",
        d: "M11.22 9.03h1.4c1.11 0 2.03.92 2.03 2.03 0 .37.3.68.67.68.37 0 .68-.3.68-.68a3.38 3.38 0 0 0-3.38-3.38h-2.43c.42.38.78.84 1.03 1.35Z",
        clipRule: "evenodd",
      })
    ),
  gJ = ({
    toggleValue: e,
    rangeValue: t,
    toggleName: n,
    textName: r,
    label: i,
    mainIcon: s,
    textIcon: o,
    max: l,
    step: c,
    min: f,
  }) => {
    const { register: d, control: p, setValue: m, clearErrors: g } = $n(),
      { t: w } = Ze();
    return (
      N.useEffect(() => {
        e || (m(r, void 0), g(r));
      }, [e, m, r, g]),
      v.jsx("div", {
        className: "flex flex-col gap-[1px]",
        children: v.jsxs(ss, {
          children: [
            v.jsx(pf, {
              name: n,
              control: p,
              defaultValue: !1,
              render: ({ field: { onChange: b, value: x } }) =>
                v.jsxs("div", {
                  className: me(
                    "flex items-center justify-between py-2 px-2 bg-gray-700",
                    e ? "rounded-t-lg" : "rounded-lg"
                  ),
                  children: [
                    v.jsxs("div", {
                      className: "flex items-center gap-3",
                      children: [
                        v.jsx("div", {
                          className: me(
                            "transition-colors",
                            x ? "text-blue-300" : "text-gray-550"
                          ),
                          children: s,
                        }),
                        v.jsx("span", {
                          className: "text-[14px] leading-[17px] font-bold",
                          children: i,
                        }),
                      ],
                    }),
                    v.jsx("button", {
                      type: "button",
                      role: "switch",
                      "aria-checked": x,
                      onClick: () => b(!x),
                      className: me(
                        "relative inline-flex h-6 w-[38px] items-center rounded-full transition-colors focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-ring",
                        x ? "bg-blue-300" : "bg-gray-375"
                      ),
                      children: v.jsx("span", {
                        className: me(
                          "inline-block h-5 w-5 transform rounded-full transition-transform bg-white",
                          x ? "translate-x-4" : "translate-x-0.5"
                        ),
                      }),
                    }),
                  ],
                }),
            }),
            e &&
              v.jsxs(
                Sn.div,
                {
                  initial: { opacity: 0, scaleY: 0 },
                  animate: { opacity: 1, scaleY: 1 },
                  exit: { opacity: 0, scaleY: 0 },
                  transition: { duration: 0.2 },
                  className: "h-10 bg-gray-700 rounded-b-lg relative",
                  children: [
                    v.jsxs("div", {
                      className:
                        "flex flex-col justify-between h-full rounded-b-lg overflow-hidden",
                      children: [
                        v.jsxs("div", {
                          className: "flex items-center gap-3 py-2 px-2",
                          children: [
                            o,
                            v.jsx("span", {
                              className:
                                "text-[14px] leading-[17px] font-bold text-blue-300",
                              children: t,
                            }),
                          ],
                        }),
                        v.jsx("input", {
                          min: f,
                          step: c,
                          max: l,
                          type: "range",
                          className: mk(
                            "w-full h-1 bg-transparent bg-gray-700 outline-none cursor-pointer",
                            "appearance-none [&::-webkit-appearance]:appearance-none [&::-moz-appearance]:appearance-none [&::-ms-appearance]:appearance-none",
                            "bg-gray-600 [&::-webkit-slider-runnable-track]:bg-gray-600 [&::-moz-range-track]:bg-gray-600 [&::-ms-track]:bg-gray-600",
                            "h-1 [&::-webkit-slider-runnable-track]:h-1 [&::-moz-range-track]:h-1 [&::-ms-track]:h-1",
                            "[&::-webkit-slider-thumb]:appearance-none [&::-webkit-slider-thumb]:w-6 [&::-webkit-slider-thumb]:h-6 [&::-webkit-slider-thumb]:opacity-0 [&::-webkit-slider-thumb]:rounded-full [&::-webkit-slider-thumb]:cursor-pointer [&::-webkit-slider-thumb]:translate-y-[-45%]",
                            "[&::-moz-range-thumb]:w-6 [&::-moz-range-thumb]:h-6 [&::-moz-range-thumb]:opacity-0 [&::-moz-range-thumb]:rounded-full [&::-moz-range-thumb]:cursor-pointer",
                            "[&::-ms-thumb]:w-6 [&::-ms-thumb]:h-6 [&::-ms-thumb]:opacity-0 [&::-ms-thumb]:rounded-full [&::-ms-thumb]:cursor-pointer [&::-ms-thumb]:translate-y-[-45%]"
                          ),
                          ...d(r, {
                            required: w("giveaway.form.fields.errors.required"),
                            min: {
                              value: f,
                              message: w("giveaway.form.fields.errors.min", {
                                min: f,
                              }),
                            },
                            max: {
                              value: l,
                              message: w("giveaway.form.fields.errors.max", {
                                max: l,
                              }),
                            },
                            valueAsNumber: !0,
                          }),
                        }),
                      ],
                    }),
                    v.jsx("div", {
                      className:
                        "absolute h-1 bg-blue-300 rounded-b-lg pointer-events-none transition-all duration-300 ease-in-out",
                      style: { width: `${((t - 1) / 9) * 100}%`, bottom: 0 },
                    }),
                    v.jsx("div", {
                      className:
                        "absolute h-4 w-4 bg-white rounded-full pointer-events-none transition-all duration-300 ease-in-out transform -translate-x-1/2",
                      style: {
                        left:
                          t === 10
                            ? "calc(100% - 0.5rem)"
                            : t === 1
                            ? "0.5rem"
                            : `${((t - 1) / 9) * 100}%`,
                        bottom: -5,
                      },
                    }),
                  ],
                },
                r
              ),
          ],
        }),
      })
    );
  },
  yJ = () => {
    var s;
    const { t: e } = Ze(),
      {
        formState: { errors: t },
        setValue: n,
      } = $n(),
      r = Rr({ name: "onlyFriends" }),
      i = Rr({ name: "friendsCount" });
    return (
      N.useEffect(() => {
        r && n("friendsCount", 1);
      }, [r]),
      v.jsxs("div", {
        children: [
          v.jsx(gJ, {
            toggleValue: r,
            toggleName: "onlyFriends",
            textName: "friendsCount",
            mode: "range",
            min: 1,
            max: 10,
            rangeValue: i,
            label: e("giveaway.form.fields.onlyFriends.label"),
            mainIcon: v.jsx(mJ, {}),
            textIcon: v.jsx(aT, {
              className: me(i > 0 ? "text-blue-300" : "text-gray-550"),
            }),
          }),
          v.jsx(S3, {
            message: (s = t.friendsCount) == null ? void 0 : s.message,
          }),
        ],
      })
    );
  },
  vJ = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 16,
        height: 14,
        fill: "none",
        viewBox: "0 0 16 14",
        ...e,
      },
      N.createElement("path", {
        fill: "currentColor",
        fillRule: "evenodd",
        d: "M3.61 6.47c-.36 0-.66.3-.66.67 0 .37.3.67.66.67h4.77c.36 0 .66-.3.66-.67 0-.36-.3-.67-.66-.67H3.6Zm0-2.57c-.36 0-.66.3-.66.67 0 .36.3.66.66.66h6.55c.37 0 .67-.3.67-.66 0-.37-.3-.67-.67-.67H3.6Zm11.72.54c.37 0 .67.3.67.67v4.6c0 2.22-1.8 4.01-4.01 4.01h-7a.67.67 0 0 1-.67-.67c0-.36.3-.66.67-.66h7c1.48 0 2.67-1.2 2.67-2.68v-4.6c0-.37.3-.67.67-.67ZM2.67 1.61c-.73 0-1.33.6-1.33 1.34v5.8c0 .74.6 1.34 1.33 1.34h9.03c.37 0 .67-.3.67-.66V2.95c0-.73-.6-1.34-1.33-1.34H2.67ZM0 2.95C0 1.47 1.2.28 2.67.28h8.37c1.47 0 2.67 1.2 2.67 2.67v6.48c0 1.1-.9 2-2 2H2.66A2.67 2.67 0 0 1 0 8.76v-5.8Z",
        clipRule: "evenodd",
      })
    ),
  Yb = ({ mode: e }) => {
    var o, l;
    const { t } = Ze(),
      {
        formState: { errors: n },
        register: r,
      } = $n(),
      i = Rr({ name: "onlyTicketBuyers" }),
      s = Rr({ name: "ticketPrice" });
    return e === Tr.PRIME
      ? v.jsxs("div", {
          className: "flex flex-col",
          children: [
            v.jsxs("div", {
              className:
                "flex items-center gap-3 py-2 px-2 bg-gray-700 rounded-lg",
              children: [
                v.jsx(zt, {
                  className: me(s > 0 ? "text-blue-300" : "text-gray-550"),
                }),
                v.jsx(rT, {
                  placeholder: t(
                    "giveaway.form.fields.ticketPrice.placeholder"
                  ),
                  register: r,
                  name: "ticketPrice",
                }),
              ],
            }),
            v.jsx(S3, {
              message: (o = n.ticketPrice) == null ? void 0 : o.message,
            }),
          ],
        })
      : v.jsxs("div", {
          className: "flex flex-col",
          children: [
            v.jsx(oT, {
              toggleValue: i,
              toggleName: "onlyTicketBuyers",
              textName: "ticketPrice",
              mode: "decimal",
              label: t("giveaway.form.fields.onlyTicketBuyers.label"),
              placeholder: t("giveaway.form.fields.ticketPrice.placeholder"),
              mainIcon: v.jsx(vJ, {}),
              textIcon: v.jsx(zt, {
                className: me(s > 0 ? "text-blue-300" : "text-gray-550"),
              }),
            }),
            v.jsx(S3, {
              message: (l = n.ticketPrice) == null ? void 0 : l.message,
            }),
          ],
        });
  },
  lT = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 16,
        height: 16,
        fill: "none",
        viewBox: "0 0 16 16",
        ...e,
      },
      N.createElement("path", {
        fill: "currentColor",
        fillRule: "evenodd",
        d: "M5.9 1.35c-.31 0-.57.26-.57.56v.97h5.34v-.97c0-.3-.26-.56-.56-.56H5.9ZM12 2.88v-.97c0-1.05-.86-1.91-1.9-1.91H5.9C4.85 0 3.99.86 3.99 1.91v.97h-1.3A2.7 2.7 0 0 0 0 5.58v1.98a.69.69 0 0 0 0 .05v5.91A2.48 2.48 0 0 0 2.47 16h11.06A2.48 2.48 0 0 0 16 13.52V5.6a2.7 2.7 0 0 0-2.7-2.7h-1.29Zm2.64 5.38v5.26c0 .62-.5 1.13-1.12 1.13H2.47c-.61 0-1.12-.51-1.12-1.13V8.26h13.3ZM1.35 6.91h13.3V5.59c0-.74-.6-1.35-1.35-1.35H2.7c-.74 0-1.35.6-1.35 1.35V6.9Z",
        clipRule: "evenodd",
      })
    ),
  wJ = ({ caseItem: e }) => {
    const { name: t, image: n, ticketPrice: r } = e;
    return v.jsxs("div", {
      className: "flex items-center gap-1.5 p-1",
      children: [
        v.jsx(ii, { loop: !1, path: n, size: 28 }),
        v.jsx("span", {
          className: "text-[14px] leading-[17px] font-bold",
          children: t,
        }),
        v.jsxs("div", {
          className:
            "flex items-center gap-0.5 text-blue-200 px-1 py-[3px] rounded bg-blue-200/10",
          children: [
            v.jsx(zt, { width: 9, height: 9 }),
            v.jsx("span", {
              className: "text-[9px] leading-[11px] font-bold",
              children: Jt.fromNano(r),
            }),
          ],
        }),
      ],
    });
  },
  bJ = ({ availableCases: e, append: t, selectorId: n }) => {
    const r = N.useRef(null),
      i = N.useRef(null),
      { t: s } = Ze(),
      [o, l] = N.useState(!1);
    N.useEffect(() => {
      function f(d) {
        const p = r.current,
          m = i.current;
        (m && m.contains(d.target)) || (p && !p.contains(d.target) && l(!1));
      }
      return (
        document.addEventListener("mousedown", f),
        () => {
          document.removeEventListener("mousedown", f);
        }
      );
    }, []);
    const c = [...e].sort((f, d) => {
      const p = (m) => {
        const g = m.match(/\d+/);
        return g ? parseInt(g[0], 10) : 0;
      };
      return p(f.name) - p(d.name);
    });
    return v.jsxs("div", {
      className: "relative group",
      children: [
        v.jsxs(
          Sn.button,
          {
            initial: { opacity: 0, scaleY: 0 },
            animate: { opacity: 1, scaleY: 1 },
            exit: { opacity: 0, scaleY: 0 },
            transition: { duration: 0.2 },
            onClick: () => l((f) => !f),
            type: "button",
            ref: i,
            whileTap: { scale: J2 },
            className:
              "flex items-center gap-3 py-2 px-2 bg-gray-700 w-full h-[40px] text-gray-550 group-last:rounded-b-lg",
            children: [
              v.jsx(iT, { width: 16, height: 12 }),
              v.jsx(lT, {}),
              v.jsx("span", {
                className: "text-[14px] leading-[17px] font-bold",
                children: s("giveaway.form.fields.cases.select.label"),
              }),
            ],
          },
          `caseSelectButton-${n}`
        ),
        v.jsx(ss, {
          children:
            o &&
            v.jsx(
              Sn.div,
              {
                initial: { opacity: 0, scale: 0.7, y: -5, x: -50 },
                animate: { opacity: 1, scale: 1, y: 0, x: 0 },
                exit: { opacity: 0, scale: 0.7, y: -5, x: -50 },
                transition: { duration: 0.2, ease: "easeOut" },
                className:
                  "absolute left-0 bottom-0 mb-12 w-40 origin-bottom-left rounded-lg bg-gray-500 z-50 overflow-hidden",
                ref: r,
                children: c.map((f) =>
                  v.jsx(
                    Sn.button,
                    {
                      type: "button",
                      whileTap: { scale: J2 },
                      onClick: () => t(n, f),
                      className: "hover:bg-gray-400 w-full",
                      children: v.jsx(wJ, { caseItem: f }),
                    },
                    f.id
                  )
                ),
              },
              "caseSelect"
            ),
        }),
      ],
    });
  },
  xJ = ({ caseItem: e, index: t, remove: n }) => {
    const { register: r } = $n(),
      { t: i } = Ze(),
      { name: s, image: o, ticketPrice: l } = e;
    return v.jsxs("div", {
      className:
        "flex items-center justify-between gap-2 py-2 px-2 bg-gray-700 w-full h-[40px] text-gray-550",
      children: [
        v.jsxs("div", {
          className: "flex items-center gap-1.5",
          children: [
            v.jsx("button", {
              type: "button",
              onClick: () => n(t),
              className: "text-red-300",
              children: v.jsx(AA, {}),
            }),
            v.jsx(ii, { loop: !1, path: o, size: 28 }),
            v.jsx("span", {
              className: "text-[14px] leading-[17px] font-bold text-white",
              children: s,
            }),
            v.jsxs("div", {
              className:
                "flex items-center gap-0.5 text-blue-200 px-1 py-[3px] rounded bg-blue-200/10",
              children: [
                v.jsx(zt, { width: 9, height: 9 }),
                v.jsx("span", {
                  className: "text-[9px] leading-[11px] font-bold",
                  children: Jt.fromNano(l),
                }),
              ],
            }),
          ],
        }),
        v.jsx(nT, {
          name: `cases.${t}.amount`,
          register: r,
          placeholder: i("giveaway.form.fields.cases.placeholder"),
          classes: "w-28 text-end",
        }),
      ],
    });
  },
  CJ = () => {
    var E, P, _;
    const { t: e } = Ze(),
      { data: { items: t = [] } = {} } = fk(),
      {
        control: n,
        setValue: r,
        formState: { errors: i },
        clearErrors: s,
      } = $n(),
      o = Rr({ name: "onlyCaseOpeners" }),
      l = Rr({ name: "cases" }),
      [c, f] = N.useState([`selector-${Date.now()}`]),
      { fields: d, append: p, remove: m } = eT({ control: n, name: "cases" });
    N.useEffect(() => {
      o ||
        (r("cases", [], { shouldValidate: !0 }),
        s("cases"),
        f([`selector-${Date.now()}`]));
    }, [o]);
    const g = () => {
        const T = l.map(({ caseItem: M }) => M.id);
        return t.filter((M) => !T.includes(M.id));
      },
      w = (T, M) => {
        p({ caseItem: { ...M, amount: null } }),
          f((L) => L.filter((O) => O !== T));
      },
      b = g().length,
      x = () => {
        b > c.length && f((T) => [...T, `selector-${Date.now()}`]);
      };
    return v.jsxs("div", {
      children: [
        v.jsx("div", {
          className: "flex flex-col gap-[1px]",
          children: v.jsxs(ss, {
            children: [
              v.jsx(
                pf,
                {
                  name: "onlyCaseOpeners",
                  control: n,
                  defaultValue: !1,
                  render: ({ field: { onChange: T, value: M } }) =>
                    v.jsxs("div", {
                      className: me(
                        "flex items-center justify-between py-2 px-2 bg-gray-700",
                        o ? "rounded-t-lg" : "rounded-lg"
                      ),
                      children: [
                        v.jsxs("div", {
                          className: "flex items-center gap-3",
                          children: [
                            v.jsx("div", {
                              className: me(
                                "transition-colors",
                                M ? "text-blue-300" : "text-gray-550"
                              ),
                              children: v.jsx(lT, {}),
                            }),
                            v.jsx("span", {
                              className: "text-[14px] leading-[17px] font-bold",
                              children: e(
                                "giveaway.form.fields.onlyCaseOpeners.label"
                              ),
                            }),
                          ],
                        }),
                        v.jsx("button", {
                          type: "button",
                          role: "switch",
                          "aria-checked": M,
                          onClick: () => T(!M),
                          className: me(
                            "relative inline-flex h-6 w-[38px] items-center rounded-full transition-colors focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-ring",
                            M ? "bg-blue-300" : "bg-gray-375"
                          ),
                          children: v.jsx("span", {
                            className: me(
                              "inline-block h-5 w-5 transform rounded-full transition-transform bg-white",
                              M ? "translate-x-4" : "translate-x-0.5"
                            ),
                          }),
                        }),
                      ],
                    }),
                },
                "onlyCaseOpeners"
              ),
              o &&
                v.jsxs(v.Fragment, {
                  children: [
                    d == null
                      ? void 0
                      : d.map((T, M) =>
                          v.jsx(
                            Sn.div,
                            {
                              initial: { opacity: 0 },
                              animate: { opacity: 1 },
                              exit: { opacity: 0 },
                              transition: { duration: 0.2 },
                              children: v.jsx(xJ, {
                                caseItem: T.caseItem,
                                index: M,
                                remove: m,
                              }),
                            },
                            T.id
                          )
                        ),
                    c.map((T) =>
                      v.jsx(
                        bJ,
                        { selectorId: T, availableCases: g(), append: w },
                        T
                      )
                    ),
                    b > c.length &&
                      v.jsxs(
                        Sn.button,
                        {
                          type: "button",
                          initial: { opacity: 0, scaleY: 0 },
                          animate: { opacity: 1, scaleY: 1 },
                          exit: { opacity: 0, scaleY: 0 },
                          transition: { duration: 0.2 },
                          onClick: x,
                          whileTap: { scale: J2 },
                          className:
                            "flex h-[40px] justify-center gap-2 items-center py-1.5 px-2 bg-gray-700 text-blue-300 text-[14px] leading-[17px] font-bold rounded-b-lg",
                          children: [
                            v.jsx(lf, { width: 14, height: 14 }),
                            e("giveaway.form.fields.cases.button"),
                          ],
                        },
                        "add-new-selector"
                      ),
                  ],
                }),
            ],
          }),
        }),
        v.jsx(S3, {
          message:
            (_ =
              (P = (E = i.cases) == null ? void 0 : E[0]) == null
                ? void 0
                : P.amount) == null
              ? void 0
              : _.message,
        }),
      ],
    });
  },
  SJ = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 14,
        height: 20,
        viewBox: "0 0 14 20",
        fill: "none",
        ...e,
      },
      N.createElement("path", {
        fill: "currentColor",
        fillRule: "evenodd",
        d: "M11.16 2.37C11.49.29 8.84-.87 7.54.79L1.1 9.06a2.23 2.23 0 0 0 1.76 3.6h.95l-.85 5.06c-.34 2 2.23 3.12 3.47 1.51l6.48-8.43a2.23 2.23 0 0 0-1.77-3.59h-.77l.79-4.84Zm-2.3-.55c.23-.3.7-.09.64.28l-.94 5.81c-.08.5.32.97.83.97h1.75c.46 0 .72.53.44.9l-6.47 8.43a.26.26 0 0 1-.16.1.3.3 0 0 1-.18-.01.3.3 0 0 1-.13-.12c-.03-.04-.05-.1-.03-.19l1.02-6.02a.84.84 0 0 0-.83-.98H2.86a.56.56 0 0 1-.44-.9l6.44-8.27Z",
        clipRule: "evenodd",
      })
    ),
  EJ = () => {
    const { t: e } = Ze(),
      { setValue: t } = $n(),
      n = Rr({ name: "channelUsernames" }) || [];
    return (
      N.useEffect(() => {
        if (n.length > 1) {
          t("onlyBoosters", !1);
          return;
        }
      }, [n]),
      n.length > 1
        ? null
        : v.jsx(D6, {
            name: "onlyBoosters",
            label: e("giveaway.form.fields.onlyBoosters.label"),
            icon: v.jsx(SJ, {}),
          })
    );
  },
  Qb = (e) =>
    (e.tagName === "INPUT" &&
      !["button", "submit", "checkbox", "file", "image"].includes(e.type)) ||
    e.hasAttribute("contenteditable"),
  kJ = () => {
    const [e, t] = N.useState(!1);
    return (
      N.useEffect(() => {
        const n = (i) => {
          if (!i.target) return;
          const s = i.target;
          Qb(s) && (window.scrollTo(0, window.scrollY), t(!0));
        };
        document.addEventListener("focusin", n);
        const r = (i) => {
          if (!i.target) return;
          const s = i.target;
          Qb(s) && t(!1);
        };
        return (
          document.addEventListener("focusout", r),
          () => {
            document.removeEventListener("focusin", n),
              document.removeEventListener("focusout", r);
          }
        );
      }, []),
      e
    );
  },
  _J = ({ onSubmit: e }) => {
    const { t } = Ze(),
      n = kJ(),
      r = ia(N3.telegram.getPlatform),
      i = ["ios", "android"].includes(r) && n,
      s = Rr({ name: "channelUsernames" }),
      o = Rr({ name: "duration" }),
      l = s.map((p) => p.value.trim()).filter(Boolean),
      f = o.value > 0,
      d = l.every((p) => p.length > 0);
    return i
      ? null
      : v.jsx("div", {
          className:
            "flex justify-center items-center w-full fixed bottom-0 inset-x-0 bg-background pb-[35px] pt-2",
          children: v.jsx(He, {
            classes: "h-[40px] w-full mx-4",
            disabled: !f || !d,
            onClick: e,
            text: t("giveaway.form.gifts.button"),
          }),
        });
  },
  AJ = ({ mode: e = Tr.CLASSIC, onSubmit: t }) => {
    const { t: n } = Ze();
    return (
      U3({ url: `/${se.PAGES.GIVEAWAYS.MAIN}` }),
      v.jsxs("div", {
        className: "flex flex-col gap-4 relative mb-[99px]",
        children: [
          v.jsx(dJ, {}),
          e === Tr.PRIME && v.jsx(Yb, { mode: e }),
          v.jsx(hJ, {}),
          e === Tr.CLASSIC && v.jsx(Yb, {}),
          v.jsx(pJ, {}),
          v.jsx(CJ, {}),
          v.jsx(yJ, {}),
          v.jsx(D6, {
            name: "onlyPremiumUsers",
            label: n("giveaway.form.fields.onlyPremiumUsers.label"),
            icon: v.jsx(uJ, {}),
          }),
          v.jsx(EJ, {}),
          v.jsx(D6, {
            name: "onlyTraders",
            label: n("giveaway.form.fields.onlyTraders.label"),
            icon: v.jsx(cJ, {}),
          }),
          v.jsx(_J, { onSubmit: t }),
        ],
      })
    );
  },
  TJ = ({
    selectedItems: e,
    setSelectedItems: t,
    onSubmit: n,
    isLoading: r,
    mode: i,
  }) => {
    const { handleSubmit: s, getValues: o } = $n(),
      { t: l } = Ze(),
      { pathname: c } = Un(),
      [f, d] = N.useState(!1),
      { data: { balance: p = 0, wallet: m } = {} } = da(),
      { handleOpenDepositPage: g } = of(m, c),
      w = o("ticketPrice"),
      b = w ? parseFloat(w.toFixed(2)) : l("giveaway.form.gifts.tickets.free");
    N.useEffect(() => {
      (e != null && e.length) || d(!1);
    }, [e == null ? void 0 : e.length]);
    const x = e.reduce((T, M) => {
        var L;
        return (
          T + ((L = M == null ? void 0 : M.gift) == null ? void 0 : L.buyPrice)
        );
      }, 0),
      E = Math.floor(Number(Jt.fromNano(x ?? 0)) * 100) / 100,
      P = parseFloat((E * 10).toFixed(2)),
      _ = N.useCallback(() => {
        if (i === l3.PRIME && p < x) {
          g();
          return;
        }
        d(!0);
      }, [p, x, i]);
    return v.jsxs(v.Fragment, {
      children: [
        v.jsx("div", {
          className: "flex items-center justify-center",
          children: v.jsx(He, {
            onClick: _,
            text:
              i === l3.PRIME
                ? v.jsxs("span", {
                    className:
                      "flex items-center gap-1 text-[14px] leading-[17px]",
                    children: [
                      l("modal.giveaway.button", { count: e.length }),
                      " ",
                      v.jsx(zt, {
                        width: 14,
                        height: 14,
                        className: "shrink-0",
                      }),
                      E,
                    ],
                  })
                : l("modal.giveaway.classic.button", { count: e.length }),
            classes: "h-[40px]",
            disabled: E <= 0,
          }),
        }),
        v.jsx(cf, {
          isOpen: f,
          close: () => d(!1),
          title: l("modal.buy.title"),
          children: v.jsxs("div", {
            className: "flex flex-col gap-4",
            children: [
              v.jsx(PA, { selectedItems: e, setSelectedItems: t, mode: i }),
              v.jsxs("div", {
                className:
                  "flex items-center justify-between py-1.5 px-3 rounded-lg bg-gray-700",
                children: [
                  v.jsxs("div", {
                    className: "flex items-center gap-3 font-bold",
                    children: [
                      v.jsx(zt, {
                        width: 16,
                        height: 16,
                        className: "text-blue-200",
                      }),
                      v.jsx("span", { children: b }),
                    ],
                  }),
                  v.jsx("div", {
                    className:
                      "flex items-center gap-1 text-[12px] leading-[15px] text-gray-300",
                    children: v.jsx(Ks, {
                      i18nKey: "giveaway.form.gifts.ticket.info",
                      components: {
                        ticket: v.jsx(ra, {
                          width: 12,
                          height: 12,
                          className: "text-blue-200",
                        }),
                        count: v.jsx("span", {
                          className: "text-white font-bold",
                          children: "1",
                        }),
                      },
                    }),
                  }),
                ],
              }),
              i === l3.PRIME &&
                v.jsxs("div", {
                  className: "flex flex-col items-center justify-center",
                  children: [
                    v.jsxs("div", {
                      className:
                        "flex items-center gap-1 text-[14px] leading-[17px] font-bold",
                      children: [
                        v.jsx(ra, {
                          width: 14,
                          height: 14,
                          className: "text-blue-200",
                        }),
                        Math.ceil((P * 0.9) / w).toLocaleString(),
                      ],
                    }),
                    v.jsx("span", {
                      className: "text-[12px] leading-[15px] text-gray-300",
                      children: l("giveaway.form.gifts.desc"),
                    }),
                  ],
                }),
              v.jsx(He, {
                type: "submit",
                onClick: s(n),
                loading: r,
                text:
                  i === l3.PRIME
                    ? v.jsxs("span", {
                        className: "flex items-center gap-1",
                        children: [
                          l("giveaway.form.gifts.button.submit.prime"),
                          v.jsx(zt, {
                            width: 14,
                            height: 14,
                            className: "shrink-0",
                          }),
                          v.jsx("span", {
                            className: "line-through",
                            children: P,
                          }),
                          E,
                        ],
                      })
                    : l("giveaway.form.gifts.button.submit.classic"),
                classes: "h-[40px] w-full mb-[19px]",
                disabled: E <= 0 || r,
              }),
            ],
          }),
        }),
      ],
    });
  },
  Zb = (e) => (t) => e.some(({ itemId: n }) => n === t),
  PJ = ({ onSubmit: e, isLoading: t, setStep: n, mode: r = Tr.CLASSIC }) => {
    const { scrollToTop: i } = N.useContext(Mm),
      { setValue: s } = $n(),
      [o, l] = N.useState([]),
      [c, f] = N.useState(!1);
    U3({
      onBack: () => {
        l([]), n(No.FIELDS);
      },
    }),
      N.useEffect(() => {
        s(
          "gifts",
          o.map(({ itemId: p }) => p)
        ),
          f(o.length > 0);
      }, [o, s]);
    const d = N.useCallback(
      (p, m) => {
        l((g) => {
          if (g.some(({ itemId: x }) => x === p))
            return g.filter(({ itemId: x }) => x !== p);
          const b = r === Tr.PRIME ? Math.ceil(m.buyPrice * 0.1) : m.buyPrice;
          return [...g, { itemId: p, gift: { ...m, buyPrice: b } }];
        });
      },
      [r]
    );
    return v.jsxs(v.Fragment, {
      children: [
        r === Tr.CLASSIC
          ? v.jsx(bZ, {
              selectedItems: o,
              setSelectedItems: d,
              scrollToTop: i,
              getSelectedStateFunc: Zb(o),
            })
          : v.jsx(MA, {
              selectedItems: o,
              setSelectedItems: d,
              scrollToTop: i,
              mode: r,
              isShowHeader: !0,
              titleContainerClasses: "top-0 pt-1",
              getSelectedStateFunc: Zb(o),
            }),
        v.jsx("div", {
          className: me(
            "fixed bottom-[35px] inset-x-7 transition-all duration-300 transform z-10",
            c
              ? "opacity-100 scale-100 pointer-events-auto"
              : "opacity-0 scale-95 pointer-events-none"
          ),
          children: v.jsx(TJ, {
            selectedItems: o,
            setSelectedItems: l,
            onSubmit: e,
            isLoading: t,
            mode: r,
          }),
        }),
      ],
    });
  },
  Xb = ({ mode: e = Tr.CLASSIC }) => {
    const t = v2(),
      n = or(),
      { t: r } = Ze(),
      { setIsShowTabs: i } = lE(),
      [s, o] = N.useState(No.FIELDS),
      [l, { isLoading: c }] = ez(),
      f = tT({
        defaultValues: {
          type: e,
          channelUsernames: [{ value: "" }],
          duration: 0,
          onlyPremiumUsers: !1,
          onlyBoosters: !1,
          onlyX: !1,
          XUsername: "",
          onlyTraders: !1,
          onlyCaseOpeners: !1,
          cases: [],
          onlyFriends: !1,
          friendsCount: void 0,
          onlyTicketBuyers: e === Tr.PRIME,
          ticketPrice: void 0,
          gifts: [],
        },
        mode: "onTouched",
      });
    N.useEffect(() => {
      i(s === No.FIELDS);
    }, [s]);
    const d = async () => {
        var P, _;
        const m = f.getValues(),
          g = ((P = m.duration) == null ? void 0 : P.value) > 0,
          w =
            (_ = m.channelUsernames) == null
              ? void 0
              : _.every(({ value: T }) => {
                  var M;
                  return (
                    ((M = T == null ? void 0 : T.trim()) == null
                      ? void 0
                      : M.length) > 0
                  );
                });
        if (!g || !w) return;
        const b = m.onlyCaseOpeners,
          x = m.cases;
        if (b && x.length === 0) {
          f.setError("cases.0.amount", {
            type: "required",
            message: r("giveaway.form.fields.errors.required"),
          });
          return;
        }
        (await f.trigger()) && o(No.GIFTS);
      },
      p = async (m) => {
        var P;
        if (m.gifts.length === 0 || e === No.FIELDS) return;
        const g = Jt.toNano(m.ticketPrice || 0),
          w = m.channelUsernames.map((_) => _.value.trim()).filter(Boolean),
          b = m.duration.value,
          x = m.cases.map(({ amount: _, caseItem: T }) => ({
            amount: _,
            id: T.id,
          })),
          E = {
            ...m,
            channelUsernames: w,
            duration: b,
            cases: x,
            ticketPrice: Number(g),
          };
        try {
          const _ = await l(E);
          if ((P = _ == null ? void 0 : _.data) != null && P.success) {
            const T = _.data.id;
            if (
              (t(zr.util.invalidateTags(["Profile", "History", "Inventory"])),
              T)
            )
              return n(se.PAGES.GIVEAWAYS.TO_FULL_ROUTE_GIVEAWAY(T));
            n(`/${se.PAGES.GIVEAWAYS.MAIN}`);
          }
        } catch (_) {
          console.log(_);
        }
      };
    return v.jsx(zA, {
      ...f,
      children: v.jsxs("form", {
        children: [
          s === No.FIELDS &&
            v.jsxs(v.Fragment, {
              children: [
                v.jsx(Zs, {
                  className: "mb-4",
                  children: r(`giveaway.form.${e}.quote`),
                }),
                v.jsx(AJ, { mode: e, onSubmit: d }),
              ],
            }),
          s === No.GIFTS &&
            v.jsx(PJ, { mode: e, onSubmit: p, isLoading: c, setStep: o }),
        ],
      }),
    });
  },
  MJ = ({
    channels: e,
    itemsPrice: t,
    itemsCount: n,
    ticketPrice: r,
    participantsAmount: i,
  }) => {
    const { t: s } = Ze(),
      o = Math.floor(Number(Jt.fromNano(t)) * 100) / 100;
    return v.jsxs("div", {
      className: "flex flex-col items-center justify-center",
      children: [
        v.jsxs("div", {
          className: "flex items-center gap-1.5",
          children: [
            v.jsx("h1", {
              className: "text-[22px] leading-[27px] font-bold",
              children: s("giveaway.page.title"),
            }),
            v.jsxs("div", {
              className: me(
                "text-[11px] leading-[13px] font-bold flex items-center gap-0.5 px-[5px] py-[3.5px]  rounded-md",
                r > 0
                  ? "bg-blue-200/10 text-blue-200"
                  : "text-green-300 bg-green-300/10"
              ),
              children: [
                r > 0
                  ? v.jsx(ra, { width: 11, height: 11 })
                  : v.jsx(RA, { width: 11, height: 11 }),
                i == null ? void 0 : i.toLocaleString(),
              ],
            }),
          ],
        }),
        v.jsxs("div", {
          className:
            "flex items-center gap-1 leading-[17px] flex-wrap justify-center",
          children: [
            v.jsx("span", {
              className: "text-[12px] leading-[14px] text-gray-300",
              children: s("giveaway.page.header.by"),
            }),
            e.map((l) =>
              v.jsxs(
                "button",
                {
                  type: "button",
                  className:
                    "inline-flex items-center gap-1 text-left text-blue-200 font-bold text-[14px] leading-[17px]",
                  onClick: () => wr(`https://t.me/${l}`)(),
                  children: [
                    v.jsx("div", {
                      className:
                        "w-3.5 h-3.5 rounded-full bg-black/25 overflow-hidden shrink-0",
                      children: v.jsx("img", {
                        src: `https://t.me/i/userpic/320/${l}.jpg`,
                        width: 14,
                        height: 14,
                      }),
                    }),
                    v.jsxs("div", {
                      className: "flex items-center",
                      children: [
                        l,
                        e.indexOf(l) !== e.length - 1 &&
                          v.jsx("span", {
                            className: "font-normal text-gray-300",
                            children: ",",
                          }),
                      ],
                    }),
                  ],
                },
                l
              )
            ),
          ],
        }),
        v.jsxs("div", {
          className:
            "text-[12px] leading-[15px] flex items-center gap-1 text-gray-300",
          children: [
            s("giveaway.page.title.stat", { count: n }),
            v.jsxs("div", {
              className: "flex items-center gap-1 flex-nowrap",
              children: [
                v.jsx(zt, { width: 12, className: "text-blue-200" }),
                v.jsx("span", {
                  className: "text-white font-bold",
                  children: o,
                }),
              ],
            }),
          ],
        }),
      ],
    });
  },
  bo = {
    TELEGRAM_CHANNEL: "telegram-channel",
    TELEGRAM_BOOST: "telegram-boost",
    TELEGRAM_PREMIUM: "telegram-premium",
    X_FOLLOW: "x-follow",
    APP_CASE: "app-case",
    APP_TRADE: "app-trade",
    APP_INVITE: "app-invite",
  },
  RJ = ({ t: e, onCheck: t, isLoading: n, ...r }) => {
    const { completed: i, name: s } = r;
    return v.jsxs("div", {
      className:
        "flex gap-2 items-center justify-between pl-1.5 pr-4 py-1.5 bg-gray-700",
      children: [
        v.jsx(os, {
          onClick: wr(`https://t.me/boost/${s}`),
          containerClasses: "cursor-pointer",
          descClasses: "normal-case",
          media: v.jsx("div", {
            className: me(
              "w-5 h-5 place-self-center rounded-full bg-black/25 overflow-hidden shrink-0",
              i && "border border-solid border-blue-200"
            ),
            children: v.jsx("img", {
              src: `https://t.me/i/userpic/320/${s}.jpg`,
              width: 20,
              height: 20,
            }),
          }),
          title: e("giveaway.tasks.boost.title", { string: s }),
          desc: v.jsx("span", {
            className: i ? "text-green-300" : "",
            children: e(
              i ? "giveaway.tasks.completed" : "giveaway.tasks.not-completed"
            ),
          }),
        }),
        !i &&
          v.jsx(He, {
            onClick: t,
            classes: "w-[60px]",
            textClasses: "text-[12px] leading-[15px]",
            text: e("giveaway.tasks.button.check"),
            loading: n,
          }),
      ],
    });
  },
  LJ = ({ t: e, onCheck: t, isLoading: n, ...r }) => {
    const { completed: i, amount: s, case: o = {} } = r,
      { image: l, name: c, ticketPrice: f, id: d } = o,
      p = or();
    return v.jsxs("div", {
      className:
        "flex gap-2 items-center justify-between pl-1.5 pr-4 py-1.5 bg-gray-700",
      children: [
        v.jsx(os, {
          onClick: () => p(`/cases/${se.PAGES.CASES.TO_CASE(d)}`),
          descClasses: "normal-case",
          containerClasses: "cursor-pointer grow",
          media: v.jsx(ii, { loop: !1, path: l, size: 20 }),
          title: v.jsxs("div", {
            className: "flex gap-1.5",
            children: [
              e("giveaway.tasks.case.title", { count: s, string: c }),
              v.jsxs("div", {
                className:
                  "flex items-center gap-0.5 text-blue-200 px-1 py-[3px] rounded bg-blue-200/10",
                children: [
                  v.jsx(zt, { width: 9, height: 9 }),
                  v.jsx("span", {
                    className: "text-[9px] leading-[11px] font-bold",
                    children: Jt.fromNano(f),
                  }),
                ],
              }),
            ],
          }),
          desc: v.jsx("span", {
            className: i ? "text-green-300" : "",
            children: e(
              i ? "giveaway.tasks.completed" : "giveaway.tasks.not-completed"
            ),
          }),
        }),
        !i &&
          v.jsx(He, {
            onClick: t,
            classes: "w-[60px]",
            textClasses: "text-[12px] leading-[15px]",
            text: e("giveaway.tasks.button.check"),
            loading: n,
          }),
      ],
    });
  },
  IJ = ({ t: e, onCheck: t, isLoading: n, ...r }) => {
    const { completed: i, name: s } = r;
    return v.jsxs("div", {
      className:
        "flex gap-2 items-center justify-between pl-1.5 pr-4 py-1.5 bg-gray-700",
      children: [
        v.jsx(os, {
          onClick: wr(`https://t.me/${s}`),
          containerClasses: "cursor-pointer",
          descClasses: "normal-case",
          media: v.jsx("div", {
            className: me(
              "w-5 h-5 rounded-full bg-black/25 overflow-hidden shrink-0 m-auto",
              i && "border border-solid border-blue-200"
            ),
            children: v.jsx("img", {
              src: `https://t.me/i/userpic/320/${s}.jpg`,
              width: 20,
              height: 20,
            }),
          }),
          title: e("giveaway.tasks.tg-channel.title", { string: s }),
          desc: v.jsx("span", {
            className: i ? "text-green-300" : "",
            children: e(
              i ? "giveaway.tasks.completed" : "giveaway.tasks.not-completed"
            ),
          }),
        }),
        !i &&
          v.jsx(He, {
            onClick: t,
            classes: "w-[60px]",
            textClasses: "text-[12px] leading-[15px]",
            text: e("giveaway.tasks.button.check"),
            loading: n,
          }),
      ],
    });
  },
  jJ = ({ t: e, onCheck: t, isLoading: n, onShare: r, ...i }) => {
    const { completed: s, amount: o } = i;
    return v.jsxs("div", {
      className:
        "flex gap-2 items-center justify-between pl-1.5 pr-4 py-1.5 bg-gray-700",
      children: [
        v.jsx(os, {
          onClick: r,
          descClasses: "normal-case",
          containerClasses: "cursor-pointer",
          media: v.jsx(aT, {
            width: 20,
            height: 20,
            className: s ? "text-blue-200" : "text-gray-300",
          }),
          title: e("giveaway.tasks.invite.title", { count: o }),
          desc: v.jsx("span", {
            className: s ? "text-green-300" : "",
            children: e(
              s ? "giveaway.tasks.completed" : "giveaway.tasks.not-completed"
            ),
          }),
        }),
        !s &&
          v.jsx(He, {
            onClick: t,
            classes: "w-[60px]",
            textClasses: "text-[12px] leading-[15px]",
            text: e("giveaway.tasks.button.check"),
            loading: n,
          }),
      ],
    });
  },
  NJ = ({ t: e, onCheck: t, isLoading: n, ...r }) => {
    const { completed: i } = r;
    return v.jsxs("div", {
      className:
        "flex gap-2 items-center justify-between pl-1.5 pr-4 py-1.5 bg-gray-700",
      children: [
        v.jsx(os, {
          descClasses: "normal-case",
          media: v.jsx(hk, {
            width: 20,
            height: 20,
            className: i ? "text-blue-200" : "text-gray-300",
          }),
          title: e("giveaway.tasks.premium.title"),
          desc: v.jsx("span", {
            className: i ? "text-green-300" : "",
            children: e(
              i ? "giveaway.tasks.completed" : "giveaway.tasks.not-completed"
            ),
          }),
        }),
        !i &&
          v.jsx(He, {
            onClick: t,
            classes: "w-[60px]",
            textClasses: "text-[12px] leading-[15px]",
            text: e("giveaway.tasks.button.check"),
            loading: n,
          }),
      ],
    });
  },
  OJ = ({ t: e, onCheck: t, isLoading: n, ...r }) => {
    const { completed: i } = r,
      s = or();
    return v.jsxs("div", {
      className:
        "flex gap-2 items-center justify-between pl-1.5 pr-4 py-1.5 bg-gray-700",
      children: [
        v.jsx(os, {
          descClasses: "normal-case",
          onClick: () => s(se.PAGES.TRADE.FULL_ROUTE_TRADE),
          containerClasses: "cursor-pointer",
          media: v.jsx(hA, {
            width: 20,
            height: 20,
            className: i ? "text-blue-200" : "text-gray-300",
          }),
          title: e("giveaway.tasks.trade.title"),
          desc: v.jsx("span", {
            className: i ? "text-green-300" : "",
            children: e(
              i ? "giveaway.tasks.completed" : "giveaway.tasks.not-completed"
            ),
          }),
        }),
        !i &&
          v.jsx(He, {
            onClick: t,
            classes: "w-[60px]",
            textClasses: "text-[12px] leading-[15px]",
            text: e("giveaway.tasks.button.check"),
            loading: n,
          }),
      ],
    });
  },
  BJ = ({ t: e, onCheck: t, isLoading: n, ...r }) => {
    const [i, s] = N.useState(!1),
      [o, l] = N.useState(!1),
      { completed: c, name: f } = r,
      d = () => {
        s(!0), l(!1), qW(`https://x.com/${f}`)();
      },
      p = () => {
        if (!o) {
          if (!i) {
            l(!0),
              setTimeout(() => {
                l6(e("giveaway.tasks.x.fake.fail")), l(!1);
              }, 1e3);
            return;
          }
          t();
        }
      };
    return v.jsxs("div", {
      className:
        "flex gap-2 items-center justify-between pl-1.5 pr-4 py-1.5 bg-gray-700",
      children: [
        v.jsx(os, {
          onClick: d,
          containerClasses: "cursor-pointer",
          descClasses: "normal-case",
          media: v.jsx(sT, {
            width: 20,
            height: 20,
            className: c ? "text-blue-200" : "text-gray-300",
          }),
          title: e("giveaway.tasks.x.title"),
          desc: v.jsx("span", {
            className: c ? "text-green-300" : "",
            children: e(
              c ? "giveaway.tasks.completed" : "giveaway.tasks.not-completed"
            ),
          }),
        }),
        !c &&
          v.jsx(He, {
            onClick: p,
            classes: "w-[60px]",
            textClasses: "text-[12px] leading-[15px]",
            text: e("giveaway.tasks.button.check"),
            loading: n || o,
          }),
      ],
    });
  },
  DJ = {
    [bo.TELEGRAM_CHANNEL]: IJ,
    [bo.TELEGRAM_BOOST]: RJ,
    [bo.TELEGRAM_PREMIUM]: NJ,
    [bo.X_FOLLOW]: BJ,
    [bo.APP_CASE]: LJ,
    [bo.APP_INVITE]: jJ,
    [bo.APP_TRADE]: OJ,
  },
  FJ = ({ task: e, t, giveawayId: n, onShare: r }) => {
    const i = DJ[e.type],
      [s, { isLoading: o }] = nz(),
      l = v2();
    if (!i) return null;
    const c = async (f, d) => {
      f == null || f.stopPropagation();
      try {
        const {
          data: { success: p },
        } = await s({ taskId: d });
        p &&
          l(
            zr.util.invalidateTags([
              { type: "Giveaway", giveawayId: n },
              "History",
            ])
          );
      } catch (p) {
        console.log(p);
      }
    };
    return v.jsx(i, {
      t,
      onCheck: (f) => c(f, e.id),
      isLoading: o,
      onShare: r,
      ...e,
    });
  },
  UJ = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 8,
        height: 2,
        fill: "none",
        viewBox: "0 0 8 2",
        ...e,
      },
      N.createElement("path", {
        fill: "currentColor",
        fillRule: "evenodd",
        d: "M8 1c0 .32-.26.57-.57.57H.57a.57.57 0 0 1 0-1.14h6.86C7.74.43 8 .68 8 1Z",
        clipRule: "evenodd",
      })
    ),
  $J = ({
    t: e,
    ticketPrice: t,
    purchasedTickets: n,
    allTasksCompleted: r,
    giveawayId: i,
    type: s,
  }) => {
    const [o, { isLoading: l }] = rz(),
      [c, f] = N.useState(1),
      [d, p] = N.useState(1),
      m = v2(),
      g = N.useCallback(() => {
        f((x) => x + d);
      }, [d]),
      w = N.useCallback(() => {
        f((x) => {
          const E = x - d;
          return E >= 1 ? E : 1;
        });
      }, [d]),
      b = N.useCallback(async () => {
        try {
          const {
            data: { success: x },
          } = await o({ giveawayId: Number(i), amount: c });
          x &&
            m(
              zr.util.invalidateTags([
                { type: "Giveaway", giveawayId: i },
                "Profile",
                "History",
              ])
            );
        } catch (x) {
          console.log(x);
        }
      }, [i, c]);
    return v.jsxs("div", {
      className: "flex flex-col gap-1 bg-gray-700 pl-1.5 pr-2 py-1.5",
      children: [
        v.jsxs("div", {
          className:
            "grid grid-cols-[32px_1fr_max-content] gap-x-2 items-center justify-items-start min-h-8",
          children: [
            v.jsx("div", {
              className: "w-5 h-5 shrink-0 place-self-center",
              children: v.jsx(ra, {
                width: 20,
                height: 20,
                className: n > 0 ? "text-blue-200" : "text-gray-300",
              }),
            }),
            v.jsxs("div", {
              className: "flex gap-1.5",
              children: [
                v.jsx("p", {
                  className: "text-[14px] leading-[17px] font-bold",
                  children: e("giveaway.tasks.table.buy.tickets"),
                }),
                v.jsxs("div", {
                  className:
                    "flex items-center gap-0.5 text-blue-200 px-1 py-[3px] rounded bg-blue-200/10",
                  children: [
                    v.jsx(ra, { width: 9, height: 9 }),
                    v.jsx("span", {
                      className: "text-[9px] leading-[11px] font-bold",
                      children: "1",
                    }),
                    v.jsx("span", {
                      className: "text-[9px] leading-[11px] font-bold",
                      children: "=",
                    }),
                    v.jsx(zt, { width: 9, height: 9 }),
                    v.jsx("span", {
                      className: "text-[9px] leading-[11px] font-bold",
                      children: (
                        Math.round(Number(Jt.fromNano(t ?? 0)) * 100) / 100
                      ).toString(),
                    }),
                  ],
                }),
              ],
            }),
            v.jsxs("span", {
              className: "text-[12px] text-gray-300 pr-2",
              children: [
                e("giveaway.tasks.table.buy.tickets.own"),
                v.jsxs("span", {
                  className: "text-blue-200 font-bold",
                  children: [" ", n],
                }),
              ],
            }),
          ],
        }),
        v.jsxs("div", {
          className: "grid grid-cols-2 gap-2",
          children: [
            v.jsxs("div", {
              className:
                "flex items-center justify-between flex-nowrap rounded-lg bg-gray-600 py-1 px-2",
              children: [
                v.jsx(He, {
                  onClick: w,
                  disabled: c <= 1,
                  classes: "rounded-full h-5 w-5",
                  children: v.jsx(UJ, { width: 8, height: 8 }),
                }),
                v.jsxs("div", {
                  className: "flex flex-col items-center font-bold",
                  children: [
                    v.jsx("span", {
                      className: "text-[14px] leading-[17px]",
                      children: c,
                    }),
                    v.jsxs("div", {
                      className:
                        "flex justify-between items-center gap-1 text-[9px] leading-[11px] text-gray-300",
                      children: [
                        v.jsx("button", {
                          type: "button",
                          className: d === 1 ? "text-blue-200" : "",
                          onClick: () => p(1),
                          children: "1",
                        }),
                        v.jsx("button", {
                          type: "button",
                          className: d === 10 ? "text-blue-200" : "",
                          onClick: () => p(10),
                          children: "10",
                        }),
                        v.jsx("button", {
                          type: "button",
                          className: d === 100 ? "text-blue-200" : "",
                          onClick: () => p(100),
                          children: "100",
                        }),
                      ],
                    }),
                  ],
                }),
                v.jsx(He, {
                  onClick: g,
                  classes: "rounded-full h-5 w-5",
                  children: v.jsx(lf, { width: 8, height: 8 }),
                }),
              ],
            }),
            v.jsx(He, {
              onClick: b,
              classes: "h-10",
              disabled: !r,
              loading: l,
              children: v.jsx(Z4, {
                i18nKey:
                  n > 0
                    ? "giveaway.tasks.table.buy.tickets.button.completed"
                    : "giveaway.tasks.table.buy.tickets.button.not-completed",
                count: e("pretty.number.precision.2", {
                  value: (
                    Math.round(Number(Jt.fromNano((t ?? 0) * c)) * 100) / 100
                  ).toString(),
                }),
              }),
            }),
          ],
        }),
        s === l3.PRIME &&
          v.jsx("p", {
            className:
              "text-center text-[11px] font-normal leading-[normal] text-green-300 py-2 px-4",
            children: e("giveaway.prime.notification"),
          }),
      ],
    });
  },
  VJ = ({
    tasks: e,
    ticketPrice: t,
    purchasedTickets: n,
    onShare: r,
    type: i,
  }) => {
    const { giveawayId: s } = fu(),
      { t: o } = Ze(),
      l = t > 0,
      c = l ? n > 0 : !1,
      f = e.filter((b) => b.completed).length,
      d = e.length,
      p = f === d,
      m = d + (l ? 1 : 0),
      g = f + (c ? 1 : 0),
      w = g === m;
    return v.jsxs("div", {
      className: "w-full rounded-lg flex flex-col overflow-hidden",
      children: [
        v.jsxs("div", {
          className: me(
            "w-full px-3 py-1.5 flex items-center justify-between bg-gray-600",
            w ? "text-green-300" : "text-gray-300"
          ),
          children: [
            v.jsx("span", {
              className: "text-[12px] font-bold leading-[15px]",
              children: o(
                w
                  ? "giveaway.tasks.table.title.completed"
                  : "giveaway.tasks.table.title.not-completed"
              ),
            }),
            v.jsxs("span", {
              className: "text-[12px] font-bold leading-[15px]",
              children: [g, "/", m],
            }),
          ],
        }),
        v.jsxs("div", {
          className: "flex flex-col gap-[1px]",
          children: [
            e == null
              ? void 0
              : e.map((b) =>
                  v.jsx(FJ, { task: b, t: o, giveawayId: s, onShare: r }, b.id)
                ),
            l &&
              v.jsx($J, {
                ticketPrice: t,
                purchasedTickets: n,
                allTasksCompleted: p,
                giveawayId: s,
                t: o,
                type: i,
              }),
          ],
        }),
      ],
    });
  },
  uT = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 20,
        height: 16,
        fill: "none",
        viewBox: "0 0 20 16",
        ...e,
      },
      N.createElement("path", {
        fill: "#4DB2FF",
        fillRule: "evenodd",
        d: "M6.27 7.31V2.45H3.1c-.84 0-1.51.68-1.51 1.51v3.35h4.68Zm6.09-4.86H7.64v4.86h4.72V2.45Zm1.37 4.86h4.68V3.96c0-.83-.67-1.51-1.5-1.51h-3.18v4.86Zm0 6.24h3.17c.84 0 1.51-.68 1.51-1.51V8.68h-4.68v4.87Zm-6.09 0V8.68h4.72v4.87H7.64Zm-4.54 0c-.84 0-1.51-.68-1.51-1.51V8.68h4.68v4.87H3.1ZM0 12.04a3.1 3.1 0 0 0 3.1 3.1h13.8a3.1 3.1 0 0 0 3.1-3.1V3.96a3.1 3.1 0 0 0-3.1-3.1H3.1A3.1 3.1 0 0 0 0 3.96v8.08Z",
        clipRule: "evenodd",
      })
    ),
  cT = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 20,
        height: 16,
        fill: "none",
        viewBox: "0 0 20 16",
        ...e,
      },
      N.createElement("path", {
        fill: "#4DB2FF",
        fillRule: "evenodd",
        d: "M13.73 13.55h3.17c.84 0 1.51-.68 1.51-1.51V3.96c0-.83-.67-1.51-1.5-1.51h-3.18v11.1Zm-1.37 0H7.64V2.45h4.72v11.1ZM1.59 12.04c0 .83.68 1.5 1.5 1.5h3.18V2.46H3.1c-.84 0-1.51.68-1.51 1.51v8.08Zm1.5 3.1A3.1 3.1 0 0 1 0 12.03V3.96A3.1 3.1 0 0 1 3.1.86h13.8a3.1 3.1 0 0 1 3.1 3.1v8.08a3.1 3.1 0 0 1-3.1 3.1H3.1Z",
        clipRule: "evenodd",
      })
    ),
  WJ = ({
    createdDate: e,
    endDate: t,
    ticketPrice: n,
    ticketsToStart: r,
    items: i,
    status: s,
    tasks: o,
    purchasedTickets: l,
    onShare: c,
    type: f,
  }) => {
    const { t: d } = Ze(),
      [p, m] = N.useState("carousel"),
      g = () => {
        m((w) => (w === "carousel" ? "grid" : "carousel"));
      };
    return v.jsxs("div", {
      className: "flex flex-col gap-4",
      children: [
        v.jsxs("div", {
          className: "flex flex-col -mt-4",
          children: [
            v.jsxs(He, {
              classes: "bg-transparent ml-auto h-8",
              onClick: g,
              children: [
                p === "carousel" && v.jsx(cT, {}),
                p === "grid" && v.jsx(uT, {}),
              ],
            }),
            p === "carousel" && v.jsx(Im, { items: i, preset: h2.large }),
            p === "grid" && v.jsx(LA, { items: i, preset: h2.large }),
          ],
        }),
        v.jsx(BA, { createdDate: e, endDate: t, status: s, ticketsToStart: r }),
        v.jsx(VJ, {
          tasks: o,
          ticketPrice: n,
          purchasedTickets: l,
          onShare: c,
          type: f,
        }),
        v.jsx(He, {
          onClick: c,
          classes: "h-[40px] bg-gray-350",
          text: d("giveaway.page.button.share"),
        }),
      ],
    });
  },
  zJ = ({ winners: e, preset: t }) => {
    const {
      isDone: n,
      loaderRef: r,
      visibleItems: i,
    } = Wi({ items: e, pageSize: fa.small });
    return v.jsxs(af, {
      className: "scroll-container flex gap-2 -mx-4 px-4",
      children: [
        i == null
          ? void 0
          : i.map((s) => {
              const {
                  avatar: o = "",
                  firstName: l = "",
                  lastName: c = "",
                  gift: f = {},
                } = s,
                {
                  nftId: d,
                  model: p = {},
                  backDrop: m = {},
                  pattern: g = {},
                } = f,
                { animationLink: w } = p;
              return v.jsx(
                Tm,
                {
                  preset: t,
                  fixedWidth: !0,
                  animationLink: w,
                  backdrop: m,
                  nftId: d,
                  pattern: g,
                  children: v.jsxs("div", {
                    className:
                      "flex items-center gap-1.5 bg-gray-700 w-full justify-center py-[8.5px] px-6",
                    children: [
                      v.jsx("div", {
                        className:
                          "w-3 h-3 rounded-full bg-black/25 overflow-hidden shrink-0",
                        children: v.jsx("img", {
                          alt: "avatar",
                          src: o,
                          width: 12,
                          height: 12,
                        }),
                      }),
                      v.jsx("span", {
                        className:
                          "font-bold text-[12px] leading-[15px] text-blue-200 line-clamp-1",
                        children: `${l} ${c}`,
                      }),
                    ],
                  }),
                },
                `${d}-${p.animationLink}`
              );
            }),
        !n &&
          v.jsx("div", {
            ref: r,
            style: { width: t.size + 32 },
            className:
              "rounded-lg bg-black/25 flex flex-col shrink-0 items-center justify-center gap-1",
            children: v.jsx(Fn, {
              className: "animate-spin w-[20px] h-[20px]",
            }),
          }),
      ],
    });
  },
  HJ = ({ winners: e, preset: t }) =>
    v.jsx("div", {
      className: "flex items-center gap-2 flex-wrap justify-center",
      children:
        e == null
          ? void 0
          : e.map((n) => {
              const {
                  avatar: r = "",
                  firstName: i = "",
                  lastName: s = "",
                  gift: o = {},
                } = n,
                {
                  nftId: l,
                  model: c = {},
                  backDrop: f = {},
                  pattern: d = {},
                } = o,
                { animationLink: p } = c;
              return v.jsx(
                Tm,
                {
                  preset: t,
                  fixedWidth: !0,
                  animationLink: p,
                  backdrop: f,
                  nftId: l,
                  pattern: d,
                  children: v.jsxs("div", {
                    className:
                      "flex items-center gap-1.5 bg-gray-700 w-full justify-center py-[8.5px] px-6",
                    children: [
                      v.jsx("div", {
                        className:
                          "w-3 h-3 rounded-full bg-black/25 overflow-hidden shrink-0",
                        children: v.jsx("img", {
                          alt: "avatar",
                          src: r,
                          width: 12,
                          height: 12,
                        }),
                      }),
                      v.jsx("span", {
                        className:
                          "font-bold text-[12px] leading-[15px] text-blue-200 line-clamp-1",
                        children: `${i} ${s}`,
                      }),
                    ],
                  }),
                },
                `${l}-${c.animationLink}`
              );
            }),
    }),
  qJ = ({ status: e, userPrizesCount: t, purchasedTickets: n }) => {
    const { t: r } = Ze();
    return e === Gn.CANCELED
      ? v.jsxs("div", {
          className:
            "flex items-center justify-center flex-col text-center py-1",
          children: [
            v.jsx("span", {
              className: "text-sm leading-[17px] text-red-300 font-bold",
              children: r("giveaway.page.ended.canceled.title"),
            }),
            v.jsx("span", {
              className: "text-[12px] leading-[15px] text-gray-300",
              children: r("giveaway.page.ended.canceled.text"),
            }),
          ],
        })
      : n === 0
      ? v.jsx("div", {
          className:
            "flex items-center justify-center flex-col text-center py-1 h-10",
          children: v.jsx("span", {
            className: "text-sm leading-[17px] text-gray-300 font-bold",
            children: r("giveaway.page.ended.not-participate.text"),
          }),
        })
      : t === 0
      ? v.jsx("div", {
          className:
            "flex items-center justify-center bg-red-300/10 rounded-lg flex-col text-center py-1 h-10",
          children: v.jsx("span", {
            className: "text-sm leading-[17px] text-red-300 font-bold",
            children: r("giveaway.page.ended.not-win.text"),
          }),
        })
      : v.jsx("div", {
          className:
            "flex items-center justify-center bg-green-300/10 rounded-lg flex-col text-center py-1 h-10",
          children: v.jsx("span", {
            className: "text-sm leading-[17px] text-green-300 font-bold",
            children: r("giveaway.page.ended.win.text", { count: t }),
          }),
        });
  },
  KJ = ({
    t: e,
    preset: t,
    inventoryId: n,
    giveawayId: r,
    setIsLoading: i,
    isLoading: s,
    ...o
  }) => {
    const { gift: l = {}, status: c } = o,
      {
        nftId: f,
        sellPrice: d,
        model: p = {},
        backDrop: m = {},
        pattern: g = {},
      } = l,
      w = v2(),
      b = or(),
      [x, { isLoading: E }] = Wp(),
      P = N.useCallback(async () => {
        i(!0);
        try {
          const {
            data: { success: T },
          } = await x({ inventoryId: n });
          T &&
            w(
              zr.util.invalidateTags([
                { type: "Giveaway", giveawayId: r },
                "Profile",
                "History",
                "Inventory",
              ])
            );
        } catch (T) {
          console.log(T);
        } finally {
          i(!1);
        }
      }, [r, n]),
      _ = N.useCallback(() => b(se.PAGES.PROFILE.TO_FULL_ROUTE_INVENTORY), []);
    return v.jsx(
      Tm,
      {
        preset: t,
        fixedHeight: !0,
        fixedWidth: c !== sd.NONE,
        animationLink: p.animationLink,
        backdrop: m,
        nftId: f,
        pattern: g,
        children: v.jsxs("div", {
          className:
            "bg-gray-700 w-full p-2 grow flex items-center justify-center min-w-[115px]",
          children: [
            c === sd.SOLD &&
              v.jsx("span", {
                className:
                  "text-[12px] leading-[15px] text-gray-300 px-2 h-7 grid place-content-center",
                children: e("giveaway.prize.sold"),
              }),
            c === sd.WITHDRAWN &&
              v.jsx("span", {
                className:
                  "text-[12px] leading-[15px] text-gray-300 px-2 h-7 grid place-content-center",
                children: e("giveaway.prize.withdrawn"),
              }),
            c === sd.NONE &&
              v.jsxs("div", {
                className: "flex flex-col gap-2 grow",
                children: [
                  v.jsx(He, {
                    onClick: P,
                    loading: E,
                    classes: "h-7",
                    children: v.jsx(Z4, {
                      i18nKey: "giveaway.prize.button.sell",
                      className:
                        "text-[12px] leading-[15px] font-bold text-nowrap",
                      count: e("pretty.number.precision.2", {
                        value: (
                          Math.round(Number(Jt.fromNano(d ?? 0)) * 100) / 100
                        ).toString(),
                      }),
                    }),
                  }),
                  v.jsx(He, {
                    disabled: s,
                    onClick: _,
                    classes:
                      "text-[12px] leading-[15px] font-bold h-7 bg-gray-350",
                    children: e("giveaway.prize.button.inventory"),
                  }),
                ],
              }),
          ],
        }),
      },
      `${f}-${p.animationLink}`
    );
  },
  GJ = ({ userPrizes: e, preset: t }) => {
    const { t: n } = Ze(),
      { giveawayId: r } = fu(),
      [i, s] = N.useState(!1),
      {
        isDone: o,
        loaderRef: l,
        visibleItems: c,
      } = Wi({ items: e, pageSize: fa.small });
    return (e == null ? void 0 : e.length) === 0
      ? null
      : v.jsxs(af, {
          className: "scroll-container flex gap-2 -mx-4 px-4",
          children: [
            c == null
              ? void 0
              : c.map((f) =>
                  v.jsx(
                    KJ,
                    {
                      inventoryId: f.inventoryId,
                      giveawayId: r,
                      preset: t,
                      isLoading: i,
                      setIsLoading: s,
                      t: n,
                      ...f,
                    },
                    f.inventoryId
                  )
                ),
            !o &&
              v.jsx("div", {
                ref: l,
                style: { width: t.size + 32 },
                className:
                  "rounded-lg bg-black/25 flex flex-col shrink-0 items-center justify-center gap-1",
                children: v.jsx(Fn, {
                  className: "animate-spin w-[20px] h-[20px]",
                }),
              }),
          ],
        });
  },
  YJ = ({
    winners: e,
    userPrizes: t,
    status: n,
    type: r,
    purchasedTickets: i,
    items: s,
    onShare: o,
  }) => {
    var b, x;
    const { t: l } = Ze(),
      [c, f] = N.useState("carousel"),
      d = () => {
        f((E) => (E === "carousel" ? "grid" : "carousel"));
      },
      p = { carousel: { [Gn.COMPLETED]: zJ }, grid: { [Gn.COMPLETED]: HJ } },
      m = { carousel: { [Gn.CANCELED]: Im }, grid: { [Gn.CANCELED]: LA } },
      g = (b = p[c]) == null ? void 0 : b[n],
      w = (x = m[c]) == null ? void 0 : x[n];
    return v.jsxs("div", {
      className: "flex flex-col gap-4",
      children: [
        v.jsxs("div", {
          className: "flex flex-col -mt-4",
          children: [
            v.jsxs(He, {
              classes: "bg-transparent ml-auto h-8",
              onClick: d,
              children: [
                c === "carousel" && v.jsx(cT, {}),
                c === "grid" && v.jsx(uT, {}),
              ],
            }),
            g && v.jsx(g, { winners: e, preset: h2.large }),
            w && v.jsx(w, { items: s, preset: h2.large }),
          ],
        }),
        v.jsx(qJ, {
          status: n,
          userPrizesCount: t == null ? void 0 : t.length,
          purchasedTickets: i,
        }),
        v.jsx(GJ, { userPrizes: t, preset: h2.large }),
        r === l3.PRIME &&
          v.jsxs("div", {
            className:
              "flex items-center justify-between bg-gray-700 rounded-lg text-center py-3 pl-3 pr-4 h-10 text-[14px] leading-[17px] font-bold",
            children: [
              v.jsxs("div", {
                className: "flex items-center gap-3.5",
                children: [
                  v.jsx(ra, { width: 20, className: "text-blue-200" }),
                  l("giveaway.page.ended.tickets"),
                ],
              }),
              v.jsx("span", { className: "text-blue-200", children: i }),
            ],
          }),
        n === Gn.COMPLETED &&
          v.jsx(He, {
            onClick: o,
            classes: "h-[40px] bg-gray-350",
            text: l("giveaway.page.button.share"),
          }),
      ],
    });
  },
  QJ = () => {
    const { giveawayId: e } = fu(),
      t = ia(N3.telegram.getUserId);
    U3({ url: -1 });
    const { data: n } = tz(e),
      r = N.useCallback(async () => {
        try {
          await window.Telegram.WebApp.openTelegramLink(TQ(t, e));
        } catch (P) {
          console.log(P);
        }
      }, [e, t]);
    if (!n)
      return v.jsx(Fn, {
        className: "animate-spin mx-auto mt-4",
        width: 28,
        height: 28,
      });
    const {
      channels: i,
      createdDate: s,
      endDate: o,
      itemsPrice: l,
      participantsAmount: c,
      status: f,
      type: d,
      ticketPrice: p,
      ticketsToStart: m,
      purchasedTickets: g,
      items: w = [],
      tasks: b = [],
      winners: x = [],
      userPrizes: E = [],
    } = n;
    return v.jsxs("div", {
      className: "flex flex-col",
      children: [
        v.jsx(MJ, {
          channels: i,
          itemsCount: w == null ? void 0 : w.length,
          participantsAmount: c,
          itemsPrice: l,
          ticketPrice: p,
        }),
        [Gn.ACTIVE, Gn.WAITING].includes(f) &&
          v.jsx(WJ, {
            createdDate: s,
            endDate: o,
            ticketsToStart: m,
            ticketPrice: p,
            purchasedTickets: g,
            tasks: b,
            items: w,
            status: f,
            onShare: r,
            type: d,
          }),
        [Gn.CANCELED, Gn.COMPLETED].includes(f) &&
          v.jsx(YJ, {
            purchasedTickets: g,
            winners: x,
            userPrizes: E,
            status: f,
            onShare: r,
            items: w,
            type: d,
          }),
      ],
    });
  },
  ZJ = () => {
    const { t: e } = Ze(),
      t = or(),
      { data: n, isLoading: r } = oz(),
      [i, s] = N.useState("desc"),
      o = N.useCallback(
        (p, m) =>
          i === "asc" ? p.minPrice - m.minPrice : m.minPrice - p.minPrice,
        [i]
      ),
      {
        visibleItems: l,
        isDone: c,
        loaderRef: f,
      } = Wi({ items: n == null ? void 0 : n.items, sortFn: o }),
      d = (p) => {
        t(se.PAGES.DEPOSIT.GIFTS.TO_FULL_ROUTE_COLLECTION(p));
      };
    return v.jsxs("div", {
      className: "p-4 pt-0",
      children: [
        v.jsxs(Zs, {
          className: "flex items-center justify-between gap-3",
          children: [
            v.jsx("div", {
              children: v.jsx(Ks, {
                i18nKey: "deposit.information.text",
                components: {
                  tag: v.jsx("button", {
                    className: "text-blue-200 inline",
                    onClick: wr(se.EXTERNAL.TG_ITEMS_BOT),
                    children: j3,
                  }),
                },
              }),
            }),
            v.jsx(He, {
              classes: "px-3 text-white text-[12px] leading-[15px] text-nowrap",
              text: e("deposit.information.button"),
              onClick: wr(se.EXTERNAL.TG_ITEMS_BOT),
            }),
          ],
        }),
        v.jsx(Tu, {
          loading: r,
          title: e("deposit.section.main.title"),
          titleLvl: 1,
          titleClasses: "text-[22px] font-bold",
          titleContainerClasses: "relative top-0 pb-4",
          rightComponent: v.jsx(He, {
            classes: "text-[13px] leading-[18px] bg-gray-600",
            leftIcon: v.jsx(ff, {
              width: 15,
              height: 12,
              className: me(
                "shrink-0 text-blue-200",
                i === "asc" && "scale-[-1] origin-center"
              ),
            }),
            onClick: () => s((p) => (p === "asc" ? "desc" : "asc")),
            text: e("deposit.section.sort"),
          }),
          children: v.jsxs("div", {
            className: "grid grid-cols-3 gap-2",
            children: [
              l == null
                ? void 0
                : l.map(({ id: p, animationLink: m, minPrice: g, name: w }) =>
                    v.jsx(
                      Pm,
                      {
                        onClick: () => d(p),
                        plusPrice: !0,
                        animationLink: m,
                        price: g,
                        name: w,
                      },
                      p
                    )
                  ),
              !c &&
                v.jsx("div", {
                  ref: f,
                  className: "grid col-start-1 -col-end-1 justify-self-center",
                  children: v.jsx(Fn, {
                    width: 20,
                    height: 20,
                    className: "animate-spin",
                  }),
                }),
            ],
          }),
        }),
      ],
    });
  },
  XJ = [
    {
      nameKey: "deposit.nav.ton",
      path: se.PAGES.DEPOSIT.TON,
      icon: v.jsx(zt, { width: 14, height: 14, className: "text-blue-200" }),
    },
    {
      nameKey: "deposit.nav.gifts",
      path: se.PAGES.DEPOSIT.GIFTS.MAIN,
      icon: v.jsx(ii, {
        path: "/static/animations/deposit-gift.lottie",
        size: 17,
      }),
    },
  ],
  JJ = ({ name: e, icon: t, ...n }) =>
    v.jsxs(R3, {
      className: ({ isActive: r }) =>
        me(
          "flex gap-1 items-center justify-center grow bg-gray-700 h-10 text-[14px] text-white font-bold leading-[17px] relative transition-shadow duration-150 outline-none focus:outline-none rounded-lg",
          r ? "shadow-[0_0_0_2px] shadow-blue-200" : ""
        ),
      ...n,
      children: [t, e],
    }),
  e11 = () => {
    const { t: e } = Ze(),
      { state: t } = Un();
    return (
      U3({ url: t ?? "/" }),
      v.jsxs("div", {
        className: "flex flex-col gap-4 h-full",
        children: [
          v.jsx("h1", {
            className:
              "w-full text-center text-[22px] leading-[27px] font-bold px-4 pt-4",
            children: e("deposit.title"),
          }),
          v.jsx("nav", {
            className: "flex items-center justify-center w-full gap-2 px-4",
            children: XJ.map((n) =>
              v.jsx(
                JJ,
                { name: e(n.nameKey), to: n.path, icon: n.icon },
                n.path
              )
            ),
          }),
          v.jsx(ua, {}),
        ],
      })
    );
  },
  t11 = (e) => {
    const [t, n] = N.useState(null),
      [r, i] = N.useState(!0),
      [s, o] = N.useState(null),
      l = async (c, f) => {
        i(!0);
        try {
          const d = await fetch(
            `https://toncenter.com/api/v2/getAddressInformation?address=${c}`,
            { signal: f }
          );
          if (!d.ok) throw new Error(d.code);
          const { result: p } = await d.json(),
            m = Number(p.balance);
          n(m), o("");
        } catch {
          n(0), o("error fetching balance");
        } finally {
          i(!1);
        }
      };
    return (
      N.useEffect(() => {
        if (!e) {
          n(0), o("wallet not connected"), i(!1);
          return;
        }
        const c = new AbortController();
        return (
          l(e, c.signal),
          () => {
            c.abort();
          }
        );
      }, [e]),
      { balance: t, isLoading: r, error: s }
    );
  },
  n11 = ({ balance: e, isLoading: t, error: n, t: r }) => {
    const i = N.useRef(null),
      { register: s } = $n(),
      o = N.useMemo(
        () =>
          Number(Jt.fromNano(e ?? 0))
            .toFixed(2)
            .toLocaleString(),
        [e]
      );
    return (
      N.useEffect(() => {
        var l;
        (l = i.current) == null || l.focus();
      }, []),
      v.jsxs("div", {
        className:
          "grid grid-cols-2 items-center w-full h-[40px] bg-blue-400 rounded-lg pr-3",
        children: [
          v.jsxs("div", {
            className: "relative",
            children: [
              v.jsx(zt, {
                width: 14,
                height: 14,
                className:
                  "shrink-0 absolute top-1/2 left-3 -translate-y-1/2 text-blue-200",
              }),
              v.jsx("input", {
                ref: i,
                className:
                  "outline-none focus:outline-none font-bold placeholder:font-normal placeholder:text-gray-575 placeholder:text-[14px] pl-[40px] bg-white/0 max-w-full",
                type: "number",
                inputMode: "decimal",
                placeholder: r("deposit.TON.input.label"),
                autoFocus: !0,
                ...s("amount", { valueAsNumber: !0 }),
              }),
            ],
          }),
          v.jsxs("div", {
            className:
              "flex flex-col justify-center items-center text-nowrap ml-auto text-[12px] leading-[15px]",
            children: [
              t && !n
                ? v.jsx(Fn, {
                    className: "animate-spin",
                    width: 14,
                    height: 14,
                  })
                : null,
              n && !t ? v.jsx("span", { children: n }) : null,
              !t && !n
                ? v.jsxs("div", {
                    className: "flex items-center gap-0.5",
                    children: [
                      v.jsx(zt, {
                        width: 12,
                        height: 12,
                        className: "shrink-0 text-blue-200",
                      }),
                      v.jsx("span", { className: "font-bold", children: o }),
                    ],
                  })
                : null,
              v.jsx("span", {
                className: "text-[9px] leading-[11px] text-gray-300",
                children: r("deposit.TON.balance"),
              }),
            ],
          }),
        ],
      })
    );
  };
var xo = {},
  T0 = {},
  j2 = {},
  b5,
  Jb;
function Ru() {
  return Jb || ((Jb = 1), (b5 = Symbol.for("nodejs.util.inspect.custom"))), b5;
}
var P0 = {},
  ex;
function r11() {
  if (ex) return P0;
  (ex = 1),
    Object.defineProperty(P0, "__esModule", { value: !0 }),
    (P0.crc16 = void 0);
  function e(t) {
    let r = 0;
    const i = ge.alloc(t.length + 2);
    i.set(t);
    for (let s of i) {
      let o = 128;
      for (; o > 0; )
        (r <<= 1),
          s & o && (r += 1),
          (o >>= 1),
          r > 65535 && ((r &= 65535), (r ^= 4129));
    }
    return ge.from([Math.floor(r / 256), r % 256]);
  }
  return (P0.crc16 = e), P0;
}
var tx;
function mf() {
  if (tx) return j2;
  tx = 1;
  var e =
      (j2 && j2.__importDefault) ||
      function (d) {
        return d && d.__esModule ? d : { default: d };
      },
    t;
  Object.defineProperty(j2, "__esModule", { value: !0 }),
    (j2.address = j2.Address = void 0);
  const n = e(Ru()),
    r = r11(),
    i = 17,
    s = 81,
    o = 128;
  function l(d) {
    if (typeof d == "string" && !c.isFriendly(d))
      throw new Error("Unknown address type");
    const p = ge.isBuffer(d) ? d : ge.from(d, "base64");
    if (p.length !== 36)
      throw new Error("Unknown address type: byte length is not equal to 36");
    const m = p.subarray(0, 34),
      g = p.subarray(34, 36),
      w = (0, r.crc16)(m);
    if (!(w[0] === g[0] && w[1] === g[1]))
      throw new Error("Invalid checksum: " + d);
    let b = m[0],
      x = !1,
      E = !1;
    if ((b & o && ((x = !0), (b = b ^ o)), b !== i && b !== s))
      throw "Unknown address tag";
    E = b === i;
    let P = null;
    m[1] === 255 ? (P = -1) : (P = m[1]);
    const _ = m.subarray(2, 34);
    return { isTestOnly: x, isBounceable: E, workchain: P, hashPart: _ };
  }
  let c = class Ts {
    static isAddress(p) {
      return p instanceof Ts;
    }
    static isFriendly(p) {
      return !(p.length !== 48 || !/[A-Za-z0-9+/_-]+/.test(p));
    }
    static isRaw(p) {
      if (p.indexOf(":") === -1) return !1;
      let [m, g] = p.split(":");
      return !(
        !Number.isInteger(parseFloat(m)) ||
        !/[a-f0-9]+/.test(g.toLowerCase()) ||
        g.length !== 64
      );
    }
    static normalize(p) {
      return typeof p == "string" ? Ts.parse(p).toString() : p.toString();
    }
    static parse(p) {
      if (Ts.isFriendly(p)) return this.parseFriendly(p).address;
      if (Ts.isRaw(p)) return this.parseRaw(p);
      throw new Error("Unknown address type: " + p);
    }
    static parseRaw(p) {
      let m = parseInt(p.split(":")[0]),
        g = ge.from(p.split(":")[1], "hex");
      return new Ts(m, g);
    }
    static parseFriendly(p) {
      if (ge.isBuffer(p)) {
        let m = l(p);
        return {
          isBounceable: m.isBounceable,
          isTestOnly: m.isTestOnly,
          address: new Ts(m.workchain, m.hashPart),
        };
      } else {
        let m = p.replace(/\-/g, "+").replace(/_/g, "/"),
          g = l(m);
        return {
          isBounceable: g.isBounceable,
          isTestOnly: g.isTestOnly,
          address: new Ts(g.workchain, g.hashPart),
        };
      }
    }
    constructor(p, m) {
      if (
        ((this.toRawString = () =>
          this.workChain + ":" + this.hash.toString("hex")),
        (this.toRaw = () => {
          const g = ge.alloc(36);
          return (
            g.set(this.hash),
            g.set(
              [this.workChain, this.workChain, this.workChain, this.workChain],
              32
            ),
            g
          );
        }),
        (this.toStringBuffer = (g) => {
          let w = g && g.testOnly !== void 0 ? g.testOnly : !1,
            x = (g && g.bounceable !== void 0 ? g.bounceable : !0) ? i : s;
          w && (x |= o);
          const E = ge.alloc(34);
          (E[0] = x), (E[1] = this.workChain), E.set(this.hash, 2);
          const P = ge.alloc(36);
          return P.set(E), P.set((0, r.crc16)(E), 34), P;
        }),
        (this.toString = (g) => {
          let w = g && g.urlSafe !== void 0 ? g.urlSafe : !0,
            b = this.toStringBuffer(g);
          return w
            ? b.toString("base64").replace(/\+/g, "-").replace(/\//g, "_")
            : b.toString("base64");
        }),
        (this[t] = () => this.toString()),
        m.length !== 32)
      )
        throw new Error("Invalid address hash length: " + m.length);
      (this.workChain = p), (this.hash = m), Object.freeze(this);
    }
    equals(p) {
      return p.workChain !== this.workChain ? !1 : p.hash.equals(this.hash);
    }
  };
  (j2.Address = c), (t = n.default);
  function f(d) {
    return c.parse(d);
  }
  return (j2.address = f), j2;
}
var Co = {},
  nx;
function fT() {
  if (nx) return Co;
  nx = 1;
  var e =
      (Co && Co.__importDefault) ||
      function (i) {
        return i && i.__esModule ? i : { default: i };
      },
    t;
  Object.defineProperty(Co, "__esModule", { value: !0 }),
    (Co.ExternalAddress = void 0);
  const n = e(Ru());
  let r = class dT {
    static isAddress(s) {
      return s instanceof dT;
    }
    constructor(s, o) {
      (this[t] = () => this.toString()), (this.value = s), (this.bits = o);
    }
    toString() {
      return `External<${this.bits}:${this.value}>`;
    }
  };
  return (Co.ExternalAddress = r), (t = n.default), Co;
}
var So = {},
  Eo = {},
  rx;
function gf() {
  if (rx) return Eo;
  (rx = 1),
    Object.defineProperty(Eo, "__esModule", { value: !0 }),
    (Eo.paddedBufferToBits = Eo.bitsToPaddedBuffer = void 0);
  const e = Fm(),
    t = pa();
  function n(i) {
    let s = new e.BitBuilder(Math.ceil(i.length / 8) * 8);
    s.writeBits(i);
    let o = Math.ceil(i.length / 8) * 8 - i.length;
    for (let l = 0; l < o; l++) l === 0 ? s.writeBit(1) : s.writeBit(0);
    return s.buffer();
  }
  Eo.bitsToPaddedBuffer = n;
  function r(i) {
    let s = 0;
    for (let o = i.length - 1; o >= 0; o--)
      if (i[o] !== 0) {
        const l = i[o];
        let c = l & -l;
        (c & 1) == 0 && (c = Math.log2(c) + 1),
          o > 0 && (s = o << 3),
          (s += 8 - c);
        break;
      }
    return new t.BitString(i, 0, s);
  }
  return (Eo.paddedBufferToBits = r), Eo;
}
var ix;
function pa() {
  if (ix) return So;
  ix = 1;
  var e =
      (So && So.__importDefault) ||
      function (s) {
        return s && s.__esModule ? s : { default: s };
      },
    t;
  Object.defineProperty(So, "__esModule", { value: !0 }),
    (So.BitString = void 0);
  const n = gf(),
    r = e(Ru());
  let i = class Sd {
    static isBitString(o) {
      return o instanceof Sd;
    }
    constructor(o, l, c) {
      if (((this[t] = () => this.toString()), c < 0))
        throw new Error(`Length ${c} is out of bounds`);
      (this._length = c), (this._data = o), (this._offset = l);
    }
    get length() {
      return this._length;
    }
    at(o) {
      if (o >= this._length)
        throw new Error(`Index ${o} > ${this._length} is out of bounds`);
      if (o < 0) throw new Error(`Index ${o} < 0 is out of bounds`);
      let l = (this._offset + o) >> 3,
        c = 7 - ((this._offset + o) % 8);
      return (this._data[l] & (1 << c)) !== 0;
    }
    substring(o, l) {
      if (o > this._length)
        throw new Error(`Offset(${o}) > ${this._length} is out of bounds`);
      if (o < 0) throw new Error(`Offset(${o}) < 0 is out of bounds`);
      if (l === 0) return Sd.EMPTY;
      if (o + l > this._length)
        throw new Error(
          `Offset ${o} + Length ${l} > ${this._length} is out of bounds`
        );
      return new Sd(this._data, this._offset + o, l);
    }
    subbuffer(o, l) {
      if (o > this._length) throw new Error(`Offset ${o} is out of bounds`);
      if (o < 0) throw new Error(`Offset ${o} is out of bounds`);
      if (o + l > this._length)
        throw new Error(`Offset + Lenght = ${o + l} is out of bounds`);
      if (l % 8 !== 0 || (this._offset + o) % 8 !== 0) return null;
      let c = (this._offset + o) >> 3,
        f = c + (l >> 3);
      return this._data.subarray(c, f);
    }
    equals(o) {
      if (this._length !== o._length) return !1;
      for (let l = 0; l < this._length; l++)
        if (this.at(l) !== o.at(l)) return !1;
      return !0;
    }
    toString() {
      const o = (0, n.bitsToPaddedBuffer)(this);
      if (this._length % 4 === 0) {
        const l = o
          .subarray(0, Math.ceil(this._length / 8))
          .toString("hex")
          .toUpperCase();
        return this._length % 8 === 0 ? l : l.substring(0, l.length - 1);
      } else {
        const l = o.toString("hex").toUpperCase();
        return this._length % 8 <= 4
          ? l.substring(0, l.length - 1) + "_"
          : l + "_";
      }
    }
  };
  return (
    (So.BitString = i),
    (t = r.default),
    (i.EMPTY = new i(ge.alloc(0), 0, 0)),
    So
  );
}
var sx;
function Fm() {
  if (sx) return T0;
  (sx = 1),
    Object.defineProperty(T0, "__esModule", { value: !0 }),
    (T0.BitBuilder = void 0);
  const e = mf(),
    t = fT(),
    n = pa();
  let r = class {
    constructor(s = 1023) {
      (this._buffer = ge.alloc(Math.ceil(s / 8))), (this._length = 0);
    }
    get length() {
      return this._length;
    }
    writeBit(s) {
      let o = this._length;
      if (o > this._buffer.length * 8) throw new Error("BitBuilder overflow");
      ((typeof s == "boolean" && s === !0) ||
        (typeof s == "number" && s > 0)) &&
        (this._buffer[(o / 8) | 0] |= 1 << (7 - (o % 8))),
        this._length++;
    }
    writeBits(s) {
      for (let o = 0; o < s.length; o++) this.writeBit(s.at(o));
    }
    writeBuffer(s) {
      if (this._length % 8 === 0) {
        if (this._length + s.length * 8 > this._buffer.length * 8)
          throw new Error("BitBuilder overflow");
        s.copy(this._buffer, this._length / 8), (this._length += s.length * 8);
      } else for (let o = 0; o < s.length; o++) this.writeUint(s[o], 8);
    }
    writeUint(s, o) {
      if (o < 0 || !Number.isSafeInteger(o))
        throw Error(`invalid bit length. Got ${o}`);
      const l = BigInt(s);
      if (o === 0) {
        if (l !== 0n) throw Error(`value is not zero for ${o} bits. Got ${s}`);
        return;
      }
      const c = 1n << BigInt(o);
      if (l < 0 || l >= c)
        throw Error(`bitLength is too small for a value ${s}. Got ${o}`);
      if (this._length + o > this._buffer.length * 8)
        throw new Error("BitBuilder overflow");
      const f = 8 - (this._length % 8);
      if (f > 0) {
        const d = Math.floor(this._length / 8);
        if (o < f) {
          const p = Number(l);
          (this._buffer[d] |= p << (f - o)), (this._length += o);
        } else {
          const p = Number(l >> BigInt(o - f));
          (this._buffer[d] |= p), (this._length += f);
        }
      }
      for (o -= f; o > 0; )
        o >= 8
          ? ((this._buffer[this._length / 8] = Number(
              (l >> BigInt(o - 8)) & 0xffn
            )),
            (this._length += 8),
            (o -= 8))
          : ((this._buffer[this._length / 8] = Number(
              (l << BigInt(8 - o)) & 0xffn
            )),
            (this._length += o),
            (o = 0));
    }
    writeInt(s, o) {
      let l = BigInt(s);
      if (o < 0 || !Number.isSafeInteger(o))
        throw Error(`invalid bit length. Got ${o}`);
      if (o === 0) {
        if (s !== 0n) throw Error(`value is not zero for ${o} bits. Got ${s}`);
        return;
      }
      if (o === 1) {
        if (s !== -1n && s !== 0n)
          throw Error(`value is not zero or -1 for ${o} bits. Got ${s}`);
        this.writeBit(s === -1n);
        return;
      }
      let c = 1n << (BigInt(o) - 1n);
      if (l < -c || l >= c)
        throw Error(`value is out of range for ${o} bits. Got ${s}`);
      l < 0 ? (this.writeBit(!0), (l = c + l)) : this.writeBit(!1),
        this.writeUint(l, o - 1);
    }
    writeVarUint(s, o) {
      let l = BigInt(s);
      if (o < 0 || !Number.isSafeInteger(o))
        throw Error(`invalid bit length. Got ${o}`);
      if (l < 0) throw Error(`value is negative. Got ${s}`);
      if (l === 0n) {
        this.writeUint(0, o);
        return;
      }
      const c = Math.ceil(l.toString(2).length / 8),
        f = c * 8;
      this.writeUint(c, o), this.writeUint(l, f);
    }
    writeVarInt(s, o) {
      let l = BigInt(s);
      if (o < 0 || !Number.isSafeInteger(o))
        throw Error(`invalid bit length. Got ${o}`);
      if (l === 0n) {
        this.writeUint(0, o);
        return;
      }
      let c = l > 0 ? l : -l;
      const f = Math.ceil((c.toString(2).length + 1) / 8),
        d = f * 8;
      this.writeUint(f, o), this.writeInt(l, d);
    }
    writeCoins(s) {
      this.writeVarUint(s, 4);
    }
    writeAddress(s) {
      if (s == null) {
        this.writeUint(0, 2);
        return;
      }
      if (e.Address.isAddress(s)) {
        this.writeUint(2, 2),
          this.writeUint(0, 1),
          this.writeInt(s.workChain, 8),
          this.writeBuffer(s.hash);
        return;
      }
      if (t.ExternalAddress.isAddress(s)) {
        this.writeUint(1, 2),
          this.writeUint(s.bits, 9),
          this.writeUint(s.value, s.bits);
        return;
      }
      throw Error(`Invalid address. Got ${s}`);
    }
    build() {
      return new n.BitString(this._buffer, 0, this._length);
    }
    buffer() {
      if (this._length % 8 !== 0)
        throw new Error("BitBuilder buffer is not byte aligned");
      return this._buffer.subarray(0, this._length / 8);
    }
  };
  return (T0.BitBuilder = r), T0;
}
var ko = {},
  M0 = {},
  ox;
function yf() {
  if (ox) return M0;
  (ox = 1),
    Object.defineProperty(M0, "__esModule", { value: !0 }),
    (M0.CellType = void 0);
  var e;
  return (
    (function (t) {
      (t[(t.Ordinary = -1)] = "Ordinary"),
        (t[(t.PrunedBranch = 1)] = "PrunedBranch"),
        (t[(t.Library = 2)] = "Library"),
        (t[(t.MerkleProof = 3)] = "MerkleProof"),
        (t[(t.MerkleUpdate = 4)] = "MerkleUpdate");
    })(e || (M0.CellType = e = {})),
    M0
  );
}
var _o = {},
  R0 = {},
  Ao = {},
  L0 = {},
  ax;
function i11() {
  if (ax) return L0;
  (ax = 1),
    Object.defineProperty(L0, "__esModule", { value: !0 }),
    (L0.readUnaryLength = void 0);
  function e(t) {
    let n = 0;
    for (; t.loadBit(); ) n++;
    return n;
  }
  return (L0.readUnaryLength = e), L0;
}
var To = {},
  I0 = {},
  lx;
function ma() {
  if (lx) return I0;
  (lx = 1),
    Object.defineProperty(I0, "__esModule", { value: !0 }),
    (I0.BitReader = void 0);
  const e = mf(),
    t = fT();
  let n = class hT {
    constructor(i, s = 0) {
      (this._checkpoints = []), (this._bits = i), (this._offset = s);
    }
    get offset() {
      return this._offset;
    }
    get remaining() {
      return this._bits.length - this._offset;
    }
    skip(i) {
      if (i < 0 || this._offset + i > this._bits.length)
        throw new Error(`Index ${this._offset + i} is out of bounds`);
      this._offset += i;
    }
    reset() {
      this._checkpoints.length > 0
        ? (this._offset = this._checkpoints.pop())
        : (this._offset = 0);
    }
    save() {
      this._checkpoints.push(this._offset);
    }
    loadBit() {
      let i = this._bits.at(this._offset);
      return this._offset++, i;
    }
    preloadBit() {
      return this._bits.at(this._offset);
    }
    loadBits(i) {
      let s = this._bits.substring(this._offset, i);
      return (this._offset += i), s;
    }
    preloadBits(i) {
      return this._bits.substring(this._offset, i);
    }
    loadBuffer(i) {
      let s = this._preloadBuffer(i, this._offset);
      return (this._offset += i * 8), s;
    }
    preloadBuffer(i) {
      return this._preloadBuffer(i, this._offset);
    }
    loadUint(i) {
      return this._toSafeInteger(this.loadUintBig(i), "loadUintBig");
    }
    loadUintBig(i) {
      let s = this.preloadUintBig(i);
      return (this._offset += i), s;
    }
    preloadUint(i) {
      return this._toSafeInteger(
        this._preloadUint(i, this._offset),
        "preloadUintBig"
      );
    }
    preloadUintBig(i) {
      return this._preloadUint(i, this._offset);
    }
    loadInt(i) {
      let s = this._preloadInt(i, this._offset);
      return (this._offset += i), this._toSafeInteger(s, "loadUintBig");
    }
    loadIntBig(i) {
      let s = this._preloadInt(i, this._offset);
      return (this._offset += i), s;
    }
    preloadInt(i) {
      return this._toSafeInteger(
        this._preloadInt(i, this._offset),
        "preloadIntBig"
      );
    }
    preloadIntBig(i) {
      return this._preloadInt(i, this._offset);
    }
    loadVarUint(i) {
      let s = Number(this.loadUint(i));
      return this._toSafeInteger(this.loadUintBig(s * 8), "loadVarUintBig");
    }
    loadVarUintBig(i) {
      let s = Number(this.loadUint(i));
      return this.loadUintBig(s * 8);
    }
    preloadVarUint(i) {
      let s = Number(this._preloadUint(i, this._offset));
      return this._toSafeInteger(
        this._preloadUint(s * 8, this._offset + i),
        "preloadVarUintBig"
      );
    }
    preloadVarUintBig(i) {
      let s = Number(this._preloadUint(i, this._offset));
      return this._preloadUint(s * 8, this._offset + i);
    }
    loadVarInt(i) {
      let s = Number(this.loadUint(i));
      return this._toSafeInteger(this.loadIntBig(s * 8), "loadVarIntBig");
    }
    loadVarIntBig(i) {
      let s = Number(this.loadUint(i));
      return this.loadIntBig(s * 8);
    }
    preloadVarInt(i) {
      let s = Number(this._preloadUint(i, this._offset));
      return this._toSafeInteger(
        this._preloadInt(s * 8, this._offset + i),
        "preloadVarIntBig"
      );
    }
    preloadVarIntBig(i) {
      let s = Number(this._preloadUint(i, this._offset));
      return this._preloadInt(s * 8, this._offset + i);
    }
    loadCoins() {
      return this.loadVarUintBig(4);
    }
    preloadCoins() {
      return this.preloadVarUintBig(4);
    }
    loadAddress() {
      let i = Number(this._preloadUint(2, this._offset));
      if (i === 2) return this._loadInternalAddress();
      throw new Error("Invalid address: " + i);
    }
    loadMaybeAddress() {
      let i = Number(this._preloadUint(2, this._offset));
      if (i === 0) return (this._offset += 2), null;
      if (i === 2) return this._loadInternalAddress();
      throw new Error("Invalid address");
    }
    loadExternalAddress() {
      if (Number(this._preloadUint(2, this._offset)) === 1)
        return this._loadExternalAddress();
      throw new Error("Invalid address");
    }
    loadMaybeExternalAddress() {
      let i = Number(this._preloadUint(2, this._offset));
      if (i === 0) return (this._offset += 2), null;
      if (i === 1) return this._loadExternalAddress();
      throw new Error("Invalid address");
    }
    loadAddressAny() {
      let i = Number(this._preloadUint(2, this._offset));
      if (i === 0) return (this._offset += 2), null;
      if (i === 2) return this._loadInternalAddress();
      if (i === 1) return this._loadExternalAddress();
      throw Error(i === 3 ? "Unsupported" : "Unreachable");
    }
    loadPaddedBits(i) {
      if (i % 8 !== 0) throw new Error("Invalid number of bits");
      let s = i;
      for (;;)
        if (this._bits.at(this._offset + s - 1)) {
          s--;
          break;
        } else s--;
      let o = this._bits.substring(this._offset, s);
      return (this._offset += i), o;
    }
    clone() {
      return new hT(this._bits, this._offset);
    }
    _preloadInt(i, s) {
      if (i == 0) return 0n;
      let o = this._bits.at(s),
        l = 0n;
      for (let c = 0; c < i - 1; c++)
        this._bits.at(s + 1 + c) && (l += 1n << BigInt(i - c - 1 - 1));
      return o && (l = l - (1n << BigInt(i - 1))), l;
    }
    _preloadUint(i, s) {
      if (i == 0) return 0n;
      let o = 0n;
      for (let l = 0; l < i; l++)
        this._bits.at(s + l) && (o += 1n << BigInt(i - l - 1));
      return o;
    }
    _preloadBuffer(i, s) {
      let o = this._bits.subbuffer(s, i * 8);
      if (o) return o;
      let l = ge.alloc(i);
      for (let c = 0; c < i; c++)
        l[c] = Number(this._preloadUint(8, s + c * 8));
      return l;
    }
    _loadInternalAddress() {
      if (
        Number(this._preloadUint(2, this._offset)) !== 2 ||
        this._preloadUint(1, this._offset + 2) !== 0n
      )
        throw Error("Invalid address");
      let s = Number(this._preloadInt(8, this._offset + 3)),
        o = this._preloadBuffer(32, this._offset + 11);
      return (this._offset += 267), new e.Address(s, o);
    }
    _loadExternalAddress() {
      if (Number(this._preloadUint(2, this._offset)) !== 1)
        throw Error("Invalid address");
      let s = Number(this._preloadUint(9, this._offset + 2)),
        o = this._preloadUint(s, this._offset + 11);
      return (this._offset += 11 + s), new t.ExternalAddress(o, s);
    }
    _toSafeInteger(i, s) {
      if (
        BigInt(Number.MAX_SAFE_INTEGER) < i ||
        i < BigInt(Number.MIN_SAFE_INTEGER)
      )
        throw new TypeError(
          `${i} is out of safe integer range. Use ${s} instead`
        );
      return Number(i);
    }
  };
  return (I0.BitReader = n), I0;
}
var ux;
function Um() {
  if (ux) return To;
  (ux = 1),
    Object.defineProperty(To, "__esModule", { value: !0 }),
    (To.convertToMerkleProof = To.exoticMerkleProof = void 0);
  const e = ma(),
    t = as();
  function n(i, s) {
    const o = new e.BitReader(i);
    if (i.length !== 280)
      throw new Error(
        `Merkle Proof cell must have exactly (8 + 256 + 16) bits, got "${i.length}"`
      );
    if (s.length !== 1)
      throw new Error(
        `Merkle Proof cell must have exactly 1 ref, got "${s.length}"`
      );
    let c = o.loadUint(8);
    if (c !== 3)
      throw new Error(`Merkle Proof cell must have type 3, got "${c}"`);
    const f = o.loadBuffer(32),
      d = o.loadUint(16),
      p = s[0].hash(0),
      m = s[0].depth(0);
    if (d !== m)
      throw new Error(
        `Merkle Proof cell ref depth must be exactly "${d}", got "${m}"`
      );
    if (!f.equals(p))
      throw new Error(
        `Merkle Proof cell ref hash must be exactly "${f.toString(
          "hex"
        )}", got "${p.toString("hex")}"`
      );
    return { proofDepth: d, proofHash: f };
  }
  To.exoticMerkleProof = n;
  function r(i) {
    return (0, t.beginCell)()
      .storeUint(3, 8)
      .storeBuffer(i.hash(0))
      .storeUint(i.depth(0), 16)
      .storeRef(i)
      .endCell({ exotic: !0 });
  }
  return (To.convertToMerkleProof = r), To;
}
var cx;
function pT() {
  if (cx) return Ao;
  (cx = 1),
    Object.defineProperty(Ao, "__esModule", { value: !0 }),
    (Ao.generateMerkleProof = Ao.generateMerkleProofDirect = void 0);
  const e = as(),
    t = i11(),
    n = Um();
  function r(l) {
    return (0, e.beginCell)()
      .storeUint(1, 8)
      .storeUint(1, 8)
      .storeBuffer(l.hash(0))
      .storeUint(l.depth(0), 16)
      .endCell({ exotic: !0 });
  }
  function i(l, c, f, d) {
    const p = c.asCell();
    if (d.length == 0) return r(p);
    let m = c.loadBit() ? 1 : 0,
      g = 0,
      w = l;
    if (m === 0) {
      g = (0, t.readUnaryLength)(c);
      for (let b = 0; b < g; b++) w += c.loadBit() ? "1" : "0";
    } else if ((c.loadBit() ? 1 : 0) === 0) {
      g = c.loadUint(Math.ceil(Math.log2(f + 1)));
      for (let x = 0; x < g; x++) w += c.loadBit() ? "1" : "0";
    } else {
      let x = c.loadBit() ? "1" : "0";
      g = c.loadUint(Math.ceil(Math.log2(f + 1)));
      for (let E = 0; E < g; E++) w += x;
    }
    if (f - g === 0) return p;
    {
      let b = p.beginParse(),
        x = b.loadRef(),
        E = b.loadRef();
      if (!x.isExotic) {
        const P = d.filter((_) => w + "0" === _.slice(0, w.length + 1));
        x = i(w + "0", x.beginParse(), f - g - 1, P);
      }
      if (!E.isExotic) {
        const P = d.filter((_) => w + "1" === _.slice(0, w.length + 1));
        E = i(w + "1", E.beginParse(), f - g - 1, P);
      }
      return (0, e.beginCell)().storeSlice(b).storeRef(x).storeRef(E).endCell();
    }
  }
  function s(l, c, f) {
    c.forEach((p) => {
      if (!l.has(p))
        throw new Error(
          `Trying to generate merkle proof for a missing key "${p}"`
        );
    });
    const d = (0, e.beginCell)().storeDictDirect(l).asSlice();
    return i(
      "",
      d,
      f.bits,
      c.map((p) => f.serialize(p).toString(2).padStart(f.bits, "0"))
    );
  }
  Ao.generateMerkleProofDirect = s;
  function o(l, c, f) {
    return (0, n.convertToMerkleProof)(s(l, c, f));
  }
  return (Ao.generateMerkleProof = o), Ao;
}
var j0 = {},
  dx;
function s11() {
  if (dx) return j0;
  (dx = 1),
    Object.defineProperty(j0, "__esModule", { value: !0 }),
    (j0.generateMerkleUpdate = void 0);
  const e = as(),
    t = pT();
  function n(i, s) {
    return (0, e.beginCell)()
      .storeUint(4, 8)
      .storeBuffer(i.hash(0))
      .storeBuffer(s.hash(0))
      .storeUint(i.depth(0), 16)
      .storeUint(s.depth(0), 16)
      .storeRef(i)
      .storeRef(s)
      .endCell({ exotic: !0 });
  }
  function r(i, s, o, l) {
    const c = (0, t.generateMerkleProof)(i, [s], o).refs[0];
    i.set(s, l);
    const f = (0, t.generateMerkleProof)(i, [s], o).refs[0];
    return n(c, f);
  }
  return (j0.generateMerkleUpdate = r), j0;
}
var N0 = {},
  fx;
function o11() {
  if (fx) return N0;
  (fx = 1),
    Object.defineProperty(N0, "__esModule", { value: !0 }),
    (N0.parseDict = void 0);
  function e(r) {
    let i = 0;
    for (; r.loadBit(); ) i++;
    return i;
  }
  function t(r, i, s, o, l) {
    let c = i.loadBit() ? 1 : 0,
      f = 0,
      d = r;
    if (c === 0) {
      f = e(i);
      for (let p = 0; p < f; p++) d += i.loadBit() ? "1" : "0";
    } else if ((i.loadBit() ? 1 : 0) === 0) {
      f = i.loadUint(Math.ceil(Math.log2(s + 1)));
      for (let m = 0; m < f; m++) d += i.loadBit() ? "1" : "0";
    } else {
      let m = i.loadBit() ? "1" : "0";
      f = i.loadUint(Math.ceil(Math.log2(s + 1)));
      for (let g = 0; g < f; g++) d += m;
    }
    if (s - f === 0) o.set(BigInt("0b" + d), l(i));
    else {
      let p = i.loadRef(),
        m = i.loadRef();
      p.isExotic || t(d + "0", p.beginParse(), s - f - 1, o, l),
        m.isExotic || t(d + "1", m.beginParse(), s - f - 1, o, l);
    }
  }
  function n(r, i, s) {
    let o = new Map();
    return r && t("", r, i, o, s), o;
  }
  return (N0.parseDict = n), N0;
}
var kr = {},
  O0 = {},
  hx;
function a11() {
  if (hx) return O0;
  (hx = 1),
    Object.defineProperty(O0, "__esModule", { value: !0 }),
    (O0.findCommonPrefix = void 0);
  function e(t, n = 0) {
    if (t.length === 0) return "";
    let r = t[0].slice(n);
    for (let i = 1; i < t.length; i++) {
      const s = t[i];
      for (; s.indexOf(r, n) !== n; )
        if (((r = r.substring(0, r.length - 1)), r === "")) return r;
    }
    return r;
  }
  return (O0.findCommonPrefix = e), O0;
}
var px;
function l11() {
  if (px) return kr;
  (px = 1),
    Object.defineProperty(kr, "__esModule", { value: !0 }),
    (kr.serializeDict =
      kr.detectLabelType =
      kr.writeLabelSame =
      kr.writeLabelLong =
      kr.writeLabelShort =
      kr.buildTree =
        void 0);
  const e = as(),
    t = a11();
  function n(_, T) {
    for (; _.length < T; ) _ = "0" + _;
    return _;
  }
  function r(_, T) {
    if (_.size === 0) throw Error("Internal inconsistency");
    let M = new Map(),
      L = new Map();
    for (let [O, U] of _.entries()) O[T] === "0" ? M.set(O, U) : L.set(O, U);
    if (M.size === 0) throw Error("Internal inconsistency. Left emtpy.");
    if (L.size === 0) throw Error("Internal inconsistency. Right emtpy.");
    return { left: M, right: L };
  }
  function i(_, T) {
    if (_.size === 0) throw Error("Internal inconsistency");
    if (_.size === 1) return { type: "leaf", value: Array.from(_.values())[0] };
    let { left: M, right: L } = r(_, T);
    return { type: "fork", left: s(M, T + 1), right: s(L, T + 1) };
  }
  function s(_, T = 0) {
    if (_.size === 0) throw Error("Internal inconsistency");
    const M = (0, t.findCommonPrefix)(Array.from(_.keys()), T);
    return { label: M, node: i(_, M.length + T) };
  }
  function o(_, T) {
    let M = new Map();
    for (let L of Array.from(_.keys())) {
      const O = n(L.toString(2), T);
      M.set(O, _.get(L));
    }
    return s(M);
  }
  kr.buildTree = o;
  function l(_, T) {
    T.storeBit(0);
    for (let M = 0; M < _.length; M++) T.storeBit(1);
    return (
      T.storeBit(0), _.length > 0 && T.storeUint(BigInt("0b" + _), _.length), T
    );
  }
  kr.writeLabelShort = l;
  function c(_) {
    return 1 + _.length + 1 + _.length;
  }
  function f(_, T, M) {
    M.storeBit(1), M.storeBit(0);
    let L = Math.ceil(Math.log2(T + 1));
    return (
      M.storeUint(_.length, L),
      _.length > 0 && M.storeUint(BigInt("0b" + _), _.length),
      M
    );
  }
  kr.writeLabelLong = f;
  function d(_, T) {
    return 2 + Math.ceil(Math.log2(T + 1)) + _.length;
  }
  function p(_, T, M, L) {
    L.storeBit(1), L.storeBit(1), L.storeBit(_);
    let O = Math.ceil(Math.log2(M + 1));
    L.storeUint(T, O);
  }
  kr.writeLabelSame = p;
  function m(_) {
    return 3 + Math.ceil(Math.log2(_ + 1));
  }
  function g(_) {
    if (_.length === 0 || _.length === 1) return !0;
    for (let T = 1; T < _.length; T++) if (_[T] !== _[0]) return !1;
    return !0;
  }
  function w(_, T) {
    let M = "short",
      L = c(_),
      O = d(_, T);
    if ((O < L && ((L = O), (M = "long")), g(_))) {
      let U = m(T);
      U < L && ((L = U), (M = "same"));
    }
    return M;
  }
  kr.detectLabelType = w;
  function b(_, T, M) {
    let L = w(_, T);
    L === "short"
      ? l(_, M)
      : L === "long"
      ? f(_, T, M)
      : L === "same" && p(_[0] === "1", _.length, T, M);
  }
  function x(_, T, M, L) {
    if ((_.type === "leaf" && M(_.value, L), _.type === "fork")) {
      const O = (0, e.beginCell)(),
        U = (0, e.beginCell)();
      E(_.left, T - 1, M, O),
        E(_.right, T - 1, M, U),
        L.storeRef(O),
        L.storeRef(U);
    }
  }
  function E(_, T, M, L) {
    b(_.label, T, L), x(_.node, T - _.label.length, M, L);
  }
  function P(_, T, M, L) {
    const O = o(_, T);
    E(O, T, M, L);
  }
  return (kr.serializeDict = P), kr;
}
var Po = {},
  mx;
function u11() {
  if (mx) return Po;
  (mx = 1),
    Object.defineProperty(Po, "__esModule", { value: !0 }),
    (Po.deserializeInternalKey = Po.serializeInternalKey = void 0);
  const e = mf(),
    t = pa(),
    n = gf();
  function r(s) {
    if (typeof s == "number") {
      if (!Number.isSafeInteger(s))
        throw Error("Invalid key type: not a safe integer: " + s);
      return "n:" + s.toString(10);
    } else {
      if (typeof s == "bigint") return "b:" + s.toString(10);
      if (e.Address.isAddress(s)) return "a:" + s.toString();
      if (ge.isBuffer(s)) return "f:" + s.toString("hex");
      if (t.BitString.isBitString(s)) return "B:" + s.toString();
      throw Error("Invalid key type");
    }
  }
  Po.serializeInternalKey = r;
  function i(s) {
    let o = s.slice(0, 2),
      l = s.slice(2);
    if (o === "n:") return parseInt(l, 10);
    if (o === "b:") return BigInt(l);
    if (o === "a:") return e.Address.parse(l);
    if (o === "f:") return ge.from(l, "hex");
    if (o === "B:") {
      const c = l.slice(-1) == "_";
      if (c || l.length % 2 != 0) {
        let d = c ? l.length - 1 : l.length;
        const p = l.substr(0, d) + "0";
        return !c && (d & 1) !== 0
          ? new t.BitString(ge.from(p, "hex"), 0, d << 2)
          : (0, n.paddedBufferToBits)(ge.from(p, "hex"));
      } else return new t.BitString(ge.from(l, "hex"), 0, l.length << 2);
    }
    throw Error("Invalid key type: " + o);
  }
  return (Po.deserializeInternalKey = i), Po;
}
var gx;
function c11() {
  if (gx) return R0;
  (gx = 1),
    Object.defineProperty(R0, "__esModule", { value: !0 }),
    (R0.Dictionary = void 0);
  const e = mf(),
    t = as(),
    n = zm(),
    r = pa(),
    i = pT(),
    s = s11(),
    o = o11(),
    l = l11(),
    c = u11();
  let f = class Ps {
    static empty(j, G) {
      return j && G ? new Ps(new Map(), j, G) : new Ps(new Map(), null, null);
    }
    static load(j, G, u1) {
      let e1;
      if (u1 instanceof n.Cell) {
        if (u1.isExotic) return Ps.empty(j, G);
        e1 = u1.beginParse();
      } else e1 = u1;
      let i1 = e1.loadMaybeRef();
      return i1 && !i1.isExotic
        ? Ps.loadDirect(j, G, i1.beginParse())
        : Ps.empty(j, G);
    }
    static loadDirect(j, G, u1) {
      if (!u1) return Ps.empty(j, G);
      let e1;
      u1 instanceof n.Cell ? (e1 = u1.beginParse()) : (e1 = u1);
      let i1 = (0, o.parseDict)(e1, j.bits, G.parse),
        Z = new Map();
      for (let [b1, o1] of i1)
        Z.set((0, c.serializeInternalKey)(j.parse(b1)), o1);
      return new Ps(Z, j, G);
    }
    constructor(j, G, u1) {
      (this._key = G), (this._value = u1), (this._map = j);
    }
    get size() {
      return this._map.size;
    }
    get(j) {
      return this._map.get((0, c.serializeInternalKey)(j));
    }
    has(j) {
      return this._map.has((0, c.serializeInternalKey)(j));
    }
    set(j, G) {
      return this._map.set((0, c.serializeInternalKey)(j), G), this;
    }
    delete(j) {
      const G = (0, c.serializeInternalKey)(j);
      return this._map.delete(G);
    }
    clear() {
      this._map.clear();
    }
    *[Symbol.iterator]() {
      for (const [j, G] of this._map)
        yield [(0, c.deserializeInternalKey)(j), G];
    }
    keys() {
      return Array.from(this._map.keys()).map((j) =>
        (0, c.deserializeInternalKey)(j)
      );
    }
    values() {
      return Array.from(this._map.values());
    }
    store(j, G, u1) {
      if (this._map.size === 0) j.storeBit(0);
      else {
        let e1 = this._key;
        G != null && (e1 = G);
        let i1 = this._value;
        if ((u1 != null && (i1 = u1), !e1))
          throw Error("Key serializer is not defined");
        if (!i1) throw Error("Value serializer is not defined");
        let Z = new Map();
        for (const [o1, k1] of this._map)
          Z.set(e1.serialize((0, c.deserializeInternalKey)(o1)), k1);
        j.storeBit(1);
        let b1 = (0, t.beginCell)();
        (0, l.serializeDict)(Z, e1.bits, i1.serialize, b1),
          j.storeRef(b1.endCell());
      }
    }
    storeDirect(j, G, u1) {
      if (this._map.size === 0)
        throw Error("Cannot store empty dictionary directly");
      let e1 = this._key;
      G != null && (e1 = G);
      let i1 = this._value;
      if ((u1 != null && (i1 = u1), !e1))
        throw Error("Key serializer is not defined");
      if (!i1) throw Error("Value serializer is not defined");
      let Z = new Map();
      for (const [b1, o1] of this._map)
        Z.set(e1.serialize((0, c.deserializeInternalKey)(b1)), o1);
      (0, l.serializeDict)(Z, e1.bits, i1.serialize, j);
    }
    generateMerkleProof(j) {
      return (0, i.generateMerkleProof)(this, j, this._key);
    }
    generateMerkleProofDirect(j) {
      return (0, i.generateMerkleProofDirect)(this, j, this._key);
    }
    generateMerkleUpdate(j, G) {
      return (0, s.generateMerkleUpdate)(this, j, this._key, G);
    }
  };
  (R0.Dictionary = f),
    (f.Keys = {
      Address: () => d(),
      BigInt: (B) => p(B),
      Int: (B) => m(B),
      BigUint: (B) => g(B),
      Uint: (B) => w(B),
      Buffer: (B) => b(B),
      BitString: (B) => x(B),
    }),
    (f.Values = {
      BigInt: (B) => P(B),
      Int: (B) => E(B),
      BigVarInt: (B) => _(B),
      BigUint: (B) => L(B),
      Uint: (B) => M(B),
      BigVarUint: (B) => T(B),
      Bool: () => O(),
      Address: () => U(),
      Cell: () => D(),
      Buffer: (B) => $(B),
      BitString: (B) => F(B),
      Dictionary: (B, j) => H(B, j),
    });
  function d() {
    return {
      bits: 267,
      serialize: (B) => {
        if (!e.Address.isAddress(B)) throw Error("Key is not an address");
        return (0, t.beginCell)()
          .storeAddress(B)
          .endCell()
          .beginParse()
          .preloadUintBig(267);
      },
      parse: (B) =>
        (0, t.beginCell)()
          .storeUint(B, 267)
          .endCell()
          .beginParse()
          .loadAddress(),
    };
  }
  function p(B) {
    return {
      bits: B,
      serialize: (j) => {
        if (typeof j != "bigint") throw Error("Key is not a bigint");
        return (0, t.beginCell)()
          .storeInt(j, B)
          .endCell()
          .beginParse()
          .loadUintBig(B);
      },
      parse: (j) =>
        (0, t.beginCell)().storeUint(j, B).endCell().beginParse().loadIntBig(B),
    };
  }
  function m(B) {
    return {
      bits: B,
      serialize: (j) => {
        if (typeof j != "number") throw Error("Key is not a number");
        if (!Number.isSafeInteger(j))
          throw Error("Key is not a safe integer: " + j);
        return (0, t.beginCell)()
          .storeInt(j, B)
          .endCell()
          .beginParse()
          .loadUintBig(B);
      },
      parse: (j) =>
        (0, t.beginCell)().storeUint(j, B).endCell().beginParse().loadInt(B),
    };
  }
  function g(B) {
    return {
      bits: B,
      serialize: (j) => {
        if (typeof j != "bigint") throw Error("Key is not a bigint");
        if (j < 0) throw Error("Key is negative: " + j);
        return (0, t.beginCell)()
          .storeUint(j, B)
          .endCell()
          .beginParse()
          .loadUintBig(B);
      },
      parse: (j) =>
        (0, t.beginCell)()
          .storeUint(j, B)
          .endCell()
          .beginParse()
          .loadUintBig(B),
    };
  }
  function w(B) {
    return {
      bits: B,
      serialize: (j) => {
        if (typeof j != "number") throw Error("Key is not a number");
        if (!Number.isSafeInteger(j))
          throw Error("Key is not a safe integer: " + j);
        if (j < 0) throw Error("Key is negative: " + j);
        return (0, t.beginCell)()
          .storeUint(j, B)
          .endCell()
          .beginParse()
          .loadUintBig(B);
      },
      parse: (j) =>
        Number(
          (0, t.beginCell)().storeUint(j, B).endCell().beginParse().loadUint(B)
        ),
    };
  }
  function b(B) {
    return {
      bits: B * 8,
      serialize: (j) => {
        if (!ge.isBuffer(j)) throw Error("Key is not a buffer");
        return (0, t.beginCell)()
          .storeBuffer(j)
          .endCell()
          .beginParse()
          .loadUintBig(B * 8);
      },
      parse: (j) =>
        (0, t.beginCell)()
          .storeUint(j, B * 8)
          .endCell()
          .beginParse()
          .loadBuffer(B),
    };
  }
  function x(B) {
    return {
      bits: B,
      serialize: (j) => {
        if (!r.BitString.isBitString(j)) throw Error("Key is not a BitString");
        return (0, t.beginCell)()
          .storeBits(j)
          .endCell()
          .beginParse()
          .loadUintBig(B);
      },
      parse: (j) =>
        (0, t.beginCell)().storeUint(j, B).endCell().beginParse().loadBits(B),
    };
  }
  function E(B) {
    return {
      serialize: (j, G) => {
        G.storeInt(j, B);
      },
      parse: (j) => {
        let G = j.loadInt(B);
        return j.endParse(), G;
      },
    };
  }
  function P(B) {
    return {
      serialize: (j, G) => {
        G.storeInt(j, B);
      },
      parse: (j) => {
        let G = j.loadIntBig(B);
        return j.endParse(), G;
      },
    };
  }
  function _(B) {
    return {
      serialize: (j, G) => {
        G.storeVarInt(j, B);
      },
      parse: (j) => {
        let G = j.loadVarIntBig(B);
        return j.endParse(), G;
      },
    };
  }
  function T(B) {
    return {
      serialize: (j, G) => {
        G.storeVarUint(j, B);
      },
      parse: (j) => {
        let G = j.loadVarUintBig(B);
        return j.endParse(), G;
      },
    };
  }
  function M(B) {
    return {
      serialize: (j, G) => {
        G.storeUint(j, B);
      },
      parse: (j) => {
        let G = j.loadUint(B);
        return j.endParse(), G;
      },
    };
  }
  function L(B) {
    return {
      serialize: (j, G) => {
        G.storeUint(j, B);
      },
      parse: (j) => {
        let G = j.loadUintBig(B);
        return j.endParse(), G;
      },
    };
  }
  function O() {
    return {
      serialize: (B, j) => {
        j.storeBit(B);
      },
      parse: (B) => {
        let j = B.loadBit();
        return B.endParse(), j;
      },
    };
  }
  function U() {
    return {
      serialize: (B, j) => {
        j.storeAddress(B);
      },
      parse: (B) => {
        let j = B.loadAddress();
        return B.endParse(), j;
      },
    };
  }
  function D() {
    return {
      serialize: (B, j) => {
        j.storeRef(B);
      },
      parse: (B) => {
        let j = B.loadRef();
        return B.endParse(), j;
      },
    };
  }
  function H(B, j) {
    return {
      serialize: (G, u1) => {
        G.store(u1);
      },
      parse: (G) => {
        let u1 = f.load(B, j, G);
        return G.endParse(), u1;
      },
    };
  }
  function $(B) {
    return {
      serialize: (j, G) => {
        if (j.length !== B) throw Error("Invalid buffer size");
        G.storeBuffer(j);
      },
      parse: (j) => {
        let G = j.loadBuffer(B);
        return j.endParse(), G;
      },
    };
  }
  function F(B) {
    return {
      serialize: (j, G) => {
        if (j.length !== B) throw Error("Invalid BitString size");
        G.storeBits(j);
      },
      parse: (j) => {
        let G = j.loadBits(B);
        return j.endParse(), G;
      },
    };
  }
  return R0;
}
var N2 = {},
  yx;
function mT() {
  if (yx) return N2;
  (yx = 1),
    Object.defineProperty(N2, "__esModule", { value: !0 }),
    (N2.writeString = N2.stringToCell = N2.readString = void 0);
  const e = as();
  function t(o) {
    if (o.remainingBits % 8 !== 0)
      throw new Error(`Invalid string length: ${o.remainingBits}`);
    if (o.remainingRefs !== 0 && o.remainingRefs !== 1)
      throw new Error(`invalid number of refs: ${o.remainingRefs}`);
    let l;
    return (
      o.remainingBits === 0
        ? (l = ge.alloc(0))
        : (l = o.loadBuffer(o.remainingBits / 8)),
      o.remainingRefs === 1 &&
        (l = ge.concat([l, t(o.loadRef().beginParse())])),
      l
    );
  }
  function n(o) {
    return t(o).toString();
  }
  N2.readString = n;
  function r(o, l) {
    if (o.length > 0) {
      let c = Math.floor(l.availableBits / 8);
      if (o.length > c) {
        let f = o.subarray(0, c),
          d = o.subarray(c);
        l = l.storeBuffer(f);
        let p = (0, e.beginCell)();
        r(d, p), (l = l.storeRef(p.endCell()));
      } else l = l.storeBuffer(o);
    }
  }
  function i(o) {
    let l = (0, e.beginCell)();
    return r(ge.from(o), l), l.endCell();
  }
  N2.stringToCell = i;
  function s(o, l) {
    r(ge.from(o), l);
  }
  return (N2.writeString = s), N2;
}
var vx;
function d11() {
  if (vx) return _o;
  vx = 1;
  var e =
      (_o && _o.__importDefault) ||
      function (l) {
        return l && l.__esModule ? l : { default: l };
      },
    t;
  Object.defineProperty(_o, "__esModule", { value: !0 }), (_o.Slice = void 0);
  const n = e(Ru()),
    r = c11(),
    i = as(),
    s = mT();
  let o = class $6 {
    constructor(c, f) {
      (this[t] = () => this.toString()),
        (this._reader = c.clone()),
        (this._refs = [...f]),
        (this._refsOffset = 0);
    }
    get remainingBits() {
      return this._reader.remaining;
    }
    get offsetBits() {
      return this._reader.offset;
    }
    get remainingRefs() {
      return this._refs.length - this._refsOffset;
    }
    get offsetRefs() {
      return this._refsOffset;
    }
    skip(c) {
      return this._reader.skip(c), this;
    }
    loadBit() {
      return this._reader.loadBit();
    }
    preloadBit() {
      return this._reader.preloadBit();
    }
    loadBoolean() {
      return this.loadBit();
    }
    loadMaybeBoolean() {
      return this.loadBit() ? this.loadBoolean() : null;
    }
    loadBits(c) {
      return this._reader.loadBits(c);
    }
    preloadBits(c) {
      return this._reader.preloadBits(c);
    }
    loadUint(c) {
      return this._reader.loadUint(c);
    }
    loadUintBig(c) {
      return this._reader.loadUintBig(c);
    }
    preloadUint(c) {
      return this._reader.preloadUint(c);
    }
    preloadUintBig(c) {
      return this._reader.preloadUintBig(c);
    }
    loadMaybeUint(c) {
      return this.loadBit() ? this.loadUint(c) : null;
    }
    loadMaybeUintBig(c) {
      return this.loadBit() ? this.loadUintBig(c) : null;
    }
    loadInt(c) {
      return this._reader.loadInt(c);
    }
    loadIntBig(c) {
      return this._reader.loadIntBig(c);
    }
    preloadInt(c) {
      return this._reader.preloadInt(c);
    }
    preloadIntBig(c) {
      return this._reader.preloadIntBig(c);
    }
    loadMaybeInt(c) {
      return this.loadBit() ? this.loadInt(c) : null;
    }
    loadMaybeIntBig(c) {
      return this.loadBit() ? this.loadIntBig(c) : null;
    }
    loadVarUint(c) {
      return this._reader.loadVarUint(c);
    }
    loadVarUintBig(c) {
      return this._reader.loadVarUintBig(c);
    }
    preloadVarUint(c) {
      return this._reader.preloadVarUint(c);
    }
    preloadVarUintBig(c) {
      return this._reader.preloadVarUintBig(c);
    }
    loadVarInt(c) {
      return this._reader.loadVarInt(c);
    }
    loadVarIntBig(c) {
      return this._reader.loadVarIntBig(c);
    }
    preloadVarInt(c) {
      return this._reader.preloadVarInt(c);
    }
    preloadVarIntBig(c) {
      return this._reader.preloadVarIntBig(c);
    }
    loadCoins() {
      return this._reader.loadCoins();
    }
    preloadCoins() {
      return this._reader.preloadCoins();
    }
    loadMaybeCoins() {
      return this._reader.loadBit() ? this._reader.loadCoins() : null;
    }
    loadAddress() {
      return this._reader.loadAddress();
    }
    loadMaybeAddress() {
      return this._reader.loadMaybeAddress();
    }
    loadExternalAddress() {
      return this._reader.loadExternalAddress();
    }
    loadMaybeExternalAddress() {
      return this._reader.loadMaybeExternalAddress();
    }
    loadAddressAny() {
      return this._reader.loadAddressAny();
    }
    loadRef() {
      if (this._refsOffset >= this._refs.length)
        throw new Error("No more references");
      return this._refs[this._refsOffset++];
    }
    preloadRef() {
      if (this._refsOffset >= this._refs.length)
        throw new Error("No more references");
      return this._refs[this._refsOffset];
    }
    loadMaybeRef() {
      return this.loadBit() ? this.loadRef() : null;
    }
    preloadMaybeRef() {
      return this.preloadBit() ? this.preloadRef() : null;
    }
    loadBuffer(c) {
      return this._reader.loadBuffer(c);
    }
    preloadBuffer(c) {
      return this._reader.preloadBuffer(c);
    }
    loadStringTail() {
      return (0, s.readString)(this);
    }
    loadMaybeStringTail() {
      return this.loadBit() ? (0, s.readString)(this) : null;
    }
    loadStringRefTail() {
      return (0, s.readString)(this.loadRef().beginParse());
    }
    loadMaybeStringRefTail() {
      const c = this.loadMaybeRef();
      return c ? (0, s.readString)(c.beginParse()) : null;
    }
    loadDict(c, f) {
      return r.Dictionary.load(c, f, this);
    }
    loadDictDirect(c, f) {
      return r.Dictionary.loadDirect(c, f, this);
    }
    endParse() {
      if (this.remainingBits > 0 || this.remainingRefs > 0)
        throw new Error("Slice is not empty");
    }
    asCell() {
      return (0, i.beginCell)().storeSlice(this).endCell();
    }
    asBuilder() {
      return (0, i.beginCell)().storeSlice(this);
    }
    clone(c = !1) {
      if (c) {
        let f = this._reader.clone();
        return f.reset(), new $6(f, this._refs);
      } else {
        let f = new $6(this._reader, this._refs);
        return (f._refsOffset = this._refsOffset), f;
      }
    }
    toString() {
      return this.asCell().toString();
    }
  };
  return (_o.Slice = o), (t = n.default), _o;
}
var B0 = {},
  D0 = {},
  wx;
function gT() {
  if (wx) return D0;
  (wx = 1),
    Object.defineProperty(D0, "__esModule", { value: !0 }),
    (D0.exoticLibrary = void 0);
  const e = ma();
  function t(n, r) {
    const i = new e.BitReader(n);
    if (n.length !== 264)
      throw new Error(
        `Library cell must have exactly (8 + 256) bits, got "${n.length}"`
      );
    let o = i.loadUint(8);
    if (o !== 2) throw new Error(`Library cell must have type 2, got "${o}"`);
    return {};
  }
  return (D0.exoticLibrary = t), D0;
}
var F0 = {},
  bx;
function yT() {
  if (bx) return F0;
  (bx = 1),
    Object.defineProperty(F0, "__esModule", { value: !0 }),
    (F0.exoticMerkleUpdate = void 0);
  const e = ma();
  function t(n, r) {
    const i = new e.BitReader(n),
      s = 8 + 2 * 272;
    if (n.length !== s)
      throw new Error(
        `Merkle Update cell must have exactly (8 + (2 * (256 + 16))) bits, got "${n.length}"`
      );
    if (r.length !== 2)
      throw new Error(
        `Merkle Update cell must have exactly 2 refs, got "${r.length}"`
      );
    let o = i.loadUint(8);
    if (o !== 4)
      throw new Error(`Merkle Update cell type must be exactly 4, got "${o}"`);
    const l = i.loadBuffer(32),
      c = i.loadBuffer(32),
      f = i.loadUint(16),
      d = i.loadUint(16);
    if (f !== r[0].depth(0))
      throw new Error(
        `Merkle Update cell ref depth must be exactly "${f}", got "${r[0].depth(
          0
        )}"`
      );
    if (!l.equals(r[0].hash(0)))
      throw new Error(
        `Merkle Update cell ref hash must be exactly "${l.toString(
          "hex"
        )}", got "${r[0].hash(0).toString("hex")}"`
      );
    if (d !== r[1].depth(0))
      throw new Error(
        `Merkle Update cell ref depth must be exactly "${d}", got "${r[1].depth(
          0
        )}"`
      );
    if (!c.equals(r[1].hash(0)))
      throw new Error(
        `Merkle Update cell ref hash must be exactly "${c.toString(
          "hex"
        )}", got "${r[1].hash(0).toString("hex")}"`
      );
    return { proofDepth1: f, proofDepth2: d, proofHash1: l, proofHash2: c };
  }
  return (F0.exoticMerkleUpdate = t), F0;
}
var U0 = {},
  $0 = {},
  xx;
function $m() {
  if (xx) return $0;
  (xx = 1),
    Object.defineProperty($0, "__esModule", { value: !0 }),
    ($0.LevelMask = void 0);
  let e = class vT {
    constructor(r = 0) {
      (this._mask = 0),
        (this._mask = r),
        (this._hashIndex = t(this._mask)),
        (this._hashCount = this._hashIndex + 1);
    }
    get value() {
      return this._mask;
    }
    get level() {
      return 32 - Math.clz32(this._mask);
    }
    get hashIndex() {
      return this._hashIndex;
    }
    get hashCount() {
      return this._hashCount;
    }
    apply(r) {
      return new vT(this._mask & ((1 << r) - 1));
    }
    isSignificant(r) {
      return r === 0 || (this._mask >> (r - 1)) % 2 !== 0;
    }
  };
  $0.LevelMask = e;
  function t(n) {
    return (
      (n = n - ((n >> 1) & 1431655765)),
      (n = (n & 858993459) + ((n >> 2) & 858993459)),
      (((n + (n >> 4)) & 252645135) * 16843009) >> 24
    );
  }
  return $0;
}
var Cx;
function wT() {
  if (Cx) return U0;
  (Cx = 1),
    Object.defineProperty(U0, "__esModule", { value: !0 }),
    (U0.exoticPruned = void 0);
  const e = ma(),
    t = $m();
  function n(r, i) {
    let s = new e.BitReader(r),
      o = s.loadUint(8);
    if (o !== 1)
      throw new Error(`Pruned branch cell must have type 1, got "${o}"`);
    if (i.length !== 0)
      throw new Error(`Pruned Branch cell can't has refs, got "${i.length}"`);
    let l;
    if (r.length === 280) l = new t.LevelMask(1);
    else {
      if (((l = new t.LevelMask(s.loadUint(8))), l.level < 1 || l.level > 3))
        throw new Error(
          `Pruned Branch cell level must be >= 1 and <= 3, got "${l.level}/${l.value}"`
        );
      const p = 16 + l.apply(l.level - 1).hashCount * 272;
      if (r.length !== p)
        throw new Error(
          `Pruned branch cell must have exactly ${p} bits, got "${r.length}"`
        );
    }
    let c = [],
      f = [],
      d = [];
    for (let p = 0; p < l.level; p++) f.push(s.loadBuffer(32));
    for (let p = 0; p < l.level; p++) d.push(s.loadUint(16));
    for (let p = 0; p < l.level; p++) c.push({ depth: d[p], hash: f[p] });
    return { mask: l.value, pruned: c };
  }
  return (U0.exoticPruned = n), U0;
}
var Sx;
function f11() {
  if (Sx) return B0;
  (Sx = 1),
    Object.defineProperty(B0, "__esModule", { value: !0 }),
    (B0.resolveExotic = void 0);
  const e = ma(),
    t = yf(),
    n = gT(),
    r = Um(),
    i = yT(),
    s = wT(),
    o = $m();
  function l(m, g) {
    let w = (0, s.exoticPruned)(m, g),
      b = [],
      x = [],
      E = new o.LevelMask(w.mask);
    for (let P = 0; P < w.pruned.length; P++)
      b.push(w.pruned[P].depth), x.push(w.pruned[P].hash);
    return { type: t.CellType.PrunedBranch, depths: b, hashes: x, mask: E };
  }
  function c(m, g) {
    (0, n.exoticLibrary)(m, g);
    let w = [],
      b = [],
      x = new o.LevelMask();
    return { type: t.CellType.Library, depths: w, hashes: b, mask: x };
  }
  function f(m, g) {
    (0, r.exoticMerkleProof)(m, g);
    let w = [],
      b = [],
      x = new o.LevelMask(g[0].level() >> 1);
    return { type: t.CellType.MerkleProof, depths: w, hashes: b, mask: x };
  }
  function d(m, g) {
    (0, i.exoticMerkleUpdate)(m, g);
    let w = [],
      b = [],
      x = new o.LevelMask((g[0].level() | g[1].level()) >> 1);
    return { type: t.CellType.MerkleUpdate, depths: w, hashes: b, mask: x };
  }
  function p(m, g) {
    let b = new e.BitReader(m).preloadUint(8);
    if (b === 1) return l(m, g);
    if (b === 2) return c(m, g);
    if (b === 3) return f(m, g);
    if (b === 4) return d(m, g);
    throw Error("Invalid exotic cell type: " + b);
  }
  return (B0.resolveExotic = p), B0;
}
var V0 = {},
  O2 = {},
  Ex;
function bT() {
  if (Ex) return O2;
  (Ex = 1),
    Object.defineProperty(O2, "__esModule", { value: !0 }),
    (O2.getRepr = O2.getBitsDescriptor = O2.getRefsDescriptor = void 0);
  const e = yf(),
    t = gf();
  function n(s, o, l) {
    return s.length + (l !== e.CellType.Ordinary ? 1 : 0) * 8 + o * 32;
  }
  O2.getRefsDescriptor = n;
  function r(s) {
    let o = s.length;
    return Math.ceil(o / 8) + Math.floor(o / 8);
  }
  O2.getBitsDescriptor = r;
  function i(s, o, l, c, f, d) {
    const p = Math.ceil(o.length / 8),
      m = ge.alloc(2 + p + 34 * l.length);
    let g = 0;
    (m[g++] = n(l, f, d)),
      (m[g++] = r(s)),
      (0, t.bitsToPaddedBuffer)(o).copy(m, g),
      (g += p);
    for (const w of l) {
      let b;
      d == e.CellType.MerkleProof || d == e.CellType.MerkleUpdate
        ? (b = w.depth(c + 1))
        : (b = w.depth(c)),
        (m[g++] = Math.floor(b / 256)),
        (m[g++] = b % 256);
    }
    for (const w of l) {
      let b;
      d == e.CellType.MerkleProof || d == e.CellType.MerkleUpdate
        ? (b = w.hash(c + 1))
        : (b = w.hash(c)),
        b.copy(m, g),
        (g += 32);
    }
    return m;
  }
  return (O2.getRepr = i), O2;
}
var x5 = {},
  Pi = {},
  Ed = { exports: {} },
  h11 = Ed.exports,
  kx;
function Vm() {
  return (
    kx ||
      ((kx = 1),
      (function (e, t) {
        (function (n, r) {
          e.exports = r();
        })(h11, function () {
          var n =
            "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
          function r(a1, K, t1, r1) {
            var m1,
              R,
              C,
              k = K || [0],
              q = (t1 = t1 || 0) >>> 3,
              s1 = r1 === -1 ? 3 : 0;
            for (m1 = 0; m1 < a1.length; m1 += 1)
              (R = (C = m1 + q) >>> 2),
                k.length <= R && k.push(0),
                (k[R] |= a1[m1] << (8 * (s1 + r1 * (C % 4))));
            return { value: k, binLen: 8 * a1.length + t1 };
          }
          function i(a1, K, t1) {
            switch (K) {
              case "UTF8":
              case "UTF16BE":
              case "UTF16LE":
                break;
              default:
                throw new Error("encoding must be UTF8, UTF16BE, or UTF16LE");
            }
            switch (a1) {
              case "HEX":
                return function (r1, m1, R) {
                  return (function (C, k, q, s1) {
                    var v1, w1, $1, he;
                    if (C.length % 2 != 0)
                      throw new Error(
                        "String of HEX type must be in byte increments"
                      );
                    var U1 = k || [0],
                      Le = (q = q || 0) >>> 3,
                      pe = s1 === -1 ? 3 : 0;
                    for (v1 = 0; v1 < C.length; v1 += 2) {
                      if (((w1 = parseInt(C.substr(v1, 2), 16)), isNaN(w1)))
                        throw new Error(
                          "String of HEX type contains invalid characters"
                        );
                      for ($1 = (he = (v1 >>> 1) + Le) >>> 2; U1.length <= $1; )
                        U1.push(0);
                      U1[$1] |= w1 << (8 * (pe + s1 * (he % 4)));
                    }
                    return { value: U1, binLen: 4 * C.length + q };
                  })(r1, m1, R, t1);
                };
              case "TEXT":
                return function (r1, m1, R) {
                  return (function (C, k, q, s1, v1) {
                    var w1,
                      $1,
                      he,
                      U1,
                      Le,
                      pe,
                      bt,
                      It,
                      en = 0,
                      At = q || [0],
                      hn = (s1 = s1 || 0) >>> 3;
                    if (k === "UTF8")
                      for (
                        bt = v1 === -1 ? 3 : 0, he = 0;
                        he < C.length;
                        he += 1
                      )
                        for (
                          $1 = [],
                            128 > (w1 = C.charCodeAt(he))
                              ? $1.push(w1)
                              : 2048 > w1
                              ? ($1.push(192 | (w1 >>> 6)),
                                $1.push(128 | (63 & w1)))
                              : 55296 > w1 || 57344 <= w1
                              ? $1.push(
                                  224 | (w1 >>> 12),
                                  128 | ((w1 >>> 6) & 63),
                                  128 | (63 & w1)
                                )
                              : ((he += 1),
                                (w1 =
                                  65536 +
                                  (((1023 & w1) << 10) |
                                    (1023 & C.charCodeAt(he)))),
                                $1.push(
                                  240 | (w1 >>> 18),
                                  128 | ((w1 >>> 12) & 63),
                                  128 | ((w1 >>> 6) & 63),
                                  128 | (63 & w1)
                                )),
                            U1 = 0;
                          U1 < $1.length;
                          U1 += 1
                        ) {
                          for (Le = (pe = en + hn) >>> 2; At.length <= Le; )
                            At.push(0);
                          (At[Le] |= $1[U1] << (8 * (bt + v1 * (pe % 4)))),
                            (en += 1);
                        }
                    else
                      for (
                        bt = v1 === -1 ? 2 : 0,
                          It =
                            (k === "UTF16LE" && v1 !== 1) ||
                            (k !== "UTF16LE" && v1 === 1),
                          he = 0;
                        he < C.length;
                        he += 1
                      ) {
                        for (
                          w1 = C.charCodeAt(he),
                            It === !0 &&
                              (w1 = ((U1 = 255 & w1) << 8) | (w1 >>> 8)),
                            Le = (pe = en + hn) >>> 2;
                          At.length <= Le;

                        )
                          At.push(0);
                        (At[Le] |= w1 << (8 * (bt + v1 * (pe % 4)))), (en += 2);
                      }
                    return { value: At, binLen: 8 * en + s1 };
                  })(r1, K, m1, R, t1);
                };
              case "B64":
                return function (r1, m1, R) {
                  return (function (C, k, q, s1) {
                    var v1,
                      w1,
                      $1,
                      he,
                      U1,
                      Le,
                      pe = 0,
                      bt = k || [0],
                      It = (q = q || 0) >>> 3,
                      en = s1 === -1 ? 3 : 0,
                      At = C.indexOf("=");
                    if (C.search(/^[a-zA-Z0-9=+/]+$/) === -1)
                      throw new Error("Invalid character in base-64 string");
                    if (((C = C.replace(/=/g, "")), At !== -1 && At < C.length))
                      throw new Error("Invalid '=' found in base-64 string");
                    for (v1 = 0; v1 < C.length; v1 += 4) {
                      for (
                        he = C.substr(v1, 4), $1 = 0, w1 = 0;
                        w1 < he.length;
                        w1 += 1
                      )
                        $1 |= n.indexOf(he.charAt(w1)) << (18 - 6 * w1);
                      for (w1 = 0; w1 < he.length - 1; w1 += 1) {
                        for (U1 = (Le = pe + It) >>> 2; bt.length <= U1; )
                          bt.push(0);
                        (bt[U1] |=
                          (($1 >>> (16 - 8 * w1)) & 255) <<
                          (8 * (en + s1 * (Le % 4)))),
                          (pe += 1);
                      }
                    }
                    return { value: bt, binLen: 8 * pe + q };
                  })(r1, m1, R, t1);
                };
              case "BYTES":
                return function (r1, m1, R) {
                  return (function (C, k, q, s1) {
                    var v1,
                      w1,
                      $1,
                      he,
                      U1 = k || [0],
                      Le = (q = q || 0) >>> 3,
                      pe = s1 === -1 ? 3 : 0;
                    for (w1 = 0; w1 < C.length; w1 += 1)
                      (v1 = C.charCodeAt(w1)),
                        ($1 = (he = w1 + Le) >>> 2),
                        U1.length <= $1 && U1.push(0),
                        (U1[$1] |= v1 << (8 * (pe + s1 * (he % 4))));
                    return { value: U1, binLen: 8 * C.length + q };
                  })(r1, m1, R, t1);
                };
              case "ARRAYBUFFER":
                try {
                  new ArrayBuffer(0);
                } catch {
                  throw new Error(
                    "ARRAYBUFFER not supported by this environment"
                  );
                }
                return function (r1, m1, R) {
                  return (function (C, k, q, s1) {
                    return r(new Uint8Array(C), k, q, s1);
                  })(r1, m1, R, t1);
                };
              case "UINT8ARRAY":
                try {
                  new Uint8Array(0);
                } catch {
                  throw new Error(
                    "UINT8ARRAY not supported by this environment"
                  );
                }
                return function (r1, m1, R) {
                  return r(r1, m1, R, t1);
                };
              default:
                throw new Error(
                  "format must be HEX, TEXT, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY"
                );
            }
          }
          function s(a1, K, t1, r1) {
            switch (a1) {
              case "HEX":
                return function (m1) {
                  return (function (R, C, k, q) {
                    var s1,
                      v1,
                      w1 = "",
                      $1 = C / 8,
                      he = k === -1 ? 3 : 0;
                    for (s1 = 0; s1 < $1; s1 += 1)
                      (v1 = R[s1 >>> 2] >>> (8 * (he + k * (s1 % 4)))),
                        (w1 +=
                          "0123456789abcdef".charAt((v1 >>> 4) & 15) +
                          "0123456789abcdef".charAt(15 & v1));
                    return q.outputUpper ? w1.toUpperCase() : w1;
                  })(m1, K, t1, r1);
                };
              case "B64":
                return function (m1) {
                  return (function (R, C, k, q) {
                    var s1,
                      v1,
                      w1,
                      $1,
                      he,
                      U1 = "",
                      Le = C / 8,
                      pe = k === -1 ? 3 : 0;
                    for (s1 = 0; s1 < Le; s1 += 3)
                      for (
                        $1 = s1 + 1 < Le ? R[(s1 + 1) >>> 2] : 0,
                          he = s1 + 2 < Le ? R[(s1 + 2) >>> 2] : 0,
                          w1 =
                            (((R[s1 >>> 2] >>> (8 * (pe + k * (s1 % 4)))) &
                              255) <<
                              16) |
                            ((($1 >>> (8 * (pe + k * ((s1 + 1) % 4)))) & 255) <<
                              8) |
                            ((he >>> (8 * (pe + k * ((s1 + 2) % 4)))) & 255),
                          v1 = 0;
                        v1 < 4;
                        v1 += 1
                      )
                        U1 +=
                          8 * s1 + 6 * v1 <= C
                            ? n.charAt((w1 >>> (6 * (3 - v1))) & 63)
                            : q.b64Pad;
                    return U1;
                  })(m1, K, t1, r1);
                };
              case "BYTES":
                return function (m1) {
                  return (function (R, C, k) {
                    var q,
                      s1,
                      v1 = "",
                      w1 = C / 8,
                      $1 = k === -1 ? 3 : 0;
                    for (q = 0; q < w1; q += 1)
                      (s1 = (R[q >>> 2] >>> (8 * ($1 + k * (q % 4)))) & 255),
                        (v1 += String.fromCharCode(s1));
                    return v1;
                  })(m1, K, t1);
                };
              case "ARRAYBUFFER":
                try {
                  new ArrayBuffer(0);
                } catch {
                  throw new Error(
                    "ARRAYBUFFER not supported by this environment"
                  );
                }
                return function (m1) {
                  return (function (R, C, k) {
                    var q,
                      s1 = C / 8,
                      v1 = new ArrayBuffer(s1),
                      w1 = new Uint8Array(v1),
                      $1 = k === -1 ? 3 : 0;
                    for (q = 0; q < s1; q += 1)
                      w1[q] = (R[q >>> 2] >>> (8 * ($1 + k * (q % 4)))) & 255;
                    return v1;
                  })(m1, K, t1);
                };
              case "UINT8ARRAY":
                try {
                  new Uint8Array(0);
                } catch {
                  throw new Error(
                    "UINT8ARRAY not supported by this environment"
                  );
                }
                return function (m1) {
                  return (function (R, C, k) {
                    var q,
                      s1 = C / 8,
                      v1 = k === -1 ? 3 : 0,
                      w1 = new Uint8Array(s1);
                    for (q = 0; q < s1; q += 1)
                      w1[q] = (R[q >>> 2] >>> (8 * (v1 + k * (q % 4)))) & 255;
                    return w1;
                  })(m1, K, t1);
                };
              default:
                throw new Error(
                  "format must be HEX, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY"
                );
            }
          }
          var o = [
              1116352408, 1899447441, 3049323471, 3921009573, 961987163,
              1508970993, 2453635748, 2870763221, 3624381080, 310598401,
              607225278, 1426881987, 1925078388, 2162078206, 2614888103,
              3248222580, 3835390401, 4022224774, 264347078, 604807628,
              770255983, 1249150122, 1555081692, 1996064986, 2554220882,
              2821834349, 2952996808, 3210313671, 3336571891, 3584528711,
              113926993, 338241895, 666307205, 773529912, 1294757372,
              1396182291, 1695183700, 1986661051, 2177026350, 2456956037,
              2730485921, 2820302411, 3259730800, 3345764771, 3516065817,
              3600352804, 4094571909, 275423344, 430227734, 506948616,
              659060556, 883997877, 958139571, 1322822218, 1537002063,
              1747873779, 1955562222, 2024104815, 2227730452, 2361852424,
              2428436474, 2756734187, 3204031479, 3329325298,
            ],
            l = [
              3238371032, 914150663, 812702999, 4144912697, 4290775857,
              1750603025, 1694076839, 3204075428,
            ],
            c = [
              1779033703, 3144134277, 1013904242, 2773480762, 1359893119,
              2600822924, 528734635, 1541459225,
            ],
            f = "Chosen SHA variant is not supported";
          function d(a1, K) {
            var t1,
              r1,
              m1 = a1.binLen >>> 3,
              R = K.binLen >>> 3,
              C = m1 << 3,
              k = (4 - m1) << 3;
            if (m1 % 4 != 0) {
              for (t1 = 0; t1 < R; t1 += 4)
                (r1 = (m1 + t1) >>> 2),
                  (a1.value[r1] |= K.value[t1 >>> 2] << C),
                  a1.value.push(0),
                  (a1.value[r1 + 1] |= K.value[t1 >>> 2] >>> k);
              return (
                (a1.value.length << 2) - 4 >= R + m1 && a1.value.pop(),
                { value: a1.value, binLen: a1.binLen + K.binLen }
              );
            }
            return {
              value: a1.value.concat(K.value),
              binLen: a1.binLen + K.binLen,
            };
          }
          function p(a1) {
            var K = { outputUpper: !1, b64Pad: "=", outputLen: -1 },
              t1 = a1 || {},
              r1 = "Output length must be a multiple of 8";
            if (
              ((K.outputUpper = t1.outputUpper || !1),
              t1.b64Pad && (K.b64Pad = t1.b64Pad),
              t1.outputLen)
            ) {
              if (t1.outputLen % 8 != 0) throw new Error(r1);
              K.outputLen = t1.outputLen;
            } else if (t1.shakeLen) {
              if (t1.shakeLen % 8 != 0) throw new Error(r1);
              K.outputLen = t1.shakeLen;
            }
            if (typeof K.outputUpper != "boolean")
              throw new Error("Invalid outputUpper formatting option");
            if (typeof K.b64Pad != "string")
              throw new Error("Invalid b64Pad formatting option");
            return K;
          }
          function m(a1, K, t1, r1) {
            var m1 = a1 + " must include a value and format";
            if (!K) {
              if (!r1) throw new Error(m1);
              return r1;
            }
            if (K.value === void 0 || !K.format) throw new Error(m1);
            return i(K.format, K.encoding || "UTF8", t1)(K.value);
          }
          var g = (function () {
              function a1(K, t1, r1) {
                var m1 = r1 || {};
                if (
                  ((this.t = t1),
                  (this.i = m1.encoding || "UTF8"),
                  (this.numRounds = m1.numRounds || 1),
                  isNaN(this.numRounds) ||
                    this.numRounds !== parseInt(this.numRounds, 10) ||
                    1 > this.numRounds)
                )
                  throw new Error("numRounds must a integer >= 1");
                (this.o = K),
                  (this.u = []),
                  (this.s = 0),
                  (this.h = !1),
                  (this.v = 0),
                  (this.A = !1),
                  (this.l = []),
                  (this.H = []);
              }
              return (
                (a1.prototype.update = function (K) {
                  var t1,
                    r1 = 0,
                    m1 = this.S >>> 5,
                    R = this.p(K, this.u, this.s),
                    C = R.binLen,
                    k = R.value,
                    q = C >>> 5;
                  for (t1 = 0; t1 < q; t1 += m1)
                    r1 + this.S <= C &&
                      ((this.m = this.R(k.slice(t1, t1 + m1), this.m)),
                      (r1 += this.S));
                  (this.v += r1),
                    (this.u = k.slice(r1 >>> 5)),
                    (this.s = C % this.S),
                    (this.h = !0);
                }),
                (a1.prototype.getHash = function (K, t1) {
                  var r1,
                    m1,
                    R = this.U,
                    C = p(t1);
                  if (this.T) {
                    if (C.outputLen === -1)
                      throw new Error(
                        "Output length must be specified in options"
                      );
                    R = C.outputLen;
                  }
                  var k = s(K, R, this.C, C);
                  if (this.A && this.F) return k(this.F(C));
                  for (
                    m1 = this.K(
                      this.u.slice(),
                      this.s,
                      this.v,
                      this.B(this.m),
                      R
                    ),
                      r1 = 1;
                    r1 < this.numRounds;
                    r1 += 1
                  )
                    this.T &&
                      R % 32 != 0 &&
                      (m1[m1.length - 1] &= 16777215 >>> (24 - (R % 32))),
                      (m1 = this.K(m1, R, 0, this.L(this.o), R));
                  return k(m1);
                }),
                (a1.prototype.setHMACKey = function (K, t1, r1) {
                  if (!this.g) throw new Error("Variant does not support HMAC");
                  if (this.h)
                    throw new Error("Cannot set MAC key after calling update");
                  var m1 = i(t1, (r1 || {}).encoding || "UTF8", this.C);
                  this.k(m1(K));
                }),
                (a1.prototype.k = function (K) {
                  var t1,
                    r1 = this.S >>> 3,
                    m1 = r1 / 4 - 1;
                  if (this.numRounds !== 1)
                    throw new Error("Cannot set numRounds with MAC");
                  if (this.A) throw new Error("MAC key already set");
                  for (
                    r1 < K.binLen / 8 &&
                    (K.value = this.K(
                      K.value,
                      K.binLen,
                      0,
                      this.L(this.o),
                      this.U
                    ));
                    K.value.length <= m1;

                  )
                    K.value.push(0);
                  for (t1 = 0; t1 <= m1; t1 += 1)
                    (this.l[t1] = 909522486 ^ K.value[t1]),
                      (this.H[t1] = 1549556828 ^ K.value[t1]);
                  (this.m = this.R(this.l, this.m)),
                    (this.v = this.S),
                    (this.A = !0);
                }),
                (a1.prototype.getHMAC = function (K, t1) {
                  var r1 = p(t1);
                  return s(K, this.U, this.C, r1)(this.Y());
                }),
                (a1.prototype.Y = function () {
                  var K;
                  if (!this.A)
                    throw new Error(
                      "Cannot call getHMAC without first setting MAC key"
                    );
                  var t1 = this.K(
                    this.u.slice(),
                    this.s,
                    this.v,
                    this.B(this.m),
                    this.U
                  );
                  return (
                    (K = this.R(this.H, this.L(this.o))),
                    (K = this.K(t1, this.U, this.S, K, this.U))
                  );
                }),
                a1
              );
            })(),
            w = function (a1, K) {
              return (w =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function (t1, r1) {
                    t1.__proto__ = r1;
                  }) ||
                function (t1, r1) {
                  for (var m1 in r1)
                    Object.prototype.hasOwnProperty.call(r1, m1) &&
                      (t1[m1] = r1[m1]);
                })(a1, K);
            };
          function b(a1, K) {
            function t1() {
              this.constructor = a1;
            }
            w(a1, K),
              (a1.prototype =
                K === null
                  ? Object.create(K)
                  : ((t1.prototype = K.prototype), new t1()));
          }
          function x(a1, K) {
            return (a1 << K) | (a1 >>> (32 - K));
          }
          function E(a1, K) {
            return (a1 >>> K) | (a1 << (32 - K));
          }
          function P(a1, K) {
            return a1 >>> K;
          }
          function _(a1, K, t1) {
            return a1 ^ K ^ t1;
          }
          function T(a1, K, t1) {
            return (a1 & K) ^ (~a1 & t1);
          }
          function M(a1, K, t1) {
            return (a1 & K) ^ (a1 & t1) ^ (K & t1);
          }
          function L(a1) {
            return E(a1, 2) ^ E(a1, 13) ^ E(a1, 22);
          }
          function O(a1, K) {
            var t1 = (65535 & a1) + (65535 & K);
            return (
              ((65535 & ((a1 >>> 16) + (K >>> 16) + (t1 >>> 16))) << 16) |
              (65535 & t1)
            );
          }
          function U(a1, K, t1, r1) {
            var m1 = (65535 & a1) + (65535 & K) + (65535 & t1) + (65535 & r1);
            return (
              ((65535 &
                ((a1 >>> 16) +
                  (K >>> 16) +
                  (t1 >>> 16) +
                  (r1 >>> 16) +
                  (m1 >>> 16))) <<
                16) |
              (65535 & m1)
            );
          }
          function D(a1, K, t1, r1, m1) {
            var R =
              (65535 & a1) +
              (65535 & K) +
              (65535 & t1) +
              (65535 & r1) +
              (65535 & m1);
            return (
              ((65535 &
                ((a1 >>> 16) +
                  (K >>> 16) +
                  (t1 >>> 16) +
                  (r1 >>> 16) +
                  (m1 >>> 16) +
                  (R >>> 16))) <<
                16) |
              (65535 & R)
            );
          }
          function H(a1) {
            return E(a1, 7) ^ E(a1, 18) ^ P(a1, 3);
          }
          function $(a1) {
            return E(a1, 6) ^ E(a1, 11) ^ E(a1, 25);
          }
          function F(a1) {
            return [1732584193, 4023233417, 2562383102, 271733878, 3285377520];
          }
          function B(a1, K) {
            var t1,
              r1,
              m1,
              R,
              C,
              k,
              q,
              s1 = [];
            for (
              t1 = K[0], r1 = K[1], m1 = K[2], R = K[3], C = K[4], q = 0;
              q < 80;
              q += 1
            )
              (s1[q] =
                q < 16
                  ? a1[q]
                  : x(s1[q - 3] ^ s1[q - 8] ^ s1[q - 14] ^ s1[q - 16], 1)),
                (k =
                  q < 20
                    ? D(x(t1, 5), T(r1, m1, R), C, 1518500249, s1[q])
                    : q < 40
                    ? D(x(t1, 5), _(r1, m1, R), C, 1859775393, s1[q])
                    : q < 60
                    ? D(x(t1, 5), M(r1, m1, R), C, 2400959708, s1[q])
                    : D(x(t1, 5), _(r1, m1, R), C, 3395469782, s1[q])),
                (C = R),
                (R = m1),
                (m1 = x(r1, 30)),
                (r1 = t1),
                (t1 = k);
            return (
              (K[0] = O(t1, K[0])),
              (K[1] = O(r1, K[1])),
              (K[2] = O(m1, K[2])),
              (K[3] = O(R, K[3])),
              (K[4] = O(C, K[4])),
              K
            );
          }
          function j(a1, K, t1, r1) {
            for (
              var m1, R = 15 + (((K + 65) >>> 9) << 4), C = K + t1;
              a1.length <= R;

            )
              a1.push(0);
            for (
              a1[K >>> 5] |= 128 << (24 - (K % 32)),
                a1[R] = 4294967295 & C,
                a1[R - 1] = (C / 4294967296) | 0,
                m1 = 0;
              m1 < a1.length;
              m1 += 16
            )
              r1 = B(a1.slice(m1, m1 + 16), r1);
            return r1;
          }
          var G = (function (a1) {
            function K(t1, r1, m1) {
              var R = this;
              if (t1 !== "SHA-1") throw new Error(f);
              var C = m1 || {};
              return (
                ((R = a1.call(this, t1, r1, m1) || this).g = !0),
                (R.F = R.Y),
                (R.C = -1),
                (R.p = i(R.t, R.i, R.C)),
                (R.R = B),
                (R.B = function (k) {
                  return k.slice();
                }),
                (R.L = F),
                (R.K = j),
                (R.m = [
                  1732584193, 4023233417, 2562383102, 271733878, 3285377520,
                ]),
                (R.S = 512),
                (R.U = 160),
                (R.T = !1),
                C.hmacKey && R.k(m("hmacKey", C.hmacKey, R.C)),
                R
              );
            }
            return b(K, a1), K;
          })(g);
          function u1(a1) {
            return a1 == "SHA-224" ? l.slice() : c.slice();
          }
          function e1(a1, K) {
            var t1,
              r1,
              m1,
              R,
              C,
              k,
              q,
              s1,
              v1,
              w1,
              $1,
              he,
              U1 = [];
            for (
              t1 = K[0],
                r1 = K[1],
                m1 = K[2],
                R = K[3],
                C = K[4],
                k = K[5],
                q = K[6],
                s1 = K[7],
                $1 = 0;
              $1 < 64;
              $1 += 1
            )
              (U1[$1] =
                $1 < 16
                  ? a1[$1]
                  : U(
                      E((he = U1[$1 - 2]), 17) ^ E(he, 19) ^ P(he, 10),
                      U1[$1 - 7],
                      H(U1[$1 - 15]),
                      U1[$1 - 16]
                    )),
                (v1 = D(s1, $(C), T(C, k, q), o[$1], U1[$1])),
                (w1 = O(L(t1), M(t1, r1, m1))),
                (s1 = q),
                (q = k),
                (k = C),
                (C = O(R, v1)),
                (R = m1),
                (m1 = r1),
                (r1 = t1),
                (t1 = O(v1, w1));
            return (
              (K[0] = O(t1, K[0])),
              (K[1] = O(r1, K[1])),
              (K[2] = O(m1, K[2])),
              (K[3] = O(R, K[3])),
              (K[4] = O(C, K[4])),
              (K[5] = O(k, K[5])),
              (K[6] = O(q, K[6])),
              (K[7] = O(s1, K[7])),
              K
            );
          }
          var i1 = (function (a1) {
              function K(t1, r1, m1) {
                var R = this;
                if (t1 !== "SHA-224" && t1 !== "SHA-256") throw new Error(f);
                var C = m1 || {};
                return (
                  ((R = a1.call(this, t1, r1, m1) || this).F = R.Y),
                  (R.g = !0),
                  (R.C = -1),
                  (R.p = i(R.t, R.i, R.C)),
                  (R.R = e1),
                  (R.B = function (k) {
                    return k.slice();
                  }),
                  (R.L = u1),
                  (R.K = function (k, q, s1, v1) {
                    return (function (w1, $1, he, U1, Le) {
                      for (
                        var pe,
                          bt = 15 + ((($1 + 65) >>> 9) << 4),
                          It = $1 + he;
                        w1.length <= bt;

                      )
                        w1.push(0);
                      for (
                        w1[$1 >>> 5] |= 128 << (24 - ($1 % 32)),
                          w1[bt] = 4294967295 & It,
                          w1[bt - 1] = (It / 4294967296) | 0,
                          pe = 0;
                        pe < w1.length;
                        pe += 16
                      )
                        U1 = e1(w1.slice(pe, pe + 16), U1);
                      return Le === "SHA-224"
                        ? [U1[0], U1[1], U1[2], U1[3], U1[4], U1[5], U1[6]]
                        : U1;
                    })(k, q, s1, v1, t1);
                  }),
                  (R.m = u1(t1)),
                  (R.S = 512),
                  (R.U = t1 === "SHA-224" ? 224 : 256),
                  (R.T = !1),
                  C.hmacKey && R.k(m("hmacKey", C.hmacKey, R.C)),
                  R
                );
              }
              return b(K, a1), K;
            })(g),
            Z = function (a1, K) {
              (this.N = a1), (this.I = K);
            };
          function b1(a1, K) {
            var t1;
            return K > 32
              ? ((t1 = 64 - K),
                new Z((a1.I << K) | (a1.N >>> t1), (a1.N << K) | (a1.I >>> t1)))
              : K !== 0
              ? ((t1 = 32 - K),
                new Z((a1.N << K) | (a1.I >>> t1), (a1.I << K) | (a1.N >>> t1)))
              : a1;
          }
          function o1(a1, K) {
            var t1;
            return K < 32
              ? ((t1 = 32 - K),
                new Z((a1.N >>> K) | (a1.I << t1), (a1.I >>> K) | (a1.N << t1)))
              : ((t1 = 64 - K),
                new Z(
                  (a1.I >>> K) | (a1.N << t1),
                  (a1.N >>> K) | (a1.I << t1)
                ));
          }
          function k1(a1, K) {
            return new Z(a1.N >>> K, (a1.I >>> K) | (a1.N << (32 - K)));
          }
          function Y1(a1, K, t1) {
            return new Z(
              (a1.N & K.N) ^ (~a1.N & t1.N),
              (a1.I & K.I) ^ (~a1.I & t1.I)
            );
          }
          function G1(a1, K, t1) {
            return new Z(
              (a1.N & K.N) ^ (a1.N & t1.N) ^ (K.N & t1.N),
              (a1.I & K.I) ^ (a1.I & t1.I) ^ (K.I & t1.I)
            );
          }
          function M1(a1) {
            var K = o1(a1, 28),
              t1 = o1(a1, 34),
              r1 = o1(a1, 39);
            return new Z(K.N ^ t1.N ^ r1.N, K.I ^ t1.I ^ r1.I);
          }
          function Q1(a1, K) {
            var t1, r1;
            t1 = (65535 & a1.I) + (65535 & K.I);
            var m1 =
              ((65535 & (r1 = (a1.I >>> 16) + (K.I >>> 16) + (t1 >>> 16))) <<
                16) |
              (65535 & t1);
            return (
              (t1 = (65535 & a1.N) + (65535 & K.N) + (r1 >>> 16)),
              (r1 = (a1.N >>> 16) + (K.N >>> 16) + (t1 >>> 16)),
              new Z(((65535 & r1) << 16) | (65535 & t1), m1)
            );
          }
          function re(a1, K, t1, r1) {
            var m1, R;
            m1 =
              (65535 & a1.I) + (65535 & K.I) + (65535 & t1.I) + (65535 & r1.I);
            var C =
              ((65535 &
                (R =
                  (a1.I >>> 16) +
                  (K.I >>> 16) +
                  (t1.I >>> 16) +
                  (r1.I >>> 16) +
                  (m1 >>> 16))) <<
                16) |
              (65535 & m1);
            return (
              (m1 =
                (65535 & a1.N) +
                (65535 & K.N) +
                (65535 & t1.N) +
                (65535 & r1.N) +
                (R >>> 16)),
              (R =
                (a1.N >>> 16) +
                (K.N >>> 16) +
                (t1.N >>> 16) +
                (r1.N >>> 16) +
                (m1 >>> 16)),
              new Z(((65535 & R) << 16) | (65535 & m1), C)
            );
          }
          function d1(a1, K, t1, r1, m1) {
            var R, C;
            R =
              (65535 & a1.I) +
              (65535 & K.I) +
              (65535 & t1.I) +
              (65535 & r1.I) +
              (65535 & m1.I);
            var k =
              ((65535 &
                (C =
                  (a1.I >>> 16) +
                  (K.I >>> 16) +
                  (t1.I >>> 16) +
                  (r1.I >>> 16) +
                  (m1.I >>> 16) +
                  (R >>> 16))) <<
                16) |
              (65535 & R);
            return (
              (R =
                (65535 & a1.N) +
                (65535 & K.N) +
                (65535 & t1.N) +
                (65535 & r1.N) +
                (65535 & m1.N) +
                (C >>> 16)),
              (C =
                (a1.N >>> 16) +
                (K.N >>> 16) +
                (t1.N >>> 16) +
                (r1.N >>> 16) +
                (m1.N >>> 16) +
                (R >>> 16)),
              new Z(((65535 & C) << 16) | (65535 & R), k)
            );
          }
          function h1(a1, K) {
            return new Z(a1.N ^ K.N, a1.I ^ K.I);
          }
          function y1(a1) {
            var K = o1(a1, 1),
              t1 = o1(a1, 8),
              r1 = k1(a1, 7);
            return new Z(K.N ^ t1.N ^ r1.N, K.I ^ t1.I ^ r1.I);
          }
          function A1(a1) {
            var K = o1(a1, 14),
              t1 = o1(a1, 18),
              r1 = o1(a1, 41);
            return new Z(K.N ^ t1.N ^ r1.N, K.I ^ t1.I ^ r1.I);
          }
          var L1 = [
            new Z(o[0], 3609767458),
            new Z(o[1], 602891725),
            new Z(o[2], 3964484399),
            new Z(o[3], 2173295548),
            new Z(o[4], 4081628472),
            new Z(o[5], 3053834265),
            new Z(o[6], 2937671579),
            new Z(o[7], 3664609560),
            new Z(o[8], 2734883394),
            new Z(o[9], 1164996542),
            new Z(o[10], 1323610764),
            new Z(o[11], 3590304994),
            new Z(o[12], 4068182383),
            new Z(o[13], 991336113),
            new Z(o[14], 633803317),
            new Z(o[15], 3479774868),
            new Z(o[16], 2666613458),
            new Z(o[17], 944711139),
            new Z(o[18], 2341262773),
            new Z(o[19], 2007800933),
            new Z(o[20], 1495990901),
            new Z(o[21], 1856431235),
            new Z(o[22], 3175218132),
            new Z(o[23], 2198950837),
            new Z(o[24], 3999719339),
            new Z(o[25], 766784016),
            new Z(o[26], 2566594879),
            new Z(o[27], 3203337956),
            new Z(o[28], 1034457026),
            new Z(o[29], 2466948901),
            new Z(o[30], 3758326383),
            new Z(o[31], 168717936),
            new Z(o[32], 1188179964),
            new Z(o[33], 1546045734),
            new Z(o[34], 1522805485),
            new Z(o[35], 2643833823),
            new Z(o[36], 2343527390),
            new Z(o[37], 1014477480),
            new Z(o[38], 1206759142),
            new Z(o[39], 344077627),
            new Z(o[40], 1290863460),
            new Z(o[41], 3158454273),
            new Z(o[42], 3505952657),
            new Z(o[43], 106217008),
            new Z(o[44], 3606008344),
            new Z(o[45], 1432725776),
            new Z(o[46], 1467031594),
            new Z(o[47], 851169720),
            new Z(o[48], 3100823752),
            new Z(o[49], 1363258195),
            new Z(o[50], 3750685593),
            new Z(o[51], 3785050280),
            new Z(o[52], 3318307427),
            new Z(o[53], 3812723403),
            new Z(o[54], 2003034995),
            new Z(o[55], 3602036899),
            new Z(o[56], 1575990012),
            new Z(o[57], 1125592928),
            new Z(o[58], 2716904306),
            new Z(o[59], 442776044),
            new Z(o[60], 593698344),
            new Z(o[61], 3733110249),
            new Z(o[62], 2999351573),
            new Z(o[63], 3815920427),
            new Z(3391569614, 3928383900),
            new Z(3515267271, 566280711),
            new Z(3940187606, 3454069534),
            new Z(4118630271, 4000239992),
            new Z(116418474, 1914138554),
            new Z(174292421, 2731055270),
            new Z(289380356, 3203993006),
            new Z(460393269, 320620315),
            new Z(685471733, 587496836),
            new Z(852142971, 1086792851),
            new Z(1017036298, 365543100),
            new Z(1126000580, 2618297676),
            new Z(1288033470, 3409855158),
            new Z(1501505948, 4234509866),
            new Z(1607167915, 987167468),
            new Z(1816402316, 1246189591),
          ];
          function V1(a1) {
            return a1 === "SHA-384"
              ? [
                  new Z(3418070365, l[0]),
                  new Z(1654270250, l[1]),
                  new Z(2438529370, l[2]),
                  new Z(355462360, l[3]),
                  new Z(1731405415, l[4]),
                  new Z(41048885895, l[5]),
                  new Z(3675008525, l[6]),
                  new Z(1203062813, l[7]),
                ]
              : [
                  new Z(c[0], 4089235720),
                  new Z(c[1], 2227873595),
                  new Z(c[2], 4271175723),
                  new Z(c[3], 1595750129),
                  new Z(c[4], 2917565137),
                  new Z(c[5], 725511199),
                  new Z(c[6], 4215389547),
                  new Z(c[7], 327033209),
                ];
          }
          function ie(a1, K) {
            var t1,
              r1,
              m1,
              R,
              C,
              k,
              q,
              s1,
              v1,
              w1,
              $1,
              he,
              U1,
              Le,
              pe,
              bt,
              It = [];
            for (
              t1 = K[0],
                r1 = K[1],
                m1 = K[2],
                R = K[3],
                C = K[4],
                k = K[5],
                q = K[6],
                s1 = K[7],
                $1 = 0;
              $1 < 80;
              $1 += 1
            )
              $1 < 16
                ? ((he = 2 * $1), (It[$1] = new Z(a1[he], a1[he + 1])))
                : (It[$1] = re(
                    ((U1 = It[$1 - 2]),
                    (Le = void 0),
                    (pe = void 0),
                    (bt = void 0),
                    (Le = o1(U1, 19)),
                    (pe = o1(U1, 61)),
                    (bt = k1(U1, 6)),
                    new Z(Le.N ^ pe.N ^ bt.N, Le.I ^ pe.I ^ bt.I)),
                    It[$1 - 7],
                    y1(It[$1 - 15]),
                    It[$1 - 16]
                  )),
                (v1 = d1(s1, A1(C), Y1(C, k, q), L1[$1], It[$1])),
                (w1 = Q1(M1(t1), G1(t1, r1, m1))),
                (s1 = q),
                (q = k),
                (k = C),
                (C = Q1(R, v1)),
                (R = m1),
                (m1 = r1),
                (r1 = t1),
                (t1 = Q1(v1, w1));
            return (
              (K[0] = Q1(t1, K[0])),
              (K[1] = Q1(r1, K[1])),
              (K[2] = Q1(m1, K[2])),
              (K[3] = Q1(R, K[3])),
              (K[4] = Q1(C, K[4])),
              (K[5] = Q1(k, K[5])),
              (K[6] = Q1(q, K[6])),
              (K[7] = Q1(s1, K[7])),
              K
            );
          }
          var ae = (function (a1) {
              function K(t1, r1, m1) {
                var R = this;
                if (t1 !== "SHA-384" && t1 !== "SHA-512") throw new Error(f);
                var C = m1 || {};
                return (
                  ((R = a1.call(this, t1, r1, m1) || this).F = R.Y),
                  (R.g = !0),
                  (R.C = -1),
                  (R.p = i(R.t, R.i, R.C)),
                  (R.R = ie),
                  (R.B = function (k) {
                    return k.slice();
                  }),
                  (R.L = V1),
                  (R.K = function (k, q, s1, v1) {
                    return (function (w1, $1, he, U1, Le) {
                      for (
                        var pe,
                          bt = 31 + ((($1 + 129) >>> 10) << 5),
                          It = $1 + he;
                        w1.length <= bt;

                      )
                        w1.push(0);
                      for (
                        w1[$1 >>> 5] |= 128 << (24 - ($1 % 32)),
                          w1[bt] = 4294967295 & It,
                          w1[bt - 1] = (It / 4294967296) | 0,
                          pe = 0;
                        pe < w1.length;
                        pe += 32
                      )
                        U1 = ie(w1.slice(pe, pe + 32), U1);
                      return Le === "SHA-384"
                        ? [
                            (U1 = U1)[0].N,
                            U1[0].I,
                            U1[1].N,
                            U1[1].I,
                            U1[2].N,
                            U1[2].I,
                            U1[3].N,
                            U1[3].I,
                            U1[4].N,
                            U1[4].I,
                            U1[5].N,
                            U1[5].I,
                          ]
                        : [
                            U1[0].N,
                            U1[0].I,
                            U1[1].N,
                            U1[1].I,
                            U1[2].N,
                            U1[2].I,
                            U1[3].N,
                            U1[3].I,
                            U1[4].N,
                            U1[4].I,
                            U1[5].N,
                            U1[5].I,
                            U1[6].N,
                            U1[6].I,
                            U1[7].N,
                            U1[7].I,
                          ];
                    })(k, q, s1, v1, t1);
                  }),
                  (R.m = V1(t1)),
                  (R.S = 1024),
                  (R.U = t1 === "SHA-384" ? 384 : 512),
                  (R.T = !1),
                  C.hmacKey && R.k(m("hmacKey", C.hmacKey, R.C)),
                  R
                );
              }
              return b(K, a1), K;
            })(g),
            Be = [
              new Z(0, 1),
              new Z(0, 32898),
              new Z(2147483648, 32906),
              new Z(2147483648, 2147516416),
              new Z(0, 32907),
              new Z(0, 2147483649),
              new Z(2147483648, 2147516545),
              new Z(2147483648, 32777),
              new Z(0, 138),
              new Z(0, 136),
              new Z(0, 2147516425),
              new Z(0, 2147483658),
              new Z(0, 2147516555),
              new Z(2147483648, 139),
              new Z(2147483648, 32905),
              new Z(2147483648, 32771),
              new Z(2147483648, 32770),
              new Z(2147483648, 128),
              new Z(0, 32778),
              new Z(2147483648, 2147483658),
              new Z(2147483648, 2147516545),
              new Z(2147483648, 32896),
              new Z(0, 2147483649),
              new Z(2147483648, 2147516424),
            ],
            Ve = [
              [0, 36, 3, 41, 18],
              [1, 44, 10, 45, 2],
              [62, 6, 43, 15, 61],
              [28, 55, 25, 21, 56],
              [27, 20, 39, 8, 14],
            ];
          function ce(a1) {
            var K,
              t1 = [];
            for (K = 0; K < 5; K += 1)
              t1[K] = [
                new Z(0, 0),
                new Z(0, 0),
                new Z(0, 0),
                new Z(0, 0),
                new Z(0, 0),
              ];
            return t1;
          }
          function gt(a1) {
            var K,
              t1 = [];
            for (K = 0; K < 5; K += 1) t1[K] = a1[K].slice();
            return t1;
          }
          function qe(a1, K) {
            var t1,
              r1,
              m1,
              R,
              C,
              k,
              q,
              s1,
              v1,
              w1 = [],
              $1 = [];
            if (a1 !== null)
              for (r1 = 0; r1 < a1.length; r1 += 2)
                K[(r1 >>> 1) % 5][((r1 >>> 1) / 5) | 0] = h1(
                  K[(r1 >>> 1) % 5][((r1 >>> 1) / 5) | 0],
                  new Z(a1[r1 + 1], a1[r1])
                );
            for (t1 = 0; t1 < 24; t1 += 1) {
              for (R = ce(), r1 = 0; r1 < 5; r1 += 1)
                w1[r1] =
                  ((C = K[r1][0]),
                  (k = K[r1][1]),
                  (q = K[r1][2]),
                  (s1 = K[r1][3]),
                  (v1 = K[r1][4]),
                  new Z(
                    C.N ^ k.N ^ q.N ^ s1.N ^ v1.N,
                    C.I ^ k.I ^ q.I ^ s1.I ^ v1.I
                  ));
              for (r1 = 0; r1 < 5; r1 += 1)
                $1[r1] = h1(w1[(r1 + 4) % 5], b1(w1[(r1 + 1) % 5], 1));
              for (r1 = 0; r1 < 5; r1 += 1)
                for (m1 = 0; m1 < 5; m1 += 1) K[r1][m1] = h1(K[r1][m1], $1[r1]);
              for (r1 = 0; r1 < 5; r1 += 1)
                for (m1 = 0; m1 < 5; m1 += 1)
                  R[m1][(2 * r1 + 3 * m1) % 5] = b1(K[r1][m1], Ve[r1][m1]);
              for (r1 = 0; r1 < 5; r1 += 1)
                for (m1 = 0; m1 < 5; m1 += 1)
                  K[r1][m1] = h1(
                    R[r1][m1],
                    new Z(
                      ~R[(r1 + 1) % 5][m1].N & R[(r1 + 2) % 5][m1].N,
                      ~R[(r1 + 1) % 5][m1].I & R[(r1 + 2) % 5][m1].I
                    )
                  );
              K[0][0] = h1(K[0][0], Be[t1]);
            }
            return K;
          }
          function je(a1) {
            var K,
              t1,
              r1 = 0,
              m1 = [0, 0],
              R = [4294967295 & a1, (a1 / 4294967296) & 2097151];
            for (K = 6; K >= 0; K--)
              ((t1 = (R[K >> 2] >>> (8 * K)) & 255) === 0 && r1 === 0) ||
                ((m1[(r1 + 1) >> 2] |= t1 << (8 * (r1 + 1))), (r1 += 1));
            return (
              (r1 = r1 !== 0 ? r1 : 1),
              (m1[0] |= r1),
              { value: r1 + 1 > 4 ? m1 : [m1[0]], binLen: 8 + 8 * r1 }
            );
          }
          function g1(a1) {
            return d(je(a1.binLen), a1);
          }
          function E1(a1, K) {
            var t1,
              r1 = je(K),
              m1 = K >>> 2,
              R = (m1 - ((r1 = d(r1, a1)).value.length % m1)) % m1;
            for (t1 = 0; t1 < R; t1++) r1.value.push(0);
            return r1.value;
          }
          var j1 = (function (a1) {
            function K(t1, r1, m1) {
              var R = this,
                C = 6,
                k = 0,
                q = m1 || {};
              if ((R = a1.call(this, t1, r1, m1) || this).numRounds !== 1) {
                if (q.kmacKey || q.hmacKey)
                  throw new Error("Cannot set numRounds with MAC");
                if (R.o === "CSHAKE128" || R.o === "CSHAKE256")
                  throw new Error("Cannot set numRounds for CSHAKE variants");
              }
              switch (
                ((R.C = 1),
                (R.p = i(R.t, R.i, R.C)),
                (R.R = qe),
                (R.B = gt),
                (R.L = ce),
                (R.m = ce()),
                (R.T = !1),
                t1)
              ) {
                case "SHA3-224":
                  (R.S = k = 1152), (R.U = 224), (R.g = !0), (R.F = R.Y);
                  break;
                case "SHA3-256":
                  (R.S = k = 1088), (R.U = 256), (R.g = !0), (R.F = R.Y);
                  break;
                case "SHA3-384":
                  (R.S = k = 832), (R.U = 384), (R.g = !0), (R.F = R.Y);
                  break;
                case "SHA3-512":
                  (R.S = k = 576), (R.U = 512), (R.g = !0), (R.F = R.Y);
                  break;
                case "SHAKE128":
                  (C = 31),
                    (R.S = k = 1344),
                    (R.U = -1),
                    (R.T = !0),
                    (R.g = !1),
                    (R.F = null);
                  break;
                case "SHAKE256":
                  (C = 31),
                    (R.S = k = 1088),
                    (R.U = -1),
                    (R.T = !0),
                    (R.g = !1),
                    (R.F = null);
                  break;
                case "KMAC128":
                  (C = 4),
                    (R.S = k = 1344),
                    R.M(m1),
                    (R.U = -1),
                    (R.T = !0),
                    (R.g = !1),
                    (R.F = R.X);
                  break;
                case "KMAC256":
                  (C = 4),
                    (R.S = k = 1088),
                    R.M(m1),
                    (R.U = -1),
                    (R.T = !0),
                    (R.g = !1),
                    (R.F = R.X);
                  break;
                case "CSHAKE128":
                  (R.S = k = 1344),
                    (C = R.O(m1)),
                    (R.U = -1),
                    (R.T = !0),
                    (R.g = !1),
                    (R.F = null);
                  break;
                case "CSHAKE256":
                  (R.S = k = 1088),
                    (C = R.O(m1)),
                    (R.U = -1),
                    (R.T = !0),
                    (R.g = !1),
                    (R.F = null);
                  break;
                default:
                  throw new Error(f);
              }
              return (
                (R.K = function (s1, v1, w1, $1, he) {
                  return (function (U1, Le, pe, bt, It, en, At) {
                    var hn,
                      si,
                      Ht = 0,
                      Lr = [],
                      xr = It >>> 5,
                      on = Le >>> 5;
                    for (hn = 0; hn < on && Le >= It; hn += xr)
                      (bt = qe(U1.slice(hn, hn + xr), bt)), (Le -= It);
                    for (U1 = U1.slice(hn), Le %= It; U1.length < xr; )
                      U1.push(0);
                    for (
                      U1[(hn = Le >>> 3) >> 2] ^= en << ((hn % 4) * 8),
                        U1[xr - 1] ^= 2147483648,
                        bt = qe(U1, bt);
                      32 * Lr.length < At &&
                      ((si = bt[Ht % 5][(Ht / 5) | 0]),
                      Lr.push(si.I),
                      !(32 * Lr.length >= At));

                    )
                      Lr.push(si.N),
                        (64 * (Ht += 1)) % It == 0 && (qe(null, bt), (Ht = 0));
                    return Lr;
                  })(s1, v1, 0, $1, k, C, he);
                }),
                q.hmacKey && R.k(m("hmacKey", q.hmacKey, R.C)),
                R
              );
            }
            return (
              b(K, a1),
              (K.prototype.O = function (t1, r1) {
                var m1 = (function (q) {
                  var s1 = q || {};
                  return {
                    funcName: m("funcName", s1.funcName, 1, {
                      value: [],
                      binLen: 0,
                    }),
                    customization: m("Customization", s1.customization, 1, {
                      value: [],
                      binLen: 0,
                    }),
                  };
                })(t1 || {});
                r1 && (m1.funcName = r1);
                var R = d(g1(m1.funcName), g1(m1.customization));
                if (m1.customization.binLen !== 0 || m1.funcName.binLen !== 0) {
                  for (
                    var C = E1(R, this.S >>> 3), k = 0;
                    k < C.length;
                    k += this.S >>> 5
                  )
                    (this.m = this.R(C.slice(k, k + (this.S >>> 5)), this.m)),
                      (this.v += this.S);
                  return 4;
                }
                return 31;
              }),
              (K.prototype.M = function (t1) {
                var r1 = (function (C) {
                  var k = C || {};
                  return {
                    kmacKey: m("kmacKey", k.kmacKey, 1),
                    funcName: { value: [1128353099], binLen: 32 },
                    customization: m("Customization", k.customization, 1, {
                      value: [],
                      binLen: 0,
                    }),
                  };
                })(t1 || {});
                this.O(t1, r1.funcName);
                for (
                  var m1 = E1(g1(r1.kmacKey), this.S >>> 3), R = 0;
                  R < m1.length;
                  R += this.S >>> 5
                )
                  (this.m = this.R(m1.slice(R, R + (this.S >>> 5)), this.m)),
                    (this.v += this.S);
                this.A = !0;
              }),
              (K.prototype.X = function (t1) {
                var r1 = d(
                  { value: this.u.slice(), binLen: this.s },
                  (function (m1) {
                    var R,
                      C,
                      k = 0,
                      q = [0, 0],
                      s1 = [4294967295 & m1, (m1 / 4294967296) & 2097151];
                    for (R = 6; R >= 0; R--)
                      ((C = (s1[R >> 2] >>> (8 * R)) & 255) == 0 && k === 0) ||
                        ((q[k >> 2] |= C << (8 * k)), (k += 1));
                    return (
                      (q[(k = k !== 0 ? k : 1) >> 2] |= k << (8 * k)),
                      { value: k + 1 > 4 ? q : [q[0]], binLen: 8 + 8 * k }
                    );
                  })(t1.outputLen)
                );
                return this.K(
                  r1.value,
                  r1.binLen,
                  this.v,
                  this.B(this.m),
                  t1.outputLen
                );
              }),
              K
            );
          })(g);
          return (function () {
            function a1(K, t1, r1) {
              if (K == "SHA-1") this.j = new G(K, t1, r1);
              else if (K == "SHA-224" || K == "SHA-256")
                this.j = new i1(K, t1, r1);
              else if (K == "SHA-384" || K == "SHA-512")
                this.j = new ae(K, t1, r1);
              else {
                if (
                  K != "SHA3-224" &&
                  K != "SHA3-256" &&
                  K != "SHA3-384" &&
                  K != "SHA3-512" &&
                  K != "SHAKE128" &&
                  K != "SHAKE256" &&
                  K != "CSHAKE128" &&
                  K != "CSHAKE256" &&
                  K != "KMAC128" &&
                  K != "KMAC256"
                )
                  throw new Error(f);
                this.j = new j1(K, t1, r1);
              }
            }
            return (
              (a1.prototype.update = function (K) {
                this.j.update(K);
              }),
              (a1.prototype.getHash = function (K, t1) {
                return this.j.getHash(K, t1);
              }),
              (a1.prototype.setHMACKey = function (K, t1, r1) {
                this.j.setHMACKey(K, t1, r1);
              }),
              (a1.prototype.getHMAC = function (K, t1) {
                return this.j.getHMAC(K, t1);
              }),
              a1
            );
          })();
        });
      })(Ed)),
    Ed.exports
  );
}
var C5 = {},
  Mo = {},
  _x;
function p11() {
  if (_x) return Mo;
  (_x = 1),
    Object.defineProperty(Mo, "__esModule", { value: !0 }),
    (Mo.getSecureRandomWords = Mo.getSecureRandomBytes = void 0);
  function e(n) {
    return ge.from(window.crypto.getRandomValues(new Uint8Array(n)));
  }
  Mo.getSecureRandomBytes = e;
  function t(n) {
    return window.crypto.getRandomValues(new Uint16Array(n));
  }
  return (Mo.getSecureRandomWords = t), Mo;
}
var W0 = {},
  Ax;
function m11() {
  if (Ax) return W0;
  (Ax = 1),
    Object.defineProperty(W0, "__esModule", { value: !0 }),
    (W0.hmac_sha512 = void 0);
  async function e(t, n) {
    let r = typeof t == "string" ? ge.from(t, "utf-8") : t,
      i = typeof n == "string" ? ge.from(n, "utf-8") : n;
    const s = { name: "HMAC", hash: "SHA-512" },
      o = await window.crypto.subtle.importKey("raw", r, s, !1, ["sign"]);
    return ge.from(await crypto.subtle.sign(s, o, i));
  }
  return (W0.hmac_sha512 = e), W0;
}
var z0 = {},
  Tx;
function g11() {
  if (Tx) return z0;
  (Tx = 1),
    Object.defineProperty(z0, "__esModule", { value: !0 }),
    (z0.pbkdf2_sha512 = void 0);
  async function e(t, n, r, i) {
    const s = typeof t == "string" ? ge.from(t, "utf-8") : t,
      o = typeof n == "string" ? ge.from(n, "utf-8") : n,
      l = await window.crypto.subtle.importKey(
        "raw",
        s,
        { name: "PBKDF2" },
        !1,
        ["deriveBits"]
      ),
      c = await window.crypto.subtle.deriveBits(
        { name: "PBKDF2", hash: "SHA-512", salt: o, iterations: r },
        l,
        i * 8
      );
    return ge.from(c);
  }
  return (z0.pbkdf2_sha512 = e), z0;
}
var H0 = {},
  Px;
function y11() {
  if (Px) return H0;
  (Px = 1),
    Object.defineProperty(H0, "__esModule", { value: !0 }),
    (H0.sha256 = void 0);
  async function e(t) {
    return typeof t == "string"
      ? ge.from(await crypto.subtle.digest("SHA-256", ge.from(t, "utf-8")))
      : ge.from(await crypto.subtle.digest("SHA-256", t));
  }
  return (H0.sha256 = e), H0;
}
var q0 = {},
  Mx;
function v11() {
  if (Mx) return q0;
  (Mx = 1),
    Object.defineProperty(q0, "__esModule", { value: !0 }),
    (q0.sha512 = void 0);
  async function e(t) {
    return typeof t == "string"
      ? ge.from(await crypto.subtle.digest("SHA-512", ge.from(t, "utf-8")))
      : ge.from(await crypto.subtle.digest("SHA-512", t));
  }
  return (q0.sha512 = e), q0;
}
var Rx;
function Lu() {
  return (
    Rx ||
      ((Rx = 1),
      (function (e) {
        Object.defineProperty(e, "__esModule", { value: !0 }),
          (e.sha512 =
            e.sha256 =
            e.pbkdf2_sha512 =
            e.hmac_sha512 =
            e.getSecureRandomWords =
            e.getSecureRandomBytes =
              void 0);
        var t = p11();
        Object.defineProperty(e, "getSecureRandomBytes", {
          enumerable: !0,
          get: function () {
            return t.getSecureRandomBytes;
          },
        }),
          Object.defineProperty(e, "getSecureRandomWords", {
            enumerable: !0,
            get: function () {
              return t.getSecureRandomWords;
            },
          });
        var n = m11();
        Object.defineProperty(e, "hmac_sha512", {
          enumerable: !0,
          get: function () {
            return n.hmac_sha512;
          },
        });
        var r = g11();
        Object.defineProperty(e, "pbkdf2_sha512", {
          enumerable: !0,
          get: function () {
            return r.pbkdf2_sha512;
          },
        });
        var i = y11();
        Object.defineProperty(e, "sha256", {
          enumerable: !0,
          get: function () {
            return i.sha256;
          },
        });
        var s = v11();
        Object.defineProperty(e, "sha512", {
          enumerable: !0,
          get: function () {
            return s.sha512;
          },
        });
      })(C5)),
    C5
  );
}
var Lx;
function w11() {
  if (Lx) return Pi;
  Lx = 1;
  var e =
    (Pi && Pi.__importDefault) ||
    function (o) {
      return o && o.__esModule ? o : { default: o };
    };
  Object.defineProperty(Pi, "__esModule", { value: !0 }),
    (Pi.sha256 = Pi.sha256_fallback = Pi.sha256_sync = void 0);
  const t = e(Vm()),
    n = Lu();
  function r(o) {
    let l;
    typeof o == "string"
      ? (l = ge.from(o, "utf-8").toString("hex"))
      : (l = o.toString("hex"));
    let c = new t.default("SHA-256", "HEX");
    c.update(l);
    let f = c.getHash("HEX");
    return ge.from(f, "hex");
  }
  Pi.sha256_sync = r;
  async function i(o) {
    return r(o);
  }
  Pi.sha256_fallback = i;
  function s(o) {
    return (0, n.sha256)(o);
  }
  return (Pi.sha256 = s), Pi;
}
var Mi = {},
  Ix;
function b11() {
  if (Ix) return Mi;
  Ix = 1;
  var e =
    (Mi && Mi.__importDefault) ||
    function (o) {
      return o && o.__esModule ? o : { default: o };
    };
  Object.defineProperty(Mi, "__esModule", { value: !0 }),
    (Mi.sha512 = Mi.sha512_fallback = Mi.sha512_sync = void 0);
  const t = e(Vm()),
    n = Lu();
  function r(o) {
    let l;
    typeof o == "string"
      ? (l = ge.from(o, "utf-8").toString("hex"))
      : (l = o.toString("hex"));
    let c = new t.default("SHA-512", "HEX");
    c.update(l);
    let f = c.getHash("HEX");
    return ge.from(f, "hex");
  }
  Mi.sha512_sync = r;
  async function i(o) {
    return r(o);
  }
  Mi.sha512_fallback = i;
  async function s(o) {
    return (0, n.sha512)(o);
  }
  return (Mi.sha512 = s), Mi;
}
var K0 = {},
  jx;
function xT() {
  if (jx) return K0;
  (jx = 1),
    Object.defineProperty(K0, "__esModule", { value: !0 }),
    (K0.pbkdf2_sha512 = void 0);
  const e = Lu();
  function t(n, r, i, s) {
    return (0, e.pbkdf2_sha512)(n, r, i, s);
  }
  return (K0.pbkdf2_sha512 = t), K0;
}
var B2 = {},
  Nx;
function Iu() {
  if (Nx) return B2;
  Nx = 1;
  var e =
    (B2 && B2.__importDefault) ||
    function (s) {
      return s && s.__esModule ? s : { default: s };
    };
  Object.defineProperty(B2, "__esModule", { value: !0 }),
    (B2.hmac_sha512 = B2.hmac_sha512_fallback = void 0);
  const t = e(Vm()),
    n = Lu();
  async function r(s, o) {
    let l = typeof s == "string" ? ge.from(s, "utf-8") : s,
      c = typeof o == "string" ? ge.from(o, "utf-8") : o;
    const f = new t.default("SHA-512", "HEX", {
      hmacKey: { value: l.toString("hex"), format: "HEX" },
    });
    f.update(c.toString("hex"));
    const d = f.getHash("HEX");
    return ge.from(d, "hex");
  }
  B2.hmac_sha512_fallback = r;
  function i(s, o) {
    return (0, n.hmac_sha512)(s, o);
  }
  return (B2.hmac_sha512 = i), B2;
}
var D2 = {},
  Ox;
function Wm() {
  if (Ox) return D2;
  (Ox = 1),
    Object.defineProperty(D2, "__esModule", { value: !0 }),
    (D2.getSecureRandomNumber =
      D2.getSecureRandomWords =
      D2.getSecureRandomBytes =
        void 0);
  const e = Lu();
  async function t(i) {
    return (0, e.getSecureRandomBytes)(i);
  }
  D2.getSecureRandomBytes = t;
  async function n(i) {
    return n();
  }
  D2.getSecureRandomWords = n;
  async function r(i, s) {
    let o = s - i;
    var l = Math.ceil(Math.log2(o));
    if (l > 53) throw new Error("Range is too large");
    for (var c = Math.ceil(l / 8), f = Math.pow(2, l) - 1; ; ) {
      let p = await t(l),
        m = (c - 1) * 8,
        g = 0;
      for (var d = 0; d < c; d++) (g += p[d] * Math.pow(2, m)), (m -= 8);
      if (((g = g & f), !(g >= o))) return i + g;
    }
  }
  return (D2.getSecureRandomNumber = r), D2;
}
var G0 = {},
  Y0 = {},
  Bx;
function x11() {
  return (
    Bx ||
      ((Bx = 1),
      Object.defineProperty(Y0, "__esModule", { value: !0 }),
      (Y0.wordlist = void 0),
      (Y0.wordlist = [
        "abacus",
        "abdomen",
        "abdominal",
        "abide",
        "abiding",
        "ability",
        "ablaze",
        "able",
        "abnormal",
        "abrasion",
        "abrasive",
        "abreast",
        "abridge",
        "abroad",
        "abruptly",
        "absence",
        "absentee",
        "absently",
        "absinthe",
        "absolute",
        "absolve",
        "abstain",
        "abstract",
        "absurd",
        "accent",
        "acclaim",
        "acclimate",
        "accompany",
        "account",
        "accuracy",
        "accurate",
        "accustom",
        "acetone",
        "achiness",
        "aching",
        "acid",
        "acorn",
        "acquaint",
        "acquire",
        "acre",
        "acrobat",
        "acronym",
        "acting",
        "action",
        "activate",
        "activator",
        "active",
        "activism",
        "activist",
        "activity",
        "actress",
        "acts",
        "acutely",
        "acuteness",
        "aeration",
        "aerobics",
        "aerosol",
        "aerospace",
        "afar",
        "affair",
        "affected",
        "affecting",
        "affection",
        "affidavit",
        "affiliate",
        "affirm",
        "affix",
        "afflicted",
        "affluent",
        "afford",
        "affront",
        "aflame",
        "afloat",
        "aflutter",
        "afoot",
        "afraid",
        "afterglow",
        "afterlife",
        "aftermath",
        "aftermost",
        "afternoon",
        "aged",
        "ageless",
        "agency",
        "agenda",
        "agent",
        "aggregate",
        "aghast",
        "agile",
        "agility",
        "aging",
        "agnostic",
        "agonize",
        "agonizing",
        "agony",
        "agreeable",
        "agreeably",
        "agreed",
        "agreeing",
        "agreement",
        "aground",
        "ahead",
        "ahoy",
        "aide",
        "aids",
        "aim",
        "ajar",
        "alabaster",
        "alarm",
        "albatross",
        "album",
        "alfalfa",
        "algebra",
        "algorithm",
        "alias",
        "alibi",
        "alienable",
        "alienate",
        "aliens",
        "alike",
        "alive",
        "alkaline",
        "alkalize",
        "almanac",
        "almighty",
        "almost",
        "aloe",
        "aloft",
        "aloha",
        "alone",
        "alongside",
        "aloof",
        "alphabet",
        "alright",
        "although",
        "altitude",
        "alto",
        "aluminum",
        "alumni",
        "always",
        "amaretto",
        "amaze",
        "amazingly",
        "amber",
        "ambiance",
        "ambiguity",
        "ambiguous",
        "ambition",
        "ambitious",
        "ambulance",
        "ambush",
        "amendable",
        "amendment",
        "amends",
        "amenity",
        "amiable",
        "amicably",
        "amid",
        "amigo",
        "amino",
        "amiss",
        "ammonia",
        "ammonium",
        "amnesty",
        "amniotic",
        "among",
        "amount",
        "amperage",
        "ample",
        "amplifier",
        "amplify",
        "amply",
        "amuck",
        "amulet",
        "amusable",
        "amused",
        "amusement",
        "amuser",
        "amusing",
        "anaconda",
        "anaerobic",
        "anagram",
        "anatomist",
        "anatomy",
        "anchor",
        "anchovy",
        "ancient",
        "android",
        "anemia",
        "anemic",
        "aneurism",
        "anew",
        "angelfish",
        "angelic",
        "anger",
        "angled",
        "angler",
        "angles",
        "angling",
        "angrily",
        "angriness",
        "anguished",
        "angular",
        "animal",
        "animate",
        "animating",
        "animation",
        "animator",
        "anime",
        "animosity",
        "ankle",
        "annex",
        "annotate",
        "announcer",
        "annoying",
        "annually",
        "annuity",
        "anointer",
        "another",
        "answering",
        "antacid",
        "antarctic",
        "anteater",
        "antelope",
        "antennae",
        "anthem",
        "anthill",
        "anthology",
        "antibody",
        "antics",
        "antidote",
        "antihero",
        "antiquely",
        "antiques",
        "antiquity",
        "antirust",
        "antitoxic",
        "antitrust",
        "antiviral",
        "antivirus",
        "antler",
        "antonym",
        "antsy",
        "anvil",
        "anybody",
        "anyhow",
        "anymore",
        "anyone",
        "anyplace",
        "anything",
        "anytime",
        "anyway",
        "anywhere",
        "aorta",
        "apache",
        "apostle",
        "appealing",
        "appear",
        "appease",
        "appeasing",
        "appendage",
        "appendix",
        "appetite",
        "appetizer",
        "applaud",
        "applause",
        "apple",
        "appliance",
        "applicant",
        "applied",
        "apply",
        "appointee",
        "appraisal",
        "appraiser",
        "apprehend",
        "approach",
        "approval",
        "approve",
        "apricot",
        "april",
        "apron",
        "aptitude",
        "aptly",
        "aqua",
        "aqueduct",
        "arbitrary",
        "arbitrate",
        "ardently",
        "area",
        "arena",
        "arguable",
        "arguably",
        "argue",
        "arise",
        "armadillo",
        "armband",
        "armchair",
        "armed",
        "armful",
        "armhole",
        "arming",
        "armless",
        "armoire",
        "armored",
        "armory",
        "armrest",
        "army",
        "aroma",
        "arose",
        "around",
        "arousal",
        "arrange",
        "array",
        "arrest",
        "arrival",
        "arrive",
        "arrogance",
        "arrogant",
        "arson",
        "art",
        "ascend",
        "ascension",
        "ascent",
        "ascertain",
        "ashamed",
        "ashen",
        "ashes",
        "ashy",
        "aside",
        "askew",
        "asleep",
        "asparagus",
        "aspect",
        "aspirate",
        "aspire",
        "aspirin",
        "astonish",
        "astound",
        "astride",
        "astrology",
        "astronaut",
        "astronomy",
        "astute",
        "atlantic",
        "atlas",
        "atom",
        "atonable",
        "atop",
        "atrium",
        "atrocious",
        "atrophy",
        "attach",
        "attain",
        "attempt",
        "attendant",
        "attendee",
        "attention",
        "attentive",
        "attest",
        "attic",
        "attire",
        "attitude",
        "attractor",
        "attribute",
        "atypical",
        "auction",
        "audacious",
        "audacity",
        "audible",
        "audibly",
        "audience",
        "audio",
        "audition",
        "augmented",
        "august",
        "authentic",
        "author",
        "autism",
        "autistic",
        "autograph",
        "automaker",
        "automated",
        "automatic",
        "autopilot",
        "available",
        "avalanche",
        "avatar",
        "avenge",
        "avenging",
        "avenue",
        "average",
        "aversion",
        "avert",
        "aviation",
        "aviator",
        "avid",
        "avoid",
        "await",
        "awaken",
        "award",
        "aware",
        "awhile",
        "awkward",
        "awning",
        "awoke",
        "awry",
        "axis",
        "babble",
        "babbling",
        "babied",
        "baboon",
        "backache",
        "backboard",
        "backboned",
        "backdrop",
        "backed",
        "backer",
        "backfield",
        "backfire",
        "backhand",
        "backing",
        "backlands",
        "backlash",
        "backless",
        "backlight",
        "backlit",
        "backlog",
        "backpack",
        "backpedal",
        "backrest",
        "backroom",
        "backshift",
        "backside",
        "backslid",
        "backspace",
        "backspin",
        "backstab",
        "backstage",
        "backtalk",
        "backtrack",
        "backup",
        "backward",
        "backwash",
        "backwater",
        "backyard",
        "bacon",
        "bacteria",
        "bacterium",
        "badass",
        "badge",
        "badland",
        "badly",
        "badness",
        "baffle",
        "baffling",
        "bagel",
        "bagful",
        "baggage",
        "bagged",
        "baggie",
        "bagginess",
        "bagging",
        "baggy",
        "bagpipe",
        "baguette",
        "baked",
        "bakery",
        "bakeshop",
        "baking",
        "balance",
        "balancing",
        "balcony",
        "balmy",
        "balsamic",
        "bamboo",
        "banana",
        "banish",
        "banister",
        "banjo",
        "bankable",
        "bankbook",
        "banked",
        "banker",
        "banking",
        "banknote",
        "bankroll",
        "banner",
        "bannister",
        "banshee",
        "banter",
        "barbecue",
        "barbed",
        "barbell",
        "barber",
        "barcode",
        "barge",
        "bargraph",
        "barista",
        "baritone",
        "barley",
        "barmaid",
        "barman",
        "barn",
        "barometer",
        "barrack",
        "barracuda",
        "barrel",
        "barrette",
        "barricade",
        "barrier",
        "barstool",
        "bartender",
        "barterer",
        "bash",
        "basically",
        "basics",
        "basil",
        "basin",
        "basis",
        "basket",
        "batboy",
        "batch",
        "bath",
        "baton",
        "bats",
        "battalion",
        "battered",
        "battering",
        "battery",
        "batting",
        "battle",
        "bauble",
        "bazooka",
        "blabber",
        "bladder",
        "blade",
        "blah",
        "blame",
        "blaming",
        "blanching",
        "blandness",
        "blank",
        "blaspheme",
        "blasphemy",
        "blast",
        "blatancy",
        "blatantly",
        "blazer",
        "blazing",
        "bleach",
        "bleak",
        "bleep",
        "blemish",
        "blend",
        "bless",
        "blighted",
        "blimp",
        "bling",
        "blinked",
        "blinker",
        "blinking",
        "blinks",
        "blip",
        "blissful",
        "blitz",
        "blizzard",
        "bloated",
        "bloating",
        "blob",
        "blog",
        "bloomers",
        "blooming",
        "blooper",
        "blot",
        "blouse",
        "blubber",
        "bluff",
        "bluish",
        "blunderer",
        "blunt",
        "blurb",
        "blurred",
        "blurry",
        "blurt",
        "blush",
        "blustery",
        "boaster",
        "boastful",
        "boasting",
        "boat",
        "bobbed",
        "bobbing",
        "bobble",
        "bobcat",
        "bobsled",
        "bobtail",
        "bodacious",
        "body",
        "bogged",
        "boggle",
        "bogus",
        "boil",
        "bok",
        "bolster",
        "bolt",
        "bonanza",
        "bonded",
        "bonding",
        "bondless",
        "boned",
        "bonehead",
        "boneless",
        "bonelike",
        "boney",
        "bonfire",
        "bonnet",
        "bonsai",
        "bonus",
        "bony",
        "boogeyman",
        "boogieman",
        "book",
        "boondocks",
        "booted",
        "booth",
        "bootie",
        "booting",
        "bootlace",
        "bootleg",
        "boots",
        "boozy",
        "borax",
        "boring",
        "borough",
        "borrower",
        "borrowing",
        "boss",
        "botanical",
        "botanist",
        "botany",
        "botch",
        "both",
        "bottle",
        "bottling",
        "bottom",
        "bounce",
        "bouncing",
        "bouncy",
        "bounding",
        "boundless",
        "bountiful",
        "bovine",
        "boxcar",
        "boxer",
        "boxing",
        "boxlike",
        "boxy",
        "breach",
        "breath",
        "breeches",
        "breeching",
        "breeder",
        "breeding",
        "breeze",
        "breezy",
        "brethren",
        "brewery",
        "brewing",
        "briar",
        "bribe",
        "brick",
        "bride",
        "bridged",
        "brigade",
        "bright",
        "brilliant",
        "brim",
        "bring",
        "brink",
        "brisket",
        "briskly",
        "briskness",
        "bristle",
        "brittle",
        "broadband",
        "broadcast",
        "broaden",
        "broadly",
        "broadness",
        "broadside",
        "broadways",
        "broiler",
        "broiling",
        "broken",
        "broker",
        "bronchial",
        "bronco",
        "bronze",
        "bronzing",
        "brook",
        "broom",
        "brought",
        "browbeat",
        "brownnose",
        "browse",
        "browsing",
        "bruising",
        "brunch",
        "brunette",
        "brunt",
        "brush",
        "brussels",
        "brute",
        "brutishly",
        "bubble",
        "bubbling",
        "bubbly",
        "buccaneer",
        "bucked",
        "bucket",
        "buckle",
        "buckshot",
        "buckskin",
        "bucktooth",
        "buckwheat",
        "buddhism",
        "buddhist",
        "budding",
        "buddy",
        "budget",
        "buffalo",
        "buffed",
        "buffer",
        "buffing",
        "buffoon",
        "buggy",
        "bulb",
        "bulge",
        "bulginess",
        "bulgur",
        "bulk",
        "bulldog",
        "bulldozer",
        "bullfight",
        "bullfrog",
        "bullhorn",
        "bullion",
        "bullish",
        "bullpen",
        "bullring",
        "bullseye",
        "bullwhip",
        "bully",
        "bunch",
        "bundle",
        "bungee",
        "bunion",
        "bunkbed",
        "bunkhouse",
        "bunkmate",
        "bunny",
        "bunt",
        "busboy",
        "bush",
        "busily",
        "busload",
        "bust",
        "busybody",
        "buzz",
        "cabana",
        "cabbage",
        "cabbie",
        "cabdriver",
        "cable",
        "caboose",
        "cache",
        "cackle",
        "cacti",
        "cactus",
        "caddie",
        "caddy",
        "cadet",
        "cadillac",
        "cadmium",
        "cage",
        "cahoots",
        "cake",
        "calamari",
        "calamity",
        "calcium",
        "calculate",
        "calculus",
        "caliber",
        "calibrate",
        "calm",
        "caloric",
        "calorie",
        "calzone",
        "camcorder",
        "cameo",
        "camera",
        "camisole",
        "camper",
        "campfire",
        "camping",
        "campsite",
        "campus",
        "canal",
        "canary",
        "cancel",
        "candied",
        "candle",
        "candy",
        "cane",
        "canine",
        "canister",
        "cannabis",
        "canned",
        "canning",
        "cannon",
        "cannot",
        "canola",
        "canon",
        "canopener",
        "canopy",
        "canteen",
        "canyon",
        "capable",
        "capably",
        "capacity",
        "cape",
        "capillary",
        "capital",
        "capitol",
        "capped",
        "capricorn",
        "capsize",
        "capsule",
        "caption",
        "captivate",
        "captive",
        "captivity",
        "capture",
        "caramel",
        "carat",
        "caravan",
        "carbon",
        "cardboard",
        "carded",
        "cardiac",
        "cardigan",
        "cardinal",
        "cardstock",
        "carefully",
        "caregiver",
        "careless",
        "caress",
        "caretaker",
        "cargo",
        "caring",
        "carless",
        "carload",
        "carmaker",
        "carnage",
        "carnation",
        "carnival",
        "carnivore",
        "carol",
        "carpenter",
        "carpentry",
        "carpool",
        "carport",
        "carried",
        "carrot",
        "carrousel",
        "carry",
        "cartel",
        "cartload",
        "carton",
        "cartoon",
        "cartridge",
        "cartwheel",
        "carve",
        "carving",
        "carwash",
        "cascade",
        "case",
        "cash",
        "casing",
        "casino",
        "casket",
        "cassette",
        "casually",
        "casualty",
        "catacomb",
        "catalog",
        "catalyst",
        "catalyze",
        "catapult",
        "cataract",
        "catatonic",
        "catcall",
        "catchable",
        "catcher",
        "catching",
        "catchy",
        "caterer",
        "catering",
        "catfight",
        "catfish",
        "cathedral",
        "cathouse",
        "catlike",
        "catnap",
        "catnip",
        "catsup",
        "cattail",
        "cattishly",
        "cattle",
        "catty",
        "catwalk",
        "caucasian",
        "caucus",
        "causal",
        "causation",
        "cause",
        "causing",
        "cauterize",
        "caution",
        "cautious",
        "cavalier",
        "cavalry",
        "caviar",
        "cavity",
        "cedar",
        "celery",
        "celestial",
        "celibacy",
        "celibate",
        "celtic",
        "cement",
        "census",
        "ceramics",
        "ceremony",
        "certainly",
        "certainty",
        "certified",
        "certify",
        "cesarean",
        "cesspool",
        "chafe",
        "chaffing",
        "chain",
        "chair",
        "chalice",
        "challenge",
        "chamber",
        "chamomile",
        "champion",
        "chance",
        "change",
        "channel",
        "chant",
        "chaos",
        "chaperone",
        "chaplain",
        "chapped",
        "chaps",
        "chapter",
        "character",
        "charbroil",
        "charcoal",
        "charger",
        "charging",
        "chariot",
        "charity",
        "charm",
        "charred",
        "charter",
        "charting",
        "chase",
        "chasing",
        "chaste",
        "chastise",
        "chastity",
        "chatroom",
        "chatter",
        "chatting",
        "chatty",
        "cheating",
        "cheddar",
        "cheek",
        "cheer",
        "cheese",
        "cheesy",
        "chef",
        "chemicals",
        "chemist",
        "chemo",
        "cherisher",
        "cherub",
        "chess",
        "chest",
        "chevron",
        "chevy",
        "chewable",
        "chewer",
        "chewing",
        "chewy",
        "chief",
        "chihuahua",
        "childcare",
        "childhood",
        "childish",
        "childless",
        "childlike",
        "chili",
        "chill",
        "chimp",
        "chip",
        "chirping",
        "chirpy",
        "chitchat",
        "chivalry",
        "chive",
        "chloride",
        "chlorine",
        "choice",
        "chokehold",
        "choking",
        "chomp",
        "chooser",
        "choosing",
        "choosy",
        "chop",
        "chosen",
        "chowder",
        "chowtime",
        "chrome",
        "chubby",
        "chuck",
        "chug",
        "chummy",
        "chump",
        "chunk",
        "churn",
        "chute",
        "cider",
        "cilantro",
        "cinch",
        "cinema",
        "cinnamon",
        "circle",
        "circling",
        "circular",
        "circulate",
        "circus",
        "citable",
        "citadel",
        "citation",
        "citizen",
        "citric",
        "citrus",
        "city",
        "civic",
        "civil",
        "clad",
        "claim",
        "clambake",
        "clammy",
        "clamor",
        "clamp",
        "clamshell",
        "clang",
        "clanking",
        "clapped",
        "clapper",
        "clapping",
        "clarify",
        "clarinet",
        "clarity",
        "clash",
        "clasp",
        "class",
        "clatter",
        "clause",
        "clavicle",
        "claw",
        "clay",
        "clean",
        "clear",
        "cleat",
        "cleaver",
        "cleft",
        "clench",
        "clergyman",
        "clerical",
        "clerk",
        "clever",
        "clicker",
        "client",
        "climate",
        "climatic",
        "cling",
        "clinic",
        "clinking",
        "clip",
        "clique",
        "cloak",
        "clobber",
        "clock",
        "clone",
        "cloning",
        "closable",
        "closure",
        "clothes",
        "clothing",
        "cloud",
        "clover",
        "clubbed",
        "clubbing",
        "clubhouse",
        "clump",
        "clumsily",
        "clumsy",
        "clunky",
        "clustered",
        "clutch",
        "clutter",
        "coach",
        "coagulant",
        "coastal",
        "coaster",
        "coasting",
        "coastland",
        "coastline",
        "coat",
        "coauthor",
        "cobalt",
        "cobbler",
        "cobweb",
        "cocoa",
        "coconut",
        "cod",
        "coeditor",
        "coerce",
        "coexist",
        "coffee",
        "cofounder",
        "cognition",
        "cognitive",
        "cogwheel",
        "coherence",
        "coherent",
        "cohesive",
        "coil",
        "coke",
        "cola",
        "cold",
        "coleslaw",
        "coliseum",
        "collage",
        "collapse",
        "collar",
        "collected",
        "collector",
        "collide",
        "collie",
        "collision",
        "colonial",
        "colonist",
        "colonize",
        "colony",
        "colossal",
        "colt",
        "coma",
        "come",
        "comfort",
        "comfy",
        "comic",
        "coming",
        "comma",
        "commence",
        "commend",
        "comment",
        "commerce",
        "commode",
        "commodity",
        "commodore",
        "common",
        "commotion",
        "commute",
        "commuting",
        "compacted",
        "compacter",
        "compactly",
        "compactor",
        "companion",
        "company",
        "compare",
        "compel",
        "compile",
        "comply",
        "component",
        "composed",
        "composer",
        "composite",
        "compost",
        "composure",
        "compound",
        "compress",
        "comprised",
        "computer",
        "computing",
        "comrade",
        "concave",
        "conceal",
        "conceded",
        "concept",
        "concerned",
        "concert",
        "conch",
        "concierge",
        "concise",
        "conclude",
        "concrete",
        "concur",
        "condense",
        "condiment",
        "condition",
        "condone",
        "conducive",
        "conductor",
        "conduit",
        "cone",
        "confess",
        "confetti",
        "confidant",
        "confident",
        "confider",
        "confiding",
        "configure",
        "confined",
        "confining",
        "confirm",
        "conflict",
        "conform",
        "confound",
        "confront",
        "confused",
        "confusing",
        "confusion",
        "congenial",
        "congested",
        "congrats",
        "congress",
        "conical",
        "conjoined",
        "conjure",
        "conjuror",
        "connected",
        "connector",
        "consensus",
        "consent",
        "console",
        "consoling",
        "consonant",
        "constable",
        "constant",
        "constrain",
        "constrict",
        "construct",
        "consult",
        "consumer",
        "consuming",
        "contact",
        "container",
        "contempt",
        "contend",
        "contented",
        "contently",
        "contents",
        "contest",
        "context",
        "contort",
        "contour",
        "contrite",
        "control",
        "contusion",
        "convene",
        "convent",
        "copartner",
        "cope",
        "copied",
        "copier",
        "copilot",
        "coping",
        "copious",
        "copper",
        "copy",
        "coral",
        "cork",
        "cornball",
        "cornbread",
        "corncob",
        "cornea",
        "corned",
        "corner",
        "cornfield",
        "cornflake",
        "cornhusk",
        "cornmeal",
        "cornstalk",
        "corny",
        "coronary",
        "coroner",
        "corporal",
        "corporate",
        "corral",
        "correct",
        "corridor",
        "corrode",
        "corroding",
        "corrosive",
        "corsage",
        "corset",
        "cortex",
        "cosigner",
        "cosmetics",
        "cosmic",
        "cosmos",
        "cosponsor",
        "cost",
        "cottage",
        "cotton",
        "couch",
        "cough",
        "could",
        "countable",
        "countdown",
        "counting",
        "countless",
        "country",
        "county",
        "courier",
        "covenant",
        "cover",
        "coveted",
        "coveting",
        "coyness",
        "cozily",
        "coziness",
        "cozy",
        "crabbing",
        "crabgrass",
        "crablike",
        "crabmeat",
        "cradle",
        "cradling",
        "crafter",
        "craftily",
        "craftsman",
        "craftwork",
        "crafty",
        "cramp",
        "cranberry",
        "crane",
        "cranial",
        "cranium",
        "crank",
        "crate",
        "crave",
        "craving",
        "crawfish",
        "crawlers",
        "crawling",
        "crayfish",
        "crayon",
        "crazed",
        "crazily",
        "craziness",
        "crazy",
        "creamed",
        "creamer",
        "creamlike",
        "crease",
        "creasing",
        "creatable",
        "create",
        "creation",
        "creative",
        "creature",
        "credible",
        "credibly",
        "credit",
        "creed",
        "creme",
        "creole",
        "crepe",
        "crept",
        "crescent",
        "crested",
        "cresting",
        "crestless",
        "crevice",
        "crewless",
        "crewman",
        "crewmate",
        "crib",
        "cricket",
        "cried",
        "crier",
        "crimp",
        "crimson",
        "cringe",
        "cringing",
        "crinkle",
        "crinkly",
        "crisped",
        "crisping",
        "crisply",
        "crispness",
        "crispy",
        "criteria",
        "critter",
        "croak",
        "crock",
        "crook",
        "croon",
        "crop",
        "cross",
        "crouch",
        "crouton",
        "crowbar",
        "crowd",
        "crown",
        "crucial",
        "crudely",
        "crudeness",
        "cruelly",
        "cruelness",
        "cruelty",
        "crumb",
        "crummiest",
        "crummy",
        "crumpet",
        "crumpled",
        "cruncher",
        "crunching",
        "crunchy",
        "crusader",
        "crushable",
        "crushed",
        "crusher",
        "crushing",
        "crust",
        "crux",
        "crying",
        "cryptic",
        "crystal",
        "cubbyhole",
        "cube",
        "cubical",
        "cubicle",
        "cucumber",
        "cuddle",
        "cuddly",
        "cufflink",
        "culinary",
        "culminate",
        "culpable",
        "culprit",
        "cultivate",
        "cultural",
        "culture",
        "cupbearer",
        "cupcake",
        "cupid",
        "cupped",
        "cupping",
        "curable",
        "curator",
        "curdle",
        "cure",
        "curfew",
        "curing",
        "curled",
        "curler",
        "curliness",
        "curling",
        "curly",
        "curry",
        "curse",
        "cursive",
        "cursor",
        "curtain",
        "curtly",
        "curtsy",
        "curvature",
        "curve",
        "curvy",
        "cushy",
        "cusp",
        "cussed",
        "custard",
        "custodian",
        "custody",
        "customary",
        "customer",
        "customize",
        "customs",
        "cut",
        "cycle",
        "cyclic",
        "cycling",
        "cyclist",
        "cylinder",
        "cymbal",
        "cytoplasm",
        "cytoplast",
        "dab",
        "dad",
        "daffodil",
        "dagger",
        "daily",
        "daintily",
        "dainty",
        "dairy",
        "daisy",
        "dallying",
        "dance",
        "dancing",
        "dandelion",
        "dander",
        "dandruff",
        "dandy",
        "danger",
        "dangle",
        "dangling",
        "daredevil",
        "dares",
        "daringly",
        "darkened",
        "darkening",
        "darkish",
        "darkness",
        "darkroom",
        "darling",
        "darn",
        "dart",
        "darwinism",
        "dash",
        "dastardly",
        "data",
        "datebook",
        "dating",
        "daughter",
        "daunting",
        "dawdler",
        "dawn",
        "daybed",
        "daybreak",
        "daycare",
        "daydream",
        "daylight",
        "daylong",
        "dayroom",
        "daytime",
        "dazzler",
        "dazzling",
        "deacon",
        "deafening",
        "deafness",
        "dealer",
        "dealing",
        "dealmaker",
        "dealt",
        "dean",
        "debatable",
        "debate",
        "debating",
        "debit",
        "debrief",
        "debtless",
        "debtor",
        "debug",
        "debunk",
        "decade",
        "decaf",
        "decal",
        "decathlon",
        "decay",
        "deceased",
        "deceit",
        "deceiver",
        "deceiving",
        "december",
        "decency",
        "decent",
        "deception",
        "deceptive",
        "decibel",
        "decidable",
        "decimal",
        "decimeter",
        "decipher",
        "deck",
        "declared",
        "decline",
        "decode",
        "decompose",
        "decorated",
        "decorator",
        "decoy",
        "decrease",
        "decree",
        "dedicate",
        "dedicator",
        "deduce",
        "deduct",
        "deed",
        "deem",
        "deepen",
        "deeply",
        "deepness",
        "deface",
        "defacing",
        "defame",
        "default",
        "defeat",
        "defection",
        "defective",
        "defendant",
        "defender",
        "defense",
        "defensive",
        "deferral",
        "deferred",
        "defiance",
        "defiant",
        "defile",
        "defiling",
        "define",
        "definite",
        "deflate",
        "deflation",
        "deflator",
        "deflected",
        "deflector",
        "defog",
        "deforest",
        "defraud",
        "defrost",
        "deftly",
        "defuse",
        "defy",
        "degraded",
        "degrading",
        "degrease",
        "degree",
        "dehydrate",
        "deity",
        "dejected",
        "delay",
        "delegate",
        "delegator",
        "delete",
        "deletion",
        "delicacy",
        "delicate",
        "delicious",
        "delighted",
        "delirious",
        "delirium",
        "deliverer",
        "delivery",
        "delouse",
        "delta",
        "deluge",
        "delusion",
        "deluxe",
        "demanding",
        "demeaning",
        "demeanor",
        "demise",
        "democracy",
        "democrat",
        "demote",
        "demotion",
        "demystify",
        "denatured",
        "deniable",
        "denial",
        "denim",
        "denote",
        "dense",
        "density",
        "dental",
        "dentist",
        "denture",
        "deny",
        "deodorant",
        "deodorize",
        "departed",
        "departure",
        "depict",
        "deplete",
        "depletion",
        "deplored",
        "deploy",
        "deport",
        "depose",
        "depraved",
        "depravity",
        "deprecate",
        "depress",
        "deprive",
        "depth",
        "deputize",
        "deputy",
        "derail",
        "deranged",
        "derby",
        "derived",
        "desecrate",
        "deserve",
        "deserving",
        "designate",
        "designed",
        "designer",
        "designing",
        "deskbound",
        "desktop",
        "deskwork",
        "desolate",
        "despair",
        "despise",
        "despite",
        "destiny",
        "destitute",
        "destruct",
        "detached",
        "detail",
        "detection",
        "detective",
        "detector",
        "detention",
        "detergent",
        "detest",
        "detonate",
        "detonator",
        "detoxify",
        "detract",
        "deuce",
        "devalue",
        "deviancy",
        "deviant",
        "deviate",
        "deviation",
        "deviator",
        "device",
        "devious",
        "devotedly",
        "devotee",
        "devotion",
        "devourer",
        "devouring",
        "devoutly",
        "dexterity",
        "dexterous",
        "diabetes",
        "diabetic",
        "diabolic",
        "diagnoses",
        "diagnosis",
        "diagram",
        "dial",
        "diameter",
        "diaper",
        "diaphragm",
        "diary",
        "dice",
        "dicing",
        "dictate",
        "dictation",
        "dictator",
        "difficult",
        "diffused",
        "diffuser",
        "diffusion",
        "diffusive",
        "dig",
        "dilation",
        "diligence",
        "diligent",
        "dill",
        "dilute",
        "dime",
        "diminish",
        "dimly",
        "dimmed",
        "dimmer",
        "dimness",
        "dimple",
        "diner",
        "dingbat",
        "dinghy",
        "dinginess",
        "dingo",
        "dingy",
        "dining",
        "dinner",
        "diocese",
        "dioxide",
        "diploma",
        "dipped",
        "dipper",
        "dipping",
        "directed",
        "direction",
        "directive",
        "directly",
        "directory",
        "direness",
        "dirtiness",
        "disabled",
        "disagree",
        "disallow",
        "disarm",
        "disarray",
        "disaster",
        "disband",
        "disbelief",
        "disburse",
        "discard",
        "discern",
        "discharge",
        "disclose",
        "discolor",
        "discount",
        "discourse",
        "discover",
        "discuss",
        "disdain",
        "disengage",
        "disfigure",
        "disgrace",
        "dish",
        "disinfect",
        "disjoin",
        "disk",
        "dislike",
        "disliking",
        "dislocate",
        "dislodge",
        "disloyal",
        "dismantle",
        "dismay",
        "dismiss",
        "dismount",
        "disobey",
        "disorder",
        "disown",
        "disparate",
        "disparity",
        "dispatch",
        "dispense",
        "dispersal",
        "dispersed",
        "disperser",
        "displace",
        "display",
        "displease",
        "disposal",
        "dispose",
        "disprove",
        "dispute",
        "disregard",
        "disrupt",
        "dissuade",
        "distance",
        "distant",
        "distaste",
        "distill",
        "distinct",
        "distort",
        "distract",
        "distress",
        "district",
        "distrust",
        "ditch",
        "ditto",
        "ditzy",
        "dividable",
        "divided",
        "dividend",
        "dividers",
        "dividing",
        "divinely",
        "diving",
        "divinity",
        "divisible",
        "divisibly",
        "division",
        "divisive",
        "divorcee",
        "dizziness",
        "dizzy",
        "doable",
        "docile",
        "dock",
        "doctrine",
        "document",
        "dodge",
        "dodgy",
        "doily",
        "doing",
        "dole",
        "dollar",
        "dollhouse",
        "dollop",
        "dolly",
        "dolphin",
        "domain",
        "domelike",
        "domestic",
        "dominion",
        "dominoes",
        "donated",
        "donation",
        "donator",
        "donor",
        "donut",
        "doodle",
        "doorbell",
        "doorframe",
        "doorknob",
        "doorman",
        "doormat",
        "doornail",
        "doorpost",
        "doorstep",
        "doorstop",
        "doorway",
        "doozy",
        "dork",
        "dormitory",
        "dorsal",
        "dosage",
        "dose",
        "dotted",
        "doubling",
        "douche",
        "dove",
        "down",
        "dowry",
        "doze",
        "drab",
        "dragging",
        "dragonfly",
        "dragonish",
        "dragster",
        "drainable",
        "drainage",
        "drained",
        "drainer",
        "drainpipe",
        "dramatic",
        "dramatize",
        "drank",
        "drapery",
        "drastic",
        "draw",
        "dreaded",
        "dreadful",
        "dreadlock",
        "dreamboat",
        "dreamily",
        "dreamland",
        "dreamless",
        "dreamlike",
        "dreamt",
        "dreamy",
        "drearily",
        "dreary",
        "drench",
        "dress",
        "drew",
        "dribble",
        "dried",
        "drier",
        "drift",
        "driller",
        "drilling",
        "drinkable",
        "drinking",
        "dripping",
        "drippy",
        "drivable",
        "driven",
        "driver",
        "driveway",
        "driving",
        "drizzle",
        "drizzly",
        "drone",
        "drool",
        "droop",
        "drop-down",
        "dropbox",
        "dropkick",
        "droplet",
        "dropout",
        "dropper",
        "drove",
        "drown",
        "drowsily",
        "drudge",
        "drum",
        "dry",
        "dubbed",
        "dubiously",
        "duchess",
        "duckbill",
        "ducking",
        "duckling",
        "ducktail",
        "ducky",
        "duct",
        "dude",
        "duffel",
        "dugout",
        "duh",
        "duke",
        "duller",
        "dullness",
        "duly",
        "dumping",
        "dumpling",
        "dumpster",
        "duo",
        "dupe",
        "duplex",
        "duplicate",
        "duplicity",
        "durable",
        "durably",
        "duration",
        "duress",
        "during",
        "dusk",
        "dust",
        "dutiful",
        "duty",
        "duvet",
        "dwarf",
        "dweeb",
        "dwelled",
        "dweller",
        "dwelling",
        "dwindle",
        "dwindling",
        "dynamic",
        "dynamite",
        "dynasty",
        "dyslexia",
        "dyslexic",
        "each",
        "eagle",
        "earache",
        "eardrum",
        "earflap",
        "earful",
        "earlobe",
        "early",
        "earmark",
        "earmuff",
        "earphone",
        "earpiece",
        "earplugs",
        "earring",
        "earshot",
        "earthen",
        "earthlike",
        "earthling",
        "earthly",
        "earthworm",
        "earthy",
        "earwig",
        "easeful",
        "easel",
        "easiest",
        "easily",
        "easiness",
        "easing",
        "eastbound",
        "eastcoast",
        "easter",
        "eastward",
        "eatable",
        "eaten",
        "eatery",
        "eating",
        "eats",
        "ebay",
        "ebony",
        "ebook",
        "ecard",
        "eccentric",
        "echo",
        "eclair",
        "eclipse",
        "ecologist",
        "ecology",
        "economic",
        "economist",
        "economy",
        "ecosphere",
        "ecosystem",
        "edge",
        "edginess",
        "edging",
        "edgy",
        "edition",
        "editor",
        "educated",
        "education",
        "educator",
        "eel",
        "effective",
        "effects",
        "efficient",
        "effort",
        "eggbeater",
        "egging",
        "eggnog",
        "eggplant",
        "eggshell",
        "egomaniac",
        "egotism",
        "egotistic",
        "either",
        "eject",
        "elaborate",
        "elastic",
        "elated",
        "elbow",
        "eldercare",
        "elderly",
        "eldest",
        "electable",
        "election",
        "elective",
        "elephant",
        "elevate",
        "elevating",
        "elevation",
        "elevator",
        "eleven",
        "elf",
        "eligible",
        "eligibly",
        "eliminate",
        "elite",
        "elitism",
        "elixir",
        "elk",
        "ellipse",
        "elliptic",
        "elm",
        "elongated",
        "elope",
        "eloquence",
        "eloquent",
        "elsewhere",
        "elude",
        "elusive",
        "elves",
        "email",
        "embargo",
        "embark",
        "embassy",
        "embattled",
        "embellish",
        "ember",
        "embezzle",
        "emblaze",
        "emblem",
        "embody",
        "embolism",
        "emboss",
        "embroider",
        "emcee",
        "emerald",
        "emergency",
        "emission",
        "emit",
        "emote",
        "emoticon",
        "emotion",
        "empathic",
        "empathy",
        "emperor",
        "emphases",
        "emphasis",
        "emphasize",
        "emphatic",
        "empirical",
        "employed",
        "employee",
        "employer",
        "emporium",
        "empower",
        "emptier",
        "emptiness",
        "empty",
        "emu",
        "enable",
        "enactment",
        "enamel",
        "enchanted",
        "enchilada",
        "encircle",
        "enclose",
        "enclosure",
        "encode",
        "encore",
        "encounter",
        "encourage",
        "encroach",
        "encrust",
        "encrypt",
        "endanger",
        "endeared",
        "endearing",
        "ended",
        "ending",
        "endless",
        "endnote",
        "endocrine",
        "endorphin",
        "endorse",
        "endowment",
        "endpoint",
        "endurable",
        "endurance",
        "enduring",
        "energetic",
        "energize",
        "energy",
        "enforced",
        "enforcer",
        "engaged",
        "engaging",
        "engine",
        "engorge",
        "engraved",
        "engraver",
        "engraving",
        "engross",
        "engulf",
        "enhance",
        "enigmatic",
        "enjoyable",
        "enjoyably",
        "enjoyer",
        "enjoying",
        "enjoyment",
        "enlarged",
        "enlarging",
        "enlighten",
        "enlisted",
        "enquirer",
        "enrage",
        "enrich",
        "enroll",
        "enslave",
        "ensnare",
        "ensure",
        "entail",
        "entangled",
        "entering",
        "entertain",
        "enticing",
        "entire",
        "entitle",
        "entity",
        "entomb",
        "entourage",
        "entrap",
        "entree",
        "entrench",
        "entrust",
        "entryway",
        "entwine",
        "enunciate",
        "envelope",
        "enviable",
        "enviably",
        "envious",
        "envision",
        "envoy",
        "envy",
        "enzyme",
        "epic",
        "epidemic",
        "epidermal",
        "epidermis",
        "epidural",
        "epilepsy",
        "epileptic",
        "epilogue",
        "epiphany",
        "episode",
        "equal",
        "equate",
        "equation",
        "equator",
        "equinox",
        "equipment",
        "equity",
        "equivocal",
        "eradicate",
        "erasable",
        "erased",
        "eraser",
        "erasure",
        "ergonomic",
        "errand",
        "errant",
        "erratic",
        "error",
        "erupt",
        "escalate",
        "escalator",
        "escapable",
        "escapade",
        "escapist",
        "escargot",
        "eskimo",
        "esophagus",
        "espionage",
        "espresso",
        "esquire",
        "essay",
        "essence",
        "essential",
        "establish",
        "estate",
        "esteemed",
        "estimate",
        "estimator",
        "estranged",
        "estrogen",
        "etching",
        "eternal",
        "eternity",
        "ethanol",
        "ether",
        "ethically",
        "ethics",
        "euphemism",
        "evacuate",
        "evacuee",
        "evade",
        "evaluate",
        "evaluator",
        "evaporate",
        "evasion",
        "evasive",
        "even",
        "everglade",
        "evergreen",
        "everybody",
        "everyday",
        "everyone",
        "evict",
        "evidence",
        "evident",
        "evil",
        "evoke",
        "evolution",
        "evolve",
        "exact",
        "exalted",
        "example",
        "excavate",
        "excavator",
        "exceeding",
        "exception",
        "excess",
        "exchange",
        "excitable",
        "exciting",
        "exclaim",
        "exclude",
        "excluding",
        "exclusion",
        "exclusive",
        "excretion",
        "excretory",
        "excursion",
        "excusable",
        "excusably",
        "excuse",
        "exemplary",
        "exemplify",
        "exemption",
        "exerciser",
        "exert",
        "exes",
        "exfoliate",
        "exhale",
        "exhaust",
        "exhume",
        "exile",
        "existing",
        "exit",
        "exodus",
        "exonerate",
        "exorcism",
        "exorcist",
        "expand",
        "expanse",
        "expansion",
        "expansive",
        "expectant",
        "expedited",
        "expediter",
        "expel",
        "expend",
        "expenses",
        "expensive",
        "expert",
        "expire",
        "expiring",
        "explain",
        "expletive",
        "explicit",
        "explode",
        "exploit",
        "explore",
        "exploring",
        "exponent",
        "exporter",
        "exposable",
        "expose",
        "exposure",
        "express",
        "expulsion",
        "exquisite",
        "extended",
        "extending",
        "extent",
        "extenuate",
        "exterior",
        "external",
        "extinct",
        "extortion",
        "extradite",
        "extras",
        "extrovert",
        "extrude",
        "extruding",
        "exuberant",
        "fable",
        "fabric",
        "fabulous",
        "facebook",
        "facecloth",
        "facedown",
        "faceless",
        "facelift",
        "faceplate",
        "faceted",
        "facial",
        "facility",
        "facing",
        "facsimile",
        "faction",
        "factoid",
        "factor",
        "factsheet",
        "factual",
        "faculty",
        "fade",
        "fading",
        "failing",
        "falcon",
        "fall",
        "false",
        "falsify",
        "fame",
        "familiar",
        "family",
        "famine",
        "famished",
        "fanatic",
        "fancied",
        "fanciness",
        "fancy",
        "fanfare",
        "fang",
        "fanning",
        "fantasize",
        "fantastic",
        "fantasy",
        "fascism",
        "fastball",
        "faster",
        "fasting",
        "fastness",
        "faucet",
        "favorable",
        "favorably",
        "favored",
        "favoring",
        "favorite",
        "fax",
        "feast",
        "federal",
        "fedora",
        "feeble",
        "feed",
        "feel",
        "feisty",
        "feline",
        "felt-tip",
        "feminine",
        "feminism",
        "feminist",
        "feminize",
        "femur",
        "fence",
        "fencing",
        "fender",
        "ferment",
        "fernlike",
        "ferocious",
        "ferocity",
        "ferret",
        "ferris",
        "ferry",
        "fervor",
        "fester",
        "festival",
        "festive",
        "festivity",
        "fetal",
        "fetch",
        "fever",
        "fiber",
        "fiction",
        "fiddle",
        "fiddling",
        "fidelity",
        "fidgeting",
        "fidgety",
        "fifteen",
        "fifth",
        "fiftieth",
        "fifty",
        "figment",
        "figure",
        "figurine",
        "filing",
        "filled",
        "filler",
        "filling",
        "film",
        "filter",
        "filth",
        "filtrate",
        "finale",
        "finalist",
        "finalize",
        "finally",
        "finance",
        "financial",
        "finch",
        "fineness",
        "finer",
        "finicky",
        "finished",
        "finisher",
        "finishing",
        "finite",
        "finless",
        "finlike",
        "fiscally",
        "fit",
        "five",
        "flaccid",
        "flagman",
        "flagpole",
        "flagship",
        "flagstick",
        "flagstone",
        "flail",
        "flakily",
        "flaky",
        "flame",
        "flammable",
        "flanked",
        "flanking",
        "flannels",
        "flap",
        "flaring",
        "flashback",
        "flashbulb",
        "flashcard",
        "flashily",
        "flashing",
        "flashy",
        "flask",
        "flatbed",
        "flatfoot",
        "flatly",
        "flatness",
        "flatten",
        "flattered",
        "flatterer",
        "flattery",
        "flattop",
        "flatware",
        "flatworm",
        "flavored",
        "flavorful",
        "flavoring",
        "flaxseed",
        "fled",
        "fleshed",
        "fleshy",
        "flick",
        "flier",
        "flight",
        "flinch",
        "fling",
        "flint",
        "flip",
        "flirt",
        "float",
        "flock",
        "flogging",
        "flop",
        "floral",
        "florist",
        "floss",
        "flounder",
        "flyable",
        "flyaway",
        "flyer",
        "flying",
        "flyover",
        "flypaper",
        "foam",
        "foe",
        "fog",
        "foil",
        "folic",
        "folk",
        "follicle",
        "follow",
        "fondling",
        "fondly",
        "fondness",
        "fondue",
        "font",
        "food",
        "fool",
        "footage",
        "football",
        "footbath",
        "footboard",
        "footer",
        "footgear",
        "foothill",
        "foothold",
        "footing",
        "footless",
        "footman",
        "footnote",
        "footpad",
        "footpath",
        "footprint",
        "footrest",
        "footsie",
        "footsore",
        "footwear",
        "footwork",
        "fossil",
        "foster",
        "founder",
        "founding",
        "fountain",
        "fox",
        "foyer",
        "fraction",
        "fracture",
        "fragile",
        "fragility",
        "fragment",
        "fragrance",
        "fragrant",
        "frail",
        "frame",
        "framing",
        "frantic",
        "fraternal",
        "frayed",
        "fraying",
        "frays",
        "freckled",
        "freckles",
        "freebase",
        "freebee",
        "freebie",
        "freedom",
        "freefall",
        "freehand",
        "freeing",
        "freeload",
        "freely",
        "freemason",
        "freeness",
        "freestyle",
        "freeware",
        "freeway",
        "freewill",
        "freezable",
        "freezing",
        "freight",
        "french",
        "frenzied",
        "frenzy",
        "frequency",
        "frequent",
        "fresh",
        "fretful",
        "fretted",
        "friction",
        "friday",
        "fridge",
        "fried",
        "friend",
        "frighten",
        "frightful",
        "frigidity",
        "frigidly",
        "frill",
        "fringe",
        "frisbee",
        "frisk",
        "fritter",
        "frivolous",
        "frolic",
        "from",
        "front",
        "frostbite",
        "frosted",
        "frostily",
        "frosting",
        "frostlike",
        "frosty",
        "froth",
        "frown",
        "frozen",
        "fructose",
        "frugality",
        "frugally",
        "fruit",
        "frustrate",
        "frying",
        "gab",
        "gaffe",
        "gag",
        "gainfully",
        "gaining",
        "gains",
        "gala",
        "gallantly",
        "galleria",
        "gallery",
        "galley",
        "gallon",
        "gallows",
        "gallstone",
        "galore",
        "galvanize",
        "gambling",
        "game",
        "gaming",
        "gamma",
        "gander",
        "gangly",
        "gangrene",
        "gangway",
        "gap",
        "garage",
        "garbage",
        "garden",
        "gargle",
        "garland",
        "garlic",
        "garment",
        "garnet",
        "garnish",
        "garter",
        "gas",
        "gatherer",
        "gathering",
        "gating",
        "gauging",
        "gauntlet",
        "gauze",
        "gave",
        "gawk",
        "gazing",
        "gear",
        "gecko",
        "geek",
        "geiger",
        "gem",
        "gender",
        "generic",
        "generous",
        "genetics",
        "genre",
        "gentile",
        "gentleman",
        "gently",
        "gents",
        "geography",
        "geologic",
        "geologist",
        "geology",
        "geometric",
        "geometry",
        "geranium",
        "gerbil",
        "geriatric",
        "germicide",
        "germinate",
        "germless",
        "germproof",
        "gestate",
        "gestation",
        "gesture",
        "getaway",
        "getting",
        "getup",
        "giant",
        "gibberish",
        "giblet",
        "giddily",
        "giddiness",
        "giddy",
        "gift",
        "gigabyte",
        "gigahertz",
        "gigantic",
        "giggle",
        "giggling",
        "giggly",
        "gigolo",
        "gilled",
        "gills",
        "gimmick",
        "girdle",
        "giveaway",
        "given",
        "giver",
        "giving",
        "gizmo",
        "gizzard",
        "glacial",
        "glacier",
        "glade",
        "gladiator",
        "gladly",
        "glamorous",
        "glamour",
        "glance",
        "glancing",
        "glandular",
        "glare",
        "glaring",
        "glass",
        "glaucoma",
        "glazing",
        "gleaming",
        "gleeful",
        "glider",
        "gliding",
        "glimmer",
        "glimpse",
        "glisten",
        "glitch",
        "glitter",
        "glitzy",
        "gloater",
        "gloating",
        "gloomily",
        "gloomy",
        "glorified",
        "glorifier",
        "glorify",
        "glorious",
        "glory",
        "gloss",
        "glove",
        "glowing",
        "glowworm",
        "glucose",
        "glue",
        "gluten",
        "glutinous",
        "glutton",
        "gnarly",
        "gnat",
        "goal",
        "goatskin",
        "goes",
        "goggles",
        "going",
        "goldfish",
        "goldmine",
        "goldsmith",
        "golf",
        "goliath",
        "gonad",
        "gondola",
        "gone",
        "gong",
        "good",
        "gooey",
        "goofball",
        "goofiness",
        "goofy",
        "google",
        "goon",
        "gopher",
        "gore",
        "gorged",
        "gorgeous",
        "gory",
        "gosling",
        "gossip",
        "gothic",
        "gotten",
        "gout",
        "gown",
        "grab",
        "graceful",
        "graceless",
        "gracious",
        "gradation",
        "graded",
        "grader",
        "gradient",
        "grading",
        "gradually",
        "graduate",
        "graffiti",
        "grafted",
        "grafting",
        "grain",
        "granddad",
        "grandkid",
        "grandly",
        "grandma",
        "grandpa",
        "grandson",
        "granite",
        "granny",
        "granola",
        "grant",
        "granular",
        "grape",
        "graph",
        "grapple",
        "grappling",
        "grasp",
        "grass",
        "gratified",
        "gratify",
        "grating",
        "gratitude",
        "gratuity",
        "gravel",
        "graveness",
        "graves",
        "graveyard",
        "gravitate",
        "gravity",
        "gravy",
        "gray",
        "grazing",
        "greasily",
        "greedily",
        "greedless",
        "greedy",
        "green",
        "greeter",
        "greeting",
        "grew",
        "greyhound",
        "grid",
        "grief",
        "grievance",
        "grieving",
        "grievous",
        "grill",
        "grimace",
        "grimacing",
        "grime",
        "griminess",
        "grimy",
        "grinch",
        "grinning",
        "grip",
        "gristle",
        "grit",
        "groggily",
        "groggy",
        "groin",
        "groom",
        "groove",
        "grooving",
        "groovy",
        "grope",
        "ground",
        "grouped",
        "grout",
        "grove",
        "grower",
        "growing",
        "growl",
        "grub",
        "grudge",
        "grudging",
        "grueling",
        "gruffly",
        "grumble",
        "grumbling",
        "grumbly",
        "grumpily",
        "grunge",
        "grunt",
        "guacamole",
        "guidable",
        "guidance",
        "guide",
        "guiding",
        "guileless",
        "guise",
        "gulf",
        "gullible",
        "gully",
        "gulp",
        "gumball",
        "gumdrop",
        "gumminess",
        "gumming",
        "gummy",
        "gurgle",
        "gurgling",
        "guru",
        "gush",
        "gusto",
        "gusty",
        "gutless",
        "guts",
        "gutter",
        "guy",
        "guzzler",
        "gyration",
        "habitable",
        "habitant",
        "habitat",
        "habitual",
        "hacked",
        "hacker",
        "hacking",
        "hacksaw",
        "had",
        "haggler",
        "haiku",
        "half",
        "halogen",
        "halt",
        "halved",
        "halves",
        "hamburger",
        "hamlet",
        "hammock",
        "hamper",
        "hamster",
        "hamstring",
        "handbag",
        "handball",
        "handbook",
        "handbrake",
        "handcart",
        "handclap",
        "handclasp",
        "handcraft",
        "handcuff",
        "handed",
        "handful",
        "handgrip",
        "handgun",
        "handheld",
        "handiness",
        "handiwork",
        "handlebar",
        "handled",
        "handler",
        "handling",
        "handmade",
        "handoff",
        "handpick",
        "handprint",
        "handrail",
        "handsaw",
        "handset",
        "handsfree",
        "handshake",
        "handstand",
        "handwash",
        "handwork",
        "handwoven",
        "handwrite",
        "handyman",
        "hangnail",
        "hangout",
        "hangover",
        "hangup",
        "hankering",
        "hankie",
        "hanky",
        "haphazard",
        "happening",
        "happier",
        "happiest",
        "happily",
        "happiness",
        "happy",
        "harbor",
        "hardcopy",
        "hardcore",
        "hardcover",
        "harddisk",
        "hardened",
        "hardener",
        "hardening",
        "hardhat",
        "hardhead",
        "hardiness",
        "hardly",
        "hardness",
        "hardship",
        "hardware",
        "hardwired",
        "hardwood",
        "hardy",
        "harmful",
        "harmless",
        "harmonica",
        "harmonics",
        "harmonize",
        "harmony",
        "harness",
        "harpist",
        "harsh",
        "harvest",
        "hash",
        "hassle",
        "haste",
        "hastily",
        "hastiness",
        "hasty",
        "hatbox",
        "hatchback",
        "hatchery",
        "hatchet",
        "hatching",
        "hatchling",
        "hate",
        "hatless",
        "hatred",
        "haunt",
        "haven",
        "hazard",
        "hazelnut",
        "hazily",
        "haziness",
        "hazing",
        "hazy",
        "headache",
        "headband",
        "headboard",
        "headcount",
        "headdress",
        "headed",
        "header",
        "headfirst",
        "headgear",
        "heading",
        "headlamp",
        "headless",
        "headlock",
        "headphone",
        "headpiece",
        "headrest",
        "headroom",
        "headscarf",
        "headset",
        "headsman",
        "headstand",
        "headstone",
        "headway",
        "headwear",
        "heap",
        "heat",
        "heave",
        "heavily",
        "heaviness",
        "heaving",
        "hedge",
        "hedging",
        "heftiness",
        "hefty",
        "helium",
        "helmet",
        "helper",
        "helpful",
        "helping",
        "helpless",
        "helpline",
        "hemlock",
        "hemstitch",
        "hence",
        "henchman",
        "henna",
        "herald",
        "herbal",
        "herbicide",
        "herbs",
        "heritage",
        "hermit",
        "heroics",
        "heroism",
        "herring",
        "herself",
        "hertz",
        "hesitancy",
        "hesitant",
        "hesitate",
        "hexagon",
        "hexagram",
        "hubcap",
        "huddle",
        "huddling",
        "huff",
        "hug",
        "hula",
        "hulk",
        "hull",
        "human",
        "humble",
        "humbling",
        "humbly",
        "humid",
        "humiliate",
        "humility",
        "humming",
        "hummus",
        "humongous",
        "humorist",
        "humorless",
        "humorous",
        "humpback",
        "humped",
        "humvee",
        "hunchback",
        "hundredth",
        "hunger",
        "hungrily",
        "hungry",
        "hunk",
        "hunter",
        "hunting",
        "huntress",
        "huntsman",
        "hurdle",
        "hurled",
        "hurler",
        "hurling",
        "hurray",
        "hurricane",
        "hurried",
        "hurry",
        "hurt",
        "husband",
        "hush",
        "husked",
        "huskiness",
        "hut",
        "hybrid",
        "hydrant",
        "hydrated",
        "hydration",
        "hydrogen",
        "hydroxide",
        "hyperlink",
        "hypertext",
        "hyphen",
        "hypnoses",
        "hypnosis",
        "hypnotic",
        "hypnotism",
        "hypnotist",
        "hypnotize",
        "hypocrisy",
        "hypocrite",
        "ibuprofen",
        "ice",
        "iciness",
        "icing",
        "icky",
        "icon",
        "icy",
        "idealism",
        "idealist",
        "idealize",
        "ideally",
        "idealness",
        "identical",
        "identify",
        "identity",
        "ideology",
        "idiocy",
        "idiom",
        "idly",
        "igloo",
        "ignition",
        "ignore",
        "iguana",
        "illicitly",
        "illusion",
        "illusive",
        "image",
        "imaginary",
        "imagines",
        "imaging",
        "imbecile",
        "imitate",
        "imitation",
        "immature",
        "immerse",
        "immersion",
        "imminent",
        "immobile",
        "immodest",
        "immorally",
        "immortal",
        "immovable",
        "immovably",
        "immunity",
        "immunize",
        "impaired",
        "impale",
        "impart",
        "impatient",
        "impeach",
        "impeding",
        "impending",
        "imperfect",
        "imperial",
        "impish",
        "implant",
        "implement",
        "implicate",
        "implicit",
        "implode",
        "implosion",
        "implosive",
        "imply",
        "impolite",
        "important",
        "importer",
        "impose",
        "imposing",
        "impotence",
        "impotency",
        "impotent",
        "impound",
        "imprecise",
        "imprint",
        "imprison",
        "impromptu",
        "improper",
        "improve",
        "improving",
        "improvise",
        "imprudent",
        "impulse",
        "impulsive",
        "impure",
        "impurity",
        "iodine",
        "iodize",
        "ion",
        "ipad",
        "iphone",
        "ipod",
        "irate",
        "irk",
        "iron",
        "irregular",
        "irrigate",
        "irritable",
        "irritably",
        "irritant",
        "irritate",
        "islamic",
        "islamist",
        "isolated",
        "isolating",
        "isolation",
        "isotope",
        "issue",
        "issuing",
        "italicize",
        "italics",
        "item",
        "itinerary",
        "itunes",
        "ivory",
        "ivy",
        "jab",
        "jackal",
        "jacket",
        "jackknife",
        "jackpot",
        "jailbird",
        "jailbreak",
        "jailer",
        "jailhouse",
        "jalapeno",
        "jam",
        "janitor",
        "january",
        "jargon",
        "jarring",
        "jasmine",
        "jaundice",
        "jaunt",
        "java",
        "jawed",
        "jawless",
        "jawline",
        "jaws",
        "jaybird",
        "jaywalker",
        "jazz",
        "jeep",
        "jeeringly",
        "jellied",
        "jelly",
        "jersey",
        "jester",
        "jet",
        "jiffy",
        "jigsaw",
        "jimmy",
        "jingle",
        "jingling",
        "jinx",
        "jitters",
        "jittery",
        "job",
        "jockey",
        "jockstrap",
        "jogger",
        "jogging",
        "john",
        "joining",
        "jokester",
        "jokingly",
        "jolliness",
        "jolly",
        "jolt",
        "jot",
        "jovial",
        "joyfully",
        "joylessly",
        "joyous",
        "joyride",
        "joystick",
        "jubilance",
        "jubilant",
        "judge",
        "judgingly",
        "judicial",
        "judiciary",
        "judo",
        "juggle",
        "juggling",
        "jugular",
        "juice",
        "juiciness",
        "juicy",
        "jujitsu",
        "jukebox",
        "july",
        "jumble",
        "jumbo",
        "jump",
        "junction",
        "juncture",
        "june",
        "junior",
        "juniper",
        "junkie",
        "junkman",
        "junkyard",
        "jurist",
        "juror",
        "jury",
        "justice",
        "justifier",
        "justify",
        "justly",
        "justness",
        "juvenile",
        "kabob",
        "kangaroo",
        "karaoke",
        "karate",
        "karma",
        "kebab",
        "keenly",
        "keenness",
        "keep",
        "keg",
        "kelp",
        "kennel",
        "kept",
        "kerchief",
        "kerosene",
        "kettle",
        "kick",
        "kiln",
        "kilobyte",
        "kilogram",
        "kilometer",
        "kilowatt",
        "kilt",
        "kimono",
        "kindle",
        "kindling",
        "kindly",
        "kindness",
        "kindred",
        "kinetic",
        "kinfolk",
        "king",
        "kinship",
        "kinsman",
        "kinswoman",
        "kissable",
        "kisser",
        "kissing",
        "kitchen",
        "kite",
        "kitten",
        "kitty",
        "kiwi",
        "kleenex",
        "knapsack",
        "knee",
        "knelt",
        "knickers",
        "knoll",
        "koala",
        "kooky",
        "kosher",
        "krypton",
        "kudos",
        "kung",
        "labored",
        "laborer",
        "laboring",
        "laborious",
        "labrador",
        "ladder",
        "ladies",
        "ladle",
        "ladybug",
        "ladylike",
        "lagged",
        "lagging",
        "lagoon",
        "lair",
        "lake",
        "lance",
        "landed",
        "landfall",
        "landfill",
        "landing",
        "landlady",
        "landless",
        "landline",
        "landlord",
        "landmark",
        "landmass",
        "landmine",
        "landowner",
        "landscape",
        "landside",
        "landslide",
        "language",
        "lankiness",
        "lanky",
        "lantern",
        "lapdog",
        "lapel",
        "lapped",
        "lapping",
        "laptop",
        "lard",
        "large",
        "lark",
        "lash",
        "lasso",
        "last",
        "latch",
        "late",
        "lather",
        "latitude",
        "latrine",
        "latter",
        "latticed",
        "launch",
        "launder",
        "laundry",
        "laurel",
        "lavender",
        "lavish",
        "laxative",
        "lazily",
        "laziness",
        "lazy",
        "lecturer",
        "left",
        "legacy",
        "legal",
        "legend",
        "legged",
        "leggings",
        "legible",
        "legibly",
        "legislate",
        "lego",
        "legroom",
        "legume",
        "legwarmer",
        "legwork",
        "lemon",
        "lend",
        "length",
        "lens",
        "lent",
        "leotard",
        "lesser",
        "letdown",
        "lethargic",
        "lethargy",
        "letter",
        "lettuce",
        "level",
        "leverage",
        "levers",
        "levitate",
        "levitator",
        "liability",
        "liable",
        "liberty",
        "librarian",
        "library",
        "licking",
        "licorice",
        "lid",
        "life",
        "lifter",
        "lifting",
        "liftoff",
        "ligament",
        "likely",
        "likeness",
        "likewise",
        "liking",
        "lilac",
        "lilly",
        "lily",
        "limb",
        "limeade",
        "limelight",
        "limes",
        "limit",
        "limping",
        "limpness",
        "line",
        "lingo",
        "linguini",
        "linguist",
        "lining",
        "linked",
        "linoleum",
        "linseed",
        "lint",
        "lion",
        "lip",
        "liquefy",
        "liqueur",
        "liquid",
        "lisp",
        "list",
        "litigate",
        "litigator",
        "litmus",
        "litter",
        "little",
        "livable",
        "lived",
        "lively",
        "liver",
        "livestock",
        "lividly",
        "living",
        "lizard",
        "lubricant",
        "lubricate",
        "lucid",
        "luckily",
        "luckiness",
        "luckless",
        "lucrative",
        "ludicrous",
        "lugged",
        "lukewarm",
        "lullaby",
        "lumber",
        "luminance",
        "luminous",
        "lumpiness",
        "lumping",
        "lumpish",
        "lunacy",
        "lunar",
        "lunchbox",
        "luncheon",
        "lunchroom",
        "lunchtime",
        "lung",
        "lurch",
        "lure",
        "luridness",
        "lurk",
        "lushly",
        "lushness",
        "luster",
        "lustfully",
        "lustily",
        "lustiness",
        "lustrous",
        "lusty",
        "luxurious",
        "luxury",
        "lying",
        "lyrically",
        "lyricism",
        "lyricist",
        "lyrics",
        "macarena",
        "macaroni",
        "macaw",
        "mace",
        "machine",
        "machinist",
        "magazine",
        "magenta",
        "maggot",
        "magical",
        "magician",
        "magma",
        "magnesium",
        "magnetic",
        "magnetism",
        "magnetize",
        "magnifier",
        "magnify",
        "magnitude",
        "magnolia",
        "mahogany",
        "maimed",
        "majestic",
        "majesty",
        "majorette",
        "majority",
        "makeover",
        "maker",
        "makeshift",
        "making",
        "malformed",
        "malt",
        "mama",
        "mammal",
        "mammary",
        "mammogram",
        "manager",
        "managing",
        "manatee",
        "mandarin",
        "mandate",
        "mandatory",
        "mandolin",
        "manger",
        "mangle",
        "mango",
        "mangy",
        "manhandle",
        "manhole",
        "manhood",
        "manhunt",
        "manicotti",
        "manicure",
        "manifesto",
        "manila",
        "mankind",
        "manlike",
        "manliness",
        "manly",
        "manmade",
        "manned",
        "mannish",
        "manor",
        "manpower",
        "mantis",
        "mantra",
        "manual",
        "many",
        "map",
        "marathon",
        "marauding",
        "marbled",
        "marbles",
        "marbling",
        "march",
        "mardi",
        "margarine",
        "margarita",
        "margin",
        "marigold",
        "marina",
        "marine",
        "marital",
        "maritime",
        "marlin",
        "marmalade",
        "maroon",
        "married",
        "marrow",
        "marry",
        "marshland",
        "marshy",
        "marsupial",
        "marvelous",
        "marxism",
        "mascot",
        "masculine",
        "mashed",
        "mashing",
        "massager",
        "masses",
        "massive",
        "mastiff",
        "matador",
        "matchbook",
        "matchbox",
        "matcher",
        "matching",
        "matchless",
        "material",
        "maternal",
        "maternity",
        "math",
        "mating",
        "matriarch",
        "matrimony",
        "matrix",
        "matron",
        "matted",
        "matter",
        "maturely",
        "maturing",
        "maturity",
        "mauve",
        "maverick",
        "maximize",
        "maximum",
        "maybe",
        "mayday",
        "mayflower",
        "moaner",
        "moaning",
        "mobile",
        "mobility",
        "mobilize",
        "mobster",
        "mocha",
        "mocker",
        "mockup",
        "modified",
        "modify",
        "modular",
        "modulator",
        "module",
        "moisten",
        "moistness",
        "moisture",
        "molar",
        "molasses",
        "mold",
        "molecular",
        "molecule",
        "molehill",
        "mollusk",
        "mom",
        "monastery",
        "monday",
        "monetary",
        "monetize",
        "moneybags",
        "moneyless",
        "moneywise",
        "mongoose",
        "mongrel",
        "monitor",
        "monkhood",
        "monogamy",
        "monogram",
        "monologue",
        "monopoly",
        "monorail",
        "monotone",
        "monotype",
        "monoxide",
        "monsieur",
        "monsoon",
        "monstrous",
        "monthly",
        "monument",
        "moocher",
        "moodiness",
        "moody",
        "mooing",
        "moonbeam",
        "mooned",
        "moonlight",
        "moonlike",
        "moonlit",
        "moonrise",
        "moonscape",
        "moonshine",
        "moonstone",
        "moonwalk",
        "mop",
        "morale",
        "morality",
        "morally",
        "morbidity",
        "morbidly",
        "morphine",
        "morphing",
        "morse",
        "mortality",
        "mortally",
        "mortician",
        "mortified",
        "mortify",
        "mortuary",
        "mosaic",
        "mossy",
        "most",
        "mothball",
        "mothproof",
        "motion",
        "motivate",
        "motivator",
        "motive",
        "motocross",
        "motor",
        "motto",
        "mountable",
        "mountain",
        "mounted",
        "mounting",
        "mourner",
        "mournful",
        "mouse",
        "mousiness",
        "moustache",
        "mousy",
        "mouth",
        "movable",
        "move",
        "movie",
        "moving",
        "mower",
        "mowing",
        "much",
        "muck",
        "mud",
        "mug",
        "mulberry",
        "mulch",
        "mule",
        "mulled",
        "mullets",
        "multiple",
        "multiply",
        "multitask",
        "multitude",
        "mumble",
        "mumbling",
        "mumbo",
        "mummified",
        "mummify",
        "mummy",
        "mumps",
        "munchkin",
        "mundane",
        "municipal",
        "muppet",
        "mural",
        "murkiness",
        "murky",
        "murmuring",
        "muscular",
        "museum",
        "mushily",
        "mushiness",
        "mushroom",
        "mushy",
        "music",
        "musket",
        "muskiness",
        "musky",
        "mustang",
        "mustard",
        "muster",
        "mustiness",
        "musty",
        "mutable",
        "mutate",
        "mutation",
        "mute",
        "mutilated",
        "mutilator",
        "mutiny",
        "mutt",
        "mutual",
        "muzzle",
        "myself",
        "myspace",
        "mystified",
        "mystify",
        "myth",
        "nacho",
        "nag",
        "nail",
        "name",
        "naming",
        "nanny",
        "nanometer",
        "nape",
        "napkin",
        "napped",
        "napping",
        "nappy",
        "narrow",
        "nastily",
        "nastiness",
        "national",
        "native",
        "nativity",
        "natural",
        "nature",
        "naturist",
        "nautical",
        "navigate",
        "navigator",
        "navy",
        "nearby",
        "nearest",
        "nearly",
        "nearness",
        "neatly",
        "neatness",
        "nebula",
        "nebulizer",
        "nectar",
        "negate",
        "negation",
        "negative",
        "neglector",
        "negligee",
        "negligent",
        "negotiate",
        "nemeses",
        "nemesis",
        "neon",
        "nephew",
        "nerd",
        "nervous",
        "nervy",
        "nest",
        "net",
        "neurology",
        "neuron",
        "neurosis",
        "neurotic",
        "neuter",
        "neutron",
        "never",
        "next",
        "nibble",
        "nickname",
        "nicotine",
        "niece",
        "nifty",
        "nimble",
        "nimbly",
        "nineteen",
        "ninetieth",
        "ninja",
        "nintendo",
        "ninth",
        "nuclear",
        "nuclei",
        "nucleus",
        "nugget",
        "nullify",
        "number",
        "numbing",
        "numbly",
        "numbness",
        "numeral",
        "numerate",
        "numerator",
        "numeric",
        "numerous",
        "nuptials",
        "nursery",
        "nursing",
        "nurture",
        "nutcase",
        "nutlike",
        "nutmeg",
        "nutrient",
        "nutshell",
        "nuttiness",
        "nutty",
        "nuzzle",
        "nylon",
        "oaf",
        "oak",
        "oasis",
        "oat",
        "obedience",
        "obedient",
        "obituary",
        "object",
        "obligate",
        "obliged",
        "oblivion",
        "oblivious",
        "oblong",
        "obnoxious",
        "oboe",
        "obscure",
        "obscurity",
        "observant",
        "observer",
        "observing",
        "obsessed",
        "obsession",
        "obsessive",
        "obsolete",
        "obstacle",
        "obstinate",
        "obstruct",
        "obtain",
        "obtrusive",
        "obtuse",
        "obvious",
        "occultist",
        "occupancy",
        "occupant",
        "occupier",
        "occupy",
        "ocean",
        "ocelot",
        "octagon",
        "octane",
        "october",
        "octopus",
        "ogle",
        "oil",
        "oink",
        "ointment",
        "okay",
        "old",
        "olive",
        "olympics",
        "omega",
        "omen",
        "ominous",
        "omission",
        "omit",
        "omnivore",
        "onboard",
        "oncoming",
        "ongoing",
        "onion",
        "online",
        "onlooker",
        "only",
        "onscreen",
        "onset",
        "onshore",
        "onslaught",
        "onstage",
        "onto",
        "onward",
        "onyx",
        "oops",
        "ooze",
        "oozy",
        "opacity",
        "opal",
        "open",
        "operable",
        "operate",
        "operating",
        "operation",
        "operative",
        "operator",
        "opium",
        "opossum",
        "opponent",
        "oppose",
        "opposing",
        "opposite",
        "oppressed",
        "oppressor",
        "opt",
        "opulently",
        "osmosis",
        "other",
        "otter",
        "ouch",
        "ought",
        "ounce",
        "outage",
        "outback",
        "outbid",
        "outboard",
        "outbound",
        "outbreak",
        "outburst",
        "outcast",
        "outclass",
        "outcome",
        "outdated",
        "outdoors",
        "outer",
        "outfield",
        "outfit",
        "outflank",
        "outgoing",
        "outgrow",
        "outhouse",
        "outing",
        "outlast",
        "outlet",
        "outline",
        "outlook",
        "outlying",
        "outmatch",
        "outmost",
        "outnumber",
        "outplayed",
        "outpost",
        "outpour",
        "output",
        "outrage",
        "outrank",
        "outreach",
        "outright",
        "outscore",
        "outsell",
        "outshine",
        "outshoot",
        "outsider",
        "outskirts",
        "outsmart",
        "outsource",
        "outspoken",
        "outtakes",
        "outthink",
        "outward",
        "outweigh",
        "outwit",
        "oval",
        "ovary",
        "oven",
        "overact",
        "overall",
        "overarch",
        "overbid",
        "overbill",
        "overbite",
        "overblown",
        "overboard",
        "overbook",
        "overbuilt",
        "overcast",
        "overcoat",
        "overcome",
        "overcook",
        "overcrowd",
        "overdraft",
        "overdrawn",
        "overdress",
        "overdrive",
        "overdue",
        "overeager",
        "overeater",
        "overexert",
        "overfed",
        "overfeed",
        "overfill",
        "overflow",
        "overfull",
        "overgrown",
        "overhand",
        "overhang",
        "overhaul",
        "overhead",
        "overhear",
        "overheat",
        "overhung",
        "overjoyed",
        "overkill",
        "overlabor",
        "overlaid",
        "overlap",
        "overlay",
        "overload",
        "overlook",
        "overlord",
        "overlying",
        "overnight",
        "overpass",
        "overpay",
        "overplant",
        "overplay",
        "overpower",
        "overprice",
        "overrate",
        "overreach",
        "overreact",
        "override",
        "overripe",
        "overrule",
        "overrun",
        "overshoot",
        "overshot",
        "oversight",
        "oversized",
        "oversleep",
        "oversold",
        "overspend",
        "overstate",
        "overstay",
        "overstep",
        "overstock",
        "overstuff",
        "oversweet",
        "overtake",
        "overthrow",
        "overtime",
        "overtly",
        "overtone",
        "overture",
        "overturn",
        "overuse",
        "overvalue",
        "overview",
        "overwrite",
        "owl",
        "oxford",
        "oxidant",
        "oxidation",
        "oxidize",
        "oxidizing",
        "oxygen",
        "oxymoron",
        "oyster",
        "ozone",
        "paced",
        "pacemaker",
        "pacific",
        "pacifier",
        "pacifism",
        "pacifist",
        "pacify",
        "padded",
        "padding",
        "paddle",
        "paddling",
        "padlock",
        "pagan",
        "pager",
        "paging",
        "pajamas",
        "palace",
        "palatable",
        "palm",
        "palpable",
        "palpitate",
        "paltry",
        "pampered",
        "pamperer",
        "pampers",
        "pamphlet",
        "panama",
        "pancake",
        "pancreas",
        "panda",
        "pandemic",
        "pang",
        "panhandle",
        "panic",
        "panning",
        "panorama",
        "panoramic",
        "panther",
        "pantomime",
        "pantry",
        "pants",
        "pantyhose",
        "paparazzi",
        "papaya",
        "paper",
        "paprika",
        "papyrus",
        "parabola",
        "parachute",
        "parade",
        "paradox",
        "paragraph",
        "parakeet",
        "paralegal",
        "paralyses",
        "paralysis",
        "paralyze",
        "paramedic",
        "parameter",
        "paramount",
        "parasail",
        "parasite",
        "parasitic",
        "parcel",
        "parched",
        "parchment",
        "pardon",
        "parish",
        "parka",
        "parking",
        "parkway",
        "parlor",
        "parmesan",
        "parole",
        "parrot",
        "parsley",
        "parsnip",
        "partake",
        "parted",
        "parting",
        "partition",
        "partly",
        "partner",
        "partridge",
        "party",
        "passable",
        "passably",
        "passage",
        "passcode",
        "passenger",
        "passerby",
        "passing",
        "passion",
        "passive",
        "passivism",
        "passover",
        "passport",
        "password",
        "pasta",
        "pasted",
        "pastel",
        "pastime",
        "pastor",
        "pastrami",
        "pasture",
        "pasty",
        "patchwork",
        "patchy",
        "paternal",
        "paternity",
        "path",
        "patience",
        "patient",
        "patio",
        "patriarch",
        "patriot",
        "patrol",
        "patronage",
        "patronize",
        "pauper",
        "pavement",
        "paver",
        "pavestone",
        "pavilion",
        "paving",
        "pawing",
        "payable",
        "payback",
        "paycheck",
        "payday",
        "payee",
        "payer",
        "paying",
        "payment",
        "payphone",
        "payroll",
        "pebble",
        "pebbly",
        "pecan",
        "pectin",
        "peculiar",
        "peddling",
        "pediatric",
        "pedicure",
        "pedigree",
        "pedometer",
        "pegboard",
        "pelican",
        "pellet",
        "pelt",
        "pelvis",
        "penalize",
        "penalty",
        "pencil",
        "pendant",
        "pending",
        "penholder",
        "penknife",
        "pennant",
        "penniless",
        "penny",
        "penpal",
        "pension",
        "pentagon",
        "pentagram",
        "pep",
        "perceive",
        "percent",
        "perch",
        "percolate",
        "perennial",
        "perfected",
        "perfectly",
        "perfume",
        "periscope",
        "perish",
        "perjurer",
        "perjury",
        "perkiness",
        "perky",
        "perm",
        "peroxide",
        "perpetual",
        "perplexed",
        "persecute",
        "persevere",
        "persuaded",
        "persuader",
        "pesky",
        "peso",
        "pessimism",
        "pessimist",
        "pester",
        "pesticide",
        "petal",
        "petite",
        "petition",
        "petri",
        "petroleum",
        "petted",
        "petticoat",
        "pettiness",
        "petty",
        "petunia",
        "phantom",
        "phobia",
        "phoenix",
        "phonebook",
        "phoney",
        "phonics",
        "phoniness",
        "phony",
        "phosphate",
        "photo",
        "phrase",
        "phrasing",
        "placard",
        "placate",
        "placidly",
        "plank",
        "planner",
        "plant",
        "plasma",
        "plaster",
        "plastic",
        "plated",
        "platform",
        "plating",
        "platinum",
        "platonic",
        "platter",
        "platypus",
        "plausible",
        "plausibly",
        "playable",
        "playback",
        "player",
        "playful",
        "playgroup",
        "playhouse",
        "playing",
        "playlist",
        "playmaker",
        "playmate",
        "playoff",
        "playpen",
        "playroom",
        "playset",
        "plaything",
        "playtime",
        "plaza",
        "pleading",
        "pleat",
        "pledge",
        "plentiful",
        "plenty",
        "plethora",
        "plexiglas",
        "pliable",
        "plod",
        "plop",
        "plot",
        "plow",
        "ploy",
        "pluck",
        "plug",
        "plunder",
        "plunging",
        "plural",
        "plus",
        "plutonium",
        "plywood",
        "poach",
        "pod",
        "poem",
        "poet",
        "pogo",
        "pointed",
        "pointer",
        "pointing",
        "pointless",
        "pointy",
        "poise",
        "poison",
        "poker",
        "poking",
        "polar",
        "police",
        "policy",
        "polio",
        "polish",
        "politely",
        "polka",
        "polo",
        "polyester",
        "polygon",
        "polygraph",
        "polymer",
        "poncho",
        "pond",
        "pony",
        "popcorn",
        "pope",
        "poplar",
        "popper",
        "poppy",
        "popsicle",
        "populace",
        "popular",
        "populate",
        "porcupine",
        "pork",
        "porous",
        "porridge",
        "portable",
        "portal",
        "portfolio",
        "porthole",
        "portion",
        "portly",
        "portside",
        "poser",
        "posh",
        "posing",
        "possible",
        "possibly",
        "possum",
        "postage",
        "postal",
        "postbox",
        "postcard",
        "posted",
        "poster",
        "posting",
        "postnasal",
        "posture",
        "postwar",
        "pouch",
        "pounce",
        "pouncing",
        "pound",
        "pouring",
        "pout",
        "powdered",
        "powdering",
        "powdery",
        "power",
        "powwow",
        "pox",
        "praising",
        "prance",
        "prancing",
        "pranker",
        "prankish",
        "prankster",
        "prayer",
        "praying",
        "preacher",
        "preaching",
        "preachy",
        "preamble",
        "precinct",
        "precise",
        "precision",
        "precook",
        "precut",
        "predator",
        "predefine",
        "predict",
        "preface",
        "prefix",
        "preflight",
        "preformed",
        "pregame",
        "pregnancy",
        "pregnant",
        "preheated",
        "prelaunch",
        "prelaw",
        "prelude",
        "premiere",
        "premises",
        "premium",
        "prenatal",
        "preoccupy",
        "preorder",
        "prepaid",
        "prepay",
        "preplan",
        "preppy",
        "preschool",
        "prescribe",
        "preseason",
        "preset",
        "preshow",
        "president",
        "presoak",
        "press",
        "presume",
        "presuming",
        "preteen",
        "pretended",
        "pretender",
        "pretense",
        "pretext",
        "pretty",
        "pretzel",
        "prevail",
        "prevalent",
        "prevent",
        "preview",
        "previous",
        "prewar",
        "prewashed",
        "prideful",
        "pried",
        "primal",
        "primarily",
        "primary",
        "primate",
        "primer",
        "primp",
        "princess",
        "print",
        "prior",
        "prism",
        "prison",
        "prissy",
        "pristine",
        "privacy",
        "private",
        "privatize",
        "prize",
        "proactive",
        "probable",
        "probably",
        "probation",
        "probe",
        "probing",
        "probiotic",
        "problem",
        "procedure",
        "process",
        "proclaim",
        "procreate",
        "procurer",
        "prodigal",
        "prodigy",
        "produce",
        "product",
        "profane",
        "profanity",
        "professed",
        "professor",
        "profile",
        "profound",
        "profusely",
        "progeny",
        "prognosis",
        "program",
        "progress",
        "projector",
        "prologue",
        "prolonged",
        "promenade",
        "prominent",
        "promoter",
        "promotion",
        "prompter",
        "promptly",
        "prone",
        "prong",
        "pronounce",
        "pronto",
        "proofing",
        "proofread",
        "proofs",
        "propeller",
        "properly",
        "property",
        "proponent",
        "proposal",
        "propose",
        "props",
        "prorate",
        "protector",
        "protegee",
        "proton",
        "prototype",
        "protozoan",
        "protract",
        "protrude",
        "proud",
        "provable",
        "proved",
        "proven",
        "provided",
        "provider",
        "providing",
        "province",
        "proving",
        "provoke",
        "provoking",
        "provolone",
        "prowess",
        "prowler",
        "prowling",
        "proximity",
        "proxy",
        "prozac",
        "prude",
        "prudishly",
        "prune",
        "pruning",
        "pry",
        "psychic",
        "public",
        "publisher",
        "pucker",
        "pueblo",
        "pug",
        "pull",
        "pulmonary",
        "pulp",
        "pulsate",
        "pulse",
        "pulverize",
        "puma",
        "pumice",
        "pummel",
        "punch",
        "punctual",
        "punctuate",
        "punctured",
        "pungent",
        "punisher",
        "punk",
        "pupil",
        "puppet",
        "puppy",
        "purchase",
        "pureblood",
        "purebred",
        "purely",
        "pureness",
        "purgatory",
        "purge",
        "purging",
        "purifier",
        "purify",
        "purist",
        "puritan",
        "purity",
        "purple",
        "purplish",
        "purposely",
        "purr",
        "purse",
        "pursuable",
        "pursuant",
        "pursuit",
        "purveyor",
        "pushcart",
        "pushchair",
        "pusher",
        "pushiness",
        "pushing",
        "pushover",
        "pushpin",
        "pushup",
        "pushy",
        "putdown",
        "putt",
        "puzzle",
        "puzzling",
        "pyramid",
        "pyromania",
        "python",
        "quack",
        "quadrant",
        "quail",
        "quaintly",
        "quake",
        "quaking",
        "qualified",
        "qualifier",
        "qualify",
        "quality",
        "qualm",
        "quantum",
        "quarrel",
        "quarry",
        "quartered",
        "quarterly",
        "quarters",
        "quartet",
        "quench",
        "query",
        "quicken",
        "quickly",
        "quickness",
        "quicksand",
        "quickstep",
        "quiet",
        "quill",
        "quilt",
        "quintet",
        "quintuple",
        "quirk",
        "quit",
        "quiver",
        "quizzical",
        "quotable",
        "quotation",
        "quote",
        "rabid",
        "race",
        "racing",
        "racism",
        "rack",
        "racoon",
        "radar",
        "radial",
        "radiance",
        "radiantly",
        "radiated",
        "radiation",
        "radiator",
        "radio",
        "radish",
        "raffle",
        "raft",
        "rage",
        "ragged",
        "raging",
        "ragweed",
        "raider",
        "railcar",
        "railing",
        "railroad",
        "railway",
        "raisin",
        "rake",
        "raking",
        "rally",
        "ramble",
        "rambling",
        "ramp",
        "ramrod",
        "ranch",
        "rancidity",
        "random",
        "ranged",
        "ranger",
        "ranging",
        "ranked",
        "ranking",
        "ransack",
        "ranting",
        "rants",
        "rare",
        "rarity",
        "rascal",
        "rash",
        "rasping",
        "ravage",
        "raven",
        "ravine",
        "raving",
        "ravioli",
        "ravishing",
        "reabsorb",
        "reach",
        "reacquire",
        "reaction",
        "reactive",
        "reactor",
        "reaffirm",
        "ream",
        "reanalyze",
        "reappear",
        "reapply",
        "reappoint",
        "reapprove",
        "rearrange",
        "rearview",
        "reason",
        "reassign",
        "reassure",
        "reattach",
        "reawake",
        "rebalance",
        "rebate",
        "rebel",
        "rebirth",
        "reboot",
        "reborn",
        "rebound",
        "rebuff",
        "rebuild",
        "rebuilt",
        "reburial",
        "rebuttal",
        "recall",
        "recant",
        "recapture",
        "recast",
        "recede",
        "recent",
        "recess",
        "recharger",
        "recipient",
        "recital",
        "recite",
        "reckless",
        "reclaim",
        "recliner",
        "reclining",
        "recluse",
        "reclusive",
        "recognize",
        "recoil",
        "recollect",
        "recolor",
        "reconcile",
        "reconfirm",
        "reconvene",
        "recopy",
        "record",
        "recount",
        "recoup",
        "recovery",
        "recreate",
        "rectal",
        "rectangle",
        "rectified",
        "rectify",
        "recycled",
        "recycler",
        "recycling",
        "reemerge",
        "reenact",
        "reenter",
        "reentry",
        "reexamine",
        "referable",
        "referee",
        "reference",
        "refill",
        "refinance",
        "refined",
        "refinery",
        "refining",
        "refinish",
        "reflected",
        "reflector",
        "reflex",
        "reflux",
        "refocus",
        "refold",
        "reforest",
        "reformat",
        "reformed",
        "reformer",
        "reformist",
        "refract",
        "refrain",
        "refreeze",
        "refresh",
        "refried",
        "refueling",
        "refund",
        "refurbish",
        "refurnish",
        "refusal",
        "refuse",
        "refusing",
        "refutable",
        "refute",
        "regain",
        "regalia",
        "regally",
        "reggae",
        "regime",
        "region",
        "register",
        "registrar",
        "registry",
        "regress",
        "regretful",
        "regroup",
        "regular",
        "regulate",
        "regulator",
        "rehab",
        "reheat",
        "rehire",
        "rehydrate",
        "reimburse",
        "reissue",
        "reiterate",
        "rejoice",
        "rejoicing",
        "rejoin",
        "rekindle",
        "relapse",
        "relapsing",
        "relatable",
        "related",
        "relation",
        "relative",
        "relax",
        "relay",
        "relearn",
        "release",
        "relenting",
        "reliable",
        "reliably",
        "reliance",
        "reliant",
        "relic",
        "relieve",
        "relieving",
        "relight",
        "relish",
        "relive",
        "reload",
        "relocate",
        "relock",
        "reluctant",
        "rely",
        "remake",
        "remark",
        "remarry",
        "rematch",
        "remedial",
        "remedy",
        "remember",
        "reminder",
        "remindful",
        "remission",
        "remix",
        "remnant",
        "remodeler",
        "remold",
        "remorse",
        "remote",
        "removable",
        "removal",
        "removed",
        "remover",
        "removing",
        "rename",
        "renderer",
        "rendering",
        "rendition",
        "renegade",
        "renewable",
        "renewably",
        "renewal",
        "renewed",
        "renounce",
        "renovate",
        "renovator",
        "rentable",
        "rental",
        "rented",
        "renter",
        "reoccupy",
        "reoccur",
        "reopen",
        "reorder",
        "repackage",
        "repacking",
        "repaint",
        "repair",
        "repave",
        "repaying",
        "repayment",
        "repeal",
        "repeated",
        "repeater",
        "repent",
        "rephrase",
        "replace",
        "replay",
        "replica",
        "reply",
        "reporter",
        "repose",
        "repossess",
        "repost",
        "repressed",
        "reprimand",
        "reprint",
        "reprise",
        "reproach",
        "reprocess",
        "reproduce",
        "reprogram",
        "reps",
        "reptile",
        "reptilian",
        "repugnant",
        "repulsion",
        "repulsive",
        "repurpose",
        "reputable",
        "reputably",
        "request",
        "require",
        "requisite",
        "reroute",
        "rerun",
        "resale",
        "resample",
        "rescuer",
        "reseal",
        "research",
        "reselect",
        "reseller",
        "resemble",
        "resend",
        "resent",
        "reset",
        "reshape",
        "reshoot",
        "reshuffle",
        "residence",
        "residency",
        "resident",
        "residual",
        "residue",
        "resigned",
        "resilient",
        "resistant",
        "resisting",
        "resize",
        "resolute",
        "resolved",
        "resonant",
        "resonate",
        "resort",
        "resource",
        "respect",
        "resubmit",
        "result",
        "resume",
        "resupply",
        "resurface",
        "resurrect",
        "retail",
        "retainer",
        "retaining",
        "retake",
        "retaliate",
        "retention",
        "rethink",
        "retinal",
        "retired",
        "retiree",
        "retiring",
        "retold",
        "retool",
        "retorted",
        "retouch",
        "retrace",
        "retract",
        "retrain",
        "retread",
        "retreat",
        "retrial",
        "retrieval",
        "retriever",
        "retry",
        "return",
        "retying",
        "retype",
        "reunion",
        "reunite",
        "reusable",
        "reuse",
        "reveal",
        "reveler",
        "revenge",
        "revenue",
        "reverb",
        "revered",
        "reverence",
        "reverend",
        "reversal",
        "reverse",
        "reversing",
        "reversion",
        "revert",
        "revisable",
        "revise",
        "revision",
        "revisit",
        "revivable",
        "revival",
        "reviver",
        "reviving",
        "revocable",
        "revoke",
        "revolt",
        "revolver",
        "revolving",
        "reward",
        "rewash",
        "rewind",
        "rewire",
        "reword",
        "rework",
        "rewrap",
        "rewrite",
        "rhyme",
        "ribbon",
        "ribcage",
        "rice",
        "riches",
        "richly",
        "richness",
        "rickety",
        "ricotta",
        "riddance",
        "ridden",
        "ride",
        "riding",
        "rifling",
        "rift",
        "rigging",
        "rigid",
        "rigor",
        "rimless",
        "rimmed",
        "rind",
        "rink",
        "rinse",
        "rinsing",
        "riot",
        "ripcord",
        "ripeness",
        "ripening",
        "ripping",
        "ripple",
        "rippling",
        "riptide",
        "rise",
        "rising",
        "risk",
        "risotto",
        "ritalin",
        "ritzy",
        "rival",
        "riverbank",
        "riverbed",
        "riverboat",
        "riverside",
        "riveter",
        "riveting",
        "roamer",
        "roaming",
        "roast",
        "robbing",
        "robe",
        "robin",
        "robotics",
        "robust",
        "rockband",
        "rocker",
        "rocket",
        "rockfish",
        "rockiness",
        "rocking",
        "rocklike",
        "rockslide",
        "rockstar",
        "rocky",
        "rogue",
        "roman",
        "romp",
        "rope",
        "roping",
        "roster",
        "rosy",
        "rotten",
        "rotting",
        "rotunda",
        "roulette",
        "rounding",
        "roundish",
        "roundness",
        "roundup",
        "roundworm",
        "routine",
        "routing",
        "rover",
        "roving",
        "royal",
        "rubbed",
        "rubber",
        "rubbing",
        "rubble",
        "rubdown",
        "ruby",
        "ruckus",
        "rudder",
        "rug",
        "ruined",
        "rule",
        "rumble",
        "rumbling",
        "rummage",
        "rumor",
        "runaround",
        "rundown",
        "runner",
        "running",
        "runny",
        "runt",
        "runway",
        "rupture",
        "rural",
        "ruse",
        "rush",
        "rust",
        "rut",
        "sabbath",
        "sabotage",
        "sacrament",
        "sacred",
        "sacrifice",
        "sadden",
        "saddlebag",
        "saddled",
        "saddling",
        "sadly",
        "sadness",
        "safari",
        "safeguard",
        "safehouse",
        "safely",
        "safeness",
        "saffron",
        "saga",
        "sage",
        "sagging",
        "saggy",
        "said",
        "saint",
        "sake",
        "salad",
        "salami",
        "salaried",
        "salary",
        "saline",
        "salon",
        "saloon",
        "salsa",
        "salt",
        "salutary",
        "salute",
        "salvage",
        "salvaging",
        "salvation",
        "same",
        "sample",
        "sampling",
        "sanction",
        "sanctity",
        "sanctuary",
        "sandal",
        "sandbag",
        "sandbank",
        "sandbar",
        "sandblast",
        "sandbox",
        "sanded",
        "sandfish",
        "sanding",
        "sandlot",
        "sandpaper",
        "sandpit",
        "sandstone",
        "sandstorm",
        "sandworm",
        "sandy",
        "sanitary",
        "sanitizer",
        "sank",
        "santa",
        "sapling",
        "sappiness",
        "sappy",
        "sarcasm",
        "sarcastic",
        "sardine",
        "sash",
        "sasquatch",
        "sassy",
        "satchel",
        "satiable",
        "satin",
        "satirical",
        "satisfied",
        "satisfy",
        "saturate",
        "saturday",
        "sauciness",
        "saucy",
        "sauna",
        "savage",
        "savanna",
        "saved",
        "savings",
        "savior",
        "savor",
        "saxophone",
        "say",
        "scabbed",
        "scabby",
        "scalded",
        "scalding",
        "scale",
        "scaling",
        "scallion",
        "scallop",
        "scalping",
        "scam",
        "scandal",
        "scanner",
        "scanning",
        "scant",
        "scapegoat",
        "scarce",
        "scarcity",
        "scarecrow",
        "scared",
        "scarf",
        "scarily",
        "scariness",
        "scarring",
        "scary",
        "scavenger",
        "scenic",
        "schedule",
        "schematic",
        "scheme",
        "scheming",
        "schilling",
        "schnapps",
        "scholar",
        "science",
        "scientist",
        "scion",
        "scoff",
        "scolding",
        "scone",
        "scoop",
        "scooter",
        "scope",
        "scorch",
        "scorebook",
        "scorecard",
        "scored",
        "scoreless",
        "scorer",
        "scoring",
        "scorn",
        "scorpion",
        "scotch",
        "scoundrel",
        "scoured",
        "scouring",
        "scouting",
        "scouts",
        "scowling",
        "scrabble",
        "scraggly",
        "scrambled",
        "scrambler",
        "scrap",
        "scratch",
        "scrawny",
        "screen",
        "scribble",
        "scribe",
        "scribing",
        "scrimmage",
        "script",
        "scroll",
        "scrooge",
        "scrounger",
        "scrubbed",
        "scrubber",
        "scruffy",
        "scrunch",
        "scrutiny",
        "scuba",
        "scuff",
        "sculptor",
        "sculpture",
        "scurvy",
        "scuttle",
        "secluded",
        "secluding",
        "seclusion",
        "second",
        "secrecy",
        "secret",
        "sectional",
        "sector",
        "secular",
        "securely",
        "security",
        "sedan",
        "sedate",
        "sedation",
        "sedative",
        "sediment",
        "seduce",
        "seducing",
        "segment",
        "seismic",
        "seizing",
        "seldom",
        "selected",
        "selection",
        "selective",
        "selector",
        "self",
        "seltzer",
        "semantic",
        "semester",
        "semicolon",
        "semifinal",
        "seminar",
        "semisoft",
        "semisweet",
        "senate",
        "senator",
        "send",
        "senior",
        "senorita",
        "sensation",
        "sensitive",
        "sensitize",
        "sensually",
        "sensuous",
        "sepia",
        "september",
        "septic",
        "septum",
        "sequel",
        "sequence",
        "sequester",
        "series",
        "sermon",
        "serotonin",
        "serpent",
        "serrated",
        "serve",
        "service",
        "serving",
        "sesame",
        "sessions",
        "setback",
        "setting",
        "settle",
        "settling",
        "setup",
        "sevenfold",
        "seventeen",
        "seventh",
        "seventy",
        "severity",
        "shabby",
        "shack",
        "shaded",
        "shadily",
        "shadiness",
        "shading",
        "shadow",
        "shady",
        "shaft",
        "shakable",
        "shakily",
        "shakiness",
        "shaking",
        "shaky",
        "shale",
        "shallot",
        "shallow",
        "shame",
        "shampoo",
        "shamrock",
        "shank",
        "shanty",
        "shape",
        "shaping",
        "share",
        "sharpener",
        "sharper",
        "sharpie",
        "sharply",
        "sharpness",
        "shawl",
        "sheath",
        "shed",
        "sheep",
        "sheet",
        "shelf",
        "shell",
        "shelter",
        "shelve",
        "shelving",
        "sherry",
        "shield",
        "shifter",
        "shifting",
        "shiftless",
        "shifty",
        "shimmer",
        "shimmy",
        "shindig",
        "shine",
        "shingle",
        "shininess",
        "shining",
        "shiny",
        "ship",
        "shirt",
        "shivering",
        "shock",
        "shone",
        "shoplift",
        "shopper",
        "shopping",
        "shoptalk",
        "shore",
        "shortage",
        "shortcake",
        "shortcut",
        "shorten",
        "shorter",
        "shorthand",
        "shortlist",
        "shortly",
        "shortness",
        "shorts",
        "shortwave",
        "shorty",
        "shout",
        "shove",
        "showbiz",
        "showcase",
        "showdown",
        "shower",
        "showgirl",
        "showing",
        "showman",
        "shown",
        "showoff",
        "showpiece",
        "showplace",
        "showroom",
        "showy",
        "shrank",
        "shrapnel",
        "shredder",
        "shredding",
        "shrewdly",
        "shriek",
        "shrill",
        "shrimp",
        "shrine",
        "shrink",
        "shrivel",
        "shrouded",
        "shrubbery",
        "shrubs",
        "shrug",
        "shrunk",
        "shucking",
        "shudder",
        "shuffle",
        "shuffling",
        "shun",
        "shush",
        "shut",
        "shy",
        "siamese",
        "siberian",
        "sibling",
        "siding",
        "sierra",
        "siesta",
        "sift",
        "sighing",
        "silenced",
        "silencer",
        "silent",
        "silica",
        "silicon",
        "silk",
        "silliness",
        "silly",
        "silo",
        "silt",
        "silver",
        "similarly",
        "simile",
        "simmering",
        "simple",
        "simplify",
        "simply",
        "sincere",
        "sincerity",
        "singer",
        "singing",
        "single",
        "singular",
        "sinister",
        "sinless",
        "sinner",
        "sinuous",
        "sip",
        "siren",
        "sister",
        "sitcom",
        "sitter",
        "sitting",
        "situated",
        "situation",
        "sixfold",
        "sixteen",
        "sixth",
        "sixties",
        "sixtieth",
        "sixtyfold",
        "sizable",
        "sizably",
        "size",
        "sizing",
        "sizzle",
        "sizzling",
        "skater",
        "skating",
        "skedaddle",
        "skeletal",
        "skeleton",
        "skeptic",
        "sketch",
        "skewed",
        "skewer",
        "skid",
        "skied",
        "skier",
        "skies",
        "skiing",
        "skilled",
        "skillet",
        "skillful",
        "skimmed",
        "skimmer",
        "skimming",
        "skimpily",
        "skincare",
        "skinhead",
        "skinless",
        "skinning",
        "skinny",
        "skintight",
        "skipper",
        "skipping",
        "skirmish",
        "skirt",
        "skittle",
        "skydiver",
        "skylight",
        "skyline",
        "skype",
        "skyrocket",
        "skyward",
        "slab",
        "slacked",
        "slacker",
        "slacking",
        "slackness",
        "slacks",
        "slain",
        "slam",
        "slander",
        "slang",
        "slapping",
        "slapstick",
        "slashed",
        "slashing",
        "slate",
        "slather",
        "slaw",
        "sled",
        "sleek",
        "sleep",
        "sleet",
        "sleeve",
        "slept",
        "sliceable",
        "sliced",
        "slicer",
        "slicing",
        "slick",
        "slider",
        "slideshow",
        "sliding",
        "slighted",
        "slighting",
        "slightly",
        "slimness",
        "slimy",
        "slinging",
        "slingshot",
        "slinky",
        "slip",
        "slit",
        "sliver",
        "slobbery",
        "slogan",
        "sloped",
        "sloping",
        "sloppily",
        "sloppy",
        "slot",
        "slouching",
        "slouchy",
        "sludge",
        "slug",
        "slum",
        "slurp",
        "slush",
        "sly",
        "small",
        "smartly",
        "smartness",
        "smasher",
        "smashing",
        "smashup",
        "smell",
        "smelting",
        "smile",
        "smilingly",
        "smirk",
        "smite",
        "smith",
        "smitten",
        "smock",
        "smog",
        "smoked",
        "smokeless",
        "smokiness",
        "smoking",
        "smoky",
        "smolder",
        "smooth",
        "smother",
        "smudge",
        "smudgy",
        "smuggler",
        "smuggling",
        "smugly",
        "smugness",
        "snack",
        "snagged",
        "snaking",
        "snap",
        "snare",
        "snarl",
        "snazzy",
        "sneak",
        "sneer",
        "sneeze",
        "sneezing",
        "snide",
        "sniff",
        "snippet",
        "snipping",
        "snitch",
        "snooper",
        "snooze",
        "snore",
        "snoring",
        "snorkel",
        "snort",
        "snout",
        "snowbird",
        "snowboard",
        "snowbound",
        "snowcap",
        "snowdrift",
        "snowdrop",
        "snowfall",
        "snowfield",
        "snowflake",
        "snowiness",
        "snowless",
        "snowman",
        "snowplow",
        "snowshoe",
        "snowstorm",
        "snowsuit",
        "snowy",
        "snub",
        "snuff",
        "snuggle",
        "snugly",
        "snugness",
        "speak",
        "spearfish",
        "spearhead",
        "spearman",
        "spearmint",
        "species",
        "specimen",
        "specked",
        "speckled",
        "specks",
        "spectacle",
        "spectator",
        "spectrum",
        "speculate",
        "speech",
        "speed",
        "spellbind",
        "speller",
        "spelling",
        "spendable",
        "spender",
        "spending",
        "spent",
        "spew",
        "sphere",
        "spherical",
        "sphinx",
        "spider",
        "spied",
        "spiffy",
        "spill",
        "spilt",
        "spinach",
        "spinal",
        "spindle",
        "spinner",
        "spinning",
        "spinout",
        "spinster",
        "spiny",
        "spiral",
        "spirited",
        "spiritism",
        "spirits",
        "spiritual",
        "splashed",
        "splashing",
        "splashy",
        "splatter",
        "spleen",
        "splendid",
        "splendor",
        "splice",
        "splicing",
        "splinter",
        "splotchy",
        "splurge",
        "spoilage",
        "spoiled",
        "spoiler",
        "spoiling",
        "spoils",
        "spoken",
        "spokesman",
        "sponge",
        "spongy",
        "sponsor",
        "spoof",
        "spookily",
        "spooky",
        "spool",
        "spoon",
        "spore",
        "sporting",
        "sports",
        "sporty",
        "spotless",
        "spotlight",
        "spotted",
        "spotter",
        "spotting",
        "spotty",
        "spousal",
        "spouse",
        "spout",
        "sprain",
        "sprang",
        "sprawl",
        "spray",
        "spree",
        "sprig",
        "spring",
        "sprinkled",
        "sprinkler",
        "sprint",
        "sprite",
        "sprout",
        "spruce",
        "sprung",
        "spry",
        "spud",
        "spur",
        "sputter",
        "spyglass",
        "squabble",
        "squad",
        "squall",
        "squander",
        "squash",
        "squatted",
        "squatter",
        "squatting",
        "squeak",
        "squealer",
        "squealing",
        "squeamish",
        "squeegee",
        "squeeze",
        "squeezing",
        "squid",
        "squiggle",
        "squiggly",
        "squint",
        "squire",
        "squirt",
        "squishier",
        "squishy",
        "stability",
        "stabilize",
        "stable",
        "stack",
        "stadium",
        "staff",
        "stage",
        "staging",
        "stagnant",
        "stagnate",
        "stainable",
        "stained",
        "staining",
        "stainless",
        "stalemate",
        "staleness",
        "stalling",
        "stallion",
        "stamina",
        "stammer",
        "stamp",
        "stand",
        "stank",
        "staple",
        "stapling",
        "starboard",
        "starch",
        "stardom",
        "stardust",
        "starfish",
        "stargazer",
        "staring",
        "stark",
        "starless",
        "starlet",
        "starlight",
        "starlit",
        "starring",
        "starry",
        "starship",
        "starter",
        "starting",
        "startle",
        "startling",
        "startup",
        "starved",
        "starving",
        "stash",
        "state",
        "static",
        "statistic",
        "statue",
        "stature",
        "status",
        "statute",
        "statutory",
        "staunch",
        "stays",
        "steadfast",
        "steadier",
        "steadily",
        "steadying",
        "steam",
        "steed",
        "steep",
        "steerable",
        "steering",
        "steersman",
        "stegosaur",
        "stellar",
        "stem",
        "stench",
        "stencil",
        "step",
        "stereo",
        "sterile",
        "sterility",
        "sterilize",
        "sterling",
        "sternness",
        "sternum",
        "stew",
        "stick",
        "stiffen",
        "stiffly",
        "stiffness",
        "stifle",
        "stifling",
        "stillness",
        "stilt",
        "stimulant",
        "stimulate",
        "stimuli",
        "stimulus",
        "stinger",
        "stingily",
        "stinging",
        "stingray",
        "stingy",
        "stinking",
        "stinky",
        "stipend",
        "stipulate",
        "stir",
        "stitch",
        "stock",
        "stoic",
        "stoke",
        "stole",
        "stomp",
        "stonewall",
        "stoneware",
        "stonework",
        "stoning",
        "stony",
        "stood",
        "stooge",
        "stool",
        "stoop",
        "stoplight",
        "stoppable",
        "stoppage",
        "stopped",
        "stopper",
        "stopping",
        "stopwatch",
        "storable",
        "storage",
        "storeroom",
        "storewide",
        "storm",
        "stout",
        "stove",
        "stowaway",
        "stowing",
        "straddle",
        "straggler",
        "strained",
        "strainer",
        "straining",
        "strangely",
        "stranger",
        "strangle",
        "strategic",
        "strategy",
        "stratus",
        "straw",
        "stray",
        "streak",
        "stream",
        "street",
        "strength",
        "strenuous",
        "strep",
        "stress",
        "stretch",
        "strewn",
        "stricken",
        "strict",
        "stride",
        "strife",
        "strike",
        "striking",
        "strive",
        "striving",
        "strobe",
        "strode",
        "stroller",
        "strongbox",
        "strongly",
        "strongman",
        "struck",
        "structure",
        "strudel",
        "struggle",
        "strum",
        "strung",
        "strut",
        "stubbed",
        "stubble",
        "stubbly",
        "stubborn",
        "stucco",
        "stuck",
        "student",
        "studied",
        "studio",
        "study",
        "stuffed",
        "stuffing",
        "stuffy",
        "stumble",
        "stumbling",
        "stump",
        "stung",
        "stunned",
        "stunner",
        "stunning",
        "stunt",
        "stupor",
        "sturdily",
        "sturdy",
        "styling",
        "stylishly",
        "stylist",
        "stylized",
        "stylus",
        "suave",
        "subarctic",
        "subatomic",
        "subdivide",
        "subdued",
        "subduing",
        "subfloor",
        "subgroup",
        "subheader",
        "subject",
        "sublease",
        "sublet",
        "sublevel",
        "sublime",
        "submarine",
        "submerge",
        "submersed",
        "submitter",
        "subpanel",
        "subpar",
        "subplot",
        "subprime",
        "subscribe",
        "subscript",
        "subsector",
        "subside",
        "subsiding",
        "subsidize",
        "subsidy",
        "subsoil",
        "subsonic",
        "substance",
        "subsystem",
        "subtext",
        "subtitle",
        "subtly",
        "subtotal",
        "subtract",
        "subtype",
        "suburb",
        "subway",
        "subwoofer",
        "subzero",
        "succulent",
        "such",
        "suction",
        "sudden",
        "sudoku",
        "suds",
        "sufferer",
        "suffering",
        "suffice",
        "suffix",
        "suffocate",
        "suffrage",
        "sugar",
        "suggest",
        "suing",
        "suitable",
        "suitably",
        "suitcase",
        "suitor",
        "sulfate",
        "sulfide",
        "sulfite",
        "sulfur",
        "sulk",
        "sullen",
        "sulphate",
        "sulphuric",
        "sultry",
        "superbowl",
        "superglue",
        "superhero",
        "superior",
        "superjet",
        "superman",
        "supermom",
        "supernova",
        "supervise",
        "supper",
        "supplier",
        "supply",
        "support",
        "supremacy",
        "supreme",
        "surcharge",
        "surely",
        "sureness",
        "surface",
        "surfacing",
        "surfboard",
        "surfer",
        "surgery",
        "surgical",
        "surging",
        "surname",
        "surpass",
        "surplus",
        "surprise",
        "surreal",
        "surrender",
        "surrogate",
        "surround",
        "survey",
        "survival",
        "survive",
        "surviving",
        "survivor",
        "sushi",
        "suspect",
        "suspend",
        "suspense",
        "sustained",
        "sustainer",
        "swab",
        "swaddling",
        "swagger",
        "swampland",
        "swan",
        "swapping",
        "swarm",
        "sway",
        "swear",
        "sweat",
        "sweep",
        "swell",
        "swept",
        "swerve",
        "swifter",
        "swiftly",
        "swiftness",
        "swimmable",
        "swimmer",
        "swimming",
        "swimsuit",
        "swimwear",
        "swinger",
        "swinging",
        "swipe",
        "swirl",
        "switch",
        "swivel",
        "swizzle",
        "swooned",
        "swoop",
        "swoosh",
        "swore",
        "sworn",
        "swung",
        "sycamore",
        "sympathy",
        "symphonic",
        "symphony",
        "symptom",
        "synapse",
        "syndrome",
        "synergy",
        "synopses",
        "synopsis",
        "synthesis",
        "synthetic",
        "syrup",
        "system",
        "t-shirt",
        "tabasco",
        "tabby",
        "tableful",
        "tables",
        "tablet",
        "tableware",
        "tabloid",
        "tackiness",
        "tacking",
        "tackle",
        "tackling",
        "tacky",
        "taco",
        "tactful",
        "tactical",
        "tactics",
        "tactile",
        "tactless",
        "tadpole",
        "taekwondo",
        "tag",
        "tainted",
        "take",
        "taking",
        "talcum",
        "talisman",
        "tall",
        "talon",
        "tamale",
        "tameness",
        "tamer",
        "tamper",
        "tank",
        "tanned",
        "tannery",
        "tanning",
        "tantrum",
        "tapeless",
        "tapered",
        "tapering",
        "tapestry",
        "tapioca",
        "tapping",
        "taps",
        "tarantula",
        "target",
        "tarmac",
        "tarnish",
        "tarot",
        "tartar",
        "tartly",
        "tartness",
        "task",
        "tassel",
        "taste",
        "tastiness",
        "tasting",
        "tasty",
        "tattered",
        "tattle",
        "tattling",
        "tattoo",
        "taunt",
        "tavern",
        "thank",
        "that",
        "thaw",
        "theater",
        "theatrics",
        "thee",
        "theft",
        "theme",
        "theology",
        "theorize",
        "thermal",
        "thermos",
        "thesaurus",
        "these",
        "thesis",
        "thespian",
        "thicken",
        "thicket",
        "thickness",
        "thieving",
        "thievish",
        "thigh",
        "thimble",
        "thing",
        "think",
        "thinly",
        "thinner",
        "thinness",
        "thinning",
        "thirstily",
        "thirsting",
        "thirsty",
        "thirteen",
        "thirty",
        "thong",
        "thorn",
        "those",
        "thousand",
        "thrash",
        "thread",
        "threaten",
        "threefold",
        "thrift",
        "thrill",
        "thrive",
        "thriving",
        "throat",
        "throbbing",
        "throng",
        "throttle",
        "throwaway",
        "throwback",
        "thrower",
        "throwing",
        "thud",
        "thumb",
        "thumping",
        "thursday",
        "thus",
        "thwarting",
        "thyself",
        "tiara",
        "tibia",
        "tidal",
        "tidbit",
        "tidiness",
        "tidings",
        "tidy",
        "tiger",
        "tighten",
        "tightly",
        "tightness",
        "tightrope",
        "tightwad",
        "tigress",
        "tile",
        "tiling",
        "till",
        "tilt",
        "timid",
        "timing",
        "timothy",
        "tinderbox",
        "tinfoil",
        "tingle",
        "tingling",
        "tingly",
        "tinker",
        "tinkling",
        "tinsel",
        "tinsmith",
        "tint",
        "tinwork",
        "tiny",
        "tipoff",
        "tipped",
        "tipper",
        "tipping",
        "tiptoeing",
        "tiptop",
        "tiring",
        "tissue",
        "trace",
        "tracing",
        "track",
        "traction",
        "tractor",
        "trade",
        "trading",
        "tradition",
        "traffic",
        "tragedy",
        "trailing",
        "trailside",
        "train",
        "traitor",
        "trance",
        "tranquil",
        "transfer",
        "transform",
        "translate",
        "transpire",
        "transport",
        "transpose",
        "trapdoor",
        "trapeze",
        "trapezoid",
        "trapped",
        "trapper",
        "trapping",
        "traps",
        "trash",
        "travel",
        "traverse",
        "travesty",
        "tray",
        "treachery",
        "treading",
        "treadmill",
        "treason",
        "treat",
        "treble",
        "tree",
        "trekker",
        "tremble",
        "trembling",
        "tremor",
        "trench",
        "trend",
        "trespass",
        "triage",
        "trial",
        "triangle",
        "tribesman",
        "tribunal",
        "tribune",
        "tributary",
        "tribute",
        "triceps",
        "trickery",
        "trickily",
        "tricking",
        "trickle",
        "trickster",
        "tricky",
        "tricolor",
        "tricycle",
        "trident",
        "tried",
        "trifle",
        "trifocals",
        "trillion",
        "trilogy",
        "trimester",
        "trimmer",
        "trimming",
        "trimness",
        "trinity",
        "trio",
        "tripod",
        "tripping",
        "triumph",
        "trivial",
        "trodden",
        "trolling",
        "trombone",
        "trophy",
        "tropical",
        "tropics",
        "trouble",
        "troubling",
        "trough",
        "trousers",
        "trout",
        "trowel",
        "truce",
        "truck",
        "truffle",
        "trump",
        "trunks",
        "trustable",
        "trustee",
        "trustful",
        "trusting",
        "trustless",
        "truth",
        "try",
        "tubby",
        "tubeless",
        "tubular",
        "tucking",
        "tuesday",
        "tug",
        "tuition",
        "tulip",
        "tumble",
        "tumbling",
        "tummy",
        "turban",
        "turbine",
        "turbofan",
        "turbojet",
        "turbulent",
        "turf",
        "turkey",
        "turmoil",
        "turret",
        "turtle",
        "tusk",
        "tutor",
        "tutu",
        "tux",
        "tweak",
        "tweed",
        "tweet",
        "tweezers",
        "twelve",
        "twentieth",
        "twenty",
        "twerp",
        "twice",
        "twiddle",
        "twiddling",
        "twig",
        "twilight",
        "twine",
        "twins",
        "twirl",
        "twistable",
        "twisted",
        "twister",
        "twisting",
        "twisty",
        "twitch",
        "twitter",
        "tycoon",
        "tying",
        "tyke",
        "udder",
        "ultimate",
        "ultimatum",
        "ultra",
        "umbilical",
        "umbrella",
        "umpire",
        "unabashed",
        "unable",
        "unadorned",
        "unadvised",
        "unafraid",
        "unaired",
        "unaligned",
        "unaltered",
        "unarmored",
        "unashamed",
        "unaudited",
        "unawake",
        "unaware",
        "unbaked",
        "unbalance",
        "unbeaten",
        "unbend",
        "unbent",
        "unbiased",
        "unbitten",
        "unblended",
        "unblessed",
        "unblock",
        "unbolted",
        "unbounded",
        "unboxed",
        "unbraided",
        "unbridle",
        "unbroken",
        "unbuckled",
        "unbundle",
        "unburned",
        "unbutton",
        "uncanny",
        "uncapped",
        "uncaring",
        "uncertain",
        "unchain",
        "unchanged",
        "uncharted",
        "uncheck",
        "uncivil",
        "unclad",
        "unclaimed",
        "unclamped",
        "unclasp",
        "uncle",
        "unclip",
        "uncloak",
        "unclog",
        "unclothed",
        "uncoated",
        "uncoiled",
        "uncolored",
        "uncombed",
        "uncommon",
        "uncooked",
        "uncork",
        "uncorrupt",
        "uncounted",
        "uncouple",
        "uncouth",
        "uncover",
        "uncross",
        "uncrown",
        "uncrushed",
        "uncured",
        "uncurious",
        "uncurled",
        "uncut",
        "undamaged",
        "undated",
        "undaunted",
        "undead",
        "undecided",
        "undefined",
        "underage",
        "underarm",
        "undercoat",
        "undercook",
        "undercut",
        "underdog",
        "underdone",
        "underfed",
        "underfeed",
        "underfoot",
        "undergo",
        "undergrad",
        "underhand",
        "underline",
        "underling",
        "undermine",
        "undermost",
        "underpaid",
        "underpass",
        "underpay",
        "underrate",
        "undertake",
        "undertone",
        "undertook",
        "undertow",
        "underuse",
        "underwear",
        "underwent",
        "underwire",
        "undesired",
        "undiluted",
        "undivided",
        "undocked",
        "undoing",
        "undone",
        "undrafted",
        "undress",
        "undrilled",
        "undusted",
        "undying",
        "unearned",
        "unearth",
        "unease",
        "uneasily",
        "uneasy",
        "uneatable",
        "uneaten",
        "unedited",
        "unelected",
        "unending",
        "unengaged",
        "unenvied",
        "unequal",
        "unethical",
        "uneven",
        "unexpired",
        "unexposed",
        "unfailing",
        "unfair",
        "unfasten",
        "unfazed",
        "unfeeling",
        "unfiled",
        "unfilled",
        "unfitted",
        "unfitting",
        "unfixable",
        "unfixed",
        "unflawed",
        "unfocused",
        "unfold",
        "unfounded",
        "unframed",
        "unfreeze",
        "unfrosted",
        "unfrozen",
        "unfunded",
        "unglazed",
        "ungloved",
        "unglue",
        "ungodly",
        "ungraded",
        "ungreased",
        "unguarded",
        "unguided",
        "unhappily",
        "unhappy",
        "unharmed",
        "unhealthy",
        "unheard",
        "unhearing",
        "unheated",
        "unhelpful",
        "unhidden",
        "unhinge",
        "unhitched",
        "unholy",
        "unhook",
        "unicorn",
        "unicycle",
        "unified",
        "unifier",
        "uniformed",
        "uniformly",
        "unify",
        "unimpeded",
        "uninjured",
        "uninstall",
        "uninsured",
        "uninvited",
        "union",
        "uniquely",
        "unisexual",
        "unison",
        "unissued",
        "unit",
        "universal",
        "universe",
        "unjustly",
        "unkempt",
        "unkind",
        "unknotted",
        "unknowing",
        "unknown",
        "unlaced",
        "unlatch",
        "unlawful",
        "unleaded",
        "unlearned",
        "unleash",
        "unless",
        "unleveled",
        "unlighted",
        "unlikable",
        "unlimited",
        "unlined",
        "unlinked",
        "unlisted",
        "unlit",
        "unlivable",
        "unloaded",
        "unloader",
        "unlocked",
        "unlocking",
        "unlovable",
        "unloved",
        "unlovely",
        "unloving",
        "unluckily",
        "unlucky",
        "unmade",
        "unmanaged",
        "unmanned",
        "unmapped",
        "unmarked",
        "unmasked",
        "unmasking",
        "unmatched",
        "unmindful",
        "unmixable",
        "unmixed",
        "unmolded",
        "unmoral",
        "unmovable",
        "unmoved",
        "unmoving",
        "unnamable",
        "unnamed",
        "unnatural",
        "unneeded",
        "unnerve",
        "unnerving",
        "unnoticed",
        "unopened",
        "unopposed",
        "unpack",
        "unpadded",
        "unpaid",
        "unpainted",
        "unpaired",
        "unpaved",
        "unpeeled",
        "unpicked",
        "unpiloted",
        "unpinned",
        "unplanned",
        "unplanted",
        "unpleased",
        "unpledged",
        "unplowed",
        "unplug",
        "unpopular",
        "unproven",
        "unquote",
        "unranked",
        "unrated",
        "unraveled",
        "unreached",
        "unread",
        "unreal",
        "unreeling",
        "unrefined",
        "unrelated",
        "unrented",
        "unrest",
        "unretired",
        "unrevised",
        "unrigged",
        "unripe",
        "unrivaled",
        "unroasted",
        "unrobed",
        "unroll",
        "unruffled",
        "unruly",
        "unrushed",
        "unsaddle",
        "unsafe",
        "unsaid",
        "unsalted",
        "unsaved",
        "unsavory",
        "unscathed",
        "unscented",
        "unscrew",
        "unsealed",
        "unseated",
        "unsecured",
        "unseeing",
        "unseemly",
        "unseen",
        "unselect",
        "unselfish",
        "unsent",
        "unsettled",
        "unshackle",
        "unshaken",
        "unshaved",
        "unshaven",
        "unsheathe",
        "unshipped",
        "unsightly",
        "unsigned",
        "unskilled",
        "unsliced",
        "unsmooth",
        "unsnap",
        "unsocial",
        "unsoiled",
        "unsold",
        "unsolved",
        "unsorted",
        "unspoiled",
        "unspoken",
        "unstable",
        "unstaffed",
        "unstamped",
        "unsteady",
        "unsterile",
        "unstirred",
        "unstitch",
        "unstopped",
        "unstuck",
        "unstuffed",
        "unstylish",
        "unsubtle",
        "unsubtly",
        "unsuited",
        "unsure",
        "unsworn",
        "untagged",
        "untainted",
        "untaken",
        "untamed",
        "untangled",
        "untapped",
        "untaxed",
        "unthawed",
        "unthread",
        "untidy",
        "untie",
        "until",
        "untimed",
        "untimely",
        "untitled",
        "untoasted",
        "untold",
        "untouched",
        "untracked",
        "untrained",
        "untreated",
        "untried",
        "untrimmed",
        "untrue",
        "untruth",
        "unturned",
        "untwist",
        "untying",
        "unusable",
        "unused",
        "unusual",
        "unvalued",
        "unvaried",
        "unvarying",
        "unveiled",
        "unveiling",
        "unvented",
        "unviable",
        "unvisited",
        "unvocal",
        "unwanted",
        "unwarlike",
        "unwary",
        "unwashed",
        "unwatched",
        "unweave",
        "unwed",
        "unwelcome",
        "unwell",
        "unwieldy",
        "unwilling",
        "unwind",
        "unwired",
        "unwitting",
        "unwomanly",
        "unworldly",
        "unworn",
        "unworried",
        "unworthy",
        "unwound",
        "unwoven",
        "unwrapped",
        "unwritten",
        "unzip",
        "upbeat",
        "upchuck",
        "upcoming",
        "upcountry",
        "update",
        "upfront",
        "upgrade",
        "upheaval",
        "upheld",
        "uphill",
        "uphold",
        "uplifted",
        "uplifting",
        "upload",
        "upon",
        "upper",
        "upright",
        "uprising",
        "upriver",
        "uproar",
        "uproot",
        "upscale",
        "upside",
        "upstage",
        "upstairs",
        "upstart",
        "upstate",
        "upstream",
        "upstroke",
        "upswing",
        "uptake",
        "uptight",
        "uptown",
        "upturned",
        "upward",
        "upwind",
        "uranium",
        "urban",
        "urchin",
        "urethane",
        "urgency",
        "urgent",
        "urging",
        "urologist",
        "urology",
        "usable",
        "usage",
        "useable",
        "used",
        "uselessly",
        "user",
        "usher",
        "usual",
        "utensil",
        "utility",
        "utilize",
        "utmost",
        "utopia",
        "utter",
        "vacancy",
        "vacant",
        "vacate",
        "vacation",
        "vagabond",
        "vagrancy",
        "vagrantly",
        "vaguely",
        "vagueness",
        "valiant",
        "valid",
        "valium",
        "valley",
        "valuables",
        "value",
        "vanilla",
        "vanish",
        "vanity",
        "vanquish",
        "vantage",
        "vaporizer",
        "variable",
        "variably",
        "varied",
        "variety",
        "various",
        "varmint",
        "varnish",
        "varsity",
        "varying",
        "vascular",
        "vaseline",
        "vastly",
        "vastness",
        "veal",
        "vegan",
        "veggie",
        "vehicular",
        "velcro",
        "velocity",
        "velvet",
        "vendetta",
        "vending",
        "vendor",
        "veneering",
        "vengeful",
        "venomous",
        "ventricle",
        "venture",
        "venue",
        "venus",
        "verbalize",
        "verbally",
        "verbose",
        "verdict",
        "verify",
        "verse",
        "version",
        "versus",
        "vertebrae",
        "vertical",
        "vertigo",
        "very",
        "vessel",
        "vest",
        "veteran",
        "veto",
        "vexingly",
        "viability",
        "viable",
        "vibes",
        "vice",
        "vicinity",
        "victory",
        "video",
        "viewable",
        "viewer",
        "viewing",
        "viewless",
        "viewpoint",
        "vigorous",
        "village",
        "villain",
        "vindicate",
        "vineyard",
        "vintage",
        "violate",
        "violation",
        "violator",
        "violet",
        "violin",
        "viper",
        "viral",
        "virtual",
        "virtuous",
        "virus",
        "visa",
        "viscosity",
        "viscous",
        "viselike",
        "visible",
        "visibly",
        "vision",
        "visiting",
        "visitor",
        "visor",
        "vista",
        "vitality",
        "vitalize",
        "vitally",
        "vitamins",
        "vivacious",
        "vividly",
        "vividness",
        "vixen",
        "vocalist",
        "vocalize",
        "vocally",
        "vocation",
        "voice",
        "voicing",
        "void",
        "volatile",
        "volley",
        "voltage",
        "volumes",
        "voter",
        "voting",
        "voucher",
        "vowed",
        "vowel",
        "voyage",
        "wackiness",
        "wad",
        "wafer",
        "waffle",
        "waged",
        "wager",
        "wages",
        "waggle",
        "wagon",
        "wake",
        "waking",
        "walk",
        "walmart",
        "walnut",
        "walrus",
        "waltz",
        "wand",
        "wannabe",
        "wanted",
        "wanting",
        "wasabi",
        "washable",
        "washbasin",
        "washboard",
        "washbowl",
        "washcloth",
        "washday",
        "washed",
        "washer",
        "washhouse",
        "washing",
        "washout",
        "washroom",
        "washstand",
        "washtub",
        "wasp",
        "wasting",
        "watch",
        "water",
        "waviness",
        "waving",
        "wavy",
        "whacking",
        "whacky",
        "wham",
        "wharf",
        "wheat",
        "whenever",
        "whiff",
        "whimsical",
        "whinny",
        "whiny",
        "whisking",
        "whoever",
        "whole",
        "whomever",
        "whoopee",
        "whooping",
        "whoops",
        "why",
        "wick",
        "widely",
        "widen",
        "widget",
        "widow",
        "width",
        "wieldable",
        "wielder",
        "wife",
        "wifi",
        "wikipedia",
        "wildcard",
        "wildcat",
        "wilder",
        "wildfire",
        "wildfowl",
        "wildland",
        "wildlife",
        "wildly",
        "wildness",
        "willed",
        "willfully",
        "willing",
        "willow",
        "willpower",
        "wilt",
        "wimp",
        "wince",
        "wincing",
        "wind",
        "wing",
        "winking",
        "winner",
        "winnings",
        "winter",
        "wipe",
        "wired",
        "wireless",
        "wiring",
        "wiry",
        "wisdom",
        "wise",
        "wish",
        "wisplike",
        "wispy",
        "wistful",
        "wizard",
        "wobble",
        "wobbling",
        "wobbly",
        "wok",
        "wolf",
        "wolverine",
        "womanhood",
        "womankind",
        "womanless",
        "womanlike",
        "womanly",
        "womb",
        "woof",
        "wooing",
        "wool",
        "woozy",
        "word",
        "work",
        "worried",
        "worrier",
        "worrisome",
        "worry",
        "worsening",
        "worshiper",
        "worst",
        "wound",
        "woven",
        "wow",
        "wrangle",
        "wrath",
        "wreath",
        "wreckage",
        "wrecker",
        "wrecking",
        "wrench",
        "wriggle",
        "wriggly",
        "wrinkle",
        "wrinkly",
        "wrist",
        "writing",
        "written",
        "wrongdoer",
        "wronged",
        "wrongful",
        "wrongly",
        "wrongness",
        "wrought",
        "xbox",
        "xerox",
        "yahoo",
        "yam",
        "yanking",
        "yapping",
        "yard",
        "yarn",
        "yeah",
        "yearbook",
        "yearling",
        "yearly",
        "yearning",
        "yeast",
        "yelling",
        "yelp",
        "yen",
        "yesterday",
        "yiddish",
        "yield",
        "yin",
        "yippee",
        "yo-yo",
        "yodel",
        "yoga",
        "yogurt",
        "yonder",
        "yoyo",
        "yummy",
        "zap",
        "zealous",
        "zebra",
        "zen",
        "zeppelin",
        "zero",
        "zestfully",
        "zesty",
        "zigzagged",
        "zipfile",
        "zipping",
        "zippy",
        "zips",
        "zit",
        "zodiac",
        "zombie",
        "zone",
        "zoning",
        "zookeeper",
        "zoologist",
        "zoology",
        "zoom",
      ])),
    Y0
  );
}
var Dx;
function C11() {
  if (Dx) return G0;
  (Dx = 1),
    Object.defineProperty(G0, "__esModule", { value: !0 }),
    (G0.newSecureWords = void 0);
  const e = Wm(),
    t = x11();
  async function n(r = 6) {
    let i = [];
    for (let s = 0; s < r; s++)
      i.push(
        t.wordlist[await (0, e.getSecureRandomNumber)(0, t.wordlist.length)]
      );
    return i;
  }
  return (G0.newSecureWords = n), G0;
}
var Q0 = {},
  Fx;
function S11() {
  if (Fx) return Q0;
  (Fx = 1),
    Object.defineProperty(Q0, "__esModule", { value: !0 }),
    (Q0.newSecurePassphrase = void 0);
  const e = ET();
  async function t(n = 6) {
    return (await (0, e.newSecureWords)(n)).join("-");
  }
  return (Q0.newSecurePassphrase = t), Q0;
}
var Yt = {},
  F2 = {},
  Ux;
function E11() {
  if (Ux) return F2;
  (Ux = 1),
    Object.defineProperty(F2, "__esModule", { value: !0 }),
    (F2.bitsToBytes = F2.bytesToBits = F2.lpad = void 0);
  function e(r, i, s) {
    for (; r.length < s; ) r = i + r;
    return r;
  }
  F2.lpad = e;
  function t(r) {
    let i = "";
    for (let s = 0; s < r.length; s++) {
      let o = r.at(s);
      i += e(o.toString(2), "0", 8);
    }
    return i;
  }
  F2.bytesToBits = t;
  function n(r) {
    if (r.length % 8 !== 0) throw Error("Uneven bits");
    let i = [];
    for (; r.length > 0; ) i.push(parseInt(r.slice(0, 8), 2)), (r = r.slice(8));
    return ge.from(i);
  }
  return (F2.bitsToBytes = n), F2;
}
var Z0 = {},
  $x;
function CT() {
  if ($x) return Z0;
  ($x = 1),
    Object.defineProperty(Z0, "__esModule", { value: !0 }),
    (Z0.wordlist = void 0);
  const e = [
    "abandon",
    "ability",
    "able",
    "about",
    "above",
    "absent",
    "absorb",
    "abstract",
    "absurd",
    "abuse",
    "access",
    "accident",
    "account",
    "accuse",
    "achieve",
    "acid",
    "acoustic",
    "acquire",
    "across",
    "act",
    "action",
    "actor",
    "actress",
    "actual",
    "adapt",
    "add",
    "addict",
    "address",
    "adjust",
    "admit",
    "adult",
    "advance",
    "advice",
    "aerobic",
    "affair",
    "afford",
    "afraid",
    "again",
    "age",
    "agent",
    "agree",
    "ahead",
    "aim",
    "air",
    "airport",
    "aisle",
    "alarm",
    "album",
    "alcohol",
    "alert",
    "alien",
    "all",
    "alley",
    "allow",
    "almost",
    "alone",
    "alpha",
    "already",
    "also",
    "alter",
    "always",
    "amateur",
    "amazing",
    "among",
    "amount",
    "amused",
    "analyst",
    "anchor",
    "ancient",
    "anger",
    "angle",
    "angry",
    "animal",
    "ankle",
    "announce",
    "annual",
    "another",
    "answer",
    "antenna",
    "antique",
    "anxiety",
    "any",
    "apart",
    "apology",
    "appear",
    "apple",
    "approve",
    "april",
    "arch",
    "arctic",
    "area",
    "arena",
    "argue",
    "arm",
    "armed",
    "armor",
    "army",
    "around",
    "arrange",
    "arrest",
    "arrive",
    "arrow",
    "art",
    "artefact",
    "artist",
    "artwork",
    "ask",
    "aspect",
    "assault",
    "asset",
    "assist",
    "assume",
    "asthma",
    "athlete",
    "atom",
    "attack",
    "attend",
    "attitude",
    "attract",
    "auction",
    "audit",
    "august",
    "aunt",
    "author",
    "auto",
    "autumn",
    "average",
    "avocado",
    "avoid",
    "awake",
    "aware",
    "away",
    "awesome",
    "awful",
    "awkward",
    "axis",
    "baby",
    "bachelor",
    "bacon",
    "badge",
    "bag",
    "balance",
    "balcony",
    "ball",
    "bamboo",
    "banana",
    "banner",
    "bar",
    "barely",
    "bargain",
    "barrel",
    "base",
    "basic",
    "basket",
    "battle",
    "beach",
    "bean",
    "beauty",
    "because",
    "become",
    "beef",
    "before",
    "begin",
    "behave",
    "behind",
    "believe",
    "below",
    "belt",
    "bench",
    "benefit",
    "best",
    "betray",
    "better",
    "between",
    "beyond",
    "bicycle",
    "bid",
    "bike",
    "bind",
    "biology",
    "bird",
    "birth",
    "bitter",
    "black",
    "blade",
    "blame",
    "blanket",
    "blast",
    "bleak",
    "bless",
    "blind",
    "blood",
    "blossom",
    "blouse",
    "blue",
    "blur",
    "blush",
    "board",
    "boat",
    "body",
    "boil",
    "bomb",
    "bone",
    "bonus",
    "book",
    "boost",
    "border",
    "boring",
    "borrow",
    "boss",
    "bottom",
    "bounce",
    "box",
    "boy",
    "bracket",
    "brain",
    "brand",
    "brass",
    "brave",
    "bread",
    "breeze",
    "brick",
    "bridge",
    "brief",
    "bright",
    "bring",
    "brisk",
    "broccoli",
    "broken",
    "bronze",
    "broom",
    "brother",
    "brown",
    "brush",
    "bubble",
    "buddy",
    "budget",
    "buffalo",
    "build",
    "bulb",
    "bulk",
    "bullet",
    "bundle",
    "bunker",
    "burden",
    "burger",
    "burst",
    "bus",
    "business",
    "busy",
    "butter",
    "buyer",
    "buzz",
    "cabbage",
    "cabin",
    "cable",
    "cactus",
    "cage",
    "cake",
    "call",
    "calm",
    "camera",
    "camp",
    "can",
    "canal",
    "cancel",
    "candy",
    "cannon",
    "canoe",
    "canvas",
    "canyon",
    "capable",
    "capital",
    "captain",
    "car",
    "carbon",
    "card",
    "cargo",
    "carpet",
    "carry",
    "cart",
    "case",
    "cash",
    "casino",
    "castle",
    "casual",
    "cat",
    "catalog",
    "catch",
    "category",
    "cattle",
    "caught",
    "cause",
    "caution",
    "cave",
    "ceiling",
    "celery",
    "cement",
    "census",
    "century",
    "cereal",
    "certain",
    "chair",
    "chalk",
    "champion",
    "change",
    "chaos",
    "chapter",
    "charge",
    "chase",
    "chat",
    "cheap",
    "check",
    "cheese",
    "chef",
    "cherry",
    "chest",
    "chicken",
    "chief",
    "child",
    "chimney",
    "choice",
    "choose",
    "chronic",
    "chuckle",
    "chunk",
    "churn",
    "cigar",
    "cinnamon",
    "circle",
    "citizen",
    "city",
    "civil",
    "claim",
    "clap",
    "clarify",
    "claw",
    "clay",
    "clean",
    "clerk",
    "clever",
    "click",
    "client",
    "cliff",
    "climb",
    "clinic",
    "clip",
    "clock",
    "clog",
    "close",
    "cloth",
    "cloud",
    "clown",
    "club",
    "clump",
    "cluster",
    "clutch",
    "coach",
    "coast",
    "coconut",
    "code",
    "coffee",
    "coil",
    "coin",
    "collect",
    "color",
    "column",
    "combine",
    "come",
    "comfort",
    "comic",
    "common",
    "company",
    "concert",
    "conduct",
    "confirm",
    "congress",
    "connect",
    "consider",
    "control",
    "convince",
    "cook",
    "cool",
    "copper",
    "copy",
    "coral",
    "core",
    "corn",
    "correct",
    "cost",
    "cotton",
    "couch",
    "country",
    "couple",
    "course",
    "cousin",
    "cover",
    "coyote",
    "crack",
    "cradle",
    "craft",
    "cram",
    "crane",
    "crash",
    "crater",
    "crawl",
    "crazy",
    "cream",
    "credit",
    "creek",
    "crew",
    "cricket",
    "crime",
    "crisp",
    "critic",
    "crop",
    "cross",
    "crouch",
    "crowd",
    "crucial",
    "cruel",
    "cruise",
    "crumble",
    "crunch",
    "crush",
    "cry",
    "crystal",
    "cube",
    "culture",
    "cup",
    "cupboard",
    "curious",
    "current",
    "curtain",
    "curve",
    "cushion",
    "custom",
    "cute",
    "cycle",
    "dad",
    "damage",
    "damp",
    "dance",
    "danger",
    "daring",
    "dash",
    "daughter",
    "dawn",
    "day",
    "deal",
    "debate",
    "debris",
    "decade",
    "december",
    "decide",
    "decline",
    "decorate",
    "decrease",
    "deer",
    "defense",
    "define",
    "defy",
    "degree",
    "delay",
    "deliver",
    "demand",
    "demise",
    "denial",
    "dentist",
    "deny",
    "depart",
    "depend",
    "deposit",
    "depth",
    "deputy",
    "derive",
    "describe",
    "desert",
    "design",
    "desk",
    "despair",
    "destroy",
    "detail",
    "detect",
    "develop",
    "device",
    "devote",
    "diagram",
    "dial",
    "diamond",
    "diary",
    "dice",
    "diesel",
    "diet",
    "differ",
    "digital",
    "dignity",
    "dilemma",
    "dinner",
    "dinosaur",
    "direct",
    "dirt",
    "disagree",
    "discover",
    "disease",
    "dish",
    "dismiss",
    "disorder",
    "display",
    "distance",
    "divert",
    "divide",
    "divorce",
    "dizzy",
    "doctor",
    "document",
    "dog",
    "doll",
    "dolphin",
    "domain",
    "donate",
    "donkey",
    "donor",
    "door",
    "dose",
    "double",
    "dove",
    "draft",
    "dragon",
    "drama",
    "drastic",
    "draw",
    "dream",
    "dress",
    "drift",
    "drill",
    "drink",
    "drip",
    "drive",
    "drop",
    "drum",
    "dry",
    "duck",
    "dumb",
    "dune",
    "during",
    "dust",
    "dutch",
    "duty",
    "dwarf",
    "dynamic",
    "eager",
    "eagle",
    "early",
    "earn",
    "earth",
    "easily",
    "east",
    "easy",
    "echo",
    "ecology",
    "economy",
    "edge",
    "edit",
    "educate",
    "effort",
    "egg",
    "eight",
    "either",
    "elbow",
    "elder",
    "electric",
    "elegant",
    "element",
    "elephant",
    "elevator",
    "elite",
    "else",
    "embark",
    "embody",
    "embrace",
    "emerge",
    "emotion",
    "employ",
    "empower",
    "empty",
    "enable",
    "enact",
    "end",
    "endless",
    "endorse",
    "enemy",
    "energy",
    "enforce",
    "engage",
    "engine",
    "enhance",
    "enjoy",
    "enlist",
    "enough",
    "enrich",
    "enroll",
    "ensure",
    "enter",
    "entire",
    "entry",
    "envelope",
    "episode",
    "equal",
    "equip",
    "era",
    "erase",
    "erode",
    "erosion",
    "error",
    "erupt",
    "escape",
    "essay",
    "essence",
    "estate",
    "eternal",
    "ethics",
    "evidence",
    "evil",
    "evoke",
    "evolve",
    "exact",
    "example",
    "excess",
    "exchange",
    "excite",
    "exclude",
    "excuse",
    "execute",
    "exercise",
    "exhaust",
    "exhibit",
    "exile",
    "exist",
    "exit",
    "exotic",
    "expand",
    "expect",
    "expire",
    "explain",
    "expose",
    "express",
    "extend",
    "extra",
    "eye",
    "eyebrow",
    "fabric",
    "face",
    "faculty",
    "fade",
    "faint",
    "faith",
    "fall",
    "false",
    "fame",
    "family",
    "famous",
    "fan",
    "fancy",
    "fantasy",
    "farm",
    "fashion",
    "fat",
    "fatal",
    "father",
    "fatigue",
    "fault",
    "favorite",
    "feature",
    "february",
    "federal",
    "fee",
    "feed",
    "feel",
    "female",
    "fence",
    "festival",
    "fetch",
    "fever",
    "few",
    "fiber",
    "fiction",
    "field",
    "figure",
    "file",
    "film",
    "filter",
    "final",
    "find",
    "fine",
    "finger",
    "finish",
    "fire",
    "firm",
    "first",
    "fiscal",
    "fish",
    "fit",
    "fitness",
    "fix",
    "flag",
    "flame",
    "flash",
    "flat",
    "flavor",
    "flee",
    "flight",
    "flip",
    "float",
    "flock",
    "floor",
    "flower",
    "fluid",
    "flush",
    "fly",
    "foam",
    "focus",
    "fog",
    "foil",
    "fold",
    "follow",
    "food",
    "foot",
    "force",
    "forest",
    "forget",
    "fork",
    "fortune",
    "forum",
    "forward",
    "fossil",
    "foster",
    "found",
    "fox",
    "fragile",
    "frame",
    "frequent",
    "fresh",
    "friend",
    "fringe",
    "frog",
    "front",
    "frost",
    "frown",
    "frozen",
    "fruit",
    "fuel",
    "fun",
    "funny",
    "furnace",
    "fury",
    "future",
    "gadget",
    "gain",
    "galaxy",
    "gallery",
    "game",
    "gap",
    "garage",
    "garbage",
    "garden",
    "garlic",
    "garment",
    "gas",
    "gasp",
    "gate",
    "gather",
    "gauge",
    "gaze",
    "general",
    "genius",
    "genre",
    "gentle",
    "genuine",
    "gesture",
    "ghost",
    "giant",
    "gift",
    "giggle",
    "ginger",
    "giraffe",
    "girl",
    "give",
    "glad",
    "glance",
    "glare",
    "glass",
    "glide",
    "glimpse",
    "globe",
    "gloom",
    "glory",
    "glove",
    "glow",
    "glue",
    "goat",
    "goddess",
    "gold",
    "good",
    "goose",
    "gorilla",
    "gospel",
    "gossip",
    "govern",
    "gown",
    "grab",
    "grace",
    "grain",
    "grant",
    "grape",
    "grass",
    "gravity",
    "great",
    "green",
    "grid",
    "grief",
    "grit",
    "grocery",
    "group",
    "grow",
    "grunt",
    "guard",
    "guess",
    "guide",
    "guilt",
    "guitar",
    "gun",
    "gym",
    "habit",
    "hair",
    "half",
    "hammer",
    "hamster",
    "hand",
    "happy",
    "harbor",
    "hard",
    "harsh",
    "harvest",
    "hat",
    "have",
    "hawk",
    "hazard",
    "head",
    "health",
    "heart",
    "heavy",
    "hedgehog",
    "height",
    "hello",
    "helmet",
    "help",
    "hen",
    "hero",
    "hidden",
    "high",
    "hill",
    "hint",
    "hip",
    "hire",
    "history",
    "hobby",
    "hockey",
    "hold",
    "hole",
    "holiday",
    "hollow",
    "home",
    "honey",
    "hood",
    "hope",
    "horn",
    "horror",
    "horse",
    "hospital",
    "host",
    "hotel",
    "hour",
    "hover",
    "hub",
    "huge",
    "human",
    "humble",
    "humor",
    "hundred",
    "hungry",
    "hunt",
    "hurdle",
    "hurry",
    "hurt",
    "husband",
    "hybrid",
    "ice",
    "icon",
    "idea",
    "identify",
    "idle",
    "ignore",
    "ill",
    "illegal",
    "illness",
    "image",
    "imitate",
    "immense",
    "immune",
    "impact",
    "impose",
    "improve",
    "impulse",
    "inch",
    "include",
    "income",
    "increase",
    "index",
    "indicate",
    "indoor",
    "industry",
    "infant",
    "inflict",
    "inform",
    "inhale",
    "inherit",
    "initial",
    "inject",
    "injury",
    "inmate",
    "inner",
    "innocent",
    "input",
    "inquiry",
    "insane",
    "insect",
    "inside",
    "inspire",
    "install",
    "intact",
    "interest",
    "into",
    "invest",
    "invite",
    "involve",
    "iron",
    "island",
    "isolate",
    "issue",
    "item",
    "ivory",
    "jacket",
    "jaguar",
    "jar",
    "jazz",
    "jealous",
    "jeans",
    "jelly",
    "jewel",
    "job",
    "join",
    "joke",
    "journey",
    "joy",
    "judge",
    "juice",
    "jump",
    "jungle",
    "junior",
    "junk",
    "just",
    "kangaroo",
    "keen",
    "keep",
    "ketchup",
    "key",
    "kick",
    "kid",
    "kidney",
    "kind",
    "kingdom",
    "kiss",
    "kit",
    "kitchen",
    "kite",
    "kitten",
    "kiwi",
    "knee",
    "knife",
    "knock",
    "know",
    "lab",
    "label",
    "labor",
    "ladder",
    "lady",
    "lake",
    "lamp",
    "language",
    "laptop",
    "large",
    "later",
    "latin",
    "laugh",
    "laundry",
    "lava",
    "law",
    "lawn",
    "lawsuit",
    "layer",
    "lazy",
    "leader",
    "leaf",
    "learn",
    "leave",
    "lecture",
    "left",
    "leg",
    "legal",
    "legend",
    "leisure",
    "lemon",
    "lend",
    "length",
    "lens",
    "leopard",
    "lesson",
    "letter",
    "level",
    "liar",
    "liberty",
    "library",
    "license",
    "life",
    "lift",
    "light",
    "like",
    "limb",
    "limit",
    "link",
    "lion",
    "liquid",
    "list",
    "little",
    "live",
    "lizard",
    "load",
    "loan",
    "lobster",
    "local",
    "lock",
    "logic",
    "lonely",
    "long",
    "loop",
    "lottery",
    "loud",
    "lounge",
    "love",
    "loyal",
    "lucky",
    "luggage",
    "lumber",
    "lunar",
    "lunch",
    "luxury",
    "lyrics",
    "machine",
    "mad",
    "magic",
    "magnet",
    "maid",
    "mail",
    "main",
    "major",
    "make",
    "mammal",
    "man",
    "manage",
    "mandate",
    "mango",
    "mansion",
    "manual",
    "maple",
    "marble",
    "march",
    "margin",
    "marine",
    "market",
    "marriage",
    "mask",
    "mass",
    "master",
    "match",
    "material",
    "math",
    "matrix",
    "matter",
    "maximum",
    "maze",
    "meadow",
    "mean",
    "measure",
    "meat",
    "mechanic",
    "medal",
    "media",
    "melody",
    "melt",
    "member",
    "memory",
    "mention",
    "menu",
    "mercy",
    "merge",
    "merit",
    "merry",
    "mesh",
    "message",
    "metal",
    "method",
    "middle",
    "midnight",
    "milk",
    "million",
    "mimic",
    "mind",
    "minimum",
    "minor",
    "minute",
    "miracle",
    "mirror",
    "misery",
    "miss",
    "mistake",
    "mix",
    "mixed",
    "mixture",
    "mobile",
    "model",
    "modify",
    "mom",
    "moment",
    "monitor",
    "monkey",
    "monster",
    "month",
    "moon",
    "moral",
    "more",
    "morning",
    "mosquito",
    "mother",
    "motion",
    "motor",
    "mountain",
    "mouse",
    "move",
    "movie",
    "much",
    "muffin",
    "mule",
    "multiply",
    "muscle",
    "museum",
    "mushroom",
    "music",
    "must",
    "mutual",
    "myself",
    "mystery",
    "myth",
    "naive",
    "name",
    "napkin",
    "narrow",
    "nasty",
    "nation",
    "nature",
    "near",
    "neck",
    "need",
    "negative",
    "neglect",
    "neither",
    "nephew",
    "nerve",
    "nest",
    "net",
    "network",
    "neutral",
    "never",
    "news",
    "next",
    "nice",
    "night",
    "noble",
    "noise",
    "nominee",
    "noodle",
    "normal",
    "north",
    "nose",
    "notable",
    "note",
    "nothing",
    "notice",
    "novel",
    "now",
    "nuclear",
    "number",
    "nurse",
    "nut",
    "oak",
    "obey",
    "object",
    "oblige",
    "obscure",
    "observe",
    "obtain",
    "obvious",
    "occur",
    "ocean",
    "october",
    "odor",
    "off",
    "offer",
    "office",
    "often",
    "oil",
    "okay",
    "old",
    "olive",
    "olympic",
    "omit",
    "once",
    "one",
    "onion",
    "online",
    "only",
    "open",
    "opera",
    "opinion",
    "oppose",
    "option",
    "orange",
    "orbit",
    "orchard",
    "order",
    "ordinary",
    "organ",
    "orient",
    "original",
    "orphan",
    "ostrich",
    "other",
    "outdoor",
    "outer",
    "output",
    "outside",
    "oval",
    "oven",
    "over",
    "own",
    "owner",
    "oxygen",
    "oyster",
    "ozone",
    "pact",
    "paddle",
    "page",
    "pair",
    "palace",
    "palm",
    "panda",
    "panel",
    "panic",
    "panther",
    "paper",
    "parade",
    "parent",
    "park",
    "parrot",
    "party",
    "pass",
    "patch",
    "path",
    "patient",
    "patrol",
    "pattern",
    "pause",
    "pave",
    "payment",
    "peace",
    "peanut",
    "pear",
    "peasant",
    "pelican",
    "pen",
    "penalty",
    "pencil",
    "people",
    "pepper",
    "perfect",
    "permit",
    "person",
    "pet",
    "phone",
    "photo",
    "phrase",
    "physical",
    "piano",
    "picnic",
    "picture",
    "piece",
    "pig",
    "pigeon",
    "pill",
    "pilot",
    "pink",
    "pioneer",
    "pipe",
    "pistol",
    "pitch",
    "pizza",
    "place",
    "planet",
    "plastic",
    "plate",
    "play",
    "please",
    "pledge",
    "pluck",
    "plug",
    "plunge",
    "poem",
    "poet",
    "point",
    "polar",
    "pole",
    "police",
    "pond",
    "pony",
    "pool",
    "popular",
    "portion",
    "position",
    "possible",
    "post",
    "potato",
    "pottery",
    "poverty",
    "powder",
    "power",
    "practice",
    "praise",
    "predict",
    "prefer",
    "prepare",
    "present",
    "pretty",
    "prevent",
    "price",
    "pride",
    "primary",
    "print",
    "priority",
    "prison",
    "private",
    "prize",
    "problem",
    "process",
    "produce",
    "profit",
    "program",
    "project",
    "promote",
    "proof",
    "property",
    "prosper",
    "protect",
    "proud",
    "provide",
    "public",
    "pudding",
    "pull",
    "pulp",
    "pulse",
    "pumpkin",
    "punch",
    "pupil",
    "puppy",
    "purchase",
    "purity",
    "purpose",
    "purse",
    "push",
    "put",
    "puzzle",
    "pyramid",
    "quality",
    "quantum",
    "quarter",
    "question",
    "quick",
    "quit",
    "quiz",
    "quote",
    "rabbit",
    "raccoon",
    "race",
    "rack",
    "radar",
    "radio",
    "rail",
    "rain",
    "raise",
    "rally",
    "ramp",
    "ranch",
    "random",
    "range",
    "rapid",
    "rare",
    "rate",
    "rather",
    "raven",
    "raw",
    "razor",
    "ready",
    "real",
    "reason",
    "rebel",
    "rebuild",
    "recall",
    "receive",
    "recipe",
    "record",
    "recycle",
    "reduce",
    "reflect",
    "reform",
    "refuse",
    "region",
    "regret",
    "regular",
    "reject",
    "relax",
    "release",
    "relief",
    "rely",
    "remain",
    "remember",
    "remind",
    "remove",
    "render",
    "renew",
    "rent",
    "reopen",
    "repair",
    "repeat",
    "replace",
    "report",
    "require",
    "rescue",
    "resemble",
    "resist",
    "resource",
    "response",
    "result",
    "retire",
    "retreat",
    "return",
    "reunion",
    "reveal",
    "review",
    "reward",
    "rhythm",
    "rib",
    "ribbon",
    "rice",
    "rich",
    "ride",
    "ridge",
    "rifle",
    "right",
    "rigid",
    "ring",
    "riot",
    "ripple",
    "risk",
    "ritual",
    "rival",
    "river",
    "road",
    "roast",
    "robot",
    "robust",
    "rocket",
    "romance",
    "roof",
    "rookie",
    "room",
    "rose",
    "rotate",
    "rough",
    "round",
    "route",
    "royal",
    "rubber",
    "rude",
    "rug",
    "rule",
    "run",
    "runway",
    "rural",
    "sad",
    "saddle",
    "sadness",
    "safe",
    "sail",
    "salad",
    "salmon",
    "salon",
    "salt",
    "salute",
    "same",
    "sample",
    "sand",
    "satisfy",
    "satoshi",
    "sauce",
    "sausage",
    "save",
    "say",
    "scale",
    "scan",
    "scare",
    "scatter",
    "scene",
    "scheme",
    "school",
    "science",
    "scissors",
    "scorpion",
    "scout",
    "scrap",
    "screen",
    "script",
    "scrub",
    "sea",
    "search",
    "season",
    "seat",
    "second",
    "secret",
    "section",
    "security",
    "seed",
    "seek",
    "segment",
    "select",
    "sell",
    "seminar",
    "senior",
    "sense",
    "sentence",
    "series",
    "service",
    "session",
    "settle",
    "setup",
    "seven",
    "shadow",
    "shaft",
    "shallow",
    "share",
    "shed",
    "shell",
    "sheriff",
    "shield",
    "shift",
    "shine",
    "ship",
    "shiver",
    "shock",
    "shoe",
    "shoot",
    "shop",
    "short",
    "shoulder",
    "shove",
    "shrimp",
    "shrug",
    "shuffle",
    "shy",
    "sibling",
    "sick",
    "side",
    "siege",
    "sight",
    "sign",
    "silent",
    "silk",
    "silly",
    "silver",
    "similar",
    "simple",
    "since",
    "sing",
    "siren",
    "sister",
    "situate",
    "six",
    "size",
    "skate",
    "sketch",
    "ski",
    "skill",
    "skin",
    "skirt",
    "skull",
    "slab",
    "slam",
    "sleep",
    "slender",
    "slice",
    "slide",
    "slight",
    "slim",
    "slogan",
    "slot",
    "slow",
    "slush",
    "small",
    "smart",
    "smile",
    "smoke",
    "smooth",
    "snack",
    "snake",
    "snap",
    "sniff",
    "snow",
    "soap",
    "soccer",
    "social",
    "sock",
    "soda",
    "soft",
    "solar",
    "soldier",
    "solid",
    "solution",
    "solve",
    "someone",
    "song",
    "soon",
    "sorry",
    "sort",
    "soul",
    "sound",
    "soup",
    "source",
    "south",
    "space",
    "spare",
    "spatial",
    "spawn",
    "speak",
    "special",
    "speed",
    "spell",
    "spend",
    "sphere",
    "spice",
    "spider",
    "spike",
    "spin",
    "spirit",
    "split",
    "spoil",
    "sponsor",
    "spoon",
    "sport",
    "spot",
    "spray",
    "spread",
    "spring",
    "spy",
    "square",
    "squeeze",
    "squirrel",
    "stable",
    "stadium",
    "staff",
    "stage",
    "stairs",
    "stamp",
    "stand",
    "start",
    "state",
    "stay",
    "steak",
    "steel",
    "stem",
    "step",
    "stereo",
    "stick",
    "still",
    "sting",
    "stock",
    "stomach",
    "stone",
    "stool",
    "story",
    "stove",
    "strategy",
    "street",
    "strike",
    "strong",
    "struggle",
    "student",
    "stuff",
    "stumble",
    "style",
    "subject",
    "submit",
    "subway",
    "success",
    "such",
    "sudden",
    "suffer",
    "sugar",
    "suggest",
    "suit",
    "summer",
    "sun",
    "sunny",
    "sunset",
    "super",
    "supply",
    "supreme",
    "sure",
    "surface",
    "surge",
    "surprise",
    "surround",
    "survey",
    "suspect",
    "sustain",
    "swallow",
    "swamp",
    "swap",
    "swarm",
    "swear",
    "sweet",
    "swift",
    "swim",
    "swing",
    "switch",
    "sword",
    "symbol",
    "symptom",
    "syrup",
    "system",
    "table",
    "tackle",
    "tag",
    "tail",
    "talent",
    "talk",
    "tank",
    "tape",
    "target",
    "task",
    "taste",
    "tattoo",
    "taxi",
    "teach",
    "team",
    "tell",
    "ten",
    "tenant",
    "tennis",
    "tent",
    "term",
    "test",
    "text",
    "thank",
    "that",
    "theme",
    "then",
    "theory",
    "there",
    "they",
    "thing",
    "this",
    "thought",
    "three",
    "thrive",
    "throw",
    "thumb",
    "thunder",
    "ticket",
    "tide",
    "tiger",
    "tilt",
    "timber",
    "time",
    "tiny",
    "tip",
    "tired",
    "tissue",
    "title",
    "toast",
    "tobacco",
    "today",
    "toddler",
    "toe",
    "together",
    "toilet",
    "token",
    "tomato",
    "tomorrow",
    "tone",
    "tongue",
    "tonight",
    "tool",
    "tooth",
    "top",
    "topic",
    "topple",
    "torch",
    "tornado",
    "tortoise",
    "toss",
    "total",
    "tourist",
    "toward",
    "tower",
    "town",
    "toy",
    "track",
    "trade",
    "traffic",
    "tragic",
    "train",
    "transfer",
    "trap",
    "trash",
    "travel",
    "tray",
    "treat",
    "tree",
    "trend",
    "trial",
    "tribe",
    "trick",
    "trigger",
    "trim",
    "trip",
    "trophy",
    "trouble",
    "truck",
    "true",
    "truly",
    "trumpet",
    "trust",
    "truth",
    "try",
    "tube",
    "tuition",
    "tumble",
    "tuna",
    "tunnel",
    "turkey",
    "turn",
    "turtle",
    "twelve",
    "twenty",
    "twice",
    "twin",
    "twist",
    "two",
    "type",
    "typical",
    "ugly",
    "umbrella",
    "unable",
    "unaware",
    "uncle",
    "uncover",
    "under",
    "undo",
    "unfair",
    "unfold",
    "unhappy",
    "uniform",
    "unique",
    "unit",
    "universe",
    "unknown",
    "unlock",
    "until",
    "unusual",
    "unveil",
    "update",
    "upgrade",
    "uphold",
    "upon",
    "upper",
    "upset",
    "urban",
    "urge",
    "usage",
    "use",
    "used",
    "useful",
    "useless",
    "usual",
    "utility",
    "vacant",
    "vacuum",
    "vague",
    "valid",
    "valley",
    "valve",
    "van",
    "vanish",
    "vapor",
    "various",
    "vast",
    "vault",
    "vehicle",
    "velvet",
    "vendor",
    "venture",
    "venue",
    "verb",
    "verify",
    "version",
    "very",
    "vessel",
    "veteran",
    "viable",
    "vibrant",
    "vicious",
    "victory",
    "video",
    "view",
    "village",
    "vintage",
    "violin",
    "virtual",
    "virus",
    "visa",
    "visit",
    "visual",
    "vital",
    "vivid",
    "vocal",
    "voice",
    "void",
    "volcano",
    "volume",
    "vote",
    "voyage",
    "wage",
    "wagon",
    "wait",
    "walk",
    "wall",
    "walnut",
    "want",
    "warfare",
    "warm",
    "warrior",
    "wash",
    "wasp",
    "waste",
    "water",
    "wave",
    "way",
    "wealth",
    "weapon",
    "wear",
    "weasel",
    "weather",
    "web",
    "wedding",
    "weekend",
    "weird",
    "welcome",
    "west",
    "wet",
    "whale",
    "what",
    "wheat",
    "wheel",
    "when",
    "where",
    "whip",
    "whisper",
    "wide",
    "width",
    "wife",
    "wild",
    "will",
    "win",
    "window",
    "wine",
    "wing",
    "wink",
    "winner",
    "winter",
    "wire",
    "wisdom",
    "wise",
    "wish",
    "witness",
    "wolf",
    "woman",
    "wonder",
    "wood",
    "wool",
    "word",
    "work",
    "world",
    "worry",
    "worth",
    "wrap",
    "wreck",
    "wrestle",
    "wrist",
    "write",
    "wrong",
    "yard",
    "year",
    "yellow",
    "you",
    "young",
    "youth",
    "zebra",
    "zero",
    "zone",
    "zoo",
  ];
  return (Z0.wordlist = e), Z0;
}
var Vx;
function ST() {
  if (Vx) return Yt;
  Vx = 1;
  var e =
    (Yt && Yt.__importDefault) ||
    function (O) {
      return O && O.__esModule ? O : { default: O };
    };
  Object.defineProperty(Yt, "__esModule", { value: !0 }),
    (Yt.mnemonicFromRandomSeed =
      Yt.mnemonicIndexesToBytes =
      Yt.bytesToMnemonics =
      Yt.bytesToMnemonicIndexes =
      Yt.mnemonicNew =
      Yt.mnemonicValidate =
      Yt.mnemonicToHDSeed =
      Yt.mnemonicToWalletKey =
      Yt.mnemonicToPrivateKey =
      Yt.mnemonicToSeed =
      Yt.mnemonicToEntropy =
        void 0);
  const t = e(q6()),
    n = Wm(),
    r = Iu(),
    i = xT(),
    s = E11(),
    o = CT(),
    l = 1e5;
  async function c(O) {
    const U = await m(O);
    return (await p(U)) && !(await d(U));
  }
  function f(O) {
    return O.map((U) => U.toLowerCase().trim());
  }
  async function d(O) {
    return (
      (
        await (0, i.pbkdf2_sha512)(
          O,
          "TON seed version",
          Math.max(1, Math.floor(l / 256)),
          64
        )
      )[0] == 0
    );
  }
  async function p(O) {
    return (
      (await (0, i.pbkdf2_sha512)(O, "TON fast seed version", 1, 64))[0] == 1
    );
  }
  async function m(O, U) {
    return await (0, r.hmac_sha512)(O.join(" "), U && U.length > 0 ? U : "");
  }
  Yt.mnemonicToEntropy = m;
  async function g(O, U, D) {
    const H = await m(O, D);
    return await (0, i.pbkdf2_sha512)(H, U, l, 64);
  }
  Yt.mnemonicToSeed = g;
  async function w(O, U) {
    O = f(O);
    const D = await g(O, "TON default seed", U);
    let H = t.default.sign.keyPair.fromSeed(D.slice(0, 32));
    return { publicKey: ge.from(H.publicKey), secretKey: ge.from(H.secretKey) };
  }
  Yt.mnemonicToPrivateKey = w;
  async function b(O, U) {
    let H = (await w(O, U)).secretKey.slice(0, 32);
    const $ = t.default.sign.keyPair.fromSeed(H);
    return { publicKey: ge.from($.publicKey), secretKey: ge.from($.secretKey) };
  }
  Yt.mnemonicToWalletKey = b;
  async function x(O, U) {
    return (O = f(O)), await g(O, "TON HD Keys seed", U);
  }
  Yt.mnemonicToHDSeed = x;
  async function E(O, U) {
    O = f(O);
    for (let D of O) if (o.wordlist.indexOf(D) < 0) return !1;
    return U && U.length > 0 && !(await c(O)) ? !1 : await d(await m(O, U));
  }
  Yt.mnemonicValidate = E;
  async function P(O = 24, U) {
    let D = [];
    for (;;) {
      D = [];
      for (let H = 0; H < O; H++) {
        let $ = await (0, n.getSecureRandomNumber)(0, o.wordlist.length);
        D.push(o.wordlist[$]);
      }
      if (!(U && U.length > 0 && !(await c(D))) && (await d(await m(D, U))))
        break;
    }
    return D;
  }
  Yt.mnemonicNew = P;
  function _(O, U) {
    let D = (0, s.bytesToBits)(O),
      H = [];
    for (let $ = 0; $ < U; $++) {
      let F = D.slice($ * 11, $ * 11 + 11);
      H.push(parseInt(F, 2));
    }
    return H;
  }
  Yt.bytesToMnemonicIndexes = _;
  function T(O, U) {
    let D = _(O, U),
      H = [];
    for (let $ of D) H.push(o.wordlist[$]);
    return H;
  }
  Yt.bytesToMnemonics = T;
  function M(O) {
    let U = "";
    for (let D of O) {
      if (!Number.isSafeInteger(D) || D < 0 || D >= 2028)
        throw Error("Invalid input");
      U += (0, s.lpad)(D.toString(2), "0", 11);
    }
    for (; U.length % 8 !== 0; ) U = U + "0";
    return (0, s.bitsToBytes)(U);
  }
  Yt.mnemonicIndexesToBytes = M;
  async function L(O, U = 24, D) {
    const H = Math.ceil((U * 11) / 8);
    let $ = O;
    for (;;) {
      let F = await (0, i.pbkdf2_sha512)(
          $,
          "TON mnemonic seed",
          Math.max(1, Math.floor(l / 256)),
          H
        ),
        B = T(F, U);
      if (await E(B, D)) return B;
      $ = F;
    }
  }
  return (Yt.mnemonicFromRandomSeed = L), Yt;
}
var Xn = {},
  Wx;
function zx() {
  if (Wx) return Xn;
  Wx = 1;
  var e =
    (Xn && Xn.__importDefault) ||
    function (c) {
      return c && c.__esModule ? c : { default: c };
    };
  Object.defineProperty(Xn, "__esModule", { value: !0 }),
    (Xn.openBox =
      Xn.sealBox =
      Xn.signVerify =
      Xn.sign =
      Xn.keyPairFromSeed =
      Xn.keyPairFromSecretKey =
        void 0);
  const t = e(q6());
  function n(c) {
    let f = t.default.sign.keyPair.fromSecretKey(new Uint8Array(c));
    return { publicKey: ge.from(f.publicKey), secretKey: ge.from(f.secretKey) };
  }
  Xn.keyPairFromSecretKey = n;
  function r(c) {
    let f = t.default.sign.keyPair.fromSeed(new Uint8Array(c));
    return { publicKey: ge.from(f.publicKey), secretKey: ge.from(f.secretKey) };
  }
  Xn.keyPairFromSeed = r;
  function i(c, f) {
    return ge.from(
      t.default.sign.detached(new Uint8Array(c), new Uint8Array(f))
    );
  }
  Xn.sign = i;
  function s(c, f, d) {
    return t.default.sign.detached.verify(
      new Uint8Array(c),
      new Uint8Array(f),
      new Uint8Array(d)
    );
  }
  Xn.signVerify = s;
  function o(c, f, d) {
    return ge.from(t.default.secretbox(c, f, d));
  }
  Xn.sealBox = o;
  function l(c, f, d) {
    let p = t.default.secretbox.open(c, f, d);
    return p ? ge.from(p) : null;
  }
  return (Xn.openBox = l), Xn;
}
var U2 = {},
  Hx;
function k11() {
  if (Hx) return U2;
  (Hx = 1),
    Object.defineProperty(U2, "__esModule", { value: !0 }),
    (U2.deriveEd25519Path =
      U2.deriveED25519HardenedKey =
      U2.getED25519MasterKeyFromSeed =
        void 0);
  const e = Iu(),
    t = "ed25519 seed",
    n = 2147483648;
  async function r(o) {
    const l = await (0, e.hmac_sha512)(t, o),
      c = l.slice(0, 32),
      f = l.slice(32);
    return { key: c, chainCode: f };
  }
  U2.getED25519MasterKeyFromSeed = r;
  async function i(o, l) {
    if (l >= n) throw Error("Key index must be less than offset");
    const c = ge.alloc(4);
    c.writeUInt32BE(l + n, 0);
    const f = ge.concat([ge.alloc(1, 0), o.key, c]),
      d = await (0, e.hmac_sha512)(o.chainCode, f),
      p = d.slice(0, 32),
      m = d.slice(32);
    return { key: p, chainCode: m };
  }
  U2.deriveED25519HardenedKey = i;
  async function s(o, l) {
    let c = await r(o),
      f = [...l];
    for (; f.length > 0; ) {
      let d = f[0];
      (f = f.slice(1)), (c = await i(c, d));
    }
    return c.key;
  }
  return (U2.deriveEd25519Path = s), U2;
}
var $2 = {},
  qx;
function _11() {
  if (qx) return $2;
  (qx = 1),
    Object.defineProperty($2, "__esModule", { value: !0 }),
    ($2.deriveSymmetricPath =
      $2.deriveSymmetricHardenedKey =
      $2.getSymmetricMasterKeyFromSeed =
        void 0);
  const e = Iu(),
    t = "Symmetric key seed";
  async function n(s) {
    const o = await (0, e.hmac_sha512)(t, s),
      l = o.slice(32),
      c = o.slice(0, 32);
    return { key: l, chainCode: c };
  }
  $2.getSymmetricMasterKeyFromSeed = n;
  async function r(s, o) {
    const l = ge.concat([ge.alloc(1, 0), ge.from(o)]),
      c = await (0, e.hmac_sha512)(s.chainCode, l),
      f = c.slice(32),
      d = c.slice(0, 32);
    return { key: f, chainCode: d };
  }
  $2.deriveSymmetricHardenedKey = r;
  async function i(s, o) {
    let l = await n(s),
      c = [...o];
    for (; c.length > 0; ) {
      let f = c[0];
      (c = c.slice(1)), (l = await r(l, f));
    }
    return l.key;
  }
  return ($2.deriveSymmetricPath = i), $2;
}
var V2 = {},
  Kx;
function A11() {
  if (Kx) return V2;
  (Kx = 1),
    Object.defineProperty(V2, "__esModule", { value: !0 }),
    (V2.deriveMnemonicsPath =
      V2.deriveMnemonicHardenedKey =
      V2.getMnemonicsMasterKeyFromSeed =
        void 0);
  const e = ST(),
    t = Iu(),
    n = 2147483648,
    r = "TON Mnemonics HD seed";
  async function i(l) {
    const c = await (0, t.hmac_sha512)(r, l),
      f = c.slice(0, 32),
      d = c.slice(32);
    return { key: f, chainCode: d };
  }
  V2.getMnemonicsMasterKeyFromSeed = i;
  async function s(l, c) {
    if (c >= n) throw Error("Key index must be less than offset");
    const f = ge.alloc(4);
    f.writeUInt32BE(c + n, 0);
    const d = ge.concat([ge.alloc(1, 0), l.key, f]),
      p = await (0, t.hmac_sha512)(l.chainCode, d),
      m = p.slice(0, 32),
      g = p.slice(32);
    return { key: m, chainCode: g };
  }
  V2.deriveMnemonicHardenedKey = s;
  async function o(l, c, f = 24, d) {
    let p = await i(l),
      m = [...c];
    for (; m.length > 0; ) {
      let g = m[0];
      (m = m.slice(1)), (p = await s(p, g));
    }
    return await (0, e.mnemonicFromRandomSeed)(p.key, f, d);
  }
  return (V2.deriveMnemonicsPath = o), V2;
}
var Gx;
function ET() {
  return (
    Gx ||
      ((Gx = 1),
      (function (e) {
        Object.defineProperty(e, "__esModule", { value: !0 }),
          (e.getMnemonicsMasterKeyFromSeed =
            e.deriveMnemonicHardenedKey =
            e.deriveMnemonicsPath =
            e.deriveSymmetricPath =
            e.deriveSymmetricHardenedKey =
            e.getSymmetricMasterKeyFromSeed =
            e.deriveEd25519Path =
            e.deriveED25519HardenedKey =
            e.getED25519MasterKeyFromSeed =
            e.signVerify =
            e.sign =
            e.keyPairFromSecretKey =
            e.keyPairFromSeed =
            e.openBox =
            e.sealBox =
            e.mnemonicWordList =
            e.mnemonicToHDSeed =
            e.mnemonicToSeed =
            e.mnemonicToWalletKey =
            e.mnemonicToPrivateKey =
            e.mnemonicValidate =
            e.mnemonicNew =
            e.newSecurePassphrase =
            e.newSecureWords =
            e.getSecureRandomNumber =
            e.getSecureRandomWords =
            e.getSecureRandomBytes =
            e.hmac_sha512 =
            e.pbkdf2_sha512 =
            e.sha512_sync =
            e.sha512 =
            e.sha256_sync =
            e.sha256 =
              void 0);
        var t = w11();
        Object.defineProperty(e, "sha256", {
          enumerable: !0,
          get: function () {
            return t.sha256;
          },
        }),
          Object.defineProperty(e, "sha256_sync", {
            enumerable: !0,
            get: function () {
              return t.sha256_sync;
            },
          });
        var n = b11();
        Object.defineProperty(e, "sha512", {
          enumerable: !0,
          get: function () {
            return n.sha512;
          },
        }),
          Object.defineProperty(e, "sha512_sync", {
            enumerable: !0,
            get: function () {
              return n.sha512_sync;
            },
          });
        var r = xT();
        Object.defineProperty(e, "pbkdf2_sha512", {
          enumerable: !0,
          get: function () {
            return r.pbkdf2_sha512;
          },
        });
        var i = Iu();
        Object.defineProperty(e, "hmac_sha512", {
          enumerable: !0,
          get: function () {
            return i.hmac_sha512;
          },
        });
        var s = Wm();
        Object.defineProperty(e, "getSecureRandomBytes", {
          enumerable: !0,
          get: function () {
            return s.getSecureRandomBytes;
          },
        }),
          Object.defineProperty(e, "getSecureRandomWords", {
            enumerable: !0,
            get: function () {
              return s.getSecureRandomWords;
            },
          }),
          Object.defineProperty(e, "getSecureRandomNumber", {
            enumerable: !0,
            get: function () {
              return s.getSecureRandomNumber;
            },
          });
        var o = C11();
        Object.defineProperty(e, "newSecureWords", {
          enumerable: !0,
          get: function () {
            return o.newSecureWords;
          },
        });
        var l = S11();
        Object.defineProperty(e, "newSecurePassphrase", {
          enumerable: !0,
          get: function () {
            return l.newSecurePassphrase;
          },
        });
        var c = ST();
        Object.defineProperty(e, "mnemonicNew", {
          enumerable: !0,
          get: function () {
            return c.mnemonicNew;
          },
        }),
          Object.defineProperty(e, "mnemonicValidate", {
            enumerable: !0,
            get: function () {
              return c.mnemonicValidate;
            },
          }),
          Object.defineProperty(e, "mnemonicToPrivateKey", {
            enumerable: !0,
            get: function () {
              return c.mnemonicToPrivateKey;
            },
          }),
          Object.defineProperty(e, "mnemonicToWalletKey", {
            enumerable: !0,
            get: function () {
              return c.mnemonicToWalletKey;
            },
          }),
          Object.defineProperty(e, "mnemonicToSeed", {
            enumerable: !0,
            get: function () {
              return c.mnemonicToSeed;
            },
          }),
          Object.defineProperty(e, "mnemonicToHDSeed", {
            enumerable: !0,
            get: function () {
              return c.mnemonicToHDSeed;
            },
          });
        var f = CT();
        Object.defineProperty(e, "mnemonicWordList", {
          enumerable: !0,
          get: function () {
            return f.wordlist;
          },
        });
        var d = zx();
        Object.defineProperty(e, "sealBox", {
          enumerable: !0,
          get: function () {
            return d.sealBox;
          },
        }),
          Object.defineProperty(e, "openBox", {
            enumerable: !0,
            get: function () {
              return d.openBox;
            },
          });
        var p = zx();
        Object.defineProperty(e, "keyPairFromSeed", {
          enumerable: !0,
          get: function () {
            return p.keyPairFromSeed;
          },
        }),
          Object.defineProperty(e, "keyPairFromSecretKey", {
            enumerable: !0,
            get: function () {
              return p.keyPairFromSecretKey;
            },
          }),
          Object.defineProperty(e, "sign", {
            enumerable: !0,
            get: function () {
              return p.sign;
            },
          }),
          Object.defineProperty(e, "signVerify", {
            enumerable: !0,
            get: function () {
              return p.signVerify;
            },
          });
        var m = k11();
        Object.defineProperty(e, "getED25519MasterKeyFromSeed", {
          enumerable: !0,
          get: function () {
            return m.getED25519MasterKeyFromSeed;
          },
        }),
          Object.defineProperty(e, "deriveED25519HardenedKey", {
            enumerable: !0,
            get: function () {
              return m.deriveED25519HardenedKey;
            },
          }),
          Object.defineProperty(e, "deriveEd25519Path", {
            enumerable: !0,
            get: function () {
              return m.deriveEd25519Path;
            },
          });
        var g = _11();
        Object.defineProperty(e, "getSymmetricMasterKeyFromSeed", {
          enumerable: !0,
          get: function () {
            return g.getSymmetricMasterKeyFromSeed;
          },
        }),
          Object.defineProperty(e, "deriveSymmetricHardenedKey", {
            enumerable: !0,
            get: function () {
              return g.deriveSymmetricHardenedKey;
            },
          }),
          Object.defineProperty(e, "deriveSymmetricPath", {
            enumerable: !0,
            get: function () {
              return g.deriveSymmetricPath;
            },
          });
        var w = A11();
        Object.defineProperty(e, "deriveMnemonicsPath", {
          enumerable: !0,
          get: function () {
            return w.deriveMnemonicsPath;
          },
        }),
          Object.defineProperty(e, "deriveMnemonicHardenedKey", {
            enumerable: !0,
            get: function () {
              return w.deriveMnemonicHardenedKey;
            },
          }),
          Object.defineProperty(e, "getMnemonicsMasterKeyFromSeed", {
            enumerable: !0,
            get: function () {
              return w.getMnemonicsMasterKeyFromSeed;
            },
          });
      })(x5)),
    x5
  );
}
var Yx;
function T11() {
  if (Yx) return V0;
  (Yx = 1),
    Object.defineProperty(V0, "__esModule", { value: !0 }),
    (V0.wonderCalculator = void 0);
  const e = pa(),
    t = yf(),
    n = $m(),
    r = wT(),
    i = Um(),
    s = bT(),
    o = ET(),
    l = yT(),
    c = gT();
  function f(d, p, m) {
    let g,
      w = null;
    if (d === t.CellType.Ordinary) {
      let L = 0;
      for (let O of m) L = L | O.mask.value;
      g = new n.LevelMask(L);
    } else if (d === t.CellType.PrunedBranch)
      (w = (0, r.exoticPruned)(p, m)), (g = new n.LevelMask(w.mask));
    else if (d === t.CellType.MerkleProof)
      (0, i.exoticMerkleProof)(p, m),
        (g = new n.LevelMask(m[0].mask.value >> 1));
    else if (d === t.CellType.MerkleUpdate)
      (0, l.exoticMerkleUpdate)(p, m),
        (g = new n.LevelMask((m[0].mask.value | m[1].mask.value) >> 1));
    else if (d === t.CellType.Library)
      (0, c.exoticLibrary)(p, m), (g = new n.LevelMask());
    else throw new Error("Unsupported exotic type");
    let b = [],
      x = [],
      E = d === t.CellType.PrunedBranch ? 1 : g.hashCount,
      _ = g.hashCount - E;
    for (let L = 0, O = 0; L <= g.level; L++) {
      if (!g.isSignificant(L)) continue;
      if (O < _) {
        O++;
        continue;
      }
      let U;
      if (O === _) {
        if (!(L === 0 || d === t.CellType.PrunedBranch)) throw Error("Invalid");
        U = p;
      } else {
        if (!(L !== 0 && d !== t.CellType.PrunedBranch))
          throw Error("Invalid: " + L + ", " + d);
        U = new e.BitString(x[O - _ - 1], 0, 256);
      }
      let D = 0;
      for (let B of m) {
        let j;
        d == t.CellType.MerkleProof || d == t.CellType.MerkleUpdate
          ? (j = B.depth(L + 1))
          : (j = B.depth(L)),
          (D = Math.max(D, j));
      }
      m.length > 0 && D++;
      let H = (0, s.getRepr)(p, U, m, L, g.apply(L).value, d),
        $ = (0, o.sha256_sync)(H),
        F = O - _;
      (b[F] = D), (x[F] = $), O++;
    }
    let T = [],
      M = [];
    if (w)
      for (let L = 0; L < 4; L++) {
        const { hashIndex: O } = g.apply(L),
          { hashIndex: U } = g;
        O !== U
          ? (T.push(w.pruned[O].hash), M.push(w.pruned[O].depth))
          : (T.push(x[0]), M.push(b[0]));
      }
    else
      for (let L = 0; L < 4; L++)
        T.push(x[g.apply(L).hashIndex]), M.push(b[g.apply(L).hashIndex]);
    return { mask: g, hashes: T, depths: M };
  }
  return (V0.wonderCalculator = f), V0;
}
var W2 = {},
  X0 = {},
  Qx;
function P11() {
  if (Qx) return X0;
  (Qx = 1),
    Object.defineProperty(X0, "__esModule", { value: !0 }),
    (X0.topologicalSort = void 0);
  function e(t) {
    let n = [t],
      r = new Map(),
      i = new Set(),
      s = [];
    for (; n.length > 0; ) {
      const d = [...n];
      n = [];
      for (let p of d) {
        const m = p.hash().toString("hex");
        if (!r.has(m)) {
          i.add(m),
            r.set(m, {
              cell: p,
              refs: p.refs.map((g) => g.hash().toString("hex")),
            });
          for (let g of p.refs) n.push(g);
        }
      }
    }
    let o = new Set();
    function l(d) {
      if (!i.has(d)) return;
      if (o.has(d)) throw Error("Not a DAG");
      o.add(d);
      let p = r.get(d).refs;
      for (let m = p.length - 1; m >= 0; m--) l(p[m]);
      s.push(d), o.delete(d), i.delete(d);
    }
    for (; i.size > 0; ) {
      const d = Array.from(i)[0];
      l(d);
    }
    let c = new Map();
    for (let d = 0; d < s.length; d++) c.set(s[s.length - d - 1], d);
    let f = [];
    for (let d = s.length - 1; d >= 0; d--) {
      let p = s[d];
      const m = r.get(p);
      f.push({ cell: m.cell, refs: m.refs.map((g) => c.get(g)) });
    }
    return f;
  }
  return (X0.topologicalSort = e), X0;
}
var J0 = {},
  Zx;
function M11() {
  if (Zx) return J0;
  (Zx = 1),
    Object.defineProperty(J0, "__esModule", { value: !0 }),
    (J0.bitsForNumber = void 0);
  function e(t, n) {
    let r = BigInt(t);
    if (n === "int")
      return r === 0n || r === -1n
        ? 1
        : (r > 0 ? r : -r).toString(2).length + 1;
    if (n === "uint") {
      if (r < 0) throw Error(`value is negative. Got ${t}`);
      return r.toString(2).length;
    } else throw Error(`invalid mode. Got ${n}`);
  }
  return (J0.bitsForNumber = e), J0;
}
var el = {},
  Xx;
function R11() {
  if (Xx) return el;
  (Xx = 1),
    Object.defineProperty(el, "__esModule", { value: !0 }),
    (el.crc32c = void 0);
  const e = 2197175160;
  function t(n) {
    let r = -1;
    for (let s = 0; s < n.length; s++)
      (r ^= n[s]),
        (r = r & 1 ? (r >>> 1) ^ e : r >>> 1),
        (r = r & 1 ? (r >>> 1) ^ e : r >>> 1),
        (r = r & 1 ? (r >>> 1) ^ e : r >>> 1),
        (r = r & 1 ? (r >>> 1) ^ e : r >>> 1),
        (r = r & 1 ? (r >>> 1) ^ e : r >>> 1),
        (r = r & 1 ? (r >>> 1) ^ e : r >>> 1),
        (r = r & 1 ? (r >>> 1) ^ e : r >>> 1),
        (r = r & 1 ? (r >>> 1) ^ e : r >>> 1);
    r = r ^ 4294967295;
    let i = ge.alloc(4);
    return i.writeInt32LE(r), i;
  }
  return (el.crc32c = t), el;
}
var Jx;
function L11() {
  if (Jx) return W2;
  (Jx = 1),
    Object.defineProperty(W2, "__esModule", { value: !0 }),
    (W2.serializeBoc = W2.deserializeBoc = W2.parseBoc = void 0);
  const e = ma(),
    t = pa(),
    n = zm(),
    r = P11(),
    i = M11(),
    s = Fm(),
    o = bT(),
    l = gf(),
    c = R11();
  function f(E) {
    return d(E & 7);
  }
  function d(E) {
    let P = 0;
    for (let _ = 0; _ < 3; _++) (P += E & 1), (E = E >> 1);
    return P + 1;
  }
  function p(E, P) {
    const _ = E.loadUint(8),
      T = _ % 8,
      M = !!(_ & 8),
      L = E.loadUint(8),
      O = Math.ceil(L / 2),
      U = !!(L % 2),
      D = _ >> 5,
      H = (_ & 16) != 0,
      F = H ? f(D) * 32 : 0,
      B = H ? f(D) * 2 : 0;
    E.skip(F * 8), E.skip(B * 8);
    let j = t.BitString.EMPTY;
    O > 0 && (U ? (j = E.loadPaddedBits(O * 8)) : (j = E.loadBits(O * 8)));
    let G = [];
    for (let u1 = 0; u1 < T; u1++) G.push(E.loadUint(P * 8));
    return { bits: j, refs: G, exotic: M };
  }
  function m(E, P) {
    return 2 + Math.ceil(E.bits.length / 8) + E.refs.length * P;
  }
  function g(E) {
    let P = new e.BitReader(new t.BitString(E, 0, E.length * 8)),
      _ = P.loadUint(32);
    if (_ === 1761568243) {
      let T = P.loadUint(8),
        M = P.loadUint(8),
        L = P.loadUint(T * 8),
        O = P.loadUint(T * 8),
        U = P.loadUint(T * 8),
        D = P.loadUint(M * 8),
        H = P.loadBuffer(L * M),
        $ = P.loadBuffer(D);
      return {
        size: T,
        offBytes: M,
        cells: L,
        roots: O,
        absent: U,
        totalCellSize: D,
        index: H,
        cellData: $,
        root: [0],
      };
    } else if (_ === 2898503464) {
      let T = P.loadUint(8),
        M = P.loadUint(8),
        L = P.loadUint(T * 8),
        O = P.loadUint(T * 8),
        U = P.loadUint(T * 8),
        D = P.loadUint(M * 8),
        H = P.loadBuffer(L * M),
        $ = P.loadBuffer(D),
        F = P.loadBuffer(4);
      if (!(0, c.crc32c)(E.subarray(0, E.length - 4)).equals(F))
        throw Error("Invalid CRC32C");
      return {
        size: T,
        offBytes: M,
        cells: L,
        roots: O,
        absent: U,
        totalCellSize: D,
        index: H,
        cellData: $,
        root: [0],
      };
    } else if (_ === 3052313714) {
      let T = P.loadUint(1),
        M = P.loadUint(1);
      P.loadUint(1), P.loadUint(2);
      let L = P.loadUint(3),
        O = P.loadUint(8),
        U = P.loadUint(L * 8),
        D = P.loadUint(L * 8),
        H = P.loadUint(L * 8),
        $ = P.loadUint(O * 8),
        F = [];
      for (let G = 0; G < D; G++) F.push(P.loadUint(L * 8));
      let B = null;
      T && (B = P.loadBuffer(U * O));
      let j = P.loadBuffer($);
      if (M) {
        let G = P.loadBuffer(4);
        if (!(0, c.crc32c)(E.subarray(0, E.length - 4)).equals(G))
          throw Error("Invalid CRC32C");
      }
      return {
        size: L,
        offBytes: O,
        cells: U,
        roots: D,
        absent: H,
        totalCellSize: $,
        index: B,
        cellData: j,
        root: F,
      };
    } else throw Error("Invalid magic");
  }
  W2.parseBoc = g;
  function w(E) {
    let P = g(E),
      _ = new e.BitReader(
        new t.BitString(P.cellData, 0, P.cellData.length * 8)
      ),
      T = [];
    for (let L = 0; L < P.cells; L++) {
      let O = p(_, P.size);
      T.push({ ...O, result: null });
    }
    for (let L = T.length - 1; L >= 0; L--) {
      if (T[L].result) throw Error("Impossible");
      let O = [];
      for (let U of T[L].refs) {
        if (!T[U].result) throw Error("Invalid BOC file");
        O.push(T[U].result);
      }
      T[L].result = new n.Cell({
        bits: T[L].bits,
        refs: O,
        exotic: T[L].exotic,
      });
    }
    let M = [];
    for (let L = 0; L < P.root.length; L++) M.push(T[P.root[L]].result);
    return M;
  }
  W2.deserializeBoc = w;
  function b(E, P, _, T) {
    let M = (0, o.getRefsDescriptor)(E.refs, E.mask.value, E.type),
      L = (0, o.getBitsDescriptor)(E.bits);
    T.writeUint(M, 8),
      T.writeUint(L, 8),
      T.writeBuffer((0, l.bitsToPaddedBuffer)(E.bits));
    for (let O of P) T.writeUint(O, _ * 8);
  }
  function x(E, P) {
    let _ = (0, r.topologicalSort)(E),
      T = _.length,
      M = P.idx,
      L = P.crc32,
      O = !1,
      U = 0,
      D = Math.max(Math.ceil((0, i.bitsForNumber)(T, "uint") / 8), 1),
      H = 0,
      $ = [];
    for (let u1 of _) {
      let e1 = m(u1.cell, D);
      (H += e1), $.push(H);
    }
    let F = Math.max(Math.ceil((0, i.bitsForNumber)(H, "uint") / 8), 1),
      B = (6 + 3 * D + F + 1 * D + (M ? T * F : 0) + H + (L ? 4 : 0)) * 8,
      j = new s.BitBuilder(B);
    if (
      (j.writeUint(3052313714, 32),
      j.writeBit(M),
      j.writeBit(L),
      j.writeBit(O),
      j.writeUint(U, 2),
      j.writeUint(D, 3),
      j.writeUint(F, 8),
      j.writeUint(T, D * 8),
      j.writeUint(1, D * 8),
      j.writeUint(0, D * 8),
      j.writeUint(H, F * 8),
      j.writeUint(0, D * 8),
      M)
    )
      for (let u1 = 0; u1 < T; u1++) j.writeUint($[u1], F * 8);
    for (let u1 = 0; u1 < T; u1++) b(_[u1].cell, _[u1].refs, D, j);
    if (L) {
      let u1 = (0, c.crc32c)(j.buffer());
      j.writeBuffer(u1);
    }
    let G = j.buffer();
    if (G.length !== B / 8) throw Error("Internal error");
    return G;
  }
  return (W2.serializeBoc = x), W2;
}
var eC;
function zm() {
  if (eC) return ko;
  eC = 1;
  var e =
      (ko && ko.__importDefault) ||
      function (m) {
        return m && m.__esModule ? m : { default: m };
      },
    t;
  Object.defineProperty(ko, "__esModule", { value: !0 }), (ko.Cell = void 0);
  const n = e(Ru()),
    r = pa(),
    i = yf(),
    s = d11(),
    o = f11(),
    l = T11(),
    c = L11(),
    f = ma(),
    d = as();
  let p = class V6 {
    static fromBoc(g) {
      return (0, c.deserializeBoc)(g);
    }
    static fromBase64(g) {
      let w = V6.fromBoc(ge.from(g, "base64"));
      if (w.length !== 1) throw new Error("Deserialized more than one cell");
      return w[0];
    }
    static fromHex(g) {
      let w = V6.fromBoc(ge.from(g, "hex"));
      if (w.length !== 1) throw new Error("Deserialized more than one cell");
      return w[0];
    }
    constructor(g) {
      (this._hashes = []),
        (this._depths = []),
        (this.beginParse = (T = !1) => {
          if (this.isExotic && !T)
            throw new Error("Exotic cells cannot be parsed");
          return new s.Slice(new f.BitReader(this.bits), this.refs);
        }),
        (this.hash = (T = 3) =>
          this._hashes[Math.min(this._hashes.length - 1, T)]),
        (this.depth = (T = 3) =>
          this._depths[Math.min(this._depths.length - 1, T)]),
        (this.level = () => this.mask.level),
        (this.equals = (T) => this.hash().equals(T.hash())),
        (this[t] = () => this.toString());
      let w = r.BitString.EMPTY;
      g && g.bits && (w = g.bits);
      let b = [];
      g && g.refs && (b = [...g.refs]);
      let x,
        E,
        P,
        _ = i.CellType.Ordinary;
      if (g && g.exotic) {
        let T = (0, o.resolveExotic)(w, b),
          M = (0, l.wonderCalculator)(T.type, w, b);
        (P = M.mask), (E = M.depths), (x = M.hashes), (_ = T.type);
      } else {
        if (b.length > 4) throw new Error("Invalid number of references");
        if (w.length > 1023)
          throw new Error(`Bits overflow: ${w.length} > 1023`);
        let T = (0, l.wonderCalculator)(i.CellType.Ordinary, w, b);
        (P = T.mask), (E = T.depths), (x = T.hashes), (_ = i.CellType.Ordinary);
      }
      (this.type = _),
        (this.bits = w),
        (this.refs = b),
        (this.mask = P),
        (this._depths = E),
        (this._hashes = x),
        Object.freeze(this),
        Object.freeze(this.refs),
        Object.freeze(this.bits),
        Object.freeze(this.mask),
        Object.freeze(this._depths),
        Object.freeze(this._hashes);
    }
    get isExotic() {
      return this.type !== i.CellType.Ordinary;
    }
    toBoc(g) {
      let w = g && g.idx !== null && g.idx !== void 0 ? g.idx : !1,
        b = g && g.crc32 !== null && g.crc32 !== void 0 ? g.crc32 : !0;
      return (0, c.serializeBoc)(this, { idx: w, crc32: b });
    }
    toString(g) {
      let w = g || "",
        b = "x";
      this.isExotic &&
        (this.type === i.CellType.MerkleProof
          ? (b = "p")
          : this.type === i.CellType.MerkleUpdate
          ? (b = "u")
          : this.type === i.CellType.PrunedBranch && (b = "p"));
      let x = w + (this.isExotic ? b : "x") + "{" + this.bits.toString() + "}";
      for (let E in this.refs) {
        const P = this.refs[E];
        x +=
          `
` + P.toString(w + " ");
      }
      return x;
    }
    asSlice() {
      return this.beginParse();
    }
    asBuilder() {
      return (0, d.beginCell)().storeSlice(this.asSlice());
    }
  };
  return (ko.Cell = p), (t = n.default), (p.EMPTY = new p()), ko;
}
var tC;
function as() {
  if (tC) return xo;
  (tC = 1),
    Object.defineProperty(xo, "__esModule", { value: !0 }),
    (xo.Builder = xo.beginCell = void 0);
  const e = Fm(),
    t = zm(),
    n = mT();
  function r() {
    return new i();
  }
  xo.beginCell = r;
  let i = class kT {
    constructor() {
      (this._bits = new e.BitBuilder()), (this._refs = []);
    }
    get bits() {
      return this._bits.length;
    }
    get refs() {
      return this._refs.length;
    }
    get availableBits() {
      return 1023 - this.bits;
    }
    get availableRefs() {
      return 4 - this.refs;
    }
    storeBit(o) {
      return this._bits.writeBit(o), this;
    }
    storeBits(o) {
      return this._bits.writeBits(o), this;
    }
    storeBuffer(o, l) {
      if (l != null && o.length !== l)
        throw Error(`Buffer length ${o.length} is not equal to ${l}`);
      return this._bits.writeBuffer(o), this;
    }
    storeMaybeBuffer(o, l) {
      return (
        o !== null
          ? (this.storeBit(1), this.storeBuffer(o, l))
          : this.storeBit(0),
        this
      );
    }
    storeUint(o, l) {
      return this._bits.writeUint(o, l), this;
    }
    storeMaybeUint(o, l) {
      return (
        o != null ? (this.storeBit(1), this.storeUint(o, l)) : this.storeBit(0),
        this
      );
    }
    storeInt(o, l) {
      return this._bits.writeInt(o, l), this;
    }
    storeMaybeInt(o, l) {
      return (
        o != null ? (this.storeBit(1), this.storeInt(o, l)) : this.storeBit(0),
        this
      );
    }
    storeVarUint(o, l) {
      return this._bits.writeVarUint(o, l), this;
    }
    storeMaybeVarUint(o, l) {
      return (
        o != null
          ? (this.storeBit(1), this.storeVarUint(o, l))
          : this.storeBit(0),
        this
      );
    }
    storeVarInt(o, l) {
      return this._bits.writeVarInt(o, l), this;
    }
    storeMaybeVarInt(o, l) {
      return (
        o != null
          ? (this.storeBit(1), this.storeVarInt(o, l))
          : this.storeBit(0),
        this
      );
    }
    storeCoins(o) {
      return this._bits.writeCoins(o), this;
    }
    storeMaybeCoins(o) {
      return (
        o != null ? (this.storeBit(1), this.storeCoins(o)) : this.storeBit(0),
        this
      );
    }
    storeAddress(o) {
      return this._bits.writeAddress(o), this;
    }
    storeRef(o) {
      if (this._refs.length >= 4) throw new Error("Too many references");
      if (o instanceof t.Cell) this._refs.push(o);
      else if (o instanceof kT) this._refs.push(o.endCell());
      else throw new Error("Invalid argument");
      return this;
    }
    storeMaybeRef(o) {
      return o ? (this.storeBit(1), this.storeRef(o)) : this.storeBit(0), this;
    }
    storeSlice(o) {
      let l = o.clone();
      for (
        l.remainingBits > 0 && this.storeBits(l.loadBits(l.remainingBits));
        l.remainingRefs > 0;

      )
        this.storeRef(l.loadRef());
      return this;
    }
    storeMaybeSlice(o) {
      return (
        o ? (this.storeBit(1), this.storeSlice(o)) : this.storeBit(0), this
      );
    }
    storeBuilder(o) {
      return this.storeSlice(o.endCell().beginParse());
    }
    storeMaybeBuilder(o) {
      return (
        o ? (this.storeBit(1), this.storeBuilder(o)) : this.storeBit(0), this
      );
    }
    storeWritable(o) {
      return typeof o == "object" ? o.writeTo(this) : o(this), this;
    }
    storeMaybeWritable(o) {
      return (
        o ? (this.storeBit(1), this.storeWritable(o)) : this.storeBit(0), this
      );
    }
    store(o) {
      return this.storeWritable(o), this;
    }
    storeStringTail(o) {
      return (0, n.writeString)(o, this), this;
    }
    storeMaybeStringTail(o) {
      return (
        o != null
          ? (this.storeBit(1), (0, n.writeString)(o, this))
          : this.storeBit(0),
        this
      );
    }
    storeStringRefTail(o) {
      return this.storeRef(r().storeStringTail(o)), this;
    }
    storeMaybeStringRefTail(o) {
      return (
        o != null
          ? (this.storeBit(1), this.storeStringRefTail(o))
          : this.storeBit(0),
        this
      );
    }
    storeDict(o, l, c) {
      return o ? o.store(this, l, c) : this.storeBit(0), this;
    }
    storeDictDirect(o, l, c) {
      return o.storeDirect(this, l, c), this;
    }
    endCell(o) {
      return new t.Cell({
        bits: this._bits.build(),
        refs: this._refs,
        exotic: o == null ? void 0 : o.exotic,
      });
    }
    asCell() {
      return this.endCell();
    }
    asSlice() {
      return this.endCell().beginParse();
    }
  };
  return (xo.Builder = i), xo;
}
var I11 = as();
const j11 = (e) => {
    if (!e.length) return null;
    const t = e.map(({ to: n, amount: r, comment: i }) => ({
      address: n,
      amount: r.toString(),
      payload: I11.beginCell()
        .storeUint(0, 32)
        .storeStringTail(i)
        .endCell()
        .toBoc()
        .toString("base64"),
    }));
    return (
      console.log(t),
      { validUntil: Math.floor(Date.now() / 1e3) + 60 * 5, messages: t }
    );
  },
  N11 = () => {
    const { data: { wallet: e = "" } = {} } = da(),
      [t] = Vp(),
      [n, r] = N.useState([]),
      { open: i } = lF(),
      s = N4(),
      [o] = la();
    return (
      N.useEffect(() => {
        s && e !== s && t(s);
      }, [s, e]),
      N.useEffect(() => {
        if (!s || !n || !n.length) return;
        const [l] = n;
        if (!l) return;
        const { transaction: c, callback: f } = l;
        (async () => {
          try {
            await o.sendTransaction(j11(c)), f(!0);
          } catch {
            f(!1);
          } finally {
            r((p) => p.slice(1));
          }
        })();
      }, [n, s]),
      N.useCallback((l, c) => {
        o.connected || i(), r((f) => [...f, { transaction: l, callback: c }]);
      }, [])
    );
  },
  O11 = (e) =>
    N.createElement(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: 16,
        height: 16,
        fill: "none",
        viewBox: "0 0 16 16",
        ...e,
      },
      N.createElement("path", {
        fill: "currentColor",
        d: "M6.3.55a.7.7 0 0 1 1.38.3l-.82 3.73h4.06L11.8.56V.54a.7.7 0 0 1 1.38.31l-.8 3.73h1.97a.7.7 0 0 1 0 1.4h-2.28l-.87 4.06h2.19a.7.7 0 0 1 0 1.4l-.02.01h-2.48l-.86 4a.7.7 0 0 1-1.37-.3l.8-3.7H5.36l-.84 3.82a.7.7 0 0 1-1.37-.3l.76-3.52H1.67a.7.7 0 0 1 0-1.41h2.56l.88-4.05H3.02a.7.7 0 0 1 0-1.41h2.4L6.3.55Zm-.63 9.49h4.08l.87-4.05H6.56l-.89 4.05Z",
      })
    ),
  B11 = ({ t: e, setBonusConditions: t, bonusConditions: n, amount: r }) => {
    var m;
    const [i, { isLoading: s }] = iz(),
      {
        register: o,
        formState: { errors: l },
        setError: c,
        clearErrors: f,
      } = $n(),
      d = Rr({ name: "promoCode" });
    N.useEffect(() => {
      t(null), f("promoCode");
    }, [d]),
      N.useEffect(() => {
        if (n) {
          const g = n != null && n.minAmount ? Jt.fromNano(n.minAmount) : 0,
            w = n != null && n.maxAmount ? Jt.fromNano(n.maxAmount) : 0;
          if (g > 0 && r < g) {
            c("promoCode", {
              message: e("deposit.form.min.error", { count: g }),
            });
            return;
          }
          if (w > 0 && r > w) {
            c("promoCode", {
              message: e("deposit.form.max.error", { count: w }),
            });
            return;
          }
        }
        f("promoCode");
      }, [r, n]);
    const p = async () => {
      var b, x;
      f(["promoCode", "amount"]), t(null);
      const { data: g, error: w } = await i({ promocode: d.trim() });
      if (w) {
        const E =
          ((b = w.data) == null ? void 0 : b.validation) ||
          ((x = w.data) == null ? void 0 : x.error);
        E && c("promoCode", { type: "server", message: E });
        return;
      }
      g && t(g);
    };
    return v.jsxs("div", {
      className: "flex flex-col",
      children: [
        v.jsxs("div", {
          className:
            "flex items-center justify-between w-full h-[40px] bg-blue-400 rounded-lg pr-3",
          children: [
            v.jsxs("div", {
              className: me(
                "relative text-gray-575",
                (l == null ? void 0 : l.promoCode) && "text-red-300",
                !!d && !(l != null && l.promoCode) && "text-blue-200",
                (n == null ? void 0 : n.bonusPercent) &&
                  !(l != null && l.promoCode) &&
                  "text-green-300"
              ),
              children: [
                v.jsx(O11, {
                  width: 14,
                  height: 14,
                  className:
                    "shrink-0 absolute top-1/2 left-3 -translate-y-1/2",
                }),
                v.jsx("input", {
                  className: me(
                    "outline-none focus:outline-none font-bold placeholder:font-normal placeholder:text-gray-575 placeholder:text-[14px] pl-[40px] bg-white/0 max-w-full",
                    !l && "text-white"
                  ),
                  type: "text",
                  placeholder: e("deposit.TON.promo.input.label"),
                  ...o("promoCode"),
                }),
              ],
            }),
            n != null && n.bonusPercent && !(l != null && l.promoCode)
              ? v.jsx("div", {
                  className:
                    "py-[3px] px-1 rounded bg-green-300/10 text-green-300 font-bold text-[9px] leading-[11px]",
                  children: e("deposit.form.bonus.badge", {
                    count: n.bonusPercent,
                  }),
                })
              : v.jsx(He, {
                  type: "button",
                  onClick: p,
                  loading: s,
                  classes: "text-[12px] leading-[15px] px-3 h-7",
                  children: e("deposit.TON.promo.button"),
                }),
          ],
        }),
        v.jsx(S3, {
          message:
            (m = l == null ? void 0 : l.promoCode) == null ? void 0 : m.message,
        }),
      ],
    });
  },
  D11 = () => {
    var T;
    const { t: e } = Ze(),
      { state: t } = Un(),
      n = or(),
      [r, i] = N.useState(!1),
      [s] = QW(),
      o = N11(),
      l = v2(),
      [c] = la(),
      [f, d] = N.useState(null),
      p = N4(),
      { balance: m, isLoading: g, error: w } = t11(p),
      b = tT({
        defaultValues: { amount: "", promoCode: "" },
        mode: "onSubmit",
      }),
      x = b.watch("amount"),
      E =
        f != null &&
        f.bonusPercent &&
        !((T = b.formState.errors) != null && T.promoCode)
          ? f == null
            ? void 0
            : f.bonusPercent
          : 0,
      P = x && !isNaN(x) ? (x + x * (E / 100)).toFixed(2) : 0,
      _ = async (M) => {
        i(!0);
        try {
          if (!p) {
            await c.openModal();
            return;
          }
          const L = Jt.toNano(M.amount),
            O = M.promoCode.trim(),
            {
              data: { success: U, items: D },
            } = await s({
              type: pR.BALANCE,
              data: 0,
              amount: Number(L),
              promocode: O,
            });
          U &&
            o(D, (H) => {
              H &&
                setTimeout(() => {
                  l(zr.util.invalidateTags(["Profile", "History"])),
                    i(!1),
                    n(t ?? "/");
                }, 45 * 1e3);
            });
        } catch (L) {
          console.log(L);
        } finally {
          i(!1);
        }
      };
    return v.jsx(zA, {
      ...b,
      children: v.jsxs("form", {
        className: "flex flex-col justify-between h-full relative",
        children: [
          v.jsxs("div", {
            className: "flex flex-col gap-4 px-4",
            children: [
              v.jsx(n11, {
                balance: m,
                isLoading: g,
                error: w,
                bonusConditions: f,
                t: e,
              }),
              v.jsx(B11, {
                t: e,
                amount: x,
                setBonusConditions: d,
                bonusConditions: f,
              }),
            ],
          }),
          v.jsxs("div", {
            className:
              "px-4 pt-2 pb-[35px] flex flex-col items-center justify-center gap-2 w-full bg-gray-700",
            children: [
              v.jsxs("div", {
                className: "flex flex-col items-center justify-center",
                children: [
                  v.jsxs("span", {
                    className:
                      "flex items-center gap-1 text-[14px] leading-[17px] font-bold",
                    children: [
                      v.jsx(zt, {
                        width: 14,
                        height: 14,
                        className: "shrink-0 text-blue-200",
                      }),
                      P,
                    ],
                  }),
                  v.jsx("span", {
                    className: "text-[12px] leading-[15px] text-gray-300",
                    children: e("deposit.TON.get"),
                  }),
                ],
              }),
              v.jsx(He, {
                type: "submit",
                onClick: b.handleSubmit(_),
                text: e("deposit.button"),
                classes: "h-[40px] w-full",
                loading: r,
                disabled: !P,
              }),
            ],
          }),
        ],
      }),
    });
  },
  F11 = () => {
    var d;
    const { t: e } = Ze(),
      { collectionId: t } = fu(),
      { data: n, isLoading: r } = az(t),
      [i, s] = N.useState("desc"),
      o = N.useCallback(
        (p, m) =>
          i === "asc" ? p.sellPrice - m.sellPrice : m.sellPrice - p.sellPrice,
        [i]
      ),
      {
        visibleItems: l,
        isDone: c,
        loaderRef: f,
      } = Wi({ items: n == null ? void 0 : n.items, sortFn: o });
    return v.jsxs("div", {
      className: "p-4 pt-0",
      children: [
        v.jsxs(Zs, {
          className: "flex items-center justify-between gap-3",
          children: [
            v.jsx("div", {
              children: v.jsx(Ks, {
                i18nKey: "deposit.information.text",
                components: {
                  tag: v.jsx("button", {
                    className: "text-blue-200 inline",
                    onClick: wr(se.EXTERNAL.TG_ITEMS_BOT),
                    children: j3,
                  }),
                },
              }),
            }),
            v.jsx(He, {
              classes: "px-3 text-white text-[12px] leading-[15px] text-nowrap",
              text: e("deposit.information.button"),
              onClick: wr(se.EXTERNAL.TG_ITEMS_BOT),
            }),
          ],
        }),
        v.jsx(Tu, {
          loading: r,
          backMode: !0,
          title:
            (d = n == null ? void 0 : n.items[0]) == null ? void 0 : d.name,
          titleLvl: 1,
          titleClasses: "text-[22px] font-bold",
          titleContainerClasses: "relative top-0 pb-4",
          rightComponent: v.jsx(He, {
            classes: "text-[13px] leading-[18px] bg-gray-600",
            leftIcon: v.jsx(ff, {
              width: 15,
              height: 12,
              className: me(
                "shrink-0 text-blue-200",
                i === "asc" && "scale-[-1] origin-center"
              ),
            }),
            onClick: () => s((p) => (p === "asc" ? "desc" : "asc")),
            text: e("deposit.section.sort"),
          }),
          children: v.jsxs("div", {
            className: "grid grid-cols-3 gap-2",
            children: [
              l == null
                ? void 0
                : l.map(({ model: p, sellPrice: m }) =>
                    v.jsx(
                      Pm,
                      {
                        animationLink: p == null ? void 0 : p.animationLink,
                        price: m,
                        name: p == null ? void 0 : p.name,
                      },
                      p == null ? void 0 : p.animationLink
                    )
                  ),
              !c &&
                v.jsx("div", {
                  ref: f,
                  className: "grid col-start-1 -col-end-1 justify-self-center",
                  children: v.jsx(Fn, {
                    width: 20,
                    height: 20,
                    className: "animate-spin",
                  }),
                }),
            ],
          }),
        }),
      ],
    });
  },
  U11 = () => {
    const [e, t] = N.useState(!0),
      [n, r] = N.useState(!1),
      [i] = YW(),
      [s] = fz(),
      [o] = KW(),
      l = ia(N3.telegram.getData);
    return (
      N.useEffect(() => {
        (async () => {
          var f, d, p, m, g, w;
          try {
            await Cu.post("user/login", l),
              await Promise.all([i().unwrap(), s().unwrap(), o().unwrap()]),
              (p =
                (d =
                  (f = window == null ? void 0 : window.Telegram) == null
                    ? void 0
                    : f.WebApp) == null
                  ? void 0
                  : d.setBackgroundColor) == null || p.call(d, "#202932"),
              (w =
                (g =
                  (m = window == null ? void 0 : window.Telegram) == null
                    ? void 0
                    : m.WebApp) == null
                  ? void 0
                  : g.setHeaderColor) == null || w.call(g, "#202932");
          } catch (b) {
            console.error(b), r(!0);
          } finally {
            t(!1);
          }
        })();
      }, []),
      e
        ? v.jsx(cZ, {})
        : n
        ? v.jsx("h1", { children: "ERROR" })
        : v.jsx(JF, {
            children: v.jsxs(Ut, {
              path: se.PAGES.MAIN,
              element: v.jsx(NQ, {}),
              children: [
                v.jsx(Ut, {
                  index: !0,
                  element: v.jsx(Va, { to: se.PAGES.CASES.MAIN, replace: !0 }),
                }),
                v.jsxs(Ut, {
                  path: se.PAGES.TRADE.MAIN,
                  element: v.jsx(dZ, {}),
                  children: [
                    v.jsx(Ut, {
                      index: !0,
                      element: v.jsx(Va, {
                        to: se.PAGES.TRADE.WITHDRAW,
                        replace: !0,
                      }),
                    }),
                    v.jsx(Ut, {
                      path: se.PAGES.TRADE.WITHDRAW,
                      element: v.jsx(CZ, {}),
                    }),
                  ],
                }),
                v.jsxs(Ut, {
                  path: se.PAGES.CASES.MAIN,
                  element: v.jsx(n5.Layout, {}),
                  children: [
                    v.jsx(Ut, { index: !0, element: v.jsx(n5.Main, {}) }),
                    v.jsx(Ut, {
                      path: se.PAGES.CASES.CASE,
                      element: v.jsx(n5.Case, {}),
                    }),
                  ],
                }),
                v.jsxs(Ut, {
                  path: se.PAGES.GIVEAWAYS.MAIN,
                  element: v.jsx(EZ, {}),
                  children: [
                    v.jsx(Ut, {
                      index: !0,
                      element: v.jsx(Va, {
                        to: se.PAGES.GIVEAWAYS.ACTIVE,
                        replace: !0,
                      }),
                    }),
                    v.jsx(Ut, {
                      path: se.PAGES.GIVEAWAYS.ACTIVE,
                      element: v.jsx($X, {}),
                    }),
                    v.jsx(Ut, {
                      path: se.PAGES.GIVEAWAYS.HISTORY,
                      element: v.jsx(VX, {}),
                    }),
                    v.jsx(Ut, {
                      path: se.PAGES.GIVEAWAYS.GIVEAWAY,
                      element: v.jsx(QJ, {}),
                    }),
                  ],
                }),
                v.jsxs(Ut, {
                  path: se.PAGES.CREATE_GIVEAWAY.MAIN,
                  element: v.jsx(zX, {}),
                  children: [
                    v.jsx(Ut, {
                      index: !0,
                      element: v.jsx(Va, {
                        to: se.PAGES.CREATE_GIVEAWAY.CLASSIC,
                        replace: !0,
                      }),
                    }),
                    v.jsx(Ut, {
                      path: se.PAGES.CREATE_GIVEAWAY.CLASSIC,
                      element: v.jsx(Xb, { mode: Tr.CLASSIC }, Tr.CLASSIC),
                    }),
                    v.jsx(Ut, {
                      path: se.PAGES.CREATE_GIVEAWAY.PRIME,
                      element: v.jsx(Xb, { mode: Tr.PRIME }, Tr.PRIME),
                    }),
                  ],
                }),
                v.jsxs(Ut, {
                  path: se.PAGES.PROFILE.MAIN,
                  element: v.jsx(OQ, {}),
                  children: [
                    v.jsx(Ut, {
                      index: !0,
                      element: v.jsx(Va, {
                        to: se.PAGES.PROFILE.INVENTORY,
                        replace: !0,
                      }),
                    }),
                    v.jsx(Ut, {
                      path: se.PAGES.PROFILE.HISTORY,
                      element: v.jsx(VQ, {}),
                    }),
                    v.jsx(Ut, {
                      path: se.PAGES.PROFILE.REFERRALS,
                      element: v.jsx(WQ, {}),
                    }),
                    v.jsx(Ut, {
                      path: se.PAGES.PROFILE.INVENTORY,
                      element: v.jsx(lZ, {}),
                    }),
                  ],
                }),
                v.jsxs(Ut, {
                  path: se.PAGES.DEPOSIT.MAIN,
                  element: v.jsx(e11, {}),
                  children: [
                    v.jsx(Ut, {
                      index: !0,
                      element: v.jsx(Va, {
                        to: se.PAGES.DEPOSIT.TON,
                        replace: !0,
                      }),
                    }),
                    v.jsx(Ut, {
                      path: se.PAGES.DEPOSIT.TON,
                      element: v.jsx(D11, {}),
                    }),
                    v.jsxs(Ut, {
                      path: se.PAGES.DEPOSIT.GIFTS.MAIN,
                      children: [
                        v.jsx(Ut, { index: !0, element: v.jsx(ZJ, {}) }),
                        v.jsx(Ut, {
                          path: se.PAGES.DEPOSIT.GIFTS.COLLECTION,
                          element: v.jsx(F11, {}),
                        }),
                      ],
                    }),
                  ],
                }),
                v.jsx(Ut, { path: "*", element: v.jsx(v.Fragment, {}) }),
              ],
            }),
          })
    );
  },
  $11 = () =>
    v.jsx(jR, {
      store: xz,
      children: v.jsx(SU, {
        children: v.jsx(N.Suspense, {
          fallback: null,
          children: v.jsx(iF, {
            manifestUrl: dR,
            uiPreferences: { theme: cn.DARK },
            actionsConfiguration: { twaReturnUrl: se.EXTERNAL.TG_BOT },
            children: v.jsx(U11, {}),
          }),
        }),
      }),
    });
Lm.defaultStyles = {};
Lm.setAppElement("#root");
bR.createRoot(document.getElementById("root")).render(
  v.jsx(N.StrictMode, { children: v.jsx($11, {}) })
);
export { W11 as c, qs as g };
